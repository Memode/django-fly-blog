-- MySQL dump 10.13  Distrib 5.5.41, for debian-linux-gnu (i686)
--
-- Host: localhost    Database: flyblog
-- ------------------------------------------------------
-- Server version	5.5.41-0ubuntu0.14.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `group_id` (`group_id`,`permission_id`),
  KEY `auth_group_permissions_0e939a4f` (`group_id`),
  KEY `auth_group_permissions_8373b171` (`permission_id`),
  CONSTRAINT `auth_group_permissions_group_id_58c48ba9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_group_permissi_permission_id_23962d04_fk_auth_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `content_type_id` (`content_type_id`,`codename`),
  KEY `auth_permission_417f1b1c` (`content_type_id`),
  CONSTRAINT `auth_permissi_content_type_id_51277a81_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can add permission',2,'add_permission'),(5,'Can change permission',2,'change_permission'),(6,'Can delete permission',2,'delete_permission'),(7,'Can add group',3,'add_group'),(8,'Can change group',3,'change_group'),(9,'Can delete group',3,'delete_group'),(10,'Can add user',4,'add_user'),(11,'Can change user',4,'change_user'),(12,'Can delete user',4,'delete_user'),(13,'Can add content type',5,'add_contenttype'),(14,'Can change content type',5,'change_contenttype'),(15,'Can delete content type',5,'delete_contenttype'),(16,'Can add session',6,'add_session'),(17,'Can change session',6,'change_session'),(18,'Can delete session',6,'delete_session'),(19,'Can add 分类',7,'add_category'),(20,'Can change 分类',7,'change_category'),(21,'Can delete 分类',7,'delete_category'),(22,'Can add 文章',8,'add_post'),(23,'Can change 文章',8,'change_post'),(24,'Can delete 文章',8,'delete_post'),(25,'Can add 页面',9,'add_page'),(26,'Can change 页面',9,'change_page'),(27,'Can delete 页面',9,'delete_page'),(28,'Can add 侧栏',10,'add_widget'),(29,'Can change 侧栏',10,'change_widget'),(30,'Can delete 侧栏',10,'delete_widget');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  `last_login` datetime NOT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(30) COLLATE utf8_unicode_ci NOT NULL,
  `first_name` varchar(30) COLLATE utf8_unicode_ci NOT NULL,
  `last_name` varchar(30) COLLATE utf8_unicode_ci NOT NULL,
  `email` varchar(75) COLLATE utf8_unicode_ci NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$12000$nC3dPPkENRCu$7/wG3EfXkZZojBXiGKw76fBOSB7ubxMp3rL2ASwtd7k=','2015-02-02 07:02:20',1,'admin','','','younfor@yeah.net',1,1,'2015-02-01 16:30:34');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`,`group_id`),
  KEY `auth_user_groups_e8701ad4` (`user_id`),
  KEY `auth_user_groups_0e939a4f` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_30a071c9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_24702650_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`,`permission_id`),
  KEY `auth_user_user_permissions_e8701ad4` (`user_id`),
  KEY `auth_user_user_permissions_8373b171` (`permission_id`),
  CONSTRAINT `auth_user_user_permissions_user_id_7cd7acb6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `auth_user_user_perm_permission_id_3d7071f0_fk_auth_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(40) COLLATE utf8_unicode_ci NOT NULL,
  `alias` varchar(40) COLLATE utf8_unicode_ci NOT NULL,
  `is_nav` tinyint(1) NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `desc` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `rank` int(11) NOT NULL,
  `status` int(11) NOT NULL,
  `create_time` datetime NOT NULL,
  `update_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_category_410d0aac` (`parent_id`),
  CONSTRAINT `parent_id_refs_id_965b3351` FOREIGN KEY (`parent_id`) REFERENCES `blog_category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_category`
--

LOCK TABLES `blog_category` WRITE;
/*!40000 ALTER TABLE `blog_category` DISABLE KEYS */;
INSERT INTO `blog_category` VALUES (2,'Libgdx','Libgdx',0,NULL,'Libgdx',0,0,'2015-02-02 00:37:58','2015-02-02 00:37:58'),(3,'Android','Android',0,NULL,'Android',0,0,'2015-02-02 00:40:36','2015-02-02 00:40:36'),(4,'Java基础','Java基础',0,NULL,'Java基础',0,0,'2015-02-02 00:41:15','2015-02-02 00:41:15'),(5,'算法','算法',0,NULL,'算法',0,0,'2015-02-02 00:43:51','2015-02-02 00:43:51'),(6,'Java设计模式','Java设计模式',0,NULL,'Java设计模式',0,0,'2015-02-02 00:44:25','2015-02-02 00:44:25'),(7,'Directx','Directx',0,NULL,'Directx',0,0,'2015-02-02 00:45:22','2015-02-02 00:45:22'),(8,'Latex','Latex',0,NULL,'Latex',0,0,'2015-02-02 00:47:00','2015-02-02 00:47:00'),(9,'C++基础','C++基础',0,NULL,'C++基础',0,0,'2015-02-02 00:49:10','2015-02-02 00:49:10'),(10,'Linux','Linux',0,NULL,'Linux',0,0,'2015-02-02 00:51:04','2015-02-02 00:51:04'),(11,'Python','Python',1,NULL,'Python',0,0,'2015-02-02 00:52:07','2015-02-02 07:23:59'),(12,'Opengl','Opengl',0,NULL,'Opengl',0,0,'2015-02-02 00:53:03','2015-02-02 00:53:03'),(13,'Django','Django',0,NULL,'Django',0,0,'2015-02-02 00:53:15','2015-02-02 00:53:15'),(14,'MySQL','MySQL',0,NULL,'MySQL',0,0,'2015-02-02 00:53:36','2015-02-02 00:53:36');
/*!40000 ALTER TABLE `blog_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_page`
--

DROP TABLE IF EXISTS `blog_page`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_page` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `author_id` int(11) NOT NULL,
  `title` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `alias` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8_unicode_ci NOT NULL,
  `content_html` longtext COLLATE utf8_unicode_ci NOT NULL,
  `is_html` tinyint(1) NOT NULL,
  `link` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `rank` int(11) NOT NULL,
  `status` int(11) NOT NULL,
  `create_time` datetime NOT NULL,
  `update_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_page_e969df21` (`author_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_page`
--

LOCK TABLES `blog_page` WRITE;
/*!40000 ALTER TABLE `blog_page` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_page` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_post`
--

DROP TABLE IF EXISTS `blog_post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_post` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `author_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `title` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `alias` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `is_top` tinyint(1) NOT NULL,
  `summary` longtext COLLATE utf8_unicode_ci,
  `content` longtext COLLATE utf8_unicode_ci NOT NULL,
  `content_html` longtext COLLATE utf8_unicode_ci NOT NULL,
  `view_times` int(11) NOT NULL,
  `tags` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `status` int(11) NOT NULL,
  `is_old` tinyint(1) NOT NULL,
  `pub_time` datetime NOT NULL,
  `create_time` datetime NOT NULL,
  `update_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_post_e969df21` (`author_id`),
  KEY `blog_post_6f33f001` (`category_id`),
  KEY `blog_post_5a09fd37` (`alias`),
  CONSTRAINT `category_id_refs_id_1c210c34` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=104 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_post`
--

LOCK TABLES `blog_post` WRITE;
/*!40000 ALTER TABLE `blog_post` DISABLE KEYS */;
INSERT INTO `blog_post` VALUES (2,1,2,'Libgdx: 将Texturepacker打包的PNG图片还原成一张一张的单个的','69fc9e5fe5839f9ab0d9811ef8ac9fdd',0,'\r\n\r\n<p>你是否发现用Texturepacker在打包压缩资源文件之后。把原稿文件弄丢了，但是又要增加新的小png的时候，却无从下手了，本文就是博主在遇到这个问','\r\n\r\n<p>你是否发现用Texturepacker在打包压缩资源文件之后。把原稿文件弄丢了，但是又要增加新的小png的时候，却无从下手了，本文就是博主在遇到这个问题后百度了很多方法，可惜只有plist&#26684;式的方法，libgdx的几乎没有。反正我是没找到，于是自己就写了一个。</p>\r\n<p>打包生成的有两个文件</p>\r\n<p>一个是**.txt &nbsp;一个是**.png(有些不是txt是.pack 只要内容一样就行，你用记事本打开看看)</p>\r\n<p>其中txt记录位置等参数信息. png是一张大图</p>\r\n<p></p>\r\n<pre code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_1_1824369\"  code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_1_1824369\" name=\"code\" class=\"java\">card.png\nformat: RGBA8888\nfilter: Linear,Linear\nrepeat: none\nc36\n  rotate: false\n  xy: 2, 550\n  size: 63, 86\n  orig: 63, 86\n  offset: 0, 0\n  index: -1\nbtn1\n  rotate: false\n  xy: 644, 2\n  size: 156, 57\n  orig: 156, 57\n  offset: 0, 0\n  index: -1\nc41\n  rotate: false\n  xy: 392, 550\n  size: 63, 86\n  orig: 63, 86\n  offset: 0, 0\n  index: -1</pre><br>\r\n上面是位置信息文件。\r\n<p></p>\r\n<p>下面用java根据这个文件将大图还原成小图</p>\r\n<p></p>\r\n<pre code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_2_8716279\"  code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_2_8716279\" name=\"code\" class=\"java\">public static void toPNG(String pathTxt,String pathPNG,String OUT)\n	{\n		ArrayList&lt;String&gt; name=new ArrayList&lt;String&gt;();\n		ArrayList&lt;String&gt; xy=new ArrayList&lt;String&gt;();\n		ArrayList&lt;String&gt; size=new ArrayList&lt;String&gt;();\n		try {\n			String encoding = &quot;GBK&quot;;\n			File file = new File(pathTxt);\n			if (file.isFile() &amp;&amp; file.exists()) { // 判断文件是否存在\n				InputStreamReader read = new InputStreamReader(\n						new FileInputStream(file), encoding);// 考虑到编码格式\n				BufferedReader bufferedReader = new BufferedReader(read);\n				String lineTxt = null;\n				int lineNum=0,lineNum2=0;\n				while ((lineTxt = bufferedReader.readLine()) != null) {\n					lineNum++;\n					if(lineNum2&gt;0)\n						lineNum2++;\n					if(lineNum==5)\n						lineNum2=1;\n					if(lineNum%7==5)\n						name.add(lineTxt);\n					if(lineNum2%7==3)\n						xy.add(lineTxt);\n					if(lineNum2%7==4)\n						size.add(lineTxt);			\n				}\n				read.close();\n			} else {\n				System.out.println(&quot;找不到指定的文件&quot;);\n			}\n			BufferedImage image = (BufferedImage)ImageIO.read(new File(pathPNG));\n			for(int i=0;i&lt;name.size();i++)\n			{\n				String p1=name.get(i),p2=xy.get(i),p3=size.get(i);\n			\n				int x=0,y=0,w=0,h=0,flag=0;\n				for(int j=0;j&lt;p2.length();j++)\n				{\n					if(p2.charAt(j)&lt;=&#39;9&#39; &amp;&amp; p2.charAt(j)&gt;=&#39;0&#39; )\n					{\n						if(flag==0)\n						{\n							x=x*10+p2.charAt(j)-&#39;0&#39;;\n						}\n						else\n						{\n							y=y*10+p2.charAt(j)-&#39;0&#39;;\n						}\n					}\n					if(p2.charAt(j)==&#39;,&#39;)\n						flag=1;\n					\n				}\n				flag=0;\n				for(int j=0;j&lt;p3.length();j++)\n				{\n					if(p3.charAt(j)&lt;=&#39;9&#39; &amp;&amp; p3.charAt(j)&gt;=&#39;0&#39; )\n					{\n						if(flag==0)\n							w=w*10+p3.charAt(j)-&#39;0&#39;;\n						else\n							h=h*10+p3.charAt(j)-&#39;0&#39;;\n					}\n					if(p3.charAt(j)==&#39;,&#39;)\n						flag=1;\n					\n				}\n				\n				File f=new File(OUT);\n				if(!f.exists())\n					f.mkdirs();\n				ImageIO.write(image.getSubimage(x,y,w,h),&quot;png&quot;,new FileOutputStream(OUT+&quot;/&quot;+p1+&quot;.png&quot;));\n				System.out.println(p1+&quot;:finished&quot;);\n			}\n			\n		} catch (Exception e) {\n			System.out.println(&quot;读取文件内容出错&quot;);\n			e.printStackTrace();\n		}\n		\n	}</pre><span style=\"color:#ff0000\">本文原创网址转载必须注明</span>：<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38036737\">http://blog.csdn.net/cq361106306/article/details/38036737</a><br>\r\n使用方法。直接调用\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_3_1431495\"  code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_3_1431495\" name=\"code\" class=\"java\">toPNG(&quot;d:/card.txt&quot;,&quot;d:/card.png&quot;,&quot;d:/s&quot;);</pre>第一个参数是文本参数文件，不一定是txt后缀。不同软件生成不一样，只要用记事本打开内容跟上面那个txt一样就行。\r\n<p></p>\r\n<p>第二个参数是大图文件</p>\r\n<p>第三个参数是输出的地方。最后面不要再加&quot;/&quot;了；路径是自动创建的</p>\r\n<p>我这里是测试成功的。如有疑问请留言</p>\r\n<p><span style=\"color:#ff6666\">打个小广告</span></p>\r\n<p><span style=\"color:#ff6666\"><img src=\"http://img.blog.csdn.net/20140729120004521?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"color:#ff6666\">我的斗地主APP 请大家支持。 支持单机双人三人联机、</span></p>\r\n<p><br>\r\n</p>\r\n<p><span style=\"color:#ff6666\">地址 &nbsp;</span><span style=\"font-size:24px; color:#ff0000\"><a target=\"_blank\" target=\"_blank\" href=\"http://apk.hiapk.com/appinfo/com.hj.singlejoker\"><span style=\"color:#ff0000\">安卓市场 &nbsp;</span></a>&nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.mumayi.com/android-799944.html\"><span style=\"color:#ff0000\">木蚂蚁市场</span></a></span><a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.joker\" style=\"color:rgb(255,102,102)\"></a></p>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n','\r\n\r\n<p>你是否发现用Texturepacker在打包压缩资源文件之后。把原稿文件弄丢了，但是又要增加新的小png的时候，却无从下手了，本文就是博主在遇到这个问题后百度了很多方法，可惜只有plist&#26684;式的方法，libgdx的几乎没有。反正我是没找到，于是自己就写了一个。</p>\r\n<p>打包生成的有两个文件</p>\r\n<p>一个是**.txt &nbsp;一个是**.png(有些不是txt是.pack 只要内容一样就行，你用记事本打开看看)</p>\r\n<p>其中txt记录位置等参数信息. png是一张大图</p>\r\n<p></p>\r\n<pre code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_1_1824369\"  code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_1_1824369\" name=\"code\" class=\"java\">card.png\nformat: RGBA8888\nfilter: Linear,Linear\nrepeat: none\nc36\n  rotate: false\n  xy: 2, 550\n  size: 63, 86\n  orig: 63, 86\n  offset: 0, 0\n  index: -1\nbtn1\n  rotate: false\n  xy: 644, 2\n  size: 156, 57\n  orig: 156, 57\n  offset: 0, 0\n  index: -1\nc41\n  rotate: false\n  xy: 392, 550\n  size: 63, 86\n  orig: 63, 86\n  offset: 0, 0\n  index: -1</pre><br>\r\n上面是位置信息文件。\r\n<p></p>\r\n<p>下面用java根据这个文件将大图还原成小图</p>\r\n<p></p>\r\n<pre code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_2_8716279\"  code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_2_8716279\" name=\"code\" class=\"java\">public static void toPNG(String pathTxt,String pathPNG,String OUT)\n	{\n		ArrayList&lt;String&gt; name=new ArrayList&lt;String&gt;();\n		ArrayList&lt;String&gt; xy=new ArrayList&lt;String&gt;();\n		ArrayList&lt;String&gt; size=new ArrayList&lt;String&gt;();\n		try {\n			String encoding = &quot;GBK&quot;;\n			File file = new File(pathTxt);\n			if (file.isFile() &amp;&amp; file.exists()) { // 判断文件是否存在\n				InputStreamReader read = new InputStreamReader(\n						new FileInputStream(file), encoding);// 考虑到编码格式\n				BufferedReader bufferedReader = new BufferedReader(read);\n				String lineTxt = null;\n				int lineNum=0,lineNum2=0;\n				while ((lineTxt = bufferedReader.readLine()) != null) {\n					lineNum++;\n					if(lineNum2&gt;0)\n						lineNum2++;\n					if(lineNum==5)\n						lineNum2=1;\n					if(lineNum%7==5)\n						name.add(lineTxt);\n					if(lineNum2%7==3)\n						xy.add(lineTxt);\n					if(lineNum2%7==4)\n						size.add(lineTxt);			\n				}\n				read.close();\n			} else {\n				System.out.println(&quot;找不到指定的文件&quot;);\n			}\n			BufferedImage image = (BufferedImage)ImageIO.read(new File(pathPNG));\n			for(int i=0;i&lt;name.size();i++)\n			{\n				String p1=name.get(i),p2=xy.get(i),p3=size.get(i);\n			\n				int x=0,y=0,w=0,h=0,flag=0;\n				for(int j=0;j&lt;p2.length();j++)\n				{\n					if(p2.charAt(j)&lt;=&#39;9&#39; &amp;&amp; p2.charAt(j)&gt;=&#39;0&#39; )\n					{\n						if(flag==0)\n						{\n							x=x*10+p2.charAt(j)-&#39;0&#39;;\n						}\n						else\n						{\n							y=y*10+p2.charAt(j)-&#39;0&#39;;\n						}\n					}\n					if(p2.charAt(j)==&#39;,&#39;)\n						flag=1;\n					\n				}\n				flag=0;\n				for(int j=0;j&lt;p3.length();j++)\n				{\n					if(p3.charAt(j)&lt;=&#39;9&#39; &amp;&amp; p3.charAt(j)&gt;=&#39;0&#39; )\n					{\n						if(flag==0)\n							w=w*10+p3.charAt(j)-&#39;0&#39;;\n						else\n							h=h*10+p3.charAt(j)-&#39;0&#39;;\n					}\n					if(p3.charAt(j)==&#39;,&#39;)\n						flag=1;\n					\n				}\n				\n				File f=new File(OUT);\n				if(!f.exists())\n					f.mkdirs();\n				ImageIO.write(image.getSubimage(x,y,w,h),&quot;png&quot;,new FileOutputStream(OUT+&quot;/&quot;+p1+&quot;.png&quot;));\n				System.out.println(p1+&quot;:finished&quot;);\n			}\n			\n		} catch (Exception e) {\n			System.out.println(&quot;读取文件内容出错&quot;);\n			e.printStackTrace();\n		}\n		\n	}</pre><span style=\"color:#ff0000\">本文原创网址转载必须注明</span>：<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38036737\">http://blog.csdn.net/cq361106306/article/details/38036737</a><br>\r\n使用方法。直接调用\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_3_1431495\"  code_snippet_id=\"432649\" snippet_file_name=\"blog_20140722_3_1431495\" name=\"code\" class=\"java\">toPNG(&quot;d:/card.txt&quot;,&quot;d:/card.png&quot;,&quot;d:/s&quot;);</pre>第一个参数是文本参数文件，不一定是txt后缀。不同软件生成不一样，只要用记事本打开内容跟上面那个txt一样就行。\r\n<p></p>\r\n<p>第二个参数是大图文件</p>\r\n<p>第三个参数是输出的地方。最后面不要再加&quot;/&quot;了；路径是自动创建的</p>\r\n<p>我这里是测试成功的。如有疑问请留言</p>\r\n<p><span style=\"color:#ff6666\">打个小广告</span></p>\r\n<p><span style=\"color:#ff6666\"><img src=\"http://img.blog.csdn.net/20140729120004521?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"color:#ff6666\">我的斗地主APP 请大家支持。 支持单机双人三人联机、</span></p>\r\n<p><br>\r\n</p>\r\n<p><span style=\"color:#ff6666\">地址 &nbsp;</span><span style=\"font-size:24px; color:#ff0000\"><a target=\"_blank\" target=\"_blank\" href=\"http://apk.hiapk.com/appinfo/com.hj.singlejoker\"><span style=\"color:#ff0000\">安卓市场 &nbsp;</span></a>&nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.mumayi.com/android-799944.html\"><span style=\"color:#ff0000\">木蚂蚁市场</span></a></span><a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.joker\" style=\"color:rgb(255,102,102)\"></a></p>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n',2,'texturepacker还原,libgdx打包恢复',0,0,'2015-02-02 00:38:00','2015-02-02 00:38:00','2015-02-02 00:38:00'),(3,1,2,'Libgdx: android单机斗地主支持局域网wifi联网的网络模块核心代码','332e11af8150065b11ed1f3125a6136e',0,'\r\n\r\n<p><br>\r\n</p>\r\n<p>这个作品是我最近写的，结合我的毕业设计的通信模块和之前的单机版斗地主。我已经上架到豌豆荚了，贴了点广告，看看能不能赚点','\r\n\r\n<p><br>\r\n</p>\r\n<p>这个作品是我最近写的，结合我的毕业设计的通信模块和之前的单机版斗地主。我已经上架到豌豆荚了，贴了点广告，看看能不能赚点茶钱。可是一点也不乐观。因此我想分享给大家源码。只要不用于商业。 下面先贴网络模块的核心代码，第一次写这种逻辑用的udp， 经验不够，没有写的那么好看。</p>\r\n<p>这里是我上架的apk,大家下载来试试也无妨: 地址 <a target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.joker\" target=\"_blank\">\r\nhttp://www.wandoujia.com/apps/com.hj.joker</a></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"java\">package com.hj.net;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.InetAddress;\nimport java.net.NetworkInterface;\nimport java.net.SocketException;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Enumeration;\nimport java.util.List;\nimport java.util.Random;\nimport java.util.Vector;\n\nimport org.apache.http.conn.util.InetAddressUtils;\nimport com.badlogic.gdx.Screen;\nimport com.badlogic.gdx.scenes.scene2d.InputEvent;\nimport com.badlogic.gdx.scenes.scene2d.actions.Actions;\nimport com.badlogic.gdx.scenes.scene2d.ui.Label;\nimport com.badlogic.gdx.scenes.scene2d.utils.ClickListener;\nimport com.hj.screen.NetGameScreen;\nimport com.hj.screen.RommScreen;\nimport com.hj.tool.Card;\nimport com.hj.tool.Comm;\n\nimport android.os.Message;\nimport android.util.Log;\n\npublic class NetManager {\n\n	// 初始化\n	public RommScreen rommScreen = null;\n	public NetGameScreen netGameScreen = null;\n	public static int Max = 3;\n	public User me = null, u = null, computer = null;\n	public List&lt;User&gt; users = null;\n	public Room currentRoom = null;\n	public List&lt;Room&gt; roomList = null;// 本主机的所有用户\n	public boolean isStop = true;\n	public boolean LeaveRoom = false;\n	public CardData cards[] = new CardData[56];\n	public List&lt;CardData&gt; cardDataList = new ArrayList&lt;CardData&gt;();\n	// 协议命令\n	public static final int CMD_HOST_REQUEST_ROOM = 10;\n	public static final int CMD_REPLY_ROOM = 11;\n	public static final int CMD_CREATE_ROOM = 12;\n	public static final int MES_UPDATE_ROOM = 13;\n	public static final int MES_UPDATE_User = 14;\n	public static final int CMD_HOST_JOIN_ROOM = 15;\n	public static final int CMD_BROAD_USERLIST = 16;\n	public static final int CMD_UPDATE_ROOM = 17;\n	public static final int CMD_HOST_LEAVE_ROOM = 18;\n	public static final int CMD_LEAVE_ROOM = 19;\n	public static final int CMD_DEL_ROOM = 20;\n	public static final int CMD_HOST_READY_ROOM = 21;\n	public static final int CMD_BEGIN_CARDS = 22;\n	public static final int MES_UPDATE_BEGINCARD = 23;\n	public static final int MES_UPDATE_LANDLORD = 24;\n	public static final int CMD_HOST_FINISH_LANDLORD = 25;\n	public static final int CMD_BROAD_NEXT_LANDLORD = 26;\n	public static final int CMD_BEGIN_LANDLORD_CARDS = 27;\n	public static final int CMD_HOST_START_CARDS = 28;\n	public static final int CMD_START_CARDS = 29;\n	public static final int MES_SHOW_CARDBUTTON = 30;\n	public static final int MES_UPDATE_LANDLORDHEAD = 31;\n	public static final int CMD_HOST_SEND_CARDS = 32;\n	public static final int CMD_SEND_CARDS = 33;\n	public static final int MES_SEND_CARDS = 34;\n	public static final int CMD_SEND_CURRENTID_CARDS = 35;\n	public static final int MES_FLUSH_CARDS = 36;\n	public static final int CMD_HOST_SEND_CARDS_COMPUTER = 37;\n	public static final int PORT_SEND = 2429;// 发送端口\n	public static final int PORT_RECEIVE = 2425;// 接收端口\n\n	public NetManager() {\n		roomList = new ArrayList&lt;Room&gt;();\n		users = new ArrayList&lt;User&gt;();\n	}\n\n	public void init() {\n		users.clear();\n		cardDataList.clear();\n		for (int i = 0; i &lt; 3; i++) {\n			netGameScreen.gInfo.playerList[i].clear();\n			netGameScreen.gInfo.playerOutList[i].clear();\n		}\n		netGameScreen.gInfo.playerList[3].clear();\n		// users\n	}\n\n	// 发送消息\n	public void sendCMD(Msg msg) {\n		try {\n			Thread.sleep(100);\n		} catch (InterruptedException e) {\n		}\n		(new UdpSend(msg)).start();\n	}\n\n	class UdpSend extends Thread {\n		Msg msg = null;\n\n		UdpSend(Msg msg) {\n			this.msg = msg;\n		}\n\n		public void run() {\n			try {\n				byte[] data = toByteArray(msg);\n				DatagramSocket ds = new DatagramSocket(PORT_SEND + Max);\n				DatagramPacket packet = new DatagramPacket(data, data.length,\n						InetAddress.getByName(msg.getReceiveUserIp()),\n						PORT_RECEIVE + Max);\n				packet.setData(data);\n				ds.send(packet);\n				ds.close();\n			} catch (Exception e) {\n			}\n\n		}\n	}\n\n	// 接收消息\n	public void openReceiveMsgThread() {\n		(new UdpReceive()).start();\n	}\n\n	public class UdpReceive extends Thread {\n		Msg msg = null;\n\n		UdpReceive() {\n		}\n\n		public void run() {\n			// 消息循环\n			while (!isStop) {\n				try {\n					DatagramSocket ds = new DatagramSocket(PORT_RECEIVE + Max);\n					byte[] data = new byte[1024 * 32];\n					DatagramPacket dp = new DatagramPacket(data, data.length);\n					dp.setData(data);\n					ds.receive(dp);\n					byte[] data2 = new byte[dp.getLength()];\n					System.arraycopy(data, 0, data2, 0, data2.length);// 得到接收的数据\n					Msg msg = (Msg) toObject(data2);\n					ds.close();\n\n					// 解析消息\n					parse(msg);\n				} catch (Exception e) {\n				}\n			}\n\n		}\n	}\n\n	// 解析接收的\n	public void parse(Msg msg) {\n		Room r = null;\n		switch (msg.getMsgType()) {\n		case CMD_HOST_REQUEST_ROOM:// 搜索桌子\n			u = (User) msg.getBody();\n			if (me.getIp().equals(currentRoom.getIp())) {\n				// out(&quot;有人进房间:&quot;+u.getIp());\n				replyRoom(u);\n			}\n			break;\n		case CMD_REPLY_ROOM: // 收到反馈桌子\n			r = (Room) msg.getBody();\n			if (!isContainsRoom(r)) {\n				roomList.add(r);\n				updateRoomList();\n			}\n			break;\n		case CMD_CREATE_ROOM: // 收到创建的桌子\n			r = (Room) msg.getBody();\n			if (!isContainsRoom(r)) {\n				roomList.add(r);\n				updateRoomList();\n			}\n			break;\n		case CMD_HOST_JOIN_ROOM: // 收到请求加入桌子\n			u = (User) msg.getBody();\n			// out(&quot;收到请求&quot;);\n			if (!isContainsUser(u)) {\n				users.add(u);\n				currentRoom.userCount++;\n				orderComputer();\n				broadUser();\n				// 反馈桌子人数更新\n				updateRoom();\n			}\n			break;\n		case CMD_UPDATE_ROOM: // 收到桌子列表更新\n			r = (Room) msg.getBody();\n			if (isContainsRoom(r)) {\n				for (Room t : roomList) {\n					if (t.getIp().equals(r.getIp()))\n						t.setUserCount(r.getUserCount());\n				}\n			} else\n				roomList.add(r);\n			updateRoomList();\n			break;\n		case CMD_BROAD_USERLIST:// 收到用户列表更新\n			// out(&quot;收到广播&quot;);\n			users = (ArrayList) msg.getBody();\n			updateUserList();\n			break;\n		case CMD_HOST_LEAVE_ROOM: // 主机离开房间\n			u = (User) msg.getBody();\n			leaveRoom2(u);\n			break;\n		case CMD_DEL_ROOM: // 收到删除房间\n			r = (Room) msg.getBody();\n			if (isContainsRoom(r)) {\n				removeRoom(r);\n			}\n			updateRoomList();\n			break;\n		case CMD_LEAVE_ROOM:\n			u = (User) msg.getBody();\n			if (!u.getIp().equals(me.getIp())) {\n				LeaveRoom = true;\n				init();\n				users.clear();\n				currentRoom = null;\n				updateRoomList();\n			}\n			break;\n		case CMD_HOST_READY_ROOM: // 准备\n			u = (User) msg.getBody();\n			for (User user : users) {\n				if (user.getIp().equals(u.getIp()))\n					user.setReady(true);\n			}\n			// broadUser();\n			// 开始游戏\n			beginGame();\n			break;\n		case CMD_BEGIN_CARDS:// 收到发的牌0\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			updateBeginCard();\n			startLandlord();\n			break;\n\n		case CMD_BROAD_NEXT_LANDLORD: // 被通知显示抢分按钮\n			updateLandlord(1);\n			break;\n		case CMD_HOST_FINISH_LANDLORD: // 按下了抢分按钮\n			u = (User) msg.getBody();\n			// out(&quot;fenfen&quot;);\n			// out(&quot;分:&quot;+u.getLandlordScore());\n			// out(&quot;id:&quot;+u.getDeskId());\n			// 判断抢分完成没有\n			if (!judgeFinishLandlord())\n				nextLandlord(u.getDeskId());\n			break;\n		case CMD_BEGIN_LANDLORD_CARDS: // 收到地主牌\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			netGameScreen.gInfo.setLandlordId(cardDataList.get(0).deskId);\n			updateBeginCard();\n			updateLandLordHead();\n			break;\n		case CMD_HOST_START_CARDS: // 谁是地主\n			sendCMD(new Msg(me.getName(), me.getIp(), null,\n					(String) msg.getBody(), CMD_START_CARDS, null));\n			break;\n		case CMD_START_CARDS: // 地主开始出牌\n			showCardButton();\n			break;\n		case CMD_HOST_SEND_CARDS: // 有人出牌了\n\n			int desk = -1;\n			for (User s : users) {\n				if (s.getIp().equals(msg.getSendUserIp()))\n					desk = s.getDeskId();\n			}\n			out(desk + &quot;:出牌&quot;);\n			// sendID\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CURRENTID_CARDS,\n								(desk + 1) % 3));\n				}\n			}\n			netGameScreen.gInfo.setCurrentPlayerId((desk + 1) % 3);\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			for (CardData cd : cardDataList)\n				out(&quot;出了:&quot; + cd.imageId);\n			// 将牌分给组内人\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp())) {\n						sleepT(300);\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CARDS, new ArrayList(\n										cardDataList)));\n						// out(&quot;给:&quot;+user.getDeskId()+&quot;:size:&quot;+cardDataList.size());\n					}\n				}\n			}\n			updateCards(desk);\n			// 下一个人\n			if (!(Max == 2 &amp;&amp; desk == 1)) {\n				// out(&quot;下一个人&quot;);\n				sendCMD(new Msg(me.getName(), me.getIp(), null,\n						currentRoom.getIp(), CMD_HOST_START_CARDS, users.get(\n								(desk + 1) % 3).getIp()));\n			}\n			// Computer出牌\n			if (Max == 2 &amp;&amp; netGameScreen.gInfo.getCurrentPlayerId() == 2) {\n				// 电脑出牌\n				out(&quot;电脑出牌&quot;);\n				sleepT(1000);\n				cardDataList.clear();\n				netGameScreen.gInfo.playerOutList[2] = Comm.getBestAI(\n						netGameScreen.gInfo.playerList[2],\n						netGameScreen.gInfo.getOppo());\n				if (netGameScreen.gInfo.playerOutList[2] == null)\n					out(&quot;电脑没牌出&quot;);\n				else {\n					out(&quot;电脑出的牌:&quot; + netGameScreen.gInfo.playerOutList[2].size());\n					String s = &quot;&quot;;\n					for (Card cd : netGameScreen.gInfo.playerOutList[2]) {\n						s += cd.value + &quot;,&quot;;\n						cardDataList.add(new CardData(cd.imageId, 2));\n					}\n					out(&quot;电脑牌:&quot; + s);\n				}\n				sendCMD(new Msg(me.getName(), me.getIp(), null,\n						currentRoom.getIp(), CMD_HOST_SEND_CARDS_COMPUTER,\n						cardDataList));\n			}\n			break;\n		case CMD_HOST_SEND_CARDS_COMPUTER: // 电脑接收\n			out(&quot;电脑出牌来接收&quot;);\n			// sendID\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CURRENTID_CARDS,\n								(2 + 1) % 3));\n				}\n			}\n			netGameScreen.gInfo.setCurrentPlayerId((2 + 1) % 3);\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			// out(&quot;cc&quot;);\n			// 将牌分给组内人\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp())) {\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CARDS, cardDataList));\n						// out(&quot;向发送了牌:&quot;+user.getDeskId());\n					}\n				}\n			}\n			// out(&quot;bb&quot;);\n			updateCards(2);\n			// out(&quot;电脑出了牌&quot;);\n			// 下一个人\n			sendCMD(new Msg(me.getName(), me.getIp(), null,\n					currentRoom.getIp(), CMD_HOST_START_CARDS, users.get(\n							(2 + 1) % 3).getIp()));\n\n			break;\n		case CMD_SEND_CARDS: // 收到广播来的牌\n			int desk1 = -1;\n			while (desk1 &lt; 0) {\n				desk1 = (netGameScreen.gInfo.getCurrentPlayerId() + 2) % 3;\n			}\n			// out(&quot;出牌的人&quot;+desk1);\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			out(&quot;xx:&quot; + cardDataList.size());\n			updateCards(desk1);\n			break;\n		case CMD_SEND_CURRENTID_CARDS: // 收到当前ID\n			netGameScreen.gInfo.setCurrentPlayerId((Integer) msg.getBody());\n			break;\n		}\n	}\n\n	// ***********************************************游戏逻辑**************************************************\n	// AI\n	public void orderComputer() {\n		if (Max == 2) {\n			User t1 = users.get(1), t2 = users.get(2);\n			;\n			users.remove(t1);\n			users.remove(t2);\n			users.add(t2);\n			users.add(t1);\n		}\n\n	}\n\n	public void addComputer() {\n		if (Max == 2) {\n			// out(&quot;addCPU&quot;);\n			computer = new User(&quot;computer&quot;, &quot;null&quot;);\n			computer.setDeskId(2);\n			computer.setReady(true);\n			users.add(computer);\n		}\n	}\n\n	// NET\n	public void requestRoom() {\n		// out(&quot;port:&quot;+Max);\n		roomList.clear();\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_HOST_REQUEST_ROOM, me));\n	}\n\n	public void replyRoom(User user) {\n		// out(&quot;sendCMD:CMD_REPLY_ROOM&quot;);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, user.getIp(),\n				CMD_REPLY_ROOM, currentRoom));\n\n	}\n\n	public void createRoom() {\n		// 加入自己当user\n		me.setDeskId(users.size());\n		users.add(me);\n		addComputer();\n		// out(&quot;currentSize:&quot;+users.size());\n		currentRoom = new Room(me.getIp(), 1);\n		roomList.add(currentRoom);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_CREATE_ROOM, currentRoom));\n		updateUserList();\n\n	}\n\n	public void joinRoom(Room r) {\n		// out(&quot;申请加入:&quot;+r.getIp()+&quot;,人数已有:&quot;+r.getUserCount() );\n		currentRoom = r;\n		me.setDeskId(r.userCount);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, r.getIp(),\n				CMD_HOST_JOIN_ROOM, me));\n	}\n\n	public void updateRoom() {\n		// out(&quot;sendCMD:CMD_UPDATE_ROOM&quot;);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_UPDATE_ROOM, currentRoom));\n	}\n\n	public void broadUser() {\n		// /out(&quot;sendCMD:CMD_BROAD_USERLIST&quot;);\n		for (User user : users) {\n			// out(&quot;广播:&quot;+user.getIp());\n			if (Max == 3 || (!user.getIp().equals(&quot;null&quot;)))\n				sendCMD(new Msg(me.getName(), me.getIp(), null, user.getIp(),\n						CMD_BROAD_USERLIST, users));\n		}\n		updateUserList();\n	}\n\n	public void leaveRoom1() {\n		// out(&quot;leaveIp:&quot;+me.getIp()+&quot;,HostIP:&quot;+currentRoom.getIp());\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_LEAVE_ROOM, me));\n	}\n\n	public void leaveRoom2(User u) {\n		// out(&quot;2leaveIp:&quot;+u.getIp()+&quot;,HostIP:&quot;+currentRoom.getIp());\n		if (currentRoom.getIp().equals(u.getIp())\n				|| netGameScreen.gInfo.playerList[0].size() &gt; 0) {\n			// 解散桌子\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;)))\n					sendCMD(new Msg(me.getName(), me.getIp(), null,\n							user.getIp(), CMD_LEAVE_ROOM, me));\n			}\n			init();\n			delRoom(currentRoom);\n			removeRoom(currentRoom);\n			LeaveRoom = true;\n			users.clear();\n			currentRoom = null;\n			updateRoomList();\n		} else {\n			removeUser(u);\n			currentRoom.userCount--;\n			updateRoom();\n			broadUser();\n			sendCMD(new Msg(me.getName(), me.getIp(), null, u.getIp(),\n					CMD_LEAVE_ROOM, null));\n		}\n	}\n\n	public void delRoom(Room r) {\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_DEL_ROOM, r));\n	}\n\n	public void getReady() {\n		me.setReady(true);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_READY_ROOM, me));\n	}\n\n	public void beginGame() {\n		int count = 0;\n		for (User user : users) {\n			if (user.isReady()) {\n				count++;\n			}\n		}\n		if (count == 3) {\n			// out(&quot;准备完毕:开始发牌&quot;);\n			// 取消准备图标\n			for (User user : users) {\n				user.setReady(false);\n			}\n			broadUser();\n			cardDataList.clear();\n			int len = 54;\n			for (int i = 1; i &lt;= len; i++)\n				cards[i] = new CardData(i, -1);\n			// out(&quot;洗牌&quot;);\n			// 洗牌\n			for (int i = 0; i &lt; 100; i++) {\n				Random random = new Random();\n				int a = random.nextInt(54) + 1;\n				int b = random.nextInt(54) + 1;\n				CardData k = cards[a];\n				cards[a] = cards[b];\n				cards[b] = k;\n			}\n			// out(&quot;发牌&quot;);\n			// 发牌\n			for (int i = 1; i &lt;= 51; i++) {\n				cardDataList.add(cards[i]);\n				cards[i].setDeskId(i % 3);\n			}\n			// out(&quot;地主牌&quot;);\n			// 地主牌\n			for (int i = 52; i &lt;= 54; i++) {\n				cardDataList.add(cards[i]);\n				cards[i].setDeskId(3);\n			}\n			// 将牌分给组内人\n			for (User user : users) {\n				// out(&quot;ip:&quot;+user.getIp());\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_BEGIN_CARDS, cardDataList));\n				}\n			}\n			// out(cardDataList.size()+&quot;:ab&quot;);\n			updateBeginCard();\n			startLandlord();\n		} else\n			broadUser();\n	}\n\n	public void startLandlord() {\n		if (me.getIp().equals(currentRoom.getIp())) {// 房主确定谁是地主\n			netGameScreen.gInfo.FirstLandLordId = 0;// 房主先抢地主\n			netGameScreen.gInfo\n					.setCurrentPlayerId(netGameScreen.gInfo.FirstLandLordId);\n			updateLandlord(1);\n		}\n	}\n\n	public void finishLandlord() {\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_FINISH_LANDLORD, me));\n	}\n\n	public void nextLandlord(int deskId) {\n		// out(&quot;通知下一个抢地主:&quot;+users.get((deskId+1)%3).getIp());\n		sendCMD(new Msg(me.getName(), me.getIp(), null, users.get(\n				(deskId + 1) % 3).getIp(), CMD_BROAD_NEXT_LANDLORD, null));\n	}\n\n	public boolean judgeFinishLandlord() {\n		int count = 0;\n		User maxUser;\n		for (User user : users) {\n			if (user.getLandlordScore() &gt; -1)\n				count++;\n		}\n		if (count == 3) {\n			// out(&quot;完成抢分&quot;);\n			int landlordId = Comm.getLandOwnerId(new int[] {\n					users.get(0).getLandlordScore(),\n					users.get(1).getLandlordScore(),\n					users.get(2).getLandlordScore() }, 0);\n			// out(&quot;地主ID:&quot;+landlordId);\n			netGameScreen.gInfo.LandlordId = landlordId;\n			for (User user : users) {\n				user.setLandlordScore(-1);\n				// out(&quot;设置:&quot;+user.getIp()+&quot;:取消分数显示&quot;);\n			}\n			broadUser();\n			// 将地主牌送入地主\n			cardDataList.clear();\n			for (Card c : netGameScreen.gInfo.playerList[3]) {\n				cardDataList.add(new CardData(c.imageId, landlordId));\n			}\n			// 将牌分给组内人\n			for (User user : users) {\n				// out(&quot;发牌给:&quot;+user.getIp());\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_BEGIN_LANDLORD_CARDS,\n								cardDataList));\n				}\n			}\n			// 因为自己不需要再发一遍给自己\n			updateBeginCard();\n			updateLandLordHead();\n			broadUser();\n			// 通知地主出牌\n			startHostCard();\n			return true;\n		}\n		return false;\n	}\n\n	public void startHostCard() {\n		// out(&quot;地主ID:&quot;+users.get(netGameScreen.gInfo.LandlordId).getIp());\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_START_CARDS, users.get(netGameScreen.gInfo.LandlordId)\n						.getIp()));\n	}\n\n	public void sendHostCards() {\n		// out(&quot;通知Host出牌了&quot;);\n		cardDataList.clear();\n		for (Card cd : netGameScreen.gInfo.playerOutList[me.getDeskId()]) {\n			// out(&quot;取2:&quot;+cd.imageId);\n			cardDataList.add(new CardData(cd.imageId, me.getDeskId()));\n		}\n\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_SEND_CARDS, cardDataList));\n	}\n\n	// UI\n	void flush(List&lt;Card&gt; list) {\n		sendMes2(MES_FLUSH_CARDS, list);\n	}\n\n	void updateCards(int desk) {\n\n		flush(netGameScreen.gInfo.playerOutList[(desk + 1) % 3]);\n		if (netGameScreen.gInfo.playerOutList[desk] != null)\n			netGameScreen.gInfo.playerOutList[desk].clear();\n		for (Card c1 : netGameScreen.gInfo.playerList[desk]) {\n			for (CardData card : cardDataList) {\n				if (card.imageId == c1.imageId) {\n					netGameScreen.gInfo.playerOutList[desk].add(c1);\n				}\n			}\n		}\n		if (netGameScreen.gInfo.playerOutList[desk] != null)\n			netGameScreen.gInfo.playerList[desk]\n					.removeAll(netGameScreen.gInfo.playerOutList[desk]);\n		// 发牌\n		sendMes2(MES_SEND_CARDS, desk);\n	}\n\n	void updateLandLordHead() {\n		sendMes2(MES_UPDATE_LANDLORDHEAD, null);\n	}\n\n	void showCardButton() {\n		// out(&quot;显示出牌按钮&quot;);\n		sendMes2(MES_SHOW_CARDBUTTON, null);\n	}\n\n	void updateLandlord(int visible) {\n		sendMes2(MES_UPDATE_LANDLORD, visible);\n	}\n\n	void updateBeginCard() {\n		// out(cardDataList.size()+&quot;:a&quot;);\n		for (CardData card : cardDataList) {\n			Card cards = new Card(card.getImageId(), netGameScreen.atlsa);\n			netGameScreen.gInfo.playerList[card.getDeskId()].add(cards);\n			// netGameScreen.net.out(card.getDeskId()+&quot;:&quot;+me.getDeskId());\n			if (card.getDeskId() == me.getDeskId()) {\n				cards.addListener(new ClickListener() {\n					@Override\n					public boolean touchDown(InputEvent event, float x,\n							float y, int pointer, int button) {\n						Card c = (Card) event.getListenerActor();\n						if(netGameScreen.gInfo.getGameState()==2)\n							c.move();\n						c.touched=1;\n						Log.v(&quot;test&quot;, &quot;touch&quot; + c.imageId);\n						return super.touchDown(event, x, y, pointer, button);\n					}\n\n				});\n			}\n		}\n		// 发牌\n		sendMes2(MES_UPDATE_BEGINCARD, null);\n	}\n\n	void updateRoomList() {\n		sendMes1(MES_UPDATE_ROOM, null);\n	}\n\n	void updateUserList() {\n		sendMes2(MES_UPDATE_User, null);\n	}\n\n	// ***********************************************功能函数*************************************************\n	public boolean isContainsRoom(Room r) {\n		for (int i = 0; i &lt; roomList.size(); i++) {\n			if (roomList.get(i).getIp().equals(r.getIp()))\n				return true;\n		}\n		return false;\n	}\n\n	public boolean isContainsUser(User u) {\n		for (int i = 0; i &lt; users.size(); i++) {\n			// out(users.get(i).getIp()+&quot;:&quot;+u.getIp());\n			if (users.get(i).getIp().equals(u.getIp())) {\n				return true;\n			}\n			// out(&quot;lala&quot;);\n		}\n		// out(&quot;false&quot;);\n		return false;\n	}\n\n	public void removeRoom(Room room) {\n\n		Room t = null;\n		for (Room r : roomList) {\n			if (r.getIp().equals(room.getIp()))\n				t = r;\n		}\n		roomList.remove(t);\n	}\n\n	public void removeUser(User user) {\n		User t = null;\n		for (User r : users) {\n			if (r.getIp().equals(user.getIp()))\n				t = r;\n		}\n		users.remove(t);\n	}\n\n	// 发送Handle\n	public void sendMes1(int cmd, Object o) {\n		Message m = new Message();\n		m.what = cmd;\n		m.obj = o;\n		if (rommScreen != null)\n			rommScreen.handler.sendMessage(m);\n\n	}\n\n	public void sendMes2(int cmd, Object o) {\n		Message m = new Message();\n		m.what = cmd;\n		m.obj = o;\n		if (netGameScreen != null)\n			netGameScreen.handler.sendMessage(m);\n	}\n\n	// 获取当前时间\n	public static long getTimel() {\n		return System.currentTimeMillis();\n	}\n\n	// 得到广播ip, 192.168.0.255之类的格式\n	public String getBroadCastIP() {\n		String ip = getLocalHostIp().substring(0,\n				getLocalHostIp().lastIndexOf(&quot;.&quot;) + 1)\n				+ &quot;255&quot;;\n		return ip;\n	}\n\n	// 获取本机IP\n	public String getLocalHostIp() {\n		String ipaddress = &quot;&quot;;\n		try {\n			Enumeration&lt;NetworkInterface&gt; en = NetworkInterface\n					.getNetworkInterfaces();\n			// 遍历所用的网络接口\n			while (en.hasMoreElements()) {\n				NetworkInterface nif = en.nextElement();// 得到每一个网络接口绑定的所有ip\n				Enumeration&lt;InetAddress&gt; inet = nif.getInetAddresses();\n				// 遍历每一个接口绑定的所有ip\n				while (inet.hasMoreElements()) {\n					InetAddress ip = inet.nextElement();\n					if (!ip.isLoopbackAddress()\n							&amp;&amp; InetAddressUtils.isIPv4Address(ip\n									.getHostAddress())) {\n						return ipaddress = ip.getHostAddress();\n					}\n				}\n\n			}\n		} catch (SocketException e) {\n			System.out.print(&quot;获取IP失败&quot;);\n			e.printStackTrace();\n		}\n		return ipaddress;\n\n	}\n\n	// 对象封装成消息\n	public byte[] toByteArray(Object obj) {\n		byte[] bytes = null;\n		ByteArrayOutputStream bos = new ByteArrayOutputStream();\n		try {\n			ObjectOutputStream oos = new ObjectOutputStream(bos);\n			oos.writeObject(obj);\n			oos.flush();\n			bytes = bos.toByteArray();\n			oos.close();\n			bos.close();\n		} catch (IOException ex) {\n			ex.printStackTrace();\n		}\n		return bytes;\n	}\n\n	// 消息解析成对象\n	public Object toObject(byte[] bytes) {\n		Object obj = null;\n		try {\n			ByteArrayInputStream bis = new ByteArrayInputStream(bytes);\n			ObjectInputStream ois = new ObjectInputStream(bis);\n			obj = ois.readObject();\n			ois.close();\n			bis.close();\n		} catch (IOException ex) {\n			ex.printStackTrace();\n		} catch (ClassNotFoundException ex) {\n			ex.printStackTrace();\n		}\n		return obj;\n	}\n\n	public static void out(String s) {\n		Log.v(&quot;test&quot;, s);\n	}\n\n	public void sleepT(long time) {\n		try {\n			Thread.sleep(time);\n		} catch (InterruptedException e) {\n			// TODO Auto-generated catch block\n			e.printStackTrace();\n		}\n	}\n}\n</pre><br>\r\n<br>\r\n<p></p>\r\n<p>如果想要全部源码的，可以 email 我 cq361106306@qq.com. 但是只能研究所用</p>\r\n<p>PS：由于博客中毒我把所有文章都删了才解封。。<br>\r\n</p>\r\n','\r\n\r\n<p><br>\r\n</p>\r\n<p>这个作品是我最近写的，结合我的毕业设计的通信模块和之前的单机版斗地主。我已经上架到豌豆荚了，贴了点广告，看看能不能赚点茶钱。可是一点也不乐观。因此我想分享给大家源码。只要不用于商业。 下面先贴网络模块的核心代码，第一次写这种逻辑用的udp， 经验不够，没有写的那么好看。</p>\r\n<p>这里是我上架的apk,大家下载来试试也无妨: 地址 <a target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.joker\" target=\"_blank\">\r\nhttp://www.wandoujia.com/apps/com.hj.joker</a></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"java\">package com.hj.net;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.InetAddress;\nimport java.net.NetworkInterface;\nimport java.net.SocketException;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Enumeration;\nimport java.util.List;\nimport java.util.Random;\nimport java.util.Vector;\n\nimport org.apache.http.conn.util.InetAddressUtils;\nimport com.badlogic.gdx.Screen;\nimport com.badlogic.gdx.scenes.scene2d.InputEvent;\nimport com.badlogic.gdx.scenes.scene2d.actions.Actions;\nimport com.badlogic.gdx.scenes.scene2d.ui.Label;\nimport com.badlogic.gdx.scenes.scene2d.utils.ClickListener;\nimport com.hj.screen.NetGameScreen;\nimport com.hj.screen.RommScreen;\nimport com.hj.tool.Card;\nimport com.hj.tool.Comm;\n\nimport android.os.Message;\nimport android.util.Log;\n\npublic class NetManager {\n\n	// 初始化\n	public RommScreen rommScreen = null;\n	public NetGameScreen netGameScreen = null;\n	public static int Max = 3;\n	public User me = null, u = null, computer = null;\n	public List&lt;User&gt; users = null;\n	public Room currentRoom = null;\n	public List&lt;Room&gt; roomList = null;// 本主机的所有用户\n	public boolean isStop = true;\n	public boolean LeaveRoom = false;\n	public CardData cards[] = new CardData[56];\n	public List&lt;CardData&gt; cardDataList = new ArrayList&lt;CardData&gt;();\n	// 协议命令\n	public static final int CMD_HOST_REQUEST_ROOM = 10;\n	public static final int CMD_REPLY_ROOM = 11;\n	public static final int CMD_CREATE_ROOM = 12;\n	public static final int MES_UPDATE_ROOM = 13;\n	public static final int MES_UPDATE_User = 14;\n	public static final int CMD_HOST_JOIN_ROOM = 15;\n	public static final int CMD_BROAD_USERLIST = 16;\n	public static final int CMD_UPDATE_ROOM = 17;\n	public static final int CMD_HOST_LEAVE_ROOM = 18;\n	public static final int CMD_LEAVE_ROOM = 19;\n	public static final int CMD_DEL_ROOM = 20;\n	public static final int CMD_HOST_READY_ROOM = 21;\n	public static final int CMD_BEGIN_CARDS = 22;\n	public static final int MES_UPDATE_BEGINCARD = 23;\n	public static final int MES_UPDATE_LANDLORD = 24;\n	public static final int CMD_HOST_FINISH_LANDLORD = 25;\n	public static final int CMD_BROAD_NEXT_LANDLORD = 26;\n	public static final int CMD_BEGIN_LANDLORD_CARDS = 27;\n	public static final int CMD_HOST_START_CARDS = 28;\n	public static final int CMD_START_CARDS = 29;\n	public static final int MES_SHOW_CARDBUTTON = 30;\n	public static final int MES_UPDATE_LANDLORDHEAD = 31;\n	public static final int CMD_HOST_SEND_CARDS = 32;\n	public static final int CMD_SEND_CARDS = 33;\n	public static final int MES_SEND_CARDS = 34;\n	public static final int CMD_SEND_CURRENTID_CARDS = 35;\n	public static final int MES_FLUSH_CARDS = 36;\n	public static final int CMD_HOST_SEND_CARDS_COMPUTER = 37;\n	public static final int PORT_SEND = 2429;// 发送端口\n	public static final int PORT_RECEIVE = 2425;// 接收端口\n\n	public NetManager() {\n		roomList = new ArrayList&lt;Room&gt;();\n		users = new ArrayList&lt;User&gt;();\n	}\n\n	public void init() {\n		users.clear();\n		cardDataList.clear();\n		for (int i = 0; i &lt; 3; i++) {\n			netGameScreen.gInfo.playerList[i].clear();\n			netGameScreen.gInfo.playerOutList[i].clear();\n		}\n		netGameScreen.gInfo.playerList[3].clear();\n		// users\n	}\n\n	// 发送消息\n	public void sendCMD(Msg msg) {\n		try {\n			Thread.sleep(100);\n		} catch (InterruptedException e) {\n		}\n		(new UdpSend(msg)).start();\n	}\n\n	class UdpSend extends Thread {\n		Msg msg = null;\n\n		UdpSend(Msg msg) {\n			this.msg = msg;\n		}\n\n		public void run() {\n			try {\n				byte[] data = toByteArray(msg);\n				DatagramSocket ds = new DatagramSocket(PORT_SEND + Max);\n				DatagramPacket packet = new DatagramPacket(data, data.length,\n						InetAddress.getByName(msg.getReceiveUserIp()),\n						PORT_RECEIVE + Max);\n				packet.setData(data);\n				ds.send(packet);\n				ds.close();\n			} catch (Exception e) {\n			}\n\n		}\n	}\n\n	// 接收消息\n	public void openReceiveMsgThread() {\n		(new UdpReceive()).start();\n	}\n\n	public class UdpReceive extends Thread {\n		Msg msg = null;\n\n		UdpReceive() {\n		}\n\n		public void run() {\n			// 消息循环\n			while (!isStop) {\n				try {\n					DatagramSocket ds = new DatagramSocket(PORT_RECEIVE + Max);\n					byte[] data = new byte[1024 * 32];\n					DatagramPacket dp = new DatagramPacket(data, data.length);\n					dp.setData(data);\n					ds.receive(dp);\n					byte[] data2 = new byte[dp.getLength()];\n					System.arraycopy(data, 0, data2, 0, data2.length);// 得到接收的数据\n					Msg msg = (Msg) toObject(data2);\n					ds.close();\n\n					// 解析消息\n					parse(msg);\n				} catch (Exception e) {\n				}\n			}\n\n		}\n	}\n\n	// 解析接收的\n	public void parse(Msg msg) {\n		Room r = null;\n		switch (msg.getMsgType()) {\n		case CMD_HOST_REQUEST_ROOM:// 搜索桌子\n			u = (User) msg.getBody();\n			if (me.getIp().equals(currentRoom.getIp())) {\n				// out(&quot;有人进房间:&quot;+u.getIp());\n				replyRoom(u);\n			}\n			break;\n		case CMD_REPLY_ROOM: // 收到反馈桌子\n			r = (Room) msg.getBody();\n			if (!isContainsRoom(r)) {\n				roomList.add(r);\n				updateRoomList();\n			}\n			break;\n		case CMD_CREATE_ROOM: // 收到创建的桌子\n			r = (Room) msg.getBody();\n			if (!isContainsRoom(r)) {\n				roomList.add(r);\n				updateRoomList();\n			}\n			break;\n		case CMD_HOST_JOIN_ROOM: // 收到请求加入桌子\n			u = (User) msg.getBody();\n			// out(&quot;收到请求&quot;);\n			if (!isContainsUser(u)) {\n				users.add(u);\n				currentRoom.userCount++;\n				orderComputer();\n				broadUser();\n				// 反馈桌子人数更新\n				updateRoom();\n			}\n			break;\n		case CMD_UPDATE_ROOM: // 收到桌子列表更新\n			r = (Room) msg.getBody();\n			if (isContainsRoom(r)) {\n				for (Room t : roomList) {\n					if (t.getIp().equals(r.getIp()))\n						t.setUserCount(r.getUserCount());\n				}\n			} else\n				roomList.add(r);\n			updateRoomList();\n			break;\n		case CMD_BROAD_USERLIST:// 收到用户列表更新\n			// out(&quot;收到广播&quot;);\n			users = (ArrayList) msg.getBody();\n			updateUserList();\n			break;\n		case CMD_HOST_LEAVE_ROOM: // 主机离开房间\n			u = (User) msg.getBody();\n			leaveRoom2(u);\n			break;\n		case CMD_DEL_ROOM: // 收到删除房间\n			r = (Room) msg.getBody();\n			if (isContainsRoom(r)) {\n				removeRoom(r);\n			}\n			updateRoomList();\n			break;\n		case CMD_LEAVE_ROOM:\n			u = (User) msg.getBody();\n			if (!u.getIp().equals(me.getIp())) {\n				LeaveRoom = true;\n				init();\n				users.clear();\n				currentRoom = null;\n				updateRoomList();\n			}\n			break;\n		case CMD_HOST_READY_ROOM: // 准备\n			u = (User) msg.getBody();\n			for (User user : users) {\n				if (user.getIp().equals(u.getIp()))\n					user.setReady(true);\n			}\n			// broadUser();\n			// 开始游戏\n			beginGame();\n			break;\n		case CMD_BEGIN_CARDS:// 收到发的牌0\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			updateBeginCard();\n			startLandlord();\n			break;\n\n		case CMD_BROAD_NEXT_LANDLORD: // 被通知显示抢分按钮\n			updateLandlord(1);\n			break;\n		case CMD_HOST_FINISH_LANDLORD: // 按下了抢分按钮\n			u = (User) msg.getBody();\n			// out(&quot;fenfen&quot;);\n			// out(&quot;分:&quot;+u.getLandlordScore());\n			// out(&quot;id:&quot;+u.getDeskId());\n			// 判断抢分完成没有\n			if (!judgeFinishLandlord())\n				nextLandlord(u.getDeskId());\n			break;\n		case CMD_BEGIN_LANDLORD_CARDS: // 收到地主牌\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			netGameScreen.gInfo.setLandlordId(cardDataList.get(0).deskId);\n			updateBeginCard();\n			updateLandLordHead();\n			break;\n		case CMD_HOST_START_CARDS: // 谁是地主\n			sendCMD(new Msg(me.getName(), me.getIp(), null,\n					(String) msg.getBody(), CMD_START_CARDS, null));\n			break;\n		case CMD_START_CARDS: // 地主开始出牌\n			showCardButton();\n			break;\n		case CMD_HOST_SEND_CARDS: // 有人出牌了\n\n			int desk = -1;\n			for (User s : users) {\n				if (s.getIp().equals(msg.getSendUserIp()))\n					desk = s.getDeskId();\n			}\n			out(desk + &quot;:出牌&quot;);\n			// sendID\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CURRENTID_CARDS,\n								(desk + 1) % 3));\n				}\n			}\n			netGameScreen.gInfo.setCurrentPlayerId((desk + 1) % 3);\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			for (CardData cd : cardDataList)\n				out(&quot;出了:&quot; + cd.imageId);\n			// 将牌分给组内人\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp())) {\n						sleepT(300);\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CARDS, new ArrayList(\n										cardDataList)));\n						// out(&quot;给:&quot;+user.getDeskId()+&quot;:size:&quot;+cardDataList.size());\n					}\n				}\n			}\n			updateCards(desk);\n			// 下一个人\n			if (!(Max == 2 &amp;&amp; desk == 1)) {\n				// out(&quot;下一个人&quot;);\n				sendCMD(new Msg(me.getName(), me.getIp(), null,\n						currentRoom.getIp(), CMD_HOST_START_CARDS, users.get(\n								(desk + 1) % 3).getIp()));\n			}\n			// Computer出牌\n			if (Max == 2 &amp;&amp; netGameScreen.gInfo.getCurrentPlayerId() == 2) {\n				// 电脑出牌\n				out(&quot;电脑出牌&quot;);\n				sleepT(1000);\n				cardDataList.clear();\n				netGameScreen.gInfo.playerOutList[2] = Comm.getBestAI(\n						netGameScreen.gInfo.playerList[2],\n						netGameScreen.gInfo.getOppo());\n				if (netGameScreen.gInfo.playerOutList[2] == null)\n					out(&quot;电脑没牌出&quot;);\n				else {\n					out(&quot;电脑出的牌:&quot; + netGameScreen.gInfo.playerOutList[2].size());\n					String s = &quot;&quot;;\n					for (Card cd : netGameScreen.gInfo.playerOutList[2]) {\n						s += cd.value + &quot;,&quot;;\n						cardDataList.add(new CardData(cd.imageId, 2));\n					}\n					out(&quot;电脑牌:&quot; + s);\n				}\n				sendCMD(new Msg(me.getName(), me.getIp(), null,\n						currentRoom.getIp(), CMD_HOST_SEND_CARDS_COMPUTER,\n						cardDataList));\n			}\n			break;\n		case CMD_HOST_SEND_CARDS_COMPUTER: // 电脑接收\n			out(&quot;电脑出牌来接收&quot;);\n			// sendID\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CURRENTID_CARDS,\n								(2 + 1) % 3));\n				}\n			}\n			netGameScreen.gInfo.setCurrentPlayerId((2 + 1) % 3);\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			// out(&quot;cc&quot;);\n			// 将牌分给组内人\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp())) {\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_SEND_CARDS, cardDataList));\n						// out(&quot;向发送了牌:&quot;+user.getDeskId());\n					}\n				}\n			}\n			// out(&quot;bb&quot;);\n			updateCards(2);\n			// out(&quot;电脑出了牌&quot;);\n			// 下一个人\n			sendCMD(new Msg(me.getName(), me.getIp(), null,\n					currentRoom.getIp(), CMD_HOST_START_CARDS, users.get(\n							(2 + 1) % 3).getIp()));\n\n			break;\n		case CMD_SEND_CARDS: // 收到广播来的牌\n			int desk1 = -1;\n			while (desk1 &lt; 0) {\n				desk1 = (netGameScreen.gInfo.getCurrentPlayerId() + 2) % 3;\n			}\n			// out(&quot;出牌的人&quot;+desk1);\n			cardDataList.clear();\n			cardDataList = (ArrayList&lt;CardData&gt;) msg.getBody();\n			out(&quot;xx:&quot; + cardDataList.size());\n			updateCards(desk1);\n			break;\n		case CMD_SEND_CURRENTID_CARDS: // 收到当前ID\n			netGameScreen.gInfo.setCurrentPlayerId((Integer) msg.getBody());\n			break;\n		}\n	}\n\n	// ***********************************************游戏逻辑**************************************************\n	// AI\n	public void orderComputer() {\n		if (Max == 2) {\n			User t1 = users.get(1), t2 = users.get(2);\n			;\n			users.remove(t1);\n			users.remove(t2);\n			users.add(t2);\n			users.add(t1);\n		}\n\n	}\n\n	public void addComputer() {\n		if (Max == 2) {\n			// out(&quot;addCPU&quot;);\n			computer = new User(&quot;computer&quot;, &quot;null&quot;);\n			computer.setDeskId(2);\n			computer.setReady(true);\n			users.add(computer);\n		}\n	}\n\n	// NET\n	public void requestRoom() {\n		// out(&quot;port:&quot;+Max);\n		roomList.clear();\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_HOST_REQUEST_ROOM, me));\n	}\n\n	public void replyRoom(User user) {\n		// out(&quot;sendCMD:CMD_REPLY_ROOM&quot;);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, user.getIp(),\n				CMD_REPLY_ROOM, currentRoom));\n\n	}\n\n	public void createRoom() {\n		// 加入自己当user\n		me.setDeskId(users.size());\n		users.add(me);\n		addComputer();\n		// out(&quot;currentSize:&quot;+users.size());\n		currentRoom = new Room(me.getIp(), 1);\n		roomList.add(currentRoom);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_CREATE_ROOM, currentRoom));\n		updateUserList();\n\n	}\n\n	public void joinRoom(Room r) {\n		// out(&quot;申请加入:&quot;+r.getIp()+&quot;,人数已有:&quot;+r.getUserCount() );\n		currentRoom = r;\n		me.setDeskId(r.userCount);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, r.getIp(),\n				CMD_HOST_JOIN_ROOM, me));\n	}\n\n	public void updateRoom() {\n		// out(&quot;sendCMD:CMD_UPDATE_ROOM&quot;);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_UPDATE_ROOM, currentRoom));\n	}\n\n	public void broadUser() {\n		// /out(&quot;sendCMD:CMD_BROAD_USERLIST&quot;);\n		for (User user : users) {\n			// out(&quot;广播:&quot;+user.getIp());\n			if (Max == 3 || (!user.getIp().equals(&quot;null&quot;)))\n				sendCMD(new Msg(me.getName(), me.getIp(), null, user.getIp(),\n						CMD_BROAD_USERLIST, users));\n		}\n		updateUserList();\n	}\n\n	public void leaveRoom1() {\n		// out(&quot;leaveIp:&quot;+me.getIp()+&quot;,HostIP:&quot;+currentRoom.getIp());\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_LEAVE_ROOM, me));\n	}\n\n	public void leaveRoom2(User u) {\n		// out(&quot;2leaveIp:&quot;+u.getIp()+&quot;,HostIP:&quot;+currentRoom.getIp());\n		if (currentRoom.getIp().equals(u.getIp())\n				|| netGameScreen.gInfo.playerList[0].size() &gt; 0) {\n			// 解散桌子\n			for (User user : users) {\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;)))\n					sendCMD(new Msg(me.getName(), me.getIp(), null,\n							user.getIp(), CMD_LEAVE_ROOM, me));\n			}\n			init();\n			delRoom(currentRoom);\n			removeRoom(currentRoom);\n			LeaveRoom = true;\n			users.clear();\n			currentRoom = null;\n			updateRoomList();\n		} else {\n			removeUser(u);\n			currentRoom.userCount--;\n			updateRoom();\n			broadUser();\n			sendCMD(new Msg(me.getName(), me.getIp(), null, u.getIp(),\n					CMD_LEAVE_ROOM, null));\n		}\n	}\n\n	public void delRoom(Room r) {\n		sendCMD(new Msg(me.getName(), me.getIp(), null, getBroadCastIP(),\n				CMD_DEL_ROOM, r));\n	}\n\n	public void getReady() {\n		me.setReady(true);\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_READY_ROOM, me));\n	}\n\n	public void beginGame() {\n		int count = 0;\n		for (User user : users) {\n			if (user.isReady()) {\n				count++;\n			}\n		}\n		if (count == 3) {\n			// out(&quot;准备完毕:开始发牌&quot;);\n			// 取消准备图标\n			for (User user : users) {\n				user.setReady(false);\n			}\n			broadUser();\n			cardDataList.clear();\n			int len = 54;\n			for (int i = 1; i &lt;= len; i++)\n				cards[i] = new CardData(i, -1);\n			// out(&quot;洗牌&quot;);\n			// 洗牌\n			for (int i = 0; i &lt; 100; i++) {\n				Random random = new Random();\n				int a = random.nextInt(54) + 1;\n				int b = random.nextInt(54) + 1;\n				CardData k = cards[a];\n				cards[a] = cards[b];\n				cards[b] = k;\n			}\n			// out(&quot;发牌&quot;);\n			// 发牌\n			for (int i = 1; i &lt;= 51; i++) {\n				cardDataList.add(cards[i]);\n				cards[i].setDeskId(i % 3);\n			}\n			// out(&quot;地主牌&quot;);\n			// 地主牌\n			for (int i = 52; i &lt;= 54; i++) {\n				cardDataList.add(cards[i]);\n				cards[i].setDeskId(3);\n			}\n			// 将牌分给组内人\n			for (User user : users) {\n				// out(&quot;ip:&quot;+user.getIp());\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_BEGIN_CARDS, cardDataList));\n				}\n			}\n			// out(cardDataList.size()+&quot;:ab&quot;);\n			updateBeginCard();\n			startLandlord();\n		} else\n			broadUser();\n	}\n\n	public void startLandlord() {\n		if (me.getIp().equals(currentRoom.getIp())) {// 房主确定谁是地主\n			netGameScreen.gInfo.FirstLandLordId = 0;// 房主先抢地主\n			netGameScreen.gInfo\n					.setCurrentPlayerId(netGameScreen.gInfo.FirstLandLordId);\n			updateLandlord(1);\n		}\n	}\n\n	public void finishLandlord() {\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_FINISH_LANDLORD, me));\n	}\n\n	public void nextLandlord(int deskId) {\n		// out(&quot;通知下一个抢地主:&quot;+users.get((deskId+1)%3).getIp());\n		sendCMD(new Msg(me.getName(), me.getIp(), null, users.get(\n				(deskId + 1) % 3).getIp(), CMD_BROAD_NEXT_LANDLORD, null));\n	}\n\n	public boolean judgeFinishLandlord() {\n		int count = 0;\n		User maxUser;\n		for (User user : users) {\n			if (user.getLandlordScore() &gt; -1)\n				count++;\n		}\n		if (count == 3) {\n			// out(&quot;完成抢分&quot;);\n			int landlordId = Comm.getLandOwnerId(new int[] {\n					users.get(0).getLandlordScore(),\n					users.get(1).getLandlordScore(),\n					users.get(2).getLandlordScore() }, 0);\n			// out(&quot;地主ID:&quot;+landlordId);\n			netGameScreen.gInfo.LandlordId = landlordId;\n			for (User user : users) {\n				user.setLandlordScore(-1);\n				// out(&quot;设置:&quot;+user.getIp()+&quot;:取消分数显示&quot;);\n			}\n			broadUser();\n			// 将地主牌送入地主\n			cardDataList.clear();\n			for (Card c : netGameScreen.gInfo.playerList[3]) {\n				cardDataList.add(new CardData(c.imageId, landlordId));\n			}\n			// 将牌分给组内人\n			for (User user : users) {\n				// out(&quot;发牌给:&quot;+user.getIp());\n				if (Max == 3 || (!user.getIp().equals(&quot;null&quot;))) {\n					if (!user.getIp().equals(currentRoom.getIp()))\n						sendCMD(new Msg(me.getName(), me.getIp(), null,\n								user.getIp(), CMD_BEGIN_LANDLORD_CARDS,\n								cardDataList));\n				}\n			}\n			// 因为自己不需要再发一遍给自己\n			updateBeginCard();\n			updateLandLordHead();\n			broadUser();\n			// 通知地主出牌\n			startHostCard();\n			return true;\n		}\n		return false;\n	}\n\n	public void startHostCard() {\n		// out(&quot;地主ID:&quot;+users.get(netGameScreen.gInfo.LandlordId).getIp());\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_START_CARDS, users.get(netGameScreen.gInfo.LandlordId)\n						.getIp()));\n	}\n\n	public void sendHostCards() {\n		// out(&quot;通知Host出牌了&quot;);\n		cardDataList.clear();\n		for (Card cd : netGameScreen.gInfo.playerOutList[me.getDeskId()]) {\n			// out(&quot;取2:&quot;+cd.imageId);\n			cardDataList.add(new CardData(cd.imageId, me.getDeskId()));\n		}\n\n		sendCMD(new Msg(me.getName(), me.getIp(), null, currentRoom.getIp(),\n				CMD_HOST_SEND_CARDS, cardDataList));\n	}\n\n	// UI\n	void flush(List&lt;Card&gt; list) {\n		sendMes2(MES_FLUSH_CARDS, list);\n	}\n\n	void updateCards(int desk) {\n\n		flush(netGameScreen.gInfo.playerOutList[(desk + 1) % 3]);\n		if (netGameScreen.gInfo.playerOutList[desk] != null)\n			netGameScreen.gInfo.playerOutList[desk].clear();\n		for (Card c1 : netGameScreen.gInfo.playerList[desk]) {\n			for (CardData card : cardDataList) {\n				if (card.imageId == c1.imageId) {\n					netGameScreen.gInfo.playerOutList[desk].add(c1);\n				}\n			}\n		}\n		if (netGameScreen.gInfo.playerOutList[desk] != null)\n			netGameScreen.gInfo.playerList[desk]\n					.removeAll(netGameScreen.gInfo.playerOutList[desk]);\n		// 发牌\n		sendMes2(MES_SEND_CARDS, desk);\n	}\n\n	void updateLandLordHead() {\n		sendMes2(MES_UPDATE_LANDLORDHEAD, null);\n	}\n\n	void showCardButton() {\n		// out(&quot;显示出牌按钮&quot;);\n		sendMes2(MES_SHOW_CARDBUTTON, null);\n	}\n\n	void updateLandlord(int visible) {\n		sendMes2(MES_UPDATE_LANDLORD, visible);\n	}\n\n	void updateBeginCard() {\n		// out(cardDataList.size()+&quot;:a&quot;);\n		for (CardData card : cardDataList) {\n			Card cards = new Card(card.getImageId(), netGameScreen.atlsa);\n			netGameScreen.gInfo.playerList[card.getDeskId()].add(cards);\n			// netGameScreen.net.out(card.getDeskId()+&quot;:&quot;+me.getDeskId());\n			if (card.getDeskId() == me.getDeskId()) {\n				cards.addListener(new ClickListener() {\n					@Override\n					public boolean touchDown(InputEvent event, float x,\n							float y, int pointer, int button) {\n						Card c = (Card) event.getListenerActor();\n						if(netGameScreen.gInfo.getGameState()==2)\n							c.move();\n						c.touched=1;\n						Log.v(&quot;test&quot;, &quot;touch&quot; + c.imageId);\n						return super.touchDown(event, x, y, pointer, button);\n					}\n\n				});\n			}\n		}\n		// 发牌\n		sendMes2(MES_UPDATE_BEGINCARD, null);\n	}\n\n	void updateRoomList() {\n		sendMes1(MES_UPDATE_ROOM, null);\n	}\n\n	void updateUserList() {\n		sendMes2(MES_UPDATE_User, null);\n	}\n\n	// ***********************************************功能函数*************************************************\n	public boolean isContainsRoom(Room r) {\n		for (int i = 0; i &lt; roomList.size(); i++) {\n			if (roomList.get(i).getIp().equals(r.getIp()))\n				return true;\n		}\n		return false;\n	}\n\n	public boolean isContainsUser(User u) {\n		for (int i = 0; i &lt; users.size(); i++) {\n			// out(users.get(i).getIp()+&quot;:&quot;+u.getIp());\n			if (users.get(i).getIp().equals(u.getIp())) {\n				return true;\n			}\n			// out(&quot;lala&quot;);\n		}\n		// out(&quot;false&quot;);\n		return false;\n	}\n\n	public void removeRoom(Room room) {\n\n		Room t = null;\n		for (Room r : roomList) {\n			if (r.getIp().equals(room.getIp()))\n				t = r;\n		}\n		roomList.remove(t);\n	}\n\n	public void removeUser(User user) {\n		User t = null;\n		for (User r : users) {\n			if (r.getIp().equals(user.getIp()))\n				t = r;\n		}\n		users.remove(t);\n	}\n\n	// 发送Handle\n	public void sendMes1(int cmd, Object o) {\n		Message m = new Message();\n		m.what = cmd;\n		m.obj = o;\n		if (rommScreen != null)\n			rommScreen.handler.sendMessage(m);\n\n	}\n\n	public void sendMes2(int cmd, Object o) {\n		Message m = new Message();\n		m.what = cmd;\n		m.obj = o;\n		if (netGameScreen != null)\n			netGameScreen.handler.sendMessage(m);\n	}\n\n	// 获取当前时间\n	public static long getTimel() {\n		return System.currentTimeMillis();\n	}\n\n	// 得到广播ip, 192.168.0.255之类的格式\n	public String getBroadCastIP() {\n		String ip = getLocalHostIp().substring(0,\n				getLocalHostIp().lastIndexOf(&quot;.&quot;) + 1)\n				+ &quot;255&quot;;\n		return ip;\n	}\n\n	// 获取本机IP\n	public String getLocalHostIp() {\n		String ipaddress = &quot;&quot;;\n		try {\n			Enumeration&lt;NetworkInterface&gt; en = NetworkInterface\n					.getNetworkInterfaces();\n			// 遍历所用的网络接口\n			while (en.hasMoreElements()) {\n				NetworkInterface nif = en.nextElement();// 得到每一个网络接口绑定的所有ip\n				Enumeration&lt;InetAddress&gt; inet = nif.getInetAddresses();\n				// 遍历每一个接口绑定的所有ip\n				while (inet.hasMoreElements()) {\n					InetAddress ip = inet.nextElement();\n					if (!ip.isLoopbackAddress()\n							&amp;&amp; InetAddressUtils.isIPv4Address(ip\n									.getHostAddress())) {\n						return ipaddress = ip.getHostAddress();\n					}\n				}\n\n			}\n		} catch (SocketException e) {\n			System.out.print(&quot;获取IP失败&quot;);\n			e.printStackTrace();\n		}\n		return ipaddress;\n\n	}\n\n	// 对象封装成消息\n	public byte[] toByteArray(Object obj) {\n		byte[] bytes = null;\n		ByteArrayOutputStream bos = new ByteArrayOutputStream();\n		try {\n			ObjectOutputStream oos = new ObjectOutputStream(bos);\n			oos.writeObject(obj);\n			oos.flush();\n			bytes = bos.toByteArray();\n			oos.close();\n			bos.close();\n		} catch (IOException ex) {\n			ex.printStackTrace();\n		}\n		return bytes;\n	}\n\n	// 消息解析成对象\n	public Object toObject(byte[] bytes) {\n		Object obj = null;\n		try {\n			ByteArrayInputStream bis = new ByteArrayInputStream(bytes);\n			ObjectInputStream ois = new ObjectInputStream(bis);\n			obj = ois.readObject();\n			ois.close();\n			bis.close();\n		} catch (IOException ex) {\n			ex.printStackTrace();\n		} catch (ClassNotFoundException ex) {\n			ex.printStackTrace();\n		}\n		return obj;\n	}\n\n	public static void out(String s) {\n		Log.v(&quot;test&quot;, s);\n	}\n\n	public void sleepT(long time) {\n		try {\n			Thread.sleep(time);\n		} catch (InterruptedException e) {\n			// TODO Auto-generated catch block\n			e.printStackTrace();\n		}\n	}\n}\n</pre><br>\r\n<br>\r\n<p></p>\r\n<p>如果想要全部源码的，可以 email 我 cq361106306@qq.com. 但是只能研究所用</p>\r\n<p>PS：由于博客中毒我把所有文章都删了才解封。。<br>\r\n</p>\r\n',1,'',0,0,'2015-02-02 00:38:01','2015-02-02 00:38:01','2015-02-02 00:38:01'),(6,1,3,'Android:  亲测解决模拟器启动慢的问题','fd570d8ed6052e739e5966bd3bed4a12',0,'\r\n\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\"','\r\n\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">1.首先在对应的sdk manager里面下载一个4.03以上的api。</span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">&nbsp; &nbsp;这里我选择的是4.2.2 (api17)</span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">2.选择里面的<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\">&quot; Intel Hardware Accelerated Execution Manager&quot; &quot;<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\">Intel\r\n x86 Atom System Image</span>&quot; 来下载。 当然其他必备的也要下载。&nbsp;</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">看我勾选的项：</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821201123041?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821200946328?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"></span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">3. 下载完后。&nbsp;</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">对应的目录找到这个文件，安装。一直默认即可。然后重启电脑。</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821201355266?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">4. 创建模拟器</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821201136035?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">剩下的就是享受了、试试看</span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; font-size:13px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38735845\">转自:http://blog.csdn.net/cq361106306/article/details/38735845</a></p>\r\n','\r\n\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">1.首先在对应的sdk manager里面下载一个4.03以上的api。</span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">&nbsp; &nbsp;这里我选择的是4.2.2 (api17)</span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">2.选择里面的<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\">&quot; Intel Hardware Accelerated Execution Manager&quot; &quot;<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\">Intel\r\n x86 Atom System Image</span>&quot; 来下载。 当然其他必备的也要下载。&nbsp;</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">看我勾选的项：</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821201123041?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821200946328?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"></span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">3. 下载完后。&nbsp;</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">对应的目录找到这个文件，安装。一直默认即可。然后重启电脑。</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821201355266?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\">4. 创建模拟器</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"http://img.blog.csdn.net/20140821201136035?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体; letter-spacing:0.5px; line-height:22.5px\"><span style=\"font-size:18px\"><img src=\"\" alt=\"\"><br>\r\n</span></span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<span style=\"font-size:18px\">剩下的就是享受了、试试看</span></p>\r\n<p style=\"padding-top:0px; padding-bottom:0px; margin-top:8px; margin-bottom:8px; line-height:22.5px; letter-spacing:0.5px; font-size:13px; color:rgb(51,51,51); font-family:微软雅黑,Verdana,sans-serif,宋体\">\r\n<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38735845\">转自:http://blog.csdn.net/cq361106306/article/details/38735845</a></p>\r\n',1,'x86,intel,android',0,0,'2015-02-02 00:40:39','2015-02-02 00:40:39','2015-02-02 00:40:39'),(7,1,3,'Android-通讯录:在群发短信选取联系人界面用到的自定义viewgroup','3ac90342290de5a5a446389b37afcd98',0,'\r\n\r\n<pre code_snippet_id=\"451083\" snippet_file_name=\"blog_20140815_1_3085050\"  name=\"code\" class=\"java\">class MyViewGroup extends ViewGroup {\n\n	private final static int VIEW_MARGIN = 2;\n	private int m','\r\n\r\n<pre code_snippet_id=\"451083\" snippet_file_name=\"blog_20140815_1_3085050\"  name=\"code\" class=\"java\">class MyViewGroup extends ViewGroup {\n\n	private final static int VIEW_MARGIN = 2;\n	private int maxWidth = 0;\n	private int maxHeight = 60;\n\n	public MyViewGroup(Context context) {\n		super(context);\n	}\n\n	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n\n		for (int index = 0; index &lt; getChildCount(); index++) {\n			final View child = getChildAt(index);\n			child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n		}\n		super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n	}\n\n	protected void onLayout(boolean arg0, int arg1, int arg2, int arg3, int arg4) {\n\n		final int count = getChildCount();\n		int row = 0;// which row lay you view relative to parent\n		int lengthX = arg1;    // right position of child relative to parent\n		int lengthY = arg2;    // bottom position of child relative to parent\n		for(int i = 0 ; i &lt; count ; i++){\n\n			final View child = this.getChildAt(i);\n			int width = child.getMeasuredWidth();\n			//            int height = child.getMeasuredHeight();\n			int height = maxHeight; //限制子节点的高度\n			lengthX += width + VIEW_MARGIN;\n\n			lengthY = row * (height + VIEW_MARGIN) + VIEW_MARGIN + height + arg2;\n			if(width + VIEW_MARGIN &gt; maxWidth){\n				maxWidth = width + VIEW_MARGIN;\n			}\n\n			if(lengthX &gt; arg3){\n				lengthX = width + VIEW_MARGIN + arg1;\n				row ++;\n				lengthY = row * (height + VIEW_MARGIN) + VIEW_MARGIN + height + arg2;\n\n			}\n			child.layout(lengthX - width, lengthY - height, lengthX, lengthY);\n		}\n	}\n\n}</pre>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n','\r\n\r\n<pre code_snippet_id=\"451083\" snippet_file_name=\"blog_20140815_1_3085050\"  name=\"code\" class=\"java\">class MyViewGroup extends ViewGroup {\n\n	private final static int VIEW_MARGIN = 2;\n	private int maxWidth = 0;\n	private int maxHeight = 60;\n\n	public MyViewGroup(Context context) {\n		super(context);\n	}\n\n	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n\n		for (int index = 0; index &lt; getChildCount(); index++) {\n			final View child = getChildAt(index);\n			child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n		}\n		super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n	}\n\n	protected void onLayout(boolean arg0, int arg1, int arg2, int arg3, int arg4) {\n\n		final int count = getChildCount();\n		int row = 0;// which row lay you view relative to parent\n		int lengthX = arg1;    // right position of child relative to parent\n		int lengthY = arg2;    // bottom position of child relative to parent\n		for(int i = 0 ; i &lt; count ; i++){\n\n			final View child = this.getChildAt(i);\n			int width = child.getMeasuredWidth();\n			//            int height = child.getMeasuredHeight();\n			int height = maxHeight; //限制子节点的高度\n			lengthX += width + VIEW_MARGIN;\n\n			lengthY = row * (height + VIEW_MARGIN) + VIEW_MARGIN + height + arg2;\n			if(width + VIEW_MARGIN &gt; maxWidth){\n				maxWidth = width + VIEW_MARGIN;\n			}\n\n			if(lengthX &gt; arg3){\n				lengthX = width + VIEW_MARGIN + arg1;\n				row ++;\n				lengthY = row * (height + VIEW_MARGIN) + VIEW_MARGIN + height + arg2;\n\n			}\n			child.layout(lengthX - width, lengthY - height, lengthX, lengthY);\n		}\n	}\n\n}</pre>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n',1,'通讯录,android',0,0,'2015-02-02 00:40:40','2015-02-02 00:40:40','2015-02-02 00:40:40'),(8,1,3,'Android-通讯录:获取短信会话列表(包括群发的)','4e6574296ebc12d0465fed805fd2f484',0,'\r\n\r\n<p>网上很多列子都没有考虑到群发的时候。找了很久才找到</p>\r\n<p>http://www.cnblogs.com/yangzhong/archive/2012/05/16/2504152.html<br>\r\n</p>\r\n<p><pre code_snippet_id=\"449275\" ','\r\n\r\n<p>网上很多列子都没有考虑到群发的时候。找了很久才找到</p>\r\n<p>http://www.cnblogs.com/yangzhong/archive/2012/05/16/2504152.html<br>\r\n</p>\r\n<p><pre code_snippet_id=\"449275\" snippet_file_name=\"blog_20140813_1_3794364\"  name=\"code\" class=\"java\">主要步骤：\n\n1、 获取短信会话列表\n\n2、根据获取到的会话列表中的recipient_ids 信息去canonical_addresses 中获取对应的地址信息。\n\n \n\npackage com.xx.readsms;\n\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport android.app.Activity;\nimport android.content.ContentResolver;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.TextView;\n\npublic class ReadSmsActivity extends Activity {\n    /** Called when the activity is first created. */\n    private Context mContext; \n    private TextView tv;\n    private static List&lt;ContactInfo&gt; list=new ArrayList&lt;ContactInfo&gt;();\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        tv=(TextView)this.findViewById(R.id.tv_test);\n        getSMSInfo();\n        tv.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO Auto-generated method stub\n                list.clear();\n                System.out.println(&quot;=================1&quot;);\n                getContacts_LastMessage();\n                System.out.println(&quot;=================2&quot;);\n                StringBuilder sb=new StringBuilder();\n                if(list!=null){\n                    System.out.println(&quot;=================3&quot;);\n                    for (int i = 0; i &lt; list.size(); i++) {\n                        System.out.println(&quot;=================4:&quot;+i);\n                        ContactInfo tmp=new ContactInfo();\n                        tmp=(ContactInfo)list.get(i);\n                        sb.append(&quot;[&quot;+tmp.getContact()+&quot;,&quot;);\n                        sb.append(tmp.getLast_mms()+&quot;,&quot;);\n                        sb.append(tmp.getDate_mms()+&quot;,&quot;);\n                        sb.append(getCanonicalAddresses(tmp.getRecipient())+&quot;,&quot;);//去canonical_addresses表获取接收者号码\n                        sb.append(tmp.getFinal_count()+&quot;]\\n&quot;);\n                    }\n                    tv.setText(&quot;&quot;);\n                    tv.setText(sb.toString());\n                }\n                else{\n                    System.out.println(&quot;list is null&quot;);\n                }\n            }\n        });\n    }\n\n    public String getCanonicalAddresses(String recipient_ids){\n        String[] ids=recipient_ids.split(&quot; &quot;);\n        System.out.println(&quot;recipient_ids:&quot;+recipient_ids);\n        String addressResult=&quot;&quot;;\n        for (int i = 0; i &lt; ids.length; i++) {\n            Cursor cur=ReadSmsActivity.this.getContentResolver().query(Uri.parse(&quot;content://mms/&quot;), \n                    new String[]{&quot; * from canonical_addresses where _id=&quot;+ids[i].toString()+&quot; --&quot;}, null,null,null);\n            if(cur.getCount()&gt;0){\n                while (cur.moveToNext()){\n                    String _id=cur.getString(cur.getColumnIndex(&quot;_id&quot;));\n                    String address=cur.getString(cur.getColumnIndex(&quot;address&quot;));\n                    addressResult+=&quot;{&quot;+_id+&quot;,&quot;+address+&quot;}&quot;;\n                }\n            }\n        }\n        return addressResult;\n    }\n\n    /**\n     * 从mms数据库中检索threads表 \n     */\n    public void getContacts_LastMessage()\n    {\n        ContentResolver cr = ReadSmsActivity.this.getContentResolver();\n        Cursor cursor = cr.query(Uri.parse(&quot;content://mms/&quot;), new String[]\n                { &quot;* from threads--&quot; }, null, null, null);\n        while (cursor.moveToNext())\n        {\n            int thread_id = cursor.getColumnIndex(&quot;_id&quot;);\n            int date = cursor.getColumnIndex(&quot;date&quot;);\n            int message_count = cursor.getColumnIndex(&quot;message_count&quot;);\n            int snippet = cursor.getColumnIndex(&quot;snippet&quot;);\n            int recipient=cursor.getColumnIndex(&quot;recipient_ids&quot;);\n\n            //格式化短信日期显示\n            SimpleDateFormat sfd = new SimpleDateFormat(&quot;MM-dd hh:mm:ss&quot;);\n            Date date_format = new Date(Long.parseLong(cursor.getString(date)));\n            String time = sfd.format(date_format);\n\n            //获得短信的各项内容\n            String info[]=getPhoneNum(cursor.getString(thread_id));\n            String last_mms=cursor.getString(snippet);\n            String date_mms=time;\n            String count_mms=cursor.getString(message_count);\n            String recipient_ids=cursor.getString(recipient);\n\n            //判断是否联系人\n            String contact = getContactNameFromPhoneNum(this.getApplicationContext(), info[0]);\n\n            //获得最后的未读短信与已读短信\n            String final_count=&quot;(&quot;+info[1]+&quot;/&quot;+count_mms+&quot;)&quot;;\n\n            //添加到list\n            if (contact.equals(&quot;&quot;))\n            {\n                getData(\n                        info[0], \n                        last_mms,\n                        final_count,\n                        date_mms,\n                        recipient_ids\n                        );\n            }\n            else \n            {\n                getData(\n                        contact, \n                        last_mms,\n                        final_count,\n                        date_mms,\n                        recipient_ids\n                        );\n            }\n        }\n\n    }\n\n    /**\n     * 获取联系人信息\n     * @param context\n     * @param contactInfo\n     * @return\n     */\n    public String getContactNameFromPhoneNum(Context context,String contactInfo){\n        Long curPersonID;\n        String contactNames = &quot;&quot;;\n        Uri uri = Uri.parse(&quot;content://com.android.contacts/phone_lookup/&quot; + contactInfo);\n        Cursor cursor = getContentResolver().query(uri, null, null, null, null);  \n        if(cursor.moveToFirst()){\n            String contactName = cursor.getString(cursor.getColumnIndex(&quot;display_name&quot;));  \n            curPersonID = cursor.getLong(cursor.getColumnIndex(&quot;_id&quot;));                            \n            cursor.close();\n            if(contactNames==&quot;&quot;)\n                contactNames = contactName;\n            else\n                contactNames = contactNames+&quot;,&quot;+contactName;\n        }     \n        return contactNames;\n    }\n    /**\n     * 添加到列表\n     * @param contact\n     * @param last_mms\n     * @param final_count\n     * @param date_mms\n     */\n    public void getData(String contact,String last_mms,String final_count,String date_mms,String recipient_ids){\n        ContactInfo c=new ContactInfo();\n        if(contact!=null)    c.setContact(contact);\n        if(date_mms!=null)    c.setDate_mms(date_mms);\n        if(final_count!=null)    c.setFinal_count(final_count);\n        if(last_mms!=null)    c.setLast_mms(last_mms);\n        if(recipient_ids!=null) c.setRecipient(recipient_ids);\n        //System.out.println(contact+&quot;     &quot;+date_mms);\n        list.add(c);\n    }\n\n    /**\n     * \n     * @param 根据thread_id 检索sms库， 获得对应的号码\n     * @return\n     */\n    public String[] getPhoneNum(String thread_id)\n    {\n        String PhoneNum=&quot;&quot;;\n        int noread_mms=0;\n        String[] info={&quot;&quot;,&quot;&quot;};\n        String[] projection = new String[]\n                { &quot;thread_id&quot;, &quot;address&quot;, &quot;person&quot;, &quot;body&quot;, &quot;date&quot;, &quot;type&quot;,&quot;read&quot; };\n\n        Uri uri = Uri.parse(&quot;content://sms/&quot;);\n        ContentResolver cr = getContentResolver();            \n\n        Cursor cursor = cr.query\n                (\n                        uri, \n                        projection, \n                        &quot;thread_id=?&quot;,\n                        new String[] { thread_id } ,\n                        null\n                        );\n\n        while (cursor.moveToNext())\n        {\n            int phoneNumber = cursor.getColumnIndex(&quot;address&quot;);\n            int isread =cursor.getColumnIndex(&quot;read&quot;);\n\n            if (cursor.getString(isread).equals(&quot;0&quot;))\n            {\n                noread_mms++;\n            }\n\n            PhoneNum=cursor.getString(phoneNumber);    \n        }\n        info[0]=PhoneNum;\n        info[1]=Integer.toString(noread_mms);\n\n        return info;                \n    }\n} </pre><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>网上很多列子都没有考虑到群发的时候。找了很久才找到</p>\r\n<p>http://www.cnblogs.com/yangzhong/archive/2012/05/16/2504152.html<br>\r\n</p>\r\n<p><pre code_snippet_id=\"449275\" snippet_file_name=\"blog_20140813_1_3794364\"  name=\"code\" class=\"java\">主要步骤：\n\n1、 获取短信会话列表\n\n2、根据获取到的会话列表中的recipient_ids 信息去canonical_addresses 中获取对应的地址信息。\n\n \n\npackage com.xx.readsms;\n\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport android.app.Activity;\nimport android.content.ContentResolver;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.TextView;\n\npublic class ReadSmsActivity extends Activity {\n    /** Called when the activity is first created. */\n    private Context mContext; \n    private TextView tv;\n    private static List&lt;ContactInfo&gt; list=new ArrayList&lt;ContactInfo&gt;();\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        tv=(TextView)this.findViewById(R.id.tv_test);\n        getSMSInfo();\n        tv.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO Auto-generated method stub\n                list.clear();\n                System.out.println(&quot;=================1&quot;);\n                getContacts_LastMessage();\n                System.out.println(&quot;=================2&quot;);\n                StringBuilder sb=new StringBuilder();\n                if(list!=null){\n                    System.out.println(&quot;=================3&quot;);\n                    for (int i = 0; i &lt; list.size(); i++) {\n                        System.out.println(&quot;=================4:&quot;+i);\n                        ContactInfo tmp=new ContactInfo();\n                        tmp=(ContactInfo)list.get(i);\n                        sb.append(&quot;[&quot;+tmp.getContact()+&quot;,&quot;);\n                        sb.append(tmp.getLast_mms()+&quot;,&quot;);\n                        sb.append(tmp.getDate_mms()+&quot;,&quot;);\n                        sb.append(getCanonicalAddresses(tmp.getRecipient())+&quot;,&quot;);//去canonical_addresses表获取接收者号码\n                        sb.append(tmp.getFinal_count()+&quot;]\\n&quot;);\n                    }\n                    tv.setText(&quot;&quot;);\n                    tv.setText(sb.toString());\n                }\n                else{\n                    System.out.println(&quot;list is null&quot;);\n                }\n            }\n        });\n    }\n\n    public String getCanonicalAddresses(String recipient_ids){\n        String[] ids=recipient_ids.split(&quot; &quot;);\n        System.out.println(&quot;recipient_ids:&quot;+recipient_ids);\n        String addressResult=&quot;&quot;;\n        for (int i = 0; i &lt; ids.length; i++) {\n            Cursor cur=ReadSmsActivity.this.getContentResolver().query(Uri.parse(&quot;content://mms/&quot;), \n                    new String[]{&quot; * from canonical_addresses where _id=&quot;+ids[i].toString()+&quot; --&quot;}, null,null,null);\n            if(cur.getCount()&gt;0){\n                while (cur.moveToNext()){\n                    String _id=cur.getString(cur.getColumnIndex(&quot;_id&quot;));\n                    String address=cur.getString(cur.getColumnIndex(&quot;address&quot;));\n                    addressResult+=&quot;{&quot;+_id+&quot;,&quot;+address+&quot;}&quot;;\n                }\n            }\n        }\n        return addressResult;\n    }\n\n    /**\n     * 从mms数据库中检索threads表 \n     */\n    public void getContacts_LastMessage()\n    {\n        ContentResolver cr = ReadSmsActivity.this.getContentResolver();\n        Cursor cursor = cr.query(Uri.parse(&quot;content://mms/&quot;), new String[]\n                { &quot;* from threads--&quot; }, null, null, null);\n        while (cursor.moveToNext())\n        {\n            int thread_id = cursor.getColumnIndex(&quot;_id&quot;);\n            int date = cursor.getColumnIndex(&quot;date&quot;);\n            int message_count = cursor.getColumnIndex(&quot;message_count&quot;);\n            int snippet = cursor.getColumnIndex(&quot;snippet&quot;);\n            int recipient=cursor.getColumnIndex(&quot;recipient_ids&quot;);\n\n            //格式化短信日期显示\n            SimpleDateFormat sfd = new SimpleDateFormat(&quot;MM-dd hh:mm:ss&quot;);\n            Date date_format = new Date(Long.parseLong(cursor.getString(date)));\n            String time = sfd.format(date_format);\n\n            //获得短信的各项内容\n            String info[]=getPhoneNum(cursor.getString(thread_id));\n            String last_mms=cursor.getString(snippet);\n            String date_mms=time;\n            String count_mms=cursor.getString(message_count);\n            String recipient_ids=cursor.getString(recipient);\n\n            //判断是否联系人\n            String contact = getContactNameFromPhoneNum(this.getApplicationContext(), info[0]);\n\n            //获得最后的未读短信与已读短信\n            String final_count=&quot;(&quot;+info[1]+&quot;/&quot;+count_mms+&quot;)&quot;;\n\n            //添加到list\n            if (contact.equals(&quot;&quot;))\n            {\n                getData(\n                        info[0], \n                        last_mms,\n                        final_count,\n                        date_mms,\n                        recipient_ids\n                        );\n            }\n            else \n            {\n                getData(\n                        contact, \n                        last_mms,\n                        final_count,\n                        date_mms,\n                        recipient_ids\n                        );\n            }\n        }\n\n    }\n\n    /**\n     * 获取联系人信息\n     * @param context\n     * @param contactInfo\n     * @return\n     */\n    public String getContactNameFromPhoneNum(Context context,String contactInfo){\n        Long curPersonID;\n        String contactNames = &quot;&quot;;\n        Uri uri = Uri.parse(&quot;content://com.android.contacts/phone_lookup/&quot; + contactInfo);\n        Cursor cursor = getContentResolver().query(uri, null, null, null, null);  \n        if(cursor.moveToFirst()){\n            String contactName = cursor.getString(cursor.getColumnIndex(&quot;display_name&quot;));  \n            curPersonID = cursor.getLong(cursor.getColumnIndex(&quot;_id&quot;));                            \n            cursor.close();\n            if(contactNames==&quot;&quot;)\n                contactNames = contactName;\n            else\n                contactNames = contactNames+&quot;,&quot;+contactName;\n        }     \n        return contactNames;\n    }\n    /**\n     * 添加到列表\n     * @param contact\n     * @param last_mms\n     * @param final_count\n     * @param date_mms\n     */\n    public void getData(String contact,String last_mms,String final_count,String date_mms,String recipient_ids){\n        ContactInfo c=new ContactInfo();\n        if(contact!=null)    c.setContact(contact);\n        if(date_mms!=null)    c.setDate_mms(date_mms);\n        if(final_count!=null)    c.setFinal_count(final_count);\n        if(last_mms!=null)    c.setLast_mms(last_mms);\n        if(recipient_ids!=null) c.setRecipient(recipient_ids);\n        //System.out.println(contact+&quot;     &quot;+date_mms);\n        list.add(c);\n    }\n\n    /**\n     * \n     * @param 根据thread_id 检索sms库， 获得对应的号码\n     * @return\n     */\n    public String[] getPhoneNum(String thread_id)\n    {\n        String PhoneNum=&quot;&quot;;\n        int noread_mms=0;\n        String[] info={&quot;&quot;,&quot;&quot;};\n        String[] projection = new String[]\n                { &quot;thread_id&quot;, &quot;address&quot;, &quot;person&quot;, &quot;body&quot;, &quot;date&quot;, &quot;type&quot;,&quot;read&quot; };\n\n        Uri uri = Uri.parse(&quot;content://sms/&quot;);\n        ContentResolver cr = getContentResolver();            \n\n        Cursor cursor = cr.query\n                (\n                        uri, \n                        projection, \n                        &quot;thread_id=?&quot;,\n                        new String[] { thread_id } ,\n                        null\n                        );\n\n        while (cursor.moveToNext())\n        {\n            int phoneNumber = cursor.getColumnIndex(&quot;address&quot;);\n            int isread =cursor.getColumnIndex(&quot;read&quot;);\n\n            if (cursor.getString(isread).equals(&quot;0&quot;))\n            {\n                noread_mms++;\n            }\n\n            PhoneNum=cursor.getString(phoneNumber);    \n        }\n        info[0]=PhoneNum;\n        info[1]=Integer.toString(noread_mms);\n\n        return info;                \n    }\n} </pre><br>\r\n<br>\r\n</p>\r\n',1,'通讯录,Android通信软件',0,0,'2015-02-02 00:40:46','2015-02-02 00:40:46','2015-02-02 00:40:46'),(9,1,3,'Android-通讯录:向分组Group添加联系人','4dd2213fd41fb3d27d29f88b2cde6024',0,'\r\n\r\n<pre code_snippet_id=\"446436\" snippet_file_name=\"blog_20140809_1_7502077\"  name=\"code\" class=\"java\">long groupId = Constant.createGroupId;\n		ContentValues values = new ContentValues();\n		for(int i','\r\n\r\n<pre code_snippet_id=\"446436\" snippet_file_name=\"blog_20140809_1_7502077\"  name=\"code\" class=\"java\">long groupId = Constant.createGroupId;\n		ContentValues values = new ContentValues();\n		for(int i=0,len=Constant.contactList.size();i&lt;len;i++)\n		{\n			values.clear();\n				values.put(Data.RAW_CONTACT_ID,\n						queryForRawContactId(getContentResolver(), Constant.contactList.get(i).getContactId()));\n				values.put(Data.MIMETYPE, GroupMembership.CONTENT_ITEM_TYPE);\n				values.put(GroupMembership.GROUP_ROW_ID, groupId);\n				getContentResolver().insert(Data.CONTENT_URI, values);\n			}\n		}\n\npublic static long queryForRawContactId(ContentResolver cr, long contactId) {\n		Cursor rawContactIdCursor = null;\n		long rawContactId = -1;\n		try {\n			rawContactIdCursor = cr.query(RawContacts.CONTENT_URI,\n					new String[] { RawContacts._ID }, RawContacts.CONTACT_ID\n							+ &quot;=&quot; + contactId, null, null);\n			if (rawContactIdCursor != null &amp;&amp; rawContactIdCursor.moveToFirst()) {\n				// Just return the first one.\n				rawContactId = rawContactIdCursor.getLong(0);\n			}\n		} finally {\n			if (rawContactIdCursor != null) {\n				rawContactIdCursor.close();\n			}\n		}\n		return rawContactId;\n	}</pre><br>\r\n','\r\n\r\n<pre code_snippet_id=\"446436\" snippet_file_name=\"blog_20140809_1_7502077\"  name=\"code\" class=\"java\">long groupId = Constant.createGroupId;\n		ContentValues values = new ContentValues();\n		for(int i=0,len=Constant.contactList.size();i&lt;len;i++)\n		{\n			values.clear();\n				values.put(Data.RAW_CONTACT_ID,\n						queryForRawContactId(getContentResolver(), Constant.contactList.get(i).getContactId()));\n				values.put(Data.MIMETYPE, GroupMembership.CONTENT_ITEM_TYPE);\n				values.put(GroupMembership.GROUP_ROW_ID, groupId);\n				getContentResolver().insert(Data.CONTENT_URI, values);\n			}\n		}\n\npublic static long queryForRawContactId(ContentResolver cr, long contactId) {\n		Cursor rawContactIdCursor = null;\n		long rawContactId = -1;\n		try {\n			rawContactIdCursor = cr.query(RawContacts.CONTENT_URI,\n					new String[] { RawContacts._ID }, RawContacts.CONTACT_ID\n							+ &quot;=&quot; + contactId, null, null);\n			if (rawContactIdCursor != null &amp;&amp; rawContactIdCursor.moveToFirst()) {\n				// Just return the first one.\n				rawContactId = rawContactIdCursor.getLong(0);\n			}\n		} finally {\n			if (rawContactIdCursor != null) {\n				rawContactIdCursor.close();\n			}\n		}\n		return rawContactId;\n	}</pre><br>\r\n',2,'通讯录,android',0,0,'2015-02-02 00:40:47','2015-02-02 00:40:47','2015-02-02 00:40:47'),(10,1,3,'Android-通讯录:添加联系人','b73b435610245d69173e8fa3e43e27e2',0,'\r\n\r\n<pre code_snippet_id=\"445654\" snippet_file_name=\"blog_20140808_1_4678347\"  name=\"code\" class=\"java\">//添加联系人，使用事务\n    public void testAddContact()  {\n    \n    	String name[]={&q','\r\n\r\n<pre code_snippet_id=\"445654\" snippet_file_name=\"blog_20140808_1_4678347\"  name=\"code\" class=\"java\">//添加联系人，使用事务\n    public void testAddContact()  {\n    \n    	String name[]={&quot;周杰伦&quot;,&quot;谢霆锋&quot;,&quot;言承旭&quot;,&quot;林俊杰&quot;,&quot;潘玮柏&quot;,&quot;明道&quot;,&quot; 甄子丹&quot;,&quot; 周渝民&quot;,\n    			&quot;罗志祥&quot;, &quot;五月天&quot;,&quot;刘德华&quot;,&quot; 麦浚龙&quot;,&quot; 成龙&quot;,&quot; 苏有朋&quot;,&quot; 郭品超&quot;,&quot; 阿杜&quot;\n    			,&quot;郑嘉颖&quot;,&quot; 吴尊&quot;,&quot; 炎亚纶&quot;,&quot; 王绍伟&quot;,&quot; 唐禹哲&quot;,&quot; 巫迪文&quot;,&quot; 汪东城&quot; };\n    	for(String ss:name)\n    	{\n    		//首先插入空值，再得到rawContactsId ，用于下面插值   \n            ContentValues values = new ContentValues ();   \n            //insert a null value  \n            Uri rawContactUri = getContentResolver().insert(RawContacts.CONTENT_URI,values);   \n            long rawContactsId = ContentUris.parseId(rawContactUri);   \n          \n            //往刚才的空记录中插入姓名   \n            values.clear();   \n            //A reference to the _ID that this data belongs to  \n            values.put(StructuredName.RAW_CONTACT_ID,rawContactsId);   \n            //&quot;CONTENT_ITEM_TYPE&quot; MIME type used when storing this in data table  \n            values.put(Data.MIMETYPE,StructuredName.CONTENT_ITEM_TYPE);   \n            //The name that should be used to display the contact.  \n            values.put(StructuredName.DISPLAY_NAME,ss);   \n            //insert the real values  \n            getContentResolver().insert(Data.CONTENT_URI,values);   \n            //插入电话   \n            values.clear();   \n            values.put(Phone.RAW_CONTACT_ID,rawContactsId);   \n            //String &quot;Data.MIMETYPE&quot;:The MIME type of the item represented by this row  \n            //String &quot;CONTENT_ITEM_TYPE&quot;: MIME type used when storing this in data table.  \n            values.put(Data.MIMETYPE,Phone.CONTENT_ITEM_TYPE);   \n            values.put(Phone.NUMBER,&quot;1008611&quot;);   \n            getContentResolver().insert(Data.CONTENT_URI,values);   \n    	}\n    	\n    }</pre><br>\r\n','\r\n\r\n<pre code_snippet_id=\"445654\" snippet_file_name=\"blog_20140808_1_4678347\"  name=\"code\" class=\"java\">//添加联系人，使用事务\n    public void testAddContact()  {\n    \n    	String name[]={&quot;周杰伦&quot;,&quot;谢霆锋&quot;,&quot;言承旭&quot;,&quot;林俊杰&quot;,&quot;潘玮柏&quot;,&quot;明道&quot;,&quot; 甄子丹&quot;,&quot; 周渝民&quot;,\n    			&quot;罗志祥&quot;, &quot;五月天&quot;,&quot;刘德华&quot;,&quot; 麦浚龙&quot;,&quot; 成龙&quot;,&quot; 苏有朋&quot;,&quot; 郭品超&quot;,&quot; 阿杜&quot;\n    			,&quot;郑嘉颖&quot;,&quot; 吴尊&quot;,&quot; 炎亚纶&quot;,&quot; 王绍伟&quot;,&quot; 唐禹哲&quot;,&quot; 巫迪文&quot;,&quot; 汪东城&quot; };\n    	for(String ss:name)\n    	{\n    		//首先插入空值，再得到rawContactsId ，用于下面插值   \n            ContentValues values = new ContentValues ();   \n            //insert a null value  \n            Uri rawContactUri = getContentResolver().insert(RawContacts.CONTENT_URI,values);   \n            long rawContactsId = ContentUris.parseId(rawContactUri);   \n          \n            //往刚才的空记录中插入姓名   \n            values.clear();   \n            //A reference to the _ID that this data belongs to  \n            values.put(StructuredName.RAW_CONTACT_ID,rawContactsId);   \n            //&quot;CONTENT_ITEM_TYPE&quot; MIME type used when storing this in data table  \n            values.put(Data.MIMETYPE,StructuredName.CONTENT_ITEM_TYPE);   \n            //The name that should be used to display the contact.  \n            values.put(StructuredName.DISPLAY_NAME,ss);   \n            //insert the real values  \n            getContentResolver().insert(Data.CONTENT_URI,values);   \n            //插入电话   \n            values.clear();   \n            values.put(Phone.RAW_CONTACT_ID,rawContactsId);   \n            //String &quot;Data.MIMETYPE&quot;:The MIME type of the item represented by this row  \n            //String &quot;CONTENT_ITEM_TYPE&quot;: MIME type used when storing this in data table.  \n            values.put(Data.MIMETYPE,Phone.CONTENT_ITEM_TYPE);   \n            values.put(Phone.NUMBER,&quot;1008611&quot;);   \n            getContentResolver().insert(Data.CONTENT_URI,values);   \n    	}\n    	\n    }</pre><br>\r\n',1,'通讯录',0,0,'2015-02-02 00:40:49','2015-02-02 00:40:49','2015-02-02 00:40:49'),(11,1,3,'Android Listview分组特效：滑动分组标题当前固定，并随内容滑动(andrroid原生电话本实现方法)','d68801f564e09953f1cbb03867f8b48b',0,'\r\n\r\n<p>源码http://www.cnblogs.com/xiaoQLu/archive/2011/12/20/2293732.html</p>\r\n<p>首先需要一个类，完全不用改动，直接加入</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"java\">/*\n * Copyrigh','\r\n\r\n<p>源码http://www.cnblogs.com/xiaoQLu/archive/2011/12/20/2293732.html</p>\r\n<p>首先需要一个类，完全不用改动，直接加入</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"java\">/*\n * Copyright (C) 2010 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.seven.view;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.util.AttributeSet;\nimport android.view.View;\nimport android.widget.ListAdapter;\nimport android.widget.ListView;\n\n/**\n * A ListView that maintains a header pinned at the top of the list. The\n * pinned header can be pushed up and dissolved as needed.\n */\npublic class PinnedHeaderListView extends ListView {\n\n    /**\n     * Adapter interface.  The list adapter must implement this interface.\n     */\n    public interface PinnedHeaderAdapter {\n\n        /**\n         * Pinned header state: don&#39;t show the header.\n         */\n        public static final int PINNED_HEADER_GONE = 0;\n\n        /**\n         * Pinned header state: show the header at the top of the list.\n         */\n        public static final int PINNED_HEADER_VISIBLE = 1;\n\n        /**\n         * Pinned header state: show the header. If the header extends beyond\n         * the bottom of the first shown element, push it up and clip.\n         */\n        public static final int PINNED_HEADER_PUSHED_UP = 2;\n\n        /**\n         * Computes the desired state of the pinned header for the given\n         * position of the first visible list item. Allowed return values are\n         * {@link #PINNED_HEADER_GONE}, {@link #PINNED_HEADER_VISIBLE} or\n         * {@link #PINNED_HEADER_PUSHED_UP}.\n         */\n        int getPinnedHeaderState(int position);\n\n        /**\n         * Configures the pinned header view to match the first visible list item.\n         *\n         * @param header pinned header view.\n         * @param position position of the first visible list item.\n         * @param alpha fading of the header view, between 0 and 255.\n         */\n        void configurePinnedHeader(View header, int position, int alpha);\n    }\n\n    private static final int MAX_ALPHA = 255;\n\n    private PinnedHeaderAdapter mAdapter;\n    private View mHeaderView;\n    private boolean mHeaderViewVisible;\n\n    private int mHeaderViewWidth;\n\n    private int mHeaderViewHeight;\n\n    public PinnedHeaderListView(Context context) {\n        super(context);\n    }\n\n    public PinnedHeaderListView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public PinnedHeaderListView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    public void setPinnedHeaderView(View view) {\n        mHeaderView = view;\n\n        // Disable vertical fading when the pinned header is present\n        // TODO change ListView to allow separate measures for top and bottom fading edge;\n        // in this particular case we would like to disable the top, but not the bottom edge.\n        if (mHeaderView != null) {\n            setFadingEdgeLength(0);\n        }\n        requestLayout();\n    }\n\n    @Override\n    public void setAdapter(ListAdapter adapter) {\n        super.setAdapter(adapter);\n        mAdapter = (PinnedHeaderAdapter)adapter;\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        if (mHeaderView != null) {\n            measureChild(mHeaderView, widthMeasureSpec, heightMeasureSpec);\n            mHeaderViewWidth = mHeaderView.getMeasuredWidth();\n            mHeaderViewHeight = mHeaderView.getMeasuredHeight();\n        }\n    }\n\n    @Override\n    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        super.onLayout(changed, left, top, right, bottom);\n        if (mHeaderView != null) {\n            mHeaderView.layout(0, 0, mHeaderViewWidth, mHeaderViewHeight);\n            configureHeaderView(getFirstVisiblePosition());\n        }\n    }\n\n    public void configureHeaderView(int position) {\n        if (mHeaderView == null) {\n            return;\n        }\n        int state = mAdapter.getPinnedHeaderState(position);\n        switch (state) {\n            case PinnedHeaderAdapter.PINNED_HEADER_GONE: {\n                mHeaderViewVisible = false;\n                break;\n            }\n\n            case PinnedHeaderAdapter.PINNED_HEADER_VISIBLE: {\n                mAdapter.configurePinnedHeader(mHeaderView, position, MAX_ALPHA);\n                if (mHeaderView.getTop() != 0) {\n                    mHeaderView.layout(0, 0, mHeaderViewWidth, mHeaderViewHeight);\n                }\n                mHeaderViewVisible = true;\n                break;\n            }\n\n            case PinnedHeaderAdapter.PINNED_HEADER_PUSHED_UP: {\n                View firstView = getChildAt(0);\n                int bottom = firstView.getBottom();\n//                int itemHeight = firstView.getHeight();\n                int headerHeight = mHeaderView.getHeight();\n                int y;\n                int alpha;\n                if (bottom &lt; headerHeight) {\n                    y = (bottom - headerHeight);\n                    alpha = MAX_ALPHA * (headerHeight + y) / headerHeight;\n                } else {\n                    y = 0;\n                    alpha = MAX_ALPHA;\n                }\n                mAdapter.configurePinnedHeader(mHeaderView, position, alpha);\n                if (mHeaderView.getTop() != y) {\n                    mHeaderView.layout(0, y, mHeaderViewWidth, mHeaderViewHeight + y);\n                }\n                mHeaderViewVisible = true;\n                break;\n            }\n        }\n    }\n\n    @Override\n    protected void dispatchDraw(Canvas canvas) {\n        super.dispatchDraw(canvas);\n        if (mHeaderViewVisible) {\n            drawChild(canvas, mHeaderView, getDrawingTime());\n        }\n    }\n}\n</pre><br>\r\n先把以前类自己放在任意能够调用的位置，是个开源的，具体比较复杂。他重写了Listview\r\n<p></p>\r\n<p>既然是分组，当然要用listview了。</p>\r\n<p>在你需要潜入的地方，贴入以下</p>\r\n<pre name=\"code\" class=\"java\"> &lt;com.seven.view.PinnedHeaderListView\n			            android:id=&quot;@+id/contact_listview&quot;\n			            android:layout_width=&quot;fill_parent&quot;\n			            android:layout_height=&quot;fill_parent&quot;\n       					 android:fadingEdge=&quot;none&quot;\n			             /&gt;</pre>其中com.seven.view是你放上面那个类的地方，也就是包\r\n<p></p>\r\n<p>然后就是item样式了，就是listview里面的内容样式，这都和原生的Listview是一样的用法</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"html\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;wrap_content&quot;\n     android:orientation=&quot;vertical&quot;\n     android:background=&quot;@drawable/mm_listitem&quot;\n&gt;\n		 &lt;LinearLayout  \n		        android:id=&quot;@+id/sort_key_layout&quot;  //这里是显示分组的样式\n		        android:layout_width=&quot;fill_parent&quot;  \n		        android:layout_height=&quot;18dip&quot;  \n		        android:background=&quot;#dcdcdc&quot; &gt;  \n		  \n		        &lt;TextView  \n		            android:id=&quot;@+id/sort_key&quot;  \n		            android:layout_width=&quot;wrap_content&quot;  \n		            android:layout_height=&quot;wrap_content&quot;  \n		            android:layout_gravity=&quot;center_horizontal&quot;  \n		            android:layout_marginLeft=&quot;10dip&quot;  \n		            android:textColor=&quot;#8b4513&quot;  \n		            android:textSize=&quot;13sp&quot; /&gt;  \n		    &lt;/LinearLayout&gt;  \n		     &lt;LinearLayout  \n	        android:id=&quot;@+id/name_layout&quot;            ///这下面是显示内容的样式\n	        android:layout_width=&quot;fill_parent&quot;  \n	        android:layout_height=&quot;50dip&quot; &gt;  \n\n	        &lt;ImageView  \n	            android:layout_width=&quot;wrap_content&quot;  \n	            android:layout_height=&quot;wrap_content&quot;  \n	            android:layout_gravity=&quot;center_vertical&quot;  \n	            android:layout_marginLeft=&quot;10dip&quot;  \n	            android:layout_marginRight=&quot;10dip&quot;  \n	            android:src=&quot;@drawable/icon_contact&quot; /&gt;  \n	  \n	        &lt;TextView  \n	            android:id=&quot;@+id/listview_title&quot;  \n	            android:layout_width=&quot;wrap_content&quot;  \n	            android:layout_height=&quot;wrap_content&quot;  \n	            android:layout_gravity=&quot;center_vertical&quot;  \n	            android:textColor=&quot;#000&quot;  \n	            android:text=&quot;Seven&quot;\n	            android:textSize=&quot;22sp&quot; /&gt;  \n	         &lt;TextView\n	            android:id=&quot;@+id/listview_phone&quot; \n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:paddingLeft=&quot;17dp&quot;\n                android:text=&quot;10086&quot;\n                android:layout_gravity=&quot;center&quot;\n                \n                android:textColor=&quot;#666&quot; /&gt;\n   			 &lt;/LinearLayout&gt;  \n\n&lt;/LinearLayout&gt;</pre><br>\r\n可能你会问，分组和内容是挨着的，他们同时出现，每个分组只有一条怎么办。当然不会这么简单啦。 我们还有自定义一个adapter\r\n<p></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"java\">package com.seven.tools;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport com.seven.bean.ContactBean;\nimport com.seven.quickphone.R;\nimport com.seven.view.PinnedHeaderListView.PinnedHeaderAdapter;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.AbsListView;\nimport android.widget.AbsListView.OnScrollListener;\nimport android.widget.BaseAdapter;\nimport android.widget.LinearLayout;\nimport android.widget.SectionIndexer;\nimport android.widget.TextView;\n\npublic class SortAdapter extends BaseAdapter implements SectionIndexer,PinnedHeaderAdapter,OnScrollListener{\n	private List&lt;XXX&gt; list = null; //这里是你listview里面要用到的内容的list 可以自定义\n	private Context mContext;\n	private ArrayList&lt;String&gt; sections=new ArrayList&lt;String&gt;(); //这里是分组的名字也是在外面自定义，然后传进来就是，这和普通的Listview是一样的\n	public SortAdapter(Context mContext, List&lt;ContactBean&gt; list) {\n		this.mContext = mContext;\n		this.list = list;\n		this.setSections(list);\n	}\n	public void setSections(List&lt;ContactBean&gt; list)\n	{\n		//for(ContactBean c:list)\n		//{\n		//	if(!sections.contains(c.getSortKey()))              这个函数是我自己把list和section的数据绑定了某种关系。当然你们大可不必</pre><pre name=\"code\" class=\"java\">		//		sections.add(c.getSortKey());               你们可以在外面填充好一个list内容，和一个分组内容就行，当然list里面需要有个\n		//}&lt;span style=&quot;white-space:pre&quot;&gt;							&lt;/span&gt;   字段，来区分你是哪个分组\n	}\n	\n\n	public int getCount() {   //都是默认的\n		return this.list.size();\n	}\n\n	public Object getItem(int position) {&lt;pre name=&quot;code&quot; class=&quot;java&quot;&gt;//都是默认的</pre><pre name=\"code\" class=\"java\">&lt;pre name=&quot;code&quot; class=&quot;java&quot;&gt;public int getCount() {\n		return this.list.size();\n	}\n\n	public Object getItem(int position) {\n		return list.get(position);\n	}\n\n	public long getItemId(int position) {\n		return position;\n	}\n\n	public View getView(final int position, View view, ViewGroup arg2) {\n		ViewHolder viewHolder = null;\n		final ContactBean mContent = list.get(position);\n		if (view == null) {\n			viewHolder = new ViewHolder();\n			view = LayoutInflater.from(mContext).inflate(R.layout.main_contact_listitem, null);\n			viewHolder.tvTitle = (TextView) view.findViewById(R.id.listview_title);\n			viewHolder.tvKey=(TextView) view.findViewById(R.id.sort_key);\n			viewHolder.tvPhone=(TextView) view.findViewById(R.id.listview_phone);\n			viewHolder.sortKeyLayout = (LinearLayout) view.findViewById(R.id.sort_key_layout);\n			view.setTag(viewHolder);\n		} else {\n			viewHolder = (ViewHolder) view.getTag();\n		}\n		//根据position获取分类的首字母的Char ascii值\n		int section = getSectionForPosition(position);\n		viewHolder.tvTitle.setText(mContent.getDisplayName());\n		String t=&quot;&quot;;int len=mContent.getPhoneNum().size();\n		for(int i=0;i&lt;len-1;i++)\n			t+=mContent.getPhoneNum().get(i)+&quot;\\n&quot;;\n		t+=mContent.getPhoneNum().get(len-1);\n		viewHolder.tvPhone.setText(t);\n		if (position == getPositionForSection(section)) {  \n			viewHolder.tvKey.setText(mContent.getSortKey());  \n			viewHolder.sortKeyLayout.setVisibility(View.VISIBLE);  \n        } else {  \n        \n        	viewHolder.sortKeyLayout.setVisibility(View.GONE);  \n        }  \n		\n		return view;\n\n	}\n	\n\n\n	final static class ViewHolder {\n		TextView tvKey;\n		TextView tvTitle;\n		TextView tvPhone;\n		LinearLayout sortKeyLayout;\n	}\n\n	public int getNextSection(int section)\n	{\n		for(int i=0,len=sections.size();i&lt;len;i++)\n		{\n			if(sections.get(i).charAt(0)==section &amp;&amp;i+1&lt;len)\n				return  sections.get(i+1).charAt(0);\n		}\n		return -1;\n	}\n	/**\n	 * 根据ListView的当前位置获取分类的首字母的Char ascii值\n	 */\n	public int getSectionForPosition(int position) {\n		if(list.size()==0)\n			return -1;\n		return list.get(position).getSortKey().charAt(0);\n	}\n\n	/**\n	 * 根据分类的首字母的Char ascii值获取其第一次出现该首字母的位置\n	 */\n	public int getPositionForSection(int section) {\n		for (int i = 0; i &lt; getCount(); i++) {\n			String sortStr = list.get(i).getSortKey();\n			char firstChar = sortStr.toUpperCase().charAt(0);\n			if (firstChar == section) {\n				return i;\n			}\n		}\n		\n		return -1;\n	}\n	\n	/**\n	 * 提取英文的首字母，非英文字母用#代替。\n	 * \n	 * @param str\n	 * @return\n	 */\n	private String getAlpha(String str) {\n		String  sortStr = str.trim().substring(0, 1).toUpperCase();\n		// 正则表达式，判断首字母是否是英文字母\n		if (sortStr.matches(&quot;[A-Z]&quot;)) {\n			return sortStr;\n		} else {\n			return &quot;#&quot;;\n		}\n	}\n\n	@Override\n	public Object[] getSections() {\n		return null;\n	}\n\n	@Override\n	public void onScroll(AbsListView view, int firstVisibleItem, int arg2, int arg3) {\n		if (view instanceof com.seven.view.PinnedHeaderListView) {\n			((com.seven.view.PinnedHeaderListView) view).configureHeaderView(firstVisibleItem);\n		}\n		\n	}\n\n	@Override\n	public void onScrollStateChanged(AbsListView arg0, int arg1) {\n		// TODO Auto-generated method stub\n		\n	}\n\n	@Override\n	public int getPinnedHeaderState(int position) {\n			int realPosition = position;\n			if (realPosition &lt; 0) \n			{\n				return PINNED_HEADER_GONE;\n			}\n			int section = getSectionForPosition(realPosition);// 得到此item所在的分组位置\n			int nextSectionPosition = getPositionForSection(getNextSection(section));// 得到下一个分组的位置\n			//当前position正好是当前分组的最后一个position，也就是下一个分组的第一个position的前面一个\n			if (nextSectionPosition != -1\n			&amp;&amp; realPosition == nextSectionPosition - 1) {\n			return PINNED_HEADER_PUSHED_UP;\n			}\n			return PINNED_HEADER_VISIBLE;\n	}\n\n	@Override\n	public void configurePinnedHeader(View header, int position, int alpha) {\n		int realPosition = position;\n		int section = getSectionForPosition(realPosition);\n\n		String title = &quot;&quot;+(char)section;\n		((TextView) header.findViewById(R.id.sort_keyTitle)).setText(title);\n		\n	}</pre><br>\r\n<br>\r\n<pre></pre>\r\n<pre></pre>\r\n以上工具类都准备了，下面只需要很简单的一步<pre name=\"code\" class=\"java\">adapter = new SortAdapter(this, list);\n		sortListView.setAdapter(adapter);\n		sortListView.setOnScrollListener(adapter);\n		sortListView.setPinnedHeaderView(getLayoutInflater().inflate(R.layout.main_contact_title, sortListView, false));\n		</pre><br>\r\n在activity里面写一下就是啦。 以上内容对于初学可能难以理解，我也是初学，看了一天，换了好几个人的方法，才找到这个方法的。\r\n<p></p>\r\n<p>如果实在看不懂，先自己看看自定义adapter的实现。</p>\r\n<p>上个效果图吧。O.O</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140806220441546?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">宣传下本人的小制作：</span><img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"border:none; max-width:100%; font-size:18px\"><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\">&nbsp;&nbsp;\r\n 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\"><span style=\"color:rgb(255,0,0)\">豌豆荚市场</span>: 搜索 &nbsp;&quot;<span style=\"color:rgb(255,0,0)\">联机斗地主</span>&quot; &quot;<span style=\"color:rgb(255,0,0)\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" style=\"color:rgb(106,57,6); text-decoration:none\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<br>\r\n','\r\n\r\n<p>源码http://www.cnblogs.com/xiaoQLu/archive/2011/12/20/2293732.html</p>\r\n<p>首先需要一个类，完全不用改动，直接加入</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"java\">/*\n * Copyright (C) 2010 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.seven.view;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.util.AttributeSet;\nimport android.view.View;\nimport android.widget.ListAdapter;\nimport android.widget.ListView;\n\n/**\n * A ListView that maintains a header pinned at the top of the list. The\n * pinned header can be pushed up and dissolved as needed.\n */\npublic class PinnedHeaderListView extends ListView {\n\n    /**\n     * Adapter interface.  The list adapter must implement this interface.\n     */\n    public interface PinnedHeaderAdapter {\n\n        /**\n         * Pinned header state: don&#39;t show the header.\n         */\n        public static final int PINNED_HEADER_GONE = 0;\n\n        /**\n         * Pinned header state: show the header at the top of the list.\n         */\n        public static final int PINNED_HEADER_VISIBLE = 1;\n\n        /**\n         * Pinned header state: show the header. If the header extends beyond\n         * the bottom of the first shown element, push it up and clip.\n         */\n        public static final int PINNED_HEADER_PUSHED_UP = 2;\n\n        /**\n         * Computes the desired state of the pinned header for the given\n         * position of the first visible list item. Allowed return values are\n         * {@link #PINNED_HEADER_GONE}, {@link #PINNED_HEADER_VISIBLE} or\n         * {@link #PINNED_HEADER_PUSHED_UP}.\n         */\n        int getPinnedHeaderState(int position);\n\n        /**\n         * Configures the pinned header view to match the first visible list item.\n         *\n         * @param header pinned header view.\n         * @param position position of the first visible list item.\n         * @param alpha fading of the header view, between 0 and 255.\n         */\n        void configurePinnedHeader(View header, int position, int alpha);\n    }\n\n    private static final int MAX_ALPHA = 255;\n\n    private PinnedHeaderAdapter mAdapter;\n    private View mHeaderView;\n    private boolean mHeaderViewVisible;\n\n    private int mHeaderViewWidth;\n\n    private int mHeaderViewHeight;\n\n    public PinnedHeaderListView(Context context) {\n        super(context);\n    }\n\n    public PinnedHeaderListView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public PinnedHeaderListView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    public void setPinnedHeaderView(View view) {\n        mHeaderView = view;\n\n        // Disable vertical fading when the pinned header is present\n        // TODO change ListView to allow separate measures for top and bottom fading edge;\n        // in this particular case we would like to disable the top, but not the bottom edge.\n        if (mHeaderView != null) {\n            setFadingEdgeLength(0);\n        }\n        requestLayout();\n    }\n\n    @Override\n    public void setAdapter(ListAdapter adapter) {\n        super.setAdapter(adapter);\n        mAdapter = (PinnedHeaderAdapter)adapter;\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        if (mHeaderView != null) {\n            measureChild(mHeaderView, widthMeasureSpec, heightMeasureSpec);\n            mHeaderViewWidth = mHeaderView.getMeasuredWidth();\n            mHeaderViewHeight = mHeaderView.getMeasuredHeight();\n        }\n    }\n\n    @Override\n    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        super.onLayout(changed, left, top, right, bottom);\n        if (mHeaderView != null) {\n            mHeaderView.layout(0, 0, mHeaderViewWidth, mHeaderViewHeight);\n            configureHeaderView(getFirstVisiblePosition());\n        }\n    }\n\n    public void configureHeaderView(int position) {\n        if (mHeaderView == null) {\n            return;\n        }\n        int state = mAdapter.getPinnedHeaderState(position);\n        switch (state) {\n            case PinnedHeaderAdapter.PINNED_HEADER_GONE: {\n                mHeaderViewVisible = false;\n                break;\n            }\n\n            case PinnedHeaderAdapter.PINNED_HEADER_VISIBLE: {\n                mAdapter.configurePinnedHeader(mHeaderView, position, MAX_ALPHA);\n                if (mHeaderView.getTop() != 0) {\n                    mHeaderView.layout(0, 0, mHeaderViewWidth, mHeaderViewHeight);\n                }\n                mHeaderViewVisible = true;\n                break;\n            }\n\n            case PinnedHeaderAdapter.PINNED_HEADER_PUSHED_UP: {\n                View firstView = getChildAt(0);\n                int bottom = firstView.getBottom();\n//                int itemHeight = firstView.getHeight();\n                int headerHeight = mHeaderView.getHeight();\n                int y;\n                int alpha;\n                if (bottom &lt; headerHeight) {\n                    y = (bottom - headerHeight);\n                    alpha = MAX_ALPHA * (headerHeight + y) / headerHeight;\n                } else {\n                    y = 0;\n                    alpha = MAX_ALPHA;\n                }\n                mAdapter.configurePinnedHeader(mHeaderView, position, alpha);\n                if (mHeaderView.getTop() != y) {\n                    mHeaderView.layout(0, y, mHeaderViewWidth, mHeaderViewHeight + y);\n                }\n                mHeaderViewVisible = true;\n                break;\n            }\n        }\n    }\n\n    @Override\n    protected void dispatchDraw(Canvas canvas) {\n        super.dispatchDraw(canvas);\n        if (mHeaderViewVisible) {\n            drawChild(canvas, mHeaderView, getDrawingTime());\n        }\n    }\n}\n</pre><br>\r\n先把以前类自己放在任意能够调用的位置，是个开源的，具体比较复杂。他重写了Listview\r\n<p></p>\r\n<p>既然是分组，当然要用listview了。</p>\r\n<p>在你需要潜入的地方，贴入以下</p>\r\n<pre name=\"code\" class=\"java\"> &lt;com.seven.view.PinnedHeaderListView\n			            android:id=&quot;@+id/contact_listview&quot;\n			            android:layout_width=&quot;fill_parent&quot;\n			            android:layout_height=&quot;fill_parent&quot;\n       					 android:fadingEdge=&quot;none&quot;\n			             /&gt;</pre>其中com.seven.view是你放上面那个类的地方，也就是包\r\n<p></p>\r\n<p>然后就是item样式了，就是listview里面的内容样式，这都和原生的Listview是一样的用法</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"html\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;wrap_content&quot;\n     android:orientation=&quot;vertical&quot;\n     android:background=&quot;@drawable/mm_listitem&quot;\n&gt;\n		 &lt;LinearLayout  \n		        android:id=&quot;@+id/sort_key_layout&quot;  //这里是显示分组的样式\n		        android:layout_width=&quot;fill_parent&quot;  \n		        android:layout_height=&quot;18dip&quot;  \n		        android:background=&quot;#dcdcdc&quot; &gt;  \n		  \n		        &lt;TextView  \n		            android:id=&quot;@+id/sort_key&quot;  \n		            android:layout_width=&quot;wrap_content&quot;  \n		            android:layout_height=&quot;wrap_content&quot;  \n		            android:layout_gravity=&quot;center_horizontal&quot;  \n		            android:layout_marginLeft=&quot;10dip&quot;  \n		            android:textColor=&quot;#8b4513&quot;  \n		            android:textSize=&quot;13sp&quot; /&gt;  \n		    &lt;/LinearLayout&gt;  \n		     &lt;LinearLayout  \n	        android:id=&quot;@+id/name_layout&quot;            ///这下面是显示内容的样式\n	        android:layout_width=&quot;fill_parent&quot;  \n	        android:layout_height=&quot;50dip&quot; &gt;  \n\n	        &lt;ImageView  \n	            android:layout_width=&quot;wrap_content&quot;  \n	            android:layout_height=&quot;wrap_content&quot;  \n	            android:layout_gravity=&quot;center_vertical&quot;  \n	            android:layout_marginLeft=&quot;10dip&quot;  \n	            android:layout_marginRight=&quot;10dip&quot;  \n	            android:src=&quot;@drawable/icon_contact&quot; /&gt;  \n	  \n	        &lt;TextView  \n	            android:id=&quot;@+id/listview_title&quot;  \n	            android:layout_width=&quot;wrap_content&quot;  \n	            android:layout_height=&quot;wrap_content&quot;  \n	            android:layout_gravity=&quot;center_vertical&quot;  \n	            android:textColor=&quot;#000&quot;  \n	            android:text=&quot;Seven&quot;\n	            android:textSize=&quot;22sp&quot; /&gt;  \n	         &lt;TextView\n	            android:id=&quot;@+id/listview_phone&quot; \n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:paddingLeft=&quot;17dp&quot;\n                android:text=&quot;10086&quot;\n                android:layout_gravity=&quot;center&quot;\n                \n                android:textColor=&quot;#666&quot; /&gt;\n   			 &lt;/LinearLayout&gt;  \n\n&lt;/LinearLayout&gt;</pre><br>\r\n可能你会问，分组和内容是挨着的，他们同时出现，每个分组只有一条怎么办。当然不会这么简单啦。 我们还有自定义一个adapter\r\n<p></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"java\">package com.seven.tools;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport com.seven.bean.ContactBean;\nimport com.seven.quickphone.R;\nimport com.seven.view.PinnedHeaderListView.PinnedHeaderAdapter;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.AbsListView;\nimport android.widget.AbsListView.OnScrollListener;\nimport android.widget.BaseAdapter;\nimport android.widget.LinearLayout;\nimport android.widget.SectionIndexer;\nimport android.widget.TextView;\n\npublic class SortAdapter extends BaseAdapter implements SectionIndexer,PinnedHeaderAdapter,OnScrollListener{\n	private List&lt;XXX&gt; list = null; //这里是你listview里面要用到的内容的list 可以自定义\n	private Context mContext;\n	private ArrayList&lt;String&gt; sections=new ArrayList&lt;String&gt;(); //这里是分组的名字也是在外面自定义，然后传进来就是，这和普通的Listview是一样的\n	public SortAdapter(Context mContext, List&lt;ContactBean&gt; list) {\n		this.mContext = mContext;\n		this.list = list;\n		this.setSections(list);\n	}\n	public void setSections(List&lt;ContactBean&gt; list)\n	{\n		//for(ContactBean c:list)\n		//{\n		//	if(!sections.contains(c.getSortKey()))              这个函数是我自己把list和section的数据绑定了某种关系。当然你们大可不必</pre><pre name=\"code\" class=\"java\">		//		sections.add(c.getSortKey());               你们可以在外面填充好一个list内容，和一个分组内容就行，当然list里面需要有个\n		//}&lt;span style=&quot;white-space:pre&quot;&gt;							&lt;/span&gt;   字段，来区分你是哪个分组\n	}\n	\n\n	public int getCount() {   //都是默认的\n		return this.list.size();\n	}\n\n	public Object getItem(int position) {&lt;pre name=&quot;code&quot; class=&quot;java&quot;&gt;//都是默认的</pre><pre name=\"code\" class=\"java\">&lt;pre name=&quot;code&quot; class=&quot;java&quot;&gt;public int getCount() {\n		return this.list.size();\n	}\n\n	public Object getItem(int position) {\n		return list.get(position);\n	}\n\n	public long getItemId(int position) {\n		return position;\n	}\n\n	public View getView(final int position, View view, ViewGroup arg2) {\n		ViewHolder viewHolder = null;\n		final ContactBean mContent = list.get(position);\n		if (view == null) {\n			viewHolder = new ViewHolder();\n			view = LayoutInflater.from(mContext).inflate(R.layout.main_contact_listitem, null);\n			viewHolder.tvTitle = (TextView) view.findViewById(R.id.listview_title);\n			viewHolder.tvKey=(TextView) view.findViewById(R.id.sort_key);\n			viewHolder.tvPhone=(TextView) view.findViewById(R.id.listview_phone);\n			viewHolder.sortKeyLayout = (LinearLayout) view.findViewById(R.id.sort_key_layout);\n			view.setTag(viewHolder);\n		} else {\n			viewHolder = (ViewHolder) view.getTag();\n		}\n		//根据position获取分类的首字母的Char ascii值\n		int section = getSectionForPosition(position);\n		viewHolder.tvTitle.setText(mContent.getDisplayName());\n		String t=&quot;&quot;;int len=mContent.getPhoneNum().size();\n		for(int i=0;i&lt;len-1;i++)\n			t+=mContent.getPhoneNum().get(i)+&quot;\\n&quot;;\n		t+=mContent.getPhoneNum().get(len-1);\n		viewHolder.tvPhone.setText(t);\n		if (position == getPositionForSection(section)) {  \n			viewHolder.tvKey.setText(mContent.getSortKey());  \n			viewHolder.sortKeyLayout.setVisibility(View.VISIBLE);  \n        } else {  \n        \n        	viewHolder.sortKeyLayout.setVisibility(View.GONE);  \n        }  \n		\n		return view;\n\n	}\n	\n\n\n	final static class ViewHolder {\n		TextView tvKey;\n		TextView tvTitle;\n		TextView tvPhone;\n		LinearLayout sortKeyLayout;\n	}\n\n	public int getNextSection(int section)\n	{\n		for(int i=0,len=sections.size();i&lt;len;i++)\n		{\n			if(sections.get(i).charAt(0)==section &amp;&amp;i+1&lt;len)\n				return  sections.get(i+1).charAt(0);\n		}\n		return -1;\n	}\n	/**\n	 * 根据ListView的当前位置获取分类的首字母的Char ascii值\n	 */\n	public int getSectionForPosition(int position) {\n		if(list.size()==0)\n			return -1;\n		return list.get(position).getSortKey().charAt(0);\n	}\n\n	/**\n	 * 根据分类的首字母的Char ascii值获取其第一次出现该首字母的位置\n	 */\n	public int getPositionForSection(int section) {\n		for (int i = 0; i &lt; getCount(); i++) {\n			String sortStr = list.get(i).getSortKey();\n			char firstChar = sortStr.toUpperCase().charAt(0);\n			if (firstChar == section) {\n				return i;\n			}\n		}\n		\n		return -1;\n	}\n	\n	/**\n	 * 提取英文的首字母，非英文字母用#代替。\n	 * \n	 * @param str\n	 * @return\n	 */\n	private String getAlpha(String str) {\n		String  sortStr = str.trim().substring(0, 1).toUpperCase();\n		// 正则表达式，判断首字母是否是英文字母\n		if (sortStr.matches(&quot;[A-Z]&quot;)) {\n			return sortStr;\n		} else {\n			return &quot;#&quot;;\n		}\n	}\n\n	@Override\n	public Object[] getSections() {\n		return null;\n	}\n\n	@Override\n	public void onScroll(AbsListView view, int firstVisibleItem, int arg2, int arg3) {\n		if (view instanceof com.seven.view.PinnedHeaderListView) {\n			((com.seven.view.PinnedHeaderListView) view).configureHeaderView(firstVisibleItem);\n		}\n		\n	}\n\n	@Override\n	public void onScrollStateChanged(AbsListView arg0, int arg1) {\n		// TODO Auto-generated method stub\n		\n	}\n\n	@Override\n	public int getPinnedHeaderState(int position) {\n			int realPosition = position;\n			if (realPosition &lt; 0) \n			{\n				return PINNED_HEADER_GONE;\n			}\n			int section = getSectionForPosition(realPosition);// 得到此item所在的分组位置\n			int nextSectionPosition = getPositionForSection(getNextSection(section));// 得到下一个分组的位置\n			//当前position正好是当前分组的最后一个position，也就是下一个分组的第一个position的前面一个\n			if (nextSectionPosition != -1\n			&amp;&amp; realPosition == nextSectionPosition - 1) {\n			return PINNED_HEADER_PUSHED_UP;\n			}\n			return PINNED_HEADER_VISIBLE;\n	}\n\n	@Override\n	public void configurePinnedHeader(View header, int position, int alpha) {\n		int realPosition = position;\n		int section = getSectionForPosition(realPosition);\n\n		String title = &quot;&quot;+(char)section;\n		((TextView) header.findViewById(R.id.sort_keyTitle)).setText(title);\n		\n	}</pre><br>\r\n<br>\r\n<pre></pre>\r\n<pre></pre>\r\n以上工具类都准备了，下面只需要很简单的一步<pre name=\"code\" class=\"java\">adapter = new SortAdapter(this, list);\n		sortListView.setAdapter(adapter);\n		sortListView.setOnScrollListener(adapter);\n		sortListView.setPinnedHeaderView(getLayoutInflater().inflate(R.layout.main_contact_title, sortListView, false));\n		</pre><br>\r\n在activity里面写一下就是啦。 以上内容对于初学可能难以理解，我也是初学，看了一天，换了好几个人的方法，才找到这个方法的。\r\n<p></p>\r\n<p>如果实在看不懂，先自己看看自定义adapter的实现。</p>\r\n<p>上个效果图吧。O.O</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140806220441546?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">宣传下本人的小制作：</span><img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"border:none; max-width:100%; font-size:18px\"><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\">&nbsp;&nbsp;\r\n 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\"><span style=\"color:rgb(255,0,0)\">豌豆荚市场</span>: 搜索 &nbsp;&quot;<span style=\"color:rgb(255,0,0)\">联机斗地主</span>&quot; &quot;<span style=\"color:rgb(255,0,0)\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" style=\"color:rgb(106,57,6); text-decoration:none\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<br>\r\n',1,'android,listview',0,0,'2015-02-02 00:40:49','2015-02-02 00:40:49','2015-02-02 00:40:49'),(12,1,3,'Android: listview 分组上滑标题碰撞效果，固定标题效果，仿QQ微信','85104ce222bf979f2d8be054e66bf5aa',0,'\r\n\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n原文:http://blog.csdn.net/jdsjlzx/article/details/20697257','\r\n\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n原文:http://blog.csdn.net/jdsjlzx/article/details/20697257</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n在很多应用中，看到这样的listview：listview滑动过程中分组标题固定在上方，当第二个组滑上来时，第一个组才跟着上滑，下一个组固定，直到该组也滑出上边缘。世上无难事只怕有心人，在github上就有人做出来了，而且效果很好（后来发现安卓自带应用中联系人应用就是这样的，估计github的作者也是仿照着联系人做出来的吧）。</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n先看截图：</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<img src=\"http://www.jcodecraeer.com/uploads/20140307/13941224949560.png\" title=\"screen1.png\" alt=\"\" style=\"border:0px; max-width:100%; margin:0px; padding:0px; height:auto; float:none\">&nbsp;&nbsp;<img src=\"http://www.jcodecraeer.com/uploads/20140307/13941224944294.png\" title=\"screen2.png\" alt=\"\" style=\"border:0px; max-width:100%; margin:0px; padding:0px; height:auto; float:none\">&nbsp;&nbsp;<img src=\"http://www.jcodecraeer.com/uploads/20140307/13941224952328.png\" title=\"screen3.png\" alt=\"\" style=\"border:0px; max-width:100%; margin:0px; padding:0px; height:auto; float:none\"></p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\nPinnedSectionListView继承自listview，众所周知listview的每个子view都是按顺序跟着滚动的，要实现联系人listview的效果还真的找不到思路。看了PinnedSectionListView之后，感觉要改造一个现有的控件，一般都是通过重绘子view来实现的。ViewGroup（ListView继承自它）重绘子view的方法是dispatchDraw。</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n看看PinnedSectionListView在dispatchDraw中有那些特别的处理：</p>\r\n<div style=\"font-family:Arial; font-size:14px; border:0px; margin:0px; padding:0px; line-height:28px\">\r\n<div id=\"highlighter_63156\" class=\"syntaxhighlighter  js\" style=\"border:0px; padding:0px; width:785px; margin:1em 0px!important; position:relative!important; overflow:auto!important; font-size:1em!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:804px; border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n<div class=\"line number6 index5 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n6</div>\r\n<div class=\"line number7 index6 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n7</div>\r\n<div class=\"line number8 index7 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n8</div>\r\n<div class=\"line number9 index8 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n9</div>\r\n<div class=\"line number10 index9 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n10</div>\r\n<div class=\"line number11 index10 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n11</div>\r\n<div class=\"line number12 index11 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n12</div>\r\n<div class=\"line number13 index12 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n13</div>\r\n<div class=\"line number14 index13 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n14</div>\r\n<div class=\"line number15 index14 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n15</div>\r\n<div class=\"line number16 index15 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n16</div>\r\n<div class=\"line number17 index16 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n17</div>\r\n<div class=\"line number18 index17 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n18</div>\r\n<div class=\"line number19 index18 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n19</div>\r\n<div class=\"line number20 index19 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n20</div>\r\n<div class=\"line number21 index20 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n21</div>\r\n<div class=\"line number22 index21 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n22</div>\r\n<div class=\"line number23 index22 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n23</div>\r\n<div class=\"line number24 index23 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n24</div>\r\n<div class=\"line number25 index24 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n25</div>\r\n</td>\r\n<td class=\"code\" style=\"width:764px; border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important\">\r\n<div class=\"container\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">@Override</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">protected\r\n void dispatchDraw(Canvas canvas) {</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">super</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">.dispatchDraw(canvas);</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">if</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">(mPinnedSection\r\n != </code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">null</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">)\r\n {</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n prepare variables</code></div>\r\n<div class=\"line number6 index5 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">int\r\n pLeft = getListPaddingLeft();</code></div>\r\n<div class=\"line number7 index6 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">int\r\n pTop = getListPaddingTop();</code></div>\r\n<div class=\"line number8 index7 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">View\r\n view = mPinnedSection.view;</code></div>\r\n<div class=\"line number9 index8 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n draw child</code></div>\r\n<div class=\"line number10 index9 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.save();</code></div>\r\n<div class=\"line number11 index10 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">int\r\n clipHeight = view.getHeight() &#43;</code></div>\r\n<div class=\"line number12 index11 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">(mShadowDrawable\r\n == </code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">null</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">?\r\n 0 : Math.min(mShadowHeight, mSectionsDistanceY));</code></div>\r\n<div class=\"line number13 index12 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.clipRect(pLeft,\r\n pTop, pLeft &#43; view.getWidth(), pTop &#43; clipHeight);</code></div>\r\n<div class=\"line number14 index13 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.translate(pLeft,\r\n pTop &#43; mTranslateY);</code></div>\r\n<div class=\"line number15 index14 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">drawChild(canvas,\r\n mPinnedSection.view, getDrawingTime());</code></div>\r\n<div class=\"line number16 index15 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">if</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">(mShadowDrawable\r\n != </code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">null</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&amp;&amp;\r\n mSectionsDistanceY &gt; 0) {</code></div>\r\n<div class=\"line number17 index16 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mShadowDrawable.setBounds(mPinnedSection.view.getLeft(),</code></div>\r\n<div class=\"line number18 index17 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mPinnedSection.view.getBottom(),</code></div>\r\n<div class=\"line number19 index18 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mPinnedSection.view.getRight(),</code></div>\r\n<div class=\"line number20 index19 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mPinnedSection.view.getBottom()\r\n &#43; mShadowHeight);</code></div>\r\n<div class=\"line number21 index20 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mShadowDrawable.draw(canvas);</code></div>\r\n<div class=\"line number22 index21 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n<div class=\"line number23 index22 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.restore();</code></div>\r\n<div class=\"line number24 index23 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n<div class=\"line number25 index24 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n关键在于<code class=\"js spaces\" style=\"border:0px; margin:0px; padding:0px\"></code><code class=\"js plain\" style=\"border:0px; margin:0px; padding:0px\">canvas.translate(pLeft, pTop &#43; mTranslateY);</code>意思是在绘制<code class=\"js plain\" style=\"border:0px; margin:0px; padding:0px\">mPinnedSection</code>的时候，listview滑动了多长的距离，就将canvas移动多少的距离，使<code class=\"js plain\" style=\"border:0px; margin:0px; padding:0px\">mPinnedSection</code>始终在可见的范围内固定不变。</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<span style=\"border:0px; margin:0px; padding:0px\">使用方法：</span></p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n1.在xml布局文件中将ListView替换成PinnedSectionListView</p>\r\n<div style=\"font-family:Arial; font-size:14px; border:0px; margin:0px; padding:0px; line-height:28px\">\r\n<div id=\"highlighter_905513\" class=\"syntaxhighlighter  js\" style=\"border:0px; padding:0px; width:785px; margin:1em 0px!important; position:relative!important; overflow:auto!important; font-size:1em!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:785px; border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n</td>\r\n<td class=\"code\" style=\"width:753px; border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important\">\r\n<div class=\"container\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&lt;com.hb.views.PinnedSectionListView</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">android:id=</code><code class=\"js string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:blue!important\">&quot;@android:id/list&quot;</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">android:layout_width=</code><code class=\"js string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:blue!important\">&quot;match_parent&quot;</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">android:layout_height=</code><code class=\"js string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:blue!important\">&quot;wrap_content&quot;</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">/&gt;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n2.让你的ListAdapter继承<code style=\"border:0px; margin:0px; padding:0px\">PinnedSectionListAdapter</code>接口，最简单的做法是只增加<code style=\"border:0px; margin:0px; padding:0px\">isItemViewTypePinned</code>方法，该方法必须在item为pinned的情况下返回true。</p>\r\n<div style=\"font-family:Arial; font-size:14px; border:0px; margin:0px; padding:0px; line-height:28px\">\r\n<div id=\"highlighter_261489\" class=\"syntaxhighlighter  js\" style=\"border:0px; padding:0px; width:785px; margin:1em 0px!important; position:relative!important; overflow:auto!important; font-size:1em!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:785px; border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n<div class=\"line number6 index5 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n6</div>\r\n<div class=\"line number7 index6 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n7</div>\r\n<div class=\"line number8 index7 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n8</div>\r\n<div class=\"line number9 index8 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n9</div>\r\n</td>\r\n<td class=\"code\" style=\"width:753px; border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important\">\r\n<div class=\"container\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n Our adapter class implements \'PinnedSectionListAdapter\' interface</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">class\r\n MyPinnedSectionListAdapter extends BaseAdapter implements PinnedSectionListAdapter {</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">...</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n We implement this method to return \'true\' for all view types we want to pin</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">@Override</code></div>\r\n<div class=\"line number6 index5 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">public\r\n boolean isItemViewTypePinned(int viewType) {</code></div>\r\n<div class=\"line number7 index6 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">return</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">viewType\r\n == &lt;type to be pinned&gt;;</code></div>\r\n<div class=\"line number8 index7 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n<div class=\"line number9 index8 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n&nbsp;项目地址：<a target=\"_blank\" target=\"_blank\" href=\"https://github.com/beworker/pinned-section-listview\" rel=\"nofollow\" style=\"color:rgb(255,153,0); text-decoration:none\">https://github.com/beworker/pinned-section-listview</a></p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n</p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">宣传下本人的小制作：</span><img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"border:none; max-width:100%; font-size:18px\"><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\">&nbsp;&nbsp;\r\n 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\"><span style=\"color:rgb(255,0,0)\">豌豆荚市场</span>: 搜索 &nbsp;&quot;<span style=\"color:rgb(255,0,0)\">联机斗地主</span>&quot; &quot;<span style=\"color:rgb(255,0,0)\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" style=\"color:rgb(106,57,6); text-decoration:none\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<br>\r\n','\r\n\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n原文:http://blog.csdn.net/jdsjlzx/article/details/20697257</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n在很多应用中，看到这样的listview：listview滑动过程中分组标题固定在上方，当第二个组滑上来时，第一个组才跟着上滑，下一个组固定，直到该组也滑出上边缘。世上无难事只怕有心人，在github上就有人做出来了，而且效果很好（后来发现安卓自带应用中联系人应用就是这样的，估计github的作者也是仿照着联系人做出来的吧）。</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n先看截图：</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<img src=\"http://www.jcodecraeer.com/uploads/20140307/13941224949560.png\" title=\"screen1.png\" alt=\"\" style=\"border:0px; max-width:100%; margin:0px; padding:0px; height:auto; float:none\">&nbsp;&nbsp;<img src=\"http://www.jcodecraeer.com/uploads/20140307/13941224944294.png\" title=\"screen2.png\" alt=\"\" style=\"border:0px; max-width:100%; margin:0px; padding:0px; height:auto; float:none\">&nbsp;&nbsp;<img src=\"http://www.jcodecraeer.com/uploads/20140307/13941224952328.png\" title=\"screen3.png\" alt=\"\" style=\"border:0px; max-width:100%; margin:0px; padding:0px; height:auto; float:none\"></p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\nPinnedSectionListView继承自listview，众所周知listview的每个子view都是按顺序跟着滚动的，要实现联系人listview的效果还真的找不到思路。看了PinnedSectionListView之后，感觉要改造一个现有的控件，一般都是通过重绘子view来实现的。ViewGroup（ListView继承自它）重绘子view的方法是dispatchDraw。</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n看看PinnedSectionListView在dispatchDraw中有那些特别的处理：</p>\r\n<div style=\"font-family:Arial; font-size:14px; border:0px; margin:0px; padding:0px; line-height:28px\">\r\n<div id=\"highlighter_63156\" class=\"syntaxhighlighter  js\" style=\"border:0px; padding:0px; width:785px; margin:1em 0px!important; position:relative!important; overflow:auto!important; font-size:1em!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:804px; border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n<div class=\"line number6 index5 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n6</div>\r\n<div class=\"line number7 index6 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n7</div>\r\n<div class=\"line number8 index7 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n8</div>\r\n<div class=\"line number9 index8 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n9</div>\r\n<div class=\"line number10 index9 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n10</div>\r\n<div class=\"line number11 index10 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n11</div>\r\n<div class=\"line number12 index11 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n12</div>\r\n<div class=\"line number13 index12 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n13</div>\r\n<div class=\"line number14 index13 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n14</div>\r\n<div class=\"line number15 index14 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n15</div>\r\n<div class=\"line number16 index15 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n16</div>\r\n<div class=\"line number17 index16 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n17</div>\r\n<div class=\"line number18 index17 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n18</div>\r\n<div class=\"line number19 index18 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n19</div>\r\n<div class=\"line number20 index19 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n20</div>\r\n<div class=\"line number21 index20 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n21</div>\r\n<div class=\"line number22 index21 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n22</div>\r\n<div class=\"line number23 index22 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n23</div>\r\n<div class=\"line number24 index23 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n24</div>\r\n<div class=\"line number25 index24 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n25</div>\r\n</td>\r\n<td class=\"code\" style=\"width:764px; border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important\">\r\n<div class=\"container\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">@Override</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">protected\r\n void dispatchDraw(Canvas canvas) {</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">super</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">.dispatchDraw(canvas);</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">if</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">(mPinnedSection\r\n != </code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">null</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">)\r\n {</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n prepare variables</code></div>\r\n<div class=\"line number6 index5 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">int\r\n pLeft = getListPaddingLeft();</code></div>\r\n<div class=\"line number7 index6 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">int\r\n pTop = getListPaddingTop();</code></div>\r\n<div class=\"line number8 index7 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">View\r\n view = mPinnedSection.view;</code></div>\r\n<div class=\"line number9 index8 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n draw child</code></div>\r\n<div class=\"line number10 index9 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.save();</code></div>\r\n<div class=\"line number11 index10 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">int\r\n clipHeight = view.getHeight() &#43;</code></div>\r\n<div class=\"line number12 index11 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">(mShadowDrawable\r\n == </code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">null</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">?\r\n 0 : Math.min(mShadowHeight, mSectionsDistanceY));</code></div>\r\n<div class=\"line number13 index12 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.clipRect(pLeft,\r\n pTop, pLeft &#43; view.getWidth(), pTop &#43; clipHeight);</code></div>\r\n<div class=\"line number14 index13 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.translate(pLeft,\r\n pTop &#43; mTranslateY);</code></div>\r\n<div class=\"line number15 index14 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">drawChild(canvas,\r\n mPinnedSection.view, getDrawingTime());</code></div>\r\n<div class=\"line number16 index15 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">if</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">(mShadowDrawable\r\n != </code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">null</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&amp;&amp;\r\n mSectionsDistanceY &gt; 0) {</code></div>\r\n<div class=\"line number17 index16 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mShadowDrawable.setBounds(mPinnedSection.view.getLeft(),</code></div>\r\n<div class=\"line number18 index17 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mPinnedSection.view.getBottom(),</code></div>\r\n<div class=\"line number19 index18 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mPinnedSection.view.getRight(),</code></div>\r\n<div class=\"line number20 index19 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mPinnedSection.view.getBottom()\r\n &#43; mShadowHeight);</code></div>\r\n<div class=\"line number21 index20 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">mShadowDrawable.draw(canvas);</code></div>\r\n<div class=\"line number22 index21 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n<div class=\"line number23 index22 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">canvas.restore();</code></div>\r\n<div class=\"line number24 index23 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n<div class=\"line number25 index24 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n关键在于<code class=\"js spaces\" style=\"border:0px; margin:0px; padding:0px\"></code><code class=\"js plain\" style=\"border:0px; margin:0px; padding:0px\">canvas.translate(pLeft, pTop &#43; mTranslateY);</code>意思是在绘制<code class=\"js plain\" style=\"border:0px; margin:0px; padding:0px\">mPinnedSection</code>的时候，listview滑动了多长的距离，就将canvas移动多少的距离，使<code class=\"js plain\" style=\"border:0px; margin:0px; padding:0px\">mPinnedSection</code>始终在可见的范围内固定不变。</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<span style=\"border:0px; margin:0px; padding:0px\">使用方法：</span></p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n1.在xml布局文件中将ListView替换成PinnedSectionListView</p>\r\n<div style=\"font-family:Arial; font-size:14px; border:0px; margin:0px; padding:0px; line-height:28px\">\r\n<div id=\"highlighter_905513\" class=\"syntaxhighlighter  js\" style=\"border:0px; padding:0px; width:785px; margin:1em 0px!important; position:relative!important; overflow:auto!important; font-size:1em!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:785px; border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n</td>\r\n<td class=\"code\" style=\"width:753px; border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important\">\r\n<div class=\"container\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&lt;com.hb.views.PinnedSectionListView</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">android:id=</code><code class=\"js string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:blue!important\">&quot;@android:id/list&quot;</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">android:layout_width=</code><code class=\"js string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:blue!important\">&quot;match_parent&quot;</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">android:layout_height=</code><code class=\"js string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:blue!important\">&quot;wrap_content&quot;</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">/&gt;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n2.让你的ListAdapter继承<code style=\"border:0px; margin:0px; padding:0px\">PinnedSectionListAdapter</code>接口，最简单的做法是只增加<code style=\"border:0px; margin:0px; padding:0px\">isItemViewTypePinned</code>方法，该方法必须在item为pinned的情况下返回true。</p>\r\n<div style=\"font-family:Arial; font-size:14px; border:0px; margin:0px; padding:0px; line-height:28px\">\r\n<div id=\"highlighter_261489\" class=\"syntaxhighlighter  js\" style=\"border:0px; padding:0px; width:785px; margin:1em 0px!important; position:relative!important; overflow:auto!important; font-size:1em!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:785px; border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n<div class=\"line number6 index5 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n6</div>\r\n<div class=\"line number7 index6 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n7</div>\r\n<div class=\"line number8 index7 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n8</div>\r\n<div class=\"line number9 index8 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n9</div>\r\n</td>\r\n<td class=\"code\" style=\"width:753px; border:0px!important; margin:0px!important; padding:0px!important; font-size:1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important\">\r\n<div class=\"container\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n Our adapter class implements \'PinnedSectionListAdapter\' interface</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">class\r\n MyPinnedSectionListAdapter extends BaseAdapter implements PinnedSectionListAdapter {</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">...</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js comments\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,130,0)!important\">//\r\n We implement this method to return \'true\' for all view types we want to pin</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">@Override</code></div>\r\n<div class=\"line number6 index5 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">public\r\n boolean isItemViewTypePinned(int viewType) {</code></div>\r\n<div class=\"line number7 index6 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-weight:bold!important; font-size:1em!important; min-height:inherit!important; color:rgb(0,102,153)!important\">return</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">viewType\r\n == &lt;type to be pinned&gt;;</code></div>\r\n<div class=\"line number8 index7 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js spaces\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n<div class=\"line number9 index8 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-size:1em!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"js plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; font-size:1em!important; min-height:inherit!important\">}</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n&nbsp;项目地址：<a target=\"_blank\" target=\"_blank\" href=\"https://github.com/beworker/pinned-section-listview\" rel=\"nofollow\" style=\"color:rgb(255,153,0); text-decoration:none\">https://github.com/beworker/pinned-section-listview</a></p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n<br>\r\n</p>\r\n<p style=\"margin:10px auto 0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; border:0px; line-height:25px\">\r\n</p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">宣传下本人的小制作：</span><img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"border:none; max-width:100%; font-size:18px\"><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\">&nbsp;&nbsp;\r\n 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\"><span style=\"color:rgb(255,0,0)\">豌豆荚市场</span>: 搜索 &nbsp;&quot;<span style=\"color:rgb(255,0,0)\">联机斗地主</span>&quot; &quot;<span style=\"color:rgb(255,0,0)\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" style=\"color:rgb(106,57,6); text-decoration:none\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<br>\r\n',1,'listview,android',0,0,'2015-02-02 00:40:52','2015-02-02 00:40:52','2015-02-02 00:40:52'),(13,1,3,'Android自绘字体大小paint.settextsize随分辨率大小变化','91e60a85138b494d1e23089603b34451',0,'\r\n\r\n<pre name=\"code\" class=\"java\">1.获取当前设备的屏幕大小\n\nDisplayMetrics displayMetrics = new DisplayMetrics();\nthis.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n\n2.','\r\n\r\n<pre name=\"code\" class=\"java\">1.获取当前设备的屏幕大小\n\nDisplayMetrics displayMetrics = new DisplayMetrics();\nthis.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n\n2.计算与你开发时设定的屏幕大小的纵横比(这里假设你开发时定的屏幕大小是480*800)\n\nint screenWidth = displayMetrics.widthPixels;\nint screenHeight = displayMetrics.heightPixels;\nfloat ratioWidth = (float)screenWidth / 480;\nfloat ratioHeight = (float)screenHeight / 800;\n        \nRATIO = Math.min(ratioWidth, ratioHeight);\nif (ratioWidth != ratioHeight) {\n    if (RATIO == ratioWidth) {\n    OFFSET_LEFT = 0;\n    OFFSET_TOP = Math.round((screenHeight - 800 * RATIO) / 2);\n    }else {\n    OFFSET_LEFT = Math.round((screenWidth - 480 * RATIO) / 2);\n    OFFSET_TOP = 0;\n    }\n}\n\n3.根据上一步计算出来的最小纵横比来确定字体的大小(假定在480*800屏幕下字体大小设定为35)\n\npublic static int TEXT_SIZE = Math.round(35 * RATIO);\n\n4.根据上一步计算的字体大小来设定应用程序中字体的大小\n\nPaint paint = new Paint();\npaint.setTextSize(TEXT_SIZE);\ncanvas.drawText(&quot;test&quot;, 0, 0, paint);</pre><br>\r\n','\r\n\r\n<pre name=\"code\" class=\"java\">1.获取当前设备的屏幕大小\n\nDisplayMetrics displayMetrics = new DisplayMetrics();\nthis.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n\n2.计算与你开发时设定的屏幕大小的纵横比(这里假设你开发时定的屏幕大小是480*800)\n\nint screenWidth = displayMetrics.widthPixels;\nint screenHeight = displayMetrics.heightPixels;\nfloat ratioWidth = (float)screenWidth / 480;\nfloat ratioHeight = (float)screenHeight / 800;\n        \nRATIO = Math.min(ratioWidth, ratioHeight);\nif (ratioWidth != ratioHeight) {\n    if (RATIO == ratioWidth) {\n    OFFSET_LEFT = 0;\n    OFFSET_TOP = Math.round((screenHeight - 800 * RATIO) / 2);\n    }else {\n    OFFSET_LEFT = Math.round((screenWidth - 480 * RATIO) / 2);\n    OFFSET_TOP = 0;\n    }\n}\n\n3.根据上一步计算出来的最小纵横比来确定字体的大小(假定在480*800屏幕下字体大小设定为35)\n\npublic static int TEXT_SIZE = Math.round(35 * RATIO);\n\n4.根据上一步计算的字体大小来设定应用程序中字体的大小\n\nPaint paint = new Paint();\npaint.setTextSize(TEXT_SIZE);\ncanvas.drawText(&quot;test&quot;, 0, 0, paint);</pre><br>\r\n',1,'字体,android',0,0,'2015-02-02 00:40:52','2015-02-02 00:40:52','2015-02-02 00:40:52'),(14,1,3,'Android listview 侧栏字母索引排序','009200aca364e54deadffab13f0e9cb8',0,'\r\n\r\n<span style=\"color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">原文地址：</span><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/artic','\r\n\r\n<span style=\"color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">原文地址：</span><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">http://blog.csdn.net/xiaanming/article/details/12684155</a><br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">首先先看下效果图</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px; text-align:center\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><img id=\"aimg_122460\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161402gjdqmqo3o3b1g4ow.jpg\" class=\"zoom\" width=\"480\" height=\"854\" alt=\"\" style=\"word-wrap:break-word\"></span></span></p>\r\n<span style=\"color:#000; word-wrap:break-word; font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><span style=\"font-family:Arial; word-wrap:break-word\"><img id=\"aimg_122461\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161402ufaviv332bvcv622.jpg\" class=\"zoom\" width=\"480\" height=\"854\" alt=\"\" style=\"word-wrap:break-word\">&nbsp;<img id=\"aimg_122462\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161402abdunfxp7eszdpc7.jpg\" class=\"zoom\" width=\"480\" height=\"854\" alt=\"\" style=\"word-wrap:break-word\">&nbsp;<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n</p>\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">上面是一个带删除按钮的EditText，我们在输入框中输入可以自动过滤出我们想要的东西，当输入框中没有数据自动替换到原来的数据列表，然后下面一个ListView用来显示数据列表，右侧是一个字母索引表，当我们点击不同的字母,ListView会定位到该字母地方，了解了布局之后，我们先看下项目结构吧</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><img id=\"aimg_122463\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161403xar5r7ra5krbfdko.jpg\" class=\"zoom\" width=\"321\" height=\"363\" alt=\"\" style=\"word-wrap:break-word\"></span></span></p>\r\n<span style=\"color:#000; word-wrap:break-word; font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><span style=\"font-family:Arial; word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n</p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">我按照项目中类的顺序来一一介绍其功能</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">1.SortModel 一个实体类，里面一个是ListView的name,另一个就是显示的name拼音的首字母<br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<font style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class SortModel {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private String name;&nbsp; &nbsp;//显示的数据&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private String sortLetters;&nbsp;&nbsp;//显示数据拼音的首字母&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getName() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return name;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setName(String name) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.name = name;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getSortLetters() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return sortLetters;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setSortLetters(String sortLetters) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.sortLetters = sortLetters;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">}&nbsp;&nbsp;</span><br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<span style=\"color:#000; word-wrap:break-word; font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><br style=\"word-wrap:break-word\">\r\n2.SideBar类就是ListView右侧的字母索引View，我们需要使用setTextView(TextView mTextDialog)来设置用来显示当前按下的字母的TextView,以及使用setOnTouchingLetterChangedListener方法来设置回调接口，在回调方法onTouchingLetterChanged(String s)中来处理不同的操作</span><br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<font style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.content.Context;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Canvas;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Color;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Paint;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Typeface;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.drawable.ColorDrawable;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.util.AttributeSet;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.MotionEvent;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.View;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.TextView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class SideBar extends View {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; // 触摸事件&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private OnTouchingLetterChangedListener onTouchingLetterChangedListener;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; // 26个字母&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public static String[] b = { &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, &quot;#&quot; };&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private int choose = -1;// 选中&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private Paint paint = new Paint();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private TextView mTextDialog;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 为SideBar设置显示字母的TextView</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param mTextDialog</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setTextView(TextView mTextDialog) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.mTextDialog = mTextDialog;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SideBar(Context context, AttributeSet attrs, int defStyle) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super(context, attrs, defStyle);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SideBar(Context context, AttributeSet attrs) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super(context, attrs);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SideBar(Context context) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super(context);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 重写这个方法</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; protected void onDraw(Canvas canvas) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super.onDraw(canvas);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;// 获取焦点改变背景颜色.&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int height = getHeight();// 获取对应高度&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int width = getWidth(); // 获取对应宽度&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int singleHeight = height / b.length;// 获取每一个字母的高度&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for (int i = 0; i &lt; b.length; i&#43;&#43;) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setColor(Color.rgb(33, 65, 98));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// paint.setColor(Color.WHITE);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setTypeface(Typeface.DEFAULT_BOLD);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setAntiAlias(true);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setTextSize(20);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// 选中的状态&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (i == choose) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; paint.setColor(Color.parseColor(&quot;#3399ff&quot;));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; paint.setFakeBoldText(true);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// x坐标等于中间-字符串宽度的一半.&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;float xPos = width / 2 - paint.measureText(b<span style=\"word-wrap:break-word\">) / 2;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;float yPos = singleHeight * i &#43; singleHeight;&nbsp;&nbsp;</span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;canvas.drawText(b<span style=\"word-wrap:break-word\">, xPos, yPos, paint);&nbsp;&nbsp;</span></span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.reset();// 重置画笔&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; @Override&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public boolean dispatchTouchEvent(MotionEvent event) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final int action = event.getAction();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final float y = event.getY();// 点击y坐标&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final int oldChoose = choose;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final OnTouchingLetterChangedListener listener = onTouchingLetterChangedListener;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final int c = (int) (y / getHeight() * b.length);// 点击y坐标所占总高度的比例*b数组的长度就等于点击b中的个数.&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;switch (action) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;case MotionEvent.ACTION_UP:&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;setBackgroundDrawable(new ColorDrawable(0x00000000));&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;choose = -1;//&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;invalidate();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (mTextDialog != null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; mTextDialog.setVisibility(View.INVISIBLE);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;default:&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;setBackgroundResource(R.drawable.sidebar_background);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (oldChoose != c) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (c &gt;= 0 &amp;&amp; c &lt; b.length) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (listener != null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;listener.onTouchingLetterChanged(b[c]);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (mTextDialog != null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;mTextDialog.setText(b[c]);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;mTextDialog.setVisibility(View.VISIBLE);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;choose = c;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;invalidate();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return true;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 向外公开的方法</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param onTouchingLetterChangedListener</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setOnTouchingLetterChangedListener(&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;OnTouchingLetterChangedListener onTouchingLetterChangedListener) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.onTouchingLetterChangedListener = onTouchingLetterChangedListener;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 接口</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @author coder</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public interface OnTouchingLetterChangedListener {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;public void onTouchingLetterChanged(String s);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">}&nbsp;&nbsp;</span></span><br style=\"word-wrap:break-word\">\r\n</span></li></ul>\r\n<span style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><span style=\"word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">3.CharacterParser 这个类是将汉字转换成拼音的类，该拼音没有声调的，该类是单例类，其中定义了三个方法，在这个demo中用到的是getSelling(String chs)方法，将词组转换成拼音<br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">/**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">* Java汉字转换为拼音</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class CharacterParser {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private static int[] pyvalue = new int[] {-20319, -20317, -20304, -20295, -20292, -20283, -20265, -20257, -20242, -20230, -20051, -20036, -20032,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-20026, -20002, -19990, -19986, -19982, -19976, -19805, -19784, -19775, -19774, -19763, -19756, -19751, -19746, -19741, -19739, -19728,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-19725, -19715, -19540, -19531, -19525, -19515, -19500, -19484, -19479, -19467, -19289, -19288, -19281, -19275, -19270, -19263, -19261,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-19249, -19243, -19242, -19238, -19235, -19227, -19224, -19218, -19212, -19038, -19023, -19018, -19006, -19003, -18996, -18977, -18961,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-18952, -18783, -18774, -18773, -18763, -18756, -18741, -18735, -18731, -18722, -18710, -18697, -18696, -18526, -18518, -18501, -18490,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-18478, -18463, -18448, -18447, -18446, -18239, -18237, -18231, -18220, -18211, -18201, -18184, -18183, -18181, -18012, -17997, -17988,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-17970, -17964, -17961, -17950, -17947, -17931, -17928, -17922, -17759, -17752, -17733, -17730, -17721, -17703, -17701, -17697, -17692,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-17683, -17676, -17496, -17487, -17482, -17468, -17454, -17433, -17427, -17417, -17202, -17185, -16983, -16970, -16942, -16915, -16733,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-16708, -16706, -16689, -16664, -16657, -16647, -16474, -16470, -16465, -16459, -16452, -16448, -16433, -16429, -16427, -16423, -16419,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-16412, -16407, -16403, -16401, -16393, -16220, -16216, -16212, -16205, -16202, -16187, -16180, -16171, -16169, -16158, -16155, -15959,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-15958, -15944, -15933, -15920, -15915, -15903, -15889, -15878, -15707, -15701, -15681, -15667, -15661, -15659, -15652, -15640, -15631,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-15625, -15454, -15448, -15436, -15435, -15419, -15416, -15408, -15394, -15385, -15377, -15375, -15369, -15363, -15362, -15183, -15180,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-15165, -15158, -15153, -15150, -15149, -15144, -15143, -15141, -15140, -15139, -15128, -15121, -15119, -15117, -15110, -15109, -14941,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14937, -14933, -14930, -14929, -14928, -14926, -14922, -14921, -14914, -14908, -14902, -14894, -14889, -14882, -14873, -14871, -14857,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14678, -14674, -14670, -14668, -14663, -14654, -14645, -14630, -14594, -14429, -14407, -14399, -14384, -14379, -14368, -14355, -14353,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14345, -14170, -14159, -14151, -14149, -14145, -14140, -14137, -14135, -14125, -14123, -14122, -14112, -14109, -14099, -14097, -14094,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14092, -14090, -14087, -14083, -13917, -13914, -13910, -13907, -13906, -13905, -13896, -13894, -13878, -13870, -13859, -13847, -13831,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-13658, -13611, -13601, -13406, -13404, -13400, -13398, -13395, -13391, -13387, -13383, -13367, -13359, -13356, -13343, -13340, -13329,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-13326, -13318, -13147, -13138, -13120, -13107, -13096, -13095, -13091, -13076, -13068, -13063, -13060, -12888, -12875, -12871, -12860,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-12858, -12852, -12849, -12838, -12831, -12829, -12812, -12802, -12607, -12597, -12594, -12585, -12556, -12359, -12346, -12320, -12300,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-12120, -12099, -12089, -12074, -12067, -12058, -12039, -11867, -11861, -11847, -11831, -11798, -11781, -11604, -11589, -11536, -11358,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-11340, -11339, -11324, -11303, -11097, -11077, -11067, -11055, -11052, -11045, -11041, -11038, -11024, -11020, -11019, -11018, -11014,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-10838, -10832, -10815, -10800, -10790, -10780, -10764, -10587, -10544, -10533, -10519, -10331, -10329, -10328, -10322, -10315, -10309,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-10307, -10296, -10281, -10274, -10270, -10262, -10260, -10256, -10254};&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public static String[] pystr = new String[] {&quot;a&quot;, &quot;ai&quot;, &quot;an&quot;, &quot;ang&quot;, &quot;ao&quot;, &quot;ba&quot;, &quot;bai&quot;, &quot;ban&quot;, &quot;bang&quot;, &quot;bao&quot;, &quot;bei&quot;, &quot;ben&quot;, &quot;beng&quot;, &quot;bi&quot;, &quot;bian&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;biao&quot;, &quot;bie&quot;, &quot;bin&quot;, &quot;bing&quot;, &quot;bo&quot;, &quot;bu&quot;, &quot;ca&quot;, &quot;cai&quot;, &quot;can&quot;, &quot;cang&quot;, &quot;cao&quot;, &quot;ce&quot;, &quot;ceng&quot;, &quot;cha&quot;, &quot;chai&quot;, &quot;chan&quot;, &quot;chang&quot;, &quot;chao&quot;, &quot;che&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;chen&quot;, &quot;cheng&quot;, &quot;chi&quot;, &quot;chong&quot;, &quot;chou&quot;, &quot;chu&quot;, &quot;chuai&quot;, &quot;chuan&quot;, &quot;chuang&quot;, &quot;chui&quot;, &quot;chun&quot;, &quot;chuo&quot;, &quot;ci&quot;, &quot;cong&quot;, &quot;cou&quot;, &quot;cu&quot;, &quot;cuan&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;cui&quot;, &quot;cun&quot;, &quot;cuo&quot;, &quot;da&quot;, &quot;dai&quot;, &quot;dan&quot;, &quot;dang&quot;, &quot;dao&quot;, &quot;de&quot;, &quot;deng&quot;, &quot;di&quot;, &quot;dian&quot;, &quot;diao&quot;, &quot;die&quot;, &quot;ding&quot;, &quot;diu&quot;, &quot;dong&quot;, &quot;dou&quot;, &quot;du&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;duan&quot;, &quot;dui&quot;, &quot;dun&quot;, &quot;duo&quot;, &quot;e&quot;, &quot;en&quot;, &quot;er&quot;, &quot;fa&quot;, &quot;fan&quot;, &quot;fang&quot;, &quot;fei&quot;, &quot;fen&quot;, &quot;feng&quot;, &quot;fo&quot;, &quot;fou&quot;, &quot;fu&quot;, &quot;ga&quot;, &quot;gai&quot;, &quot;gan&quot;, &quot;gang&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;gao&quot;, &quot;ge&quot;, &quot;gei&quot;, &quot;gen&quot;, &quot;geng&quot;, &quot;gong&quot;, &quot;gou&quot;, &quot;gu&quot;, &quot;gua&quot;, &quot;guai&quot;, &quot;guan&quot;, &quot;guang&quot;, &quot;gui&quot;, &quot;gun&quot;, &quot;guo&quot;, &quot;ha&quot;, &quot;hai&quot;, &quot;han&quot;, &quot;hang&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;hao&quot;, &quot;he&quot;, &quot;hei&quot;, &quot;hen&quot;, &quot;heng&quot;, &quot;hong&quot;, &quot;hou&quot;, &quot;hu&quot;, &quot;hua&quot;, &quot;huai&quot;, &quot;huan&quot;, &quot;huang&quot;, &quot;hui&quot;, &quot;hun&quot;, &quot;huo&quot;, &quot;ji&quot;, &quot;jia&quot;, &quot;jian&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;jiang&quot;, &quot;jiao&quot;, &quot;jie&quot;, &quot;jin&quot;, &quot;jing&quot;, &quot;jiong&quot;, &quot;jiu&quot;, &quot;ju&quot;, &quot;juan&quot;, &quot;jue&quot;, &quot;jun&quot;, &quot;ka&quot;, &quot;kai&quot;, &quot;kan&quot;, &quot;kang&quot;, &quot;kao&quot;, &quot;ke&quot;, &quot;ken&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;keng&quot;, &quot;kong&quot;, &quot;kou&quot;, &quot;ku&quot;, &quot;kua&quot;, &quot;kuai&quot;, &quot;kuan&quot;, &quot;kuang&quot;, &quot;kui&quot;, &quot;kun&quot;, &quot;kuo&quot;, &quot;la&quot;, &quot;lai&quot;, &quot;lan&quot;, &quot;lang&quot;, &quot;lao&quot;, &quot;le&quot;, &quot;lei&quot;, &quot;leng&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;li&quot;, &quot;lia&quot;, &quot;lian&quot;, &quot;liang&quot;, &quot;liao&quot;, &quot;lie&quot;, &quot;lin&quot;, &quot;ling&quot;, &quot;liu&quot;, &quot;long&quot;, &quot;lou&quot;, &quot;lu&quot;, &quot;lv&quot;, &quot;luan&quot;, &quot;lue&quot;, &quot;lun&quot;, &quot;luo&quot;, &quot;ma&quot;, &quot;mai&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;man&quot;, &quot;mang&quot;, &quot;mao&quot;, &quot;me&quot;, &quot;mei&quot;, &quot;men&quot;, &quot;meng&quot;, &quot;mi&quot;, &quot;mian&quot;, &quot;miao&quot;, &quot;mie&quot;, &quot;min&quot;, &quot;ming&quot;, &quot;miu&quot;, &quot;mo&quot;, &quot;mou&quot;, &quot;mu&quot;, &quot;na&quot;, &quot;nai&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;nan&quot;, &quot;nang&quot;, &quot;nao&quot;, &quot;ne&quot;, &quot;nei&quot;, &quot;nen&quot;, &quot;neng&quot;, &quot;ni&quot;, &quot;nian&quot;, &quot;niang&quot;, &quot;niao&quot;, &quot;nie&quot;, &quot;nin&quot;, &quot;ning&quot;, &quot;niu&quot;, &quot;nong&quot;, &quot;nu&quot;, &quot;nv&quot;, &quot;nuan&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;nue&quot;, &quot;nuo&quot;, &quot;o&quot;, &quot;ou&quot;, &quot;pa&quot;, &quot;pai&quot;, &quot;pan&quot;, &quot;pang&quot;, &quot;pao&quot;, &quot;pei&quot;, &quot;pen&quot;, &quot;peng&quot;, &quot;pi&quot;, &quot;pian&quot;, &quot;piao&quot;, &quot;pie&quot;, &quot;pin&quot;, &quot;ping&quot;, &quot;po&quot;, &quot;pu&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;qi&quot;, &quot;qia&quot;, &quot;qian&quot;, &quot;qiang&quot;, &quot;qiao&quot;, &quot;qie&quot;, &quot;qin&quot;, &quot;qing&quot;, &quot;qiong&quot;, &quot;qiu&quot;, &quot;qu&quot;, &quot;quan&quot;, &quot;que&quot;, &quot;qun&quot;, &quot;ran&quot;, &quot;rang&quot;, &quot;rao&quot;, &quot;re&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;ren&quot;, &quot;reng&quot;, &quot;ri&quot;, &quot;rong&quot;, &quot;rou&quot;, &quot;ru&quot;, &quot;ruan&quot;, &quot;rui&quot;, &quot;run&quot;, &quot;ruo&quot;, &quot;sa&quot;, &quot;sai&quot;, &quot;san&quot;, &quot;sang&quot;, &quot;sao&quot;, &quot;se&quot;, &quot;sen&quot;, &quot;seng&quot;, &quot;sha&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;shai&quot;, &quot;shan&quot;, &quot;shang&quot;, &quot;shao&quot;, &quot;she&quot;, &quot;shen&quot;, &quot;sheng&quot;, &quot;shi&quot;, &quot;shou&quot;, &quot;shu&quot;, &quot;shua&quot;, &quot;shuai&quot;, &quot;shuan&quot;, &quot;shuang&quot;, &quot;shui&quot;, &quot;shun&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;shuo&quot;, &quot;si&quot;, &quot;song&quot;, &quot;sou&quot;, &quot;su&quot;, &quot;suan&quot;, &quot;sui&quot;, &quot;sun&quot;, &quot;suo&quot;, &quot;ta&quot;, &quot;tai&quot;, &quot;tan&quot;, &quot;tang&quot;, &quot;tao&quot;, &quot;te&quot;, &quot;teng&quot;, &quot;ti&quot;, &quot;tian&quot;, &quot;tiao&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;tie&quot;, &quot;ting&quot;, &quot;tong&quot;, &quot;tou&quot;, &quot;tu&quot;, &quot;tuan&quot;, &quot;tui&quot;, &quot;tun&quot;, &quot;tuo&quot;, &quot;wa&quot;, &quot;wai&quot;, &quot;wan&quot;, &quot;wang&quot;, &quot;wei&quot;, &quot;wen&quot;, &quot;weng&quot;, &quot;wo&quot;, &quot;wu&quot;, &quot;xi&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;xia&quot;, &quot;xian&quot;, &quot;xiang&quot;, &quot;xiao&quot;, &quot;xie&quot;, &quot;xin&quot;, &quot;xing&quot;, &quot;xiong&quot;, &quot;xiu&quot;, &quot;xu&quot;, &quot;xuan&quot;, &quot;xue&quot;, &quot;xun&quot;, &quot;ya&quot;, &quot;yan&quot;, &quot;yang&quot;, &quot;yao&quot;, &quot;ye&quot;, &quot;yi&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yin&quot;, &quot;ying&quot;, &quot;yo&quot;, &quot;yong&quot;, &quot;you&quot;, &quot;yu&quot;, &quot;yuan&quot;, &quot;yue&quot;, &quot;yun&quot;, &quot;za&quot;, &quot;zai&quot;, &quot;zan&quot;, &quot;zang&quot;, &quot;zao&quot;, &quot;ze&quot;, &quot;zei&quot;, &quot;zen&quot;, &quot;zeng&quot;, &quot;zha&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;zhai&quot;, &quot;zhan&quot;, &quot;zhang&quot;, &quot;zhao&quot;, &quot;zhe&quot;, &quot;zhen&quot;, &quot;zheng&quot;, &quot;zhi&quot;, &quot;zhong&quot;, &quot;zhou&quot;, &quot;zhu&quot;, &quot;zhua&quot;, &quot;zhuai&quot;, &quot;zhuan&quot;, &quot;zhuang&quot;, &quot;zhui&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;zhun&quot;, &quot;zhuo&quot;, &quot;zi&quot;, &quot;zong&quot;, &quot;zou&quot;, &quot;zu&quot;, &quot;zuan&quot;, &quot;zui&quot;, &quot;zun&quot;, &quot;zuo&quot;};&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private StringBuilder buffer;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private String resource;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private static CharacterParser characterParser = new CharacterParser();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public static CharacterParser getInstance() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return characterParser;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getResource() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return resource;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setResource(String resource) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.resource = resource;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /** * 汉字转成ASCII码 * * @param chs *&nbsp;<a target=\"_blank\" href=\"http://www.apkbus.com/home.php?mod=space&amp;uid=309376\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">@return</a>&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private int getChsAscii(String chs) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int asc = 0;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;try {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;byte[] bytes = chs.getBytes(&quot;gb2312&quot;);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (bytes == null || bytes.length &gt; 2 || bytes.length &lt;= 0) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; throw new RuntimeException(&quot;illegal resource string&quot;);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (bytes.length == 1) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; asc = bytes[0];&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (bytes.length == 2) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; int hightByte = 256 &#43; bytes[0];&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; int lowByte = 256 &#43; bytes[1];&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; asc = (256 * hightByte &#43; lowByte) - 256 * 256;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} catch (Exception e) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;System.out.println(&quot;ERROR:ChineseSpelling.class-getChsAscii(String chs)&quot; &#43; e);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return asc;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /** * 单字解析 * * @param str * @return */&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String convert(String str) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;String result = null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int ascii = getChsAscii(str);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (ascii &gt; 0 &amp;&amp; ascii &lt; 160) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;result = String.valueOf((char) ascii);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;for (int i = (pyvalue.length - 1); i &gt;= 0; i--) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (pyvalue<span style=\"word-wrap:break-word\">&nbsp;&lt;= ascii) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;result = pystr<span style=\"word-wrap:break-word\">;&nbsp;&nbsp;</span></span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return result;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /** * 词组解析 * * @param chs * @return */&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getSelling(String chs) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;String key, value;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;buffer = new StringBuilder();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for (int i = 0; i &lt; chs.length(); i&#43;&#43;) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;key = chs.substring(i, i &#43; 1);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (key.getBytes().length &gt;= 2) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; value = (String) convert(key);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (value == null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;value = &quot;unknown&quot;;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;} else {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; value = key;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;buffer.append(value);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return buffer.toString();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getSpelling() {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return this.getSelling(this.getResource());&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">}&nbsp;&nbsp;</span></span><br style=\"word-wrap:break-word\">\r\n</span></li></ul>\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">4.ClearEditText类是自定义的一个在右侧有删除图片的EditText，当然你也可以用Android原生的EditText，该类我之前有介绍，我这里就不贴上代码了<span style=\"color:#ca00; word-wrap:break-word\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/11066685\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">Android\r\n 带清除功能的输入框控件ClearEditText,仿IOS的输入框</a></span><br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">5.SortAdapter 数据的适配器类，该类需要实现SectionIndexer接口，该接口是用来控制ListView分组的，该接口有三个方法getSectionForPosition(int position)，getPositionForSection(int section)，getSections()，我们只需要自行实现前面两个方法</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<ul style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:disc\">\r\ngetSectionForPosition(int position)是根据ListView的position来获取该位置上面的name的首字母char的ascii&#20540;，例如： 如果该position上面的name是阿妹，首字母就是A，那么此方法返回的就是\'A\'字母的ascii&#20540;，也就是65， \'B\'是66，依次类推</li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:disc\">\r\ngetPositionForSection(int section)就是根据首字母的ascii&#20540;来获取在该ListView中第一次出现该首字母的位置，例如：从上面的效果图1中，如果section是65 ，也就是‘B’的ascii&#20540;，那么该方法返回的position就是2<br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<br style=\"word-wrap:break-word\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">然后就是getView()方法，首先我们根据ListView的position调用getSectionForPosition(int position)来获取该位置上面name的首字母的ascii&#20540;,然后根据这个ascii&#20540;调用getPositionForSection(int section)来获取第一次出现该首字母的position，如果ListView的position\r\n 等于 根据这个ascii&#20540;调用getPositionForSection(int section)来获取第一次出现该首字母的position，则显示分类字母 否则隐藏</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.List;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.content.Context;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.LayoutInflater;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.View;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.ViewGroup;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.BaseAdapter;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.SectionIndexer;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.TextView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class SortAdapter extends BaseAdapter implements SectionIndexer{&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private List&lt;SortModel&gt; list = null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private Context mContext;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SortAdapter(Context mContext, List&lt;SortModel&gt; list) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.mContext = mContext;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.list = list;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 当ListView数据发生变化时,调用此方法来更新ListView</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param list</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void updateListView(List&lt;SortModel&gt; list){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.list = list;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;notifyDataSetChanged();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int getCount() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return this.list.size();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public Object getItem(int position) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return list.get(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public long getItemId(int position) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return position;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public View getView(final int position, View view, ViewGroup arg2) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;ViewHolder viewHolder = null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final SortModel mContent = list.get(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (view == null) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder = new ViewHolder();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;view = LayoutInflater.from(mContext).inflate(R.layout.item, null);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvTitle = (TextView) view.findViewById(R.id.title);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter = (TextView) view.findViewById(R.id.catalog);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;view.setTag(viewHolder);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder = (ViewHolder) view.getTag();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//根据position获取分类的首字母的char ascii&#20540;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int section = getSectionForPosition(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//如果当前位置等于该分类首字母的Char的位置 ，则认为是第一次出现&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if(position == getPositionForSection(section)){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter.setVisibility(View.VISIBLE);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter.setText(mContent.getSortLetters());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter.setVisibility(View.GONE);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;viewHolder.tvTitle.setText(this.list.get(position).getName());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return view;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; final static class ViewHolder {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;TextView tvLetter;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;TextView tvTitle;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据ListView的当前位置获取分类的首字母的char ascii&#20540;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int getSectionForPosition(int position) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return list.get(position).getSortLetters().charAt(0);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据分类的首字母的Char ascii&#20540;获取其第一次出现该首字母的位置</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int getPositionForSection(int section) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for (int i = 0; i &lt; getCount(); i&#43;&#43;) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;String sortStr = list.get(i).getSortLetters();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;char firstChar = sortStr.toUpperCase().charAt(0);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (firstChar == section) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return i;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return -1;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; @Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public Object[] getSections() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">}&nbsp;&nbsp;</span><br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n<span style=\"color:#000; word-wrap:break-word\">6.MainActivity 这里面的代码比较简单，我们对ClearEditText设置addTextChangedListener监听，当输入框内容发生变化根据里面的&#20540;过滤ListView，里面的&#20540;为空显示原来的列表，里面对列表数据进行排序用到PinyinComparator接口，该接口主要是用来比较对象的</span><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.ArrayList;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.Collections;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.List;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.app.Activity;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.os.Bundle;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.text.Editable;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.text.TextUtils;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.text.TextWatcher;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.View;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.AdapterView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.AdapterView.OnItemClickListener;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.ListView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.TextView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.Toast;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import com.example.sortlistview.SideBar.OnTouchingLetterChangedListener;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class MainActivity extends Activity {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private ListView sortListView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private SideBar sideBar;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 显示字母的TextView</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private TextView dialog;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private SortAdapter adapter;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private ClearEditText mClearEditText;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 汉字转换成拼音的类</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private CharacterParser characterParser;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private List&lt;SortModel&gt; SourceDateList;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据拼音来排列ListView里面的数据类</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private PinyinComparator pinyinComparator;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; @Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; protected void onCreate(Bundle savedInstanceState) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super.onCreate(savedInstanceState);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;setContentView(R.layout.activity_main);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;initViews();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private void initViews() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//实例化汉字转拼音类&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;characterParser = CharacterParser.getInstance();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;pinyinComparator = new PinyinComparator();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sideBar = (SideBar) findViewById(R.id.sidrbar);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;dialog = (TextView) findViewById(R.id.dialog);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sideBar.setTextView(dialog);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//设置右侧触摸监听&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sideBar.setOnTouchingLetterChangedListener(new OnTouchingLetterChangedListener() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void onTouchingLetterChanged(String s) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; //该字母首次出现的位置&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; int position = adapter.getPositionForSection(s.charAt(0));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if(position != -1){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView.setSelection(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView = (ListView) findViewById(R.id.country_lvcountry);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView.setOnItemClickListener(new OnItemClickListener() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void onItemClick(AdapterView&lt;?&gt; parent, View view,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int position, long id) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; //这里要利用adapter.getItem(position)来获取当前position所对应的对象&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; Toast.makeText(getApplication(), ((SortModel)adapter.getItem(position)).getName(), Toast.LENGTH_SHORT).show();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;SourceDateList = filledData(getResources().getStringArray(R.array.date));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;// 根据a-z进行排序源数据&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;Collections.sort(SourceDateList, pinyinComparator);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;adapter = new SortAdapter(this, SourceDateList);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView.setAdapter(adapter);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;mClearEditText = (ClearEditText) findViewById(R.id.filter_edit);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//根据输入框输入&#20540;的改变来过滤搜索&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;mClearEditText.addTextChangedListener(new TextWatcher() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void onTextChanged(CharSequence s, int start, int before, int count) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; //当输入框里面的&#20540;为空，更新为原来的列表，否则为过滤数据列表&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; filterData(s.toString());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void beforeTextChanged(CharSequence s, int start, int count,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int after) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void afterTextChanged(Editable s) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 为ListView填充数据</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param date</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @return</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private List&lt;SortModel&gt; filledData(String [] date){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;List&lt;SortModel&gt; mSortList = new ArrayList&lt;SortModel&gt;();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for(int i=0; i&lt;date.length; i&#43;&#43;){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SortModel sortModel = new SortModel();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sortModel.setName(date<span style=\"word-wrap:break-word\">);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//汉字转换成拼音&nbsp;&nbsp;</span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;String pinyin = characterParser.getSelling(date<span style=\"word-wrap:break-word\">);&nbsp;&nbsp;</span></span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;String sortString = pinyin.substring(0, 1).toUpperCase();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// 正则表达式，判断首字母是否是英文字母&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if(sortString.matches(&quot;[A-Z]&quot;)){&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; sortModel.setSortLetters(sortString.toUpperCase());&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}else{&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; sortModel.setSortLetters(&quot;#&quot;);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;mSortList.add(sortModel);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return mSortList;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据输入框中的&#20540;来过滤数据并更新ListView</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param filterStr</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private void filterData(String filterStr) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;List&lt;SortModel&gt; filterDateList = new ArrayList&lt;SortModel&gt;();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (TextUtils.isEmpty(filterStr)) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;filterDateList = SourceDateList;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;filterDateList.clear();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;for (SortModel sortModel : SourceDateList) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; String name = sortModel.getName();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (name.toUpperCase().indexOf(&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;filterStr.toString().toUpperCase()) != -1&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;|| characterParser.getSelling(name).toUpperCase()&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;.startsWith(filterStr.toString().toUpperCase())) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;filterDateList.add(sortModel);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;// 根据a-z进行排序&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;Collections.sort(filterDateList, pinyinComparator);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;adapter.updateListView(filterDateList);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">}&nbsp;&nbsp;</span></span><br style=\"word-wrap:break-word\">\r\n</span></li></ul>\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">7.PinyinComparator接口用来对ListView中的数据根据A-Z进行排序，前面两个if判断主要是将不是以汉字开头的数据放在后面<br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.Comparator;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">/**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">* @author xiaanming</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class PinyinComparator implements Comparator&lt;SortModel&gt; {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int compare(SortModel o1, SortModel o2) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//这里主要是用来对ListView里面的数据根据ABCDEFG...来排序&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (o2.getSortLetters().equals(&quot;#&quot;)) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return -1;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else if (o1.getSortLetters().equals(&quot;#&quot;)) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return 1;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return o1.getSortLetters().compareTo(o2.getSortLetters());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">}&nbsp;&nbsp;</span><br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<br>\r\n</p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><span style=\"color:#ca00; word-wrap:break-word\"><a target=\"_blank\" href=\"http://download.csdn.net/detail/xiaanming/6394377\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">项目源码，点击下载</a></span></span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><br>\r\n</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"></span></span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">宣传下本人的小制作：</span><img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"border:none; max-width:100%; font-size:18px\"><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\">&nbsp;&nbsp;\r\n 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\"><span style=\"color:rgb(255,0,0)\">豌豆荚市场</span>: 搜索 &nbsp;&quot;<span style=\"color:rgb(255,0,0)\">联机斗地主</span>&quot; &quot;<span style=\"color:rgb(255,0,0)\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" style=\"color:rgb(106,57,6); text-decoration:none\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<br>\r\n','\r\n\r\n<span style=\"color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">原文地址：</span><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">http://blog.csdn.net/xiaanming/article/details/12684155</a><br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">首先先看下效果图</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px; text-align:center\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><img id=\"aimg_122460\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161402gjdqmqo3o3b1g4ow.jpg\" class=\"zoom\" width=\"480\" height=\"854\" alt=\"\" style=\"word-wrap:break-word\"></span></span></p>\r\n<span style=\"color:#000; word-wrap:break-word; font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><span style=\"font-family:Arial; word-wrap:break-word\"><img id=\"aimg_122461\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161402ufaviv332bvcv622.jpg\" class=\"zoom\" width=\"480\" height=\"854\" alt=\"\" style=\"word-wrap:break-word\">&nbsp;<img id=\"aimg_122462\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161402abdunfxp7eszdpc7.jpg\" class=\"zoom\" width=\"480\" height=\"854\" alt=\"\" style=\"word-wrap:break-word\">&nbsp;<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n</p>\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">上面是一个带删除按钮的EditText，我们在输入框中输入可以自动过滤出我们想要的东西，当输入框中没有数据自动替换到原来的数据列表，然后下面一个ListView用来显示数据列表，右侧是一个字母索引表，当我们点击不同的字母,ListView会定位到该字母地方，了解了布局之后，我们先看下项目结构吧</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><img id=\"aimg_122463\" src=\"http://www.apkbus.com/data/attachment/forum/201310/16/161403xar5r7ra5krbfdko.jpg\" class=\"zoom\" width=\"321\" height=\"363\" alt=\"\" style=\"word-wrap:break-word\"></span></span></p>\r\n<span style=\"color:#000; word-wrap:break-word; font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><span style=\"font-family:Arial; word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n</p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">我按照项目中类的顺序来一一介绍其功能</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">1.SortModel 一个实体类，里面一个是ListView的name,另一个就是显示的name拼音的首字母<br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<font style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class SortModel {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private String name;&nbsp; &nbsp;//显示的数据&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private String sortLetters;&nbsp;&nbsp;//显示数据拼音的首字母&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getName() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return name;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setName(String name) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.name = name;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getSortLetters() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return sortLetters;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setSortLetters(String sortLetters) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.sortLetters = sortLetters;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">}&nbsp;&nbsp;</span><br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<span style=\"color:#000; word-wrap:break-word; font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><br style=\"word-wrap:break-word\">\r\n2.SideBar类就是ListView右侧的字母索引View，我们需要使用setTextView(TextView mTextDialog)来设置用来显示当前按下的字母的TextView,以及使用setOnTouchingLetterChangedListener方法来设置回调接口，在回调方法onTouchingLetterChanged(String s)中来处理不同的操作</span><br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<br style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\">\r\n<font style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.content.Context;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Canvas;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Color;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Paint;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.Typeface;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.graphics.drawable.ColorDrawable;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.util.AttributeSet;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.MotionEvent;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.View;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.TextView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class SideBar extends View {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; // 触摸事件&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private OnTouchingLetterChangedListener onTouchingLetterChangedListener;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; // 26个字母&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public static String[] b = { &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, &quot;#&quot; };&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private int choose = -1;// 选中&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private Paint paint = new Paint();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private TextView mTextDialog;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 为SideBar设置显示字母的TextView</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param mTextDialog</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setTextView(TextView mTextDialog) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.mTextDialog = mTextDialog;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SideBar(Context context, AttributeSet attrs, int defStyle) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super(context, attrs, defStyle);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SideBar(Context context, AttributeSet attrs) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super(context, attrs);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SideBar(Context context) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super(context);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 重写这个方法</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; protected void onDraw(Canvas canvas) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super.onDraw(canvas);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;// 获取焦点改变背景颜色.&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int height = getHeight();// 获取对应高度&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int width = getWidth(); // 获取对应宽度&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int singleHeight = height / b.length;// 获取每一个字母的高度&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for (int i = 0; i &lt; b.length; i&#43;&#43;) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setColor(Color.rgb(33, 65, 98));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// paint.setColor(Color.WHITE);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setTypeface(Typeface.DEFAULT_BOLD);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setAntiAlias(true);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.setTextSize(20);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// 选中的状态&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (i == choose) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; paint.setColor(Color.parseColor(&quot;#3399ff&quot;));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; paint.setFakeBoldText(true);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// x坐标等于中间-字符串宽度的一半.&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;float xPos = width / 2 - paint.measureText(b<span style=\"word-wrap:break-word\">) / 2;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;float yPos = singleHeight * i &#43; singleHeight;&nbsp;&nbsp;</span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;canvas.drawText(b<span style=\"word-wrap:break-word\">, xPos, yPos, paint);&nbsp;&nbsp;</span></span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;paint.reset();// 重置画笔&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; @Override&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public boolean dispatchTouchEvent(MotionEvent event) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final int action = event.getAction();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final float y = event.getY();// 点击y坐标&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final int oldChoose = choose;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final OnTouchingLetterChangedListener listener = onTouchingLetterChangedListener;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final int c = (int) (y / getHeight() * b.length);// 点击y坐标所占总高度的比例*b数组的长度就等于点击b中的个数.&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;switch (action) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;case MotionEvent.ACTION_UP:&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;setBackgroundDrawable(new ColorDrawable(0x00000000));&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;choose = -1;//&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;invalidate();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (mTextDialog != null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; mTextDialog.setVisibility(View.INVISIBLE);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;default:&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;setBackgroundResource(R.drawable.sidebar_background);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (oldChoose != c) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (c &gt;= 0 &amp;&amp; c &lt; b.length) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (listener != null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;listener.onTouchingLetterChanged(b[c]);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (mTextDialog != null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;mTextDialog.setText(b[c]);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;mTextDialog.setVisibility(View.VISIBLE);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;choose = c;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;invalidate();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return true;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 向外公开的方法</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param onTouchingLetterChangedListener</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setOnTouchingLetterChangedListener(&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;OnTouchingLetterChangedListener onTouchingLetterChangedListener) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.onTouchingLetterChangedListener = onTouchingLetterChangedListener;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 接口</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @author coder</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public interface OnTouchingLetterChangedListener {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;public void onTouchingLetterChanged(String s);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">}&nbsp;&nbsp;</span></span><br style=\"word-wrap:break-word\">\r\n</span></li></ul>\r\n<span style=\"word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,\'Microsoft Yahei\',Simsun; font-size:14px; line-height:21px\"><span style=\"word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">3.CharacterParser 这个类是将汉字转换成拼音的类，该拼音没有声调的，该类是单例类，其中定义了三个方法，在这个demo中用到的是getSelling(String chs)方法，将词组转换成拼音<br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">/**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">* Java汉字转换为拼音</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class CharacterParser {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private static int[] pyvalue = new int[] {-20319, -20317, -20304, -20295, -20292, -20283, -20265, -20257, -20242, -20230, -20051, -20036, -20032,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-20026, -20002, -19990, -19986, -19982, -19976, -19805, -19784, -19775, -19774, -19763, -19756, -19751, -19746, -19741, -19739, -19728,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-19725, -19715, -19540, -19531, -19525, -19515, -19500, -19484, -19479, -19467, -19289, -19288, -19281, -19275, -19270, -19263, -19261,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-19249, -19243, -19242, -19238, -19235, -19227, -19224, -19218, -19212, -19038, -19023, -19018, -19006, -19003, -18996, -18977, -18961,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-18952, -18783, -18774, -18773, -18763, -18756, -18741, -18735, -18731, -18722, -18710, -18697, -18696, -18526, -18518, -18501, -18490,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-18478, -18463, -18448, -18447, -18446, -18239, -18237, -18231, -18220, -18211, -18201, -18184, -18183, -18181, -18012, -17997, -17988,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-17970, -17964, -17961, -17950, -17947, -17931, -17928, -17922, -17759, -17752, -17733, -17730, -17721, -17703, -17701, -17697, -17692,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-17683, -17676, -17496, -17487, -17482, -17468, -17454, -17433, -17427, -17417, -17202, -17185, -16983, -16970, -16942, -16915, -16733,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-16708, -16706, -16689, -16664, -16657, -16647, -16474, -16470, -16465, -16459, -16452, -16448, -16433, -16429, -16427, -16423, -16419,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-16412, -16407, -16403, -16401, -16393, -16220, -16216, -16212, -16205, -16202, -16187, -16180, -16171, -16169, -16158, -16155, -15959,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-15958, -15944, -15933, -15920, -15915, -15903, -15889, -15878, -15707, -15701, -15681, -15667, -15661, -15659, -15652, -15640, -15631,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-15625, -15454, -15448, -15436, -15435, -15419, -15416, -15408, -15394, -15385, -15377, -15375, -15369, -15363, -15362, -15183, -15180,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-15165, -15158, -15153, -15150, -15149, -15144, -15143, -15141, -15140, -15139, -15128, -15121, -15119, -15117, -15110, -15109, -14941,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14937, -14933, -14930, -14929, -14928, -14926, -14922, -14921, -14914, -14908, -14902, -14894, -14889, -14882, -14873, -14871, -14857,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14678, -14674, -14670, -14668, -14663, -14654, -14645, -14630, -14594, -14429, -14407, -14399, -14384, -14379, -14368, -14355, -14353,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14345, -14170, -14159, -14151, -14149, -14145, -14140, -14137, -14135, -14125, -14123, -14122, -14112, -14109, -14099, -14097, -14094,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-14092, -14090, -14087, -14083, -13917, -13914, -13910, -13907, -13906, -13905, -13896, -13894, -13878, -13870, -13859, -13847, -13831,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-13658, -13611, -13601, -13406, -13404, -13400, -13398, -13395, -13391, -13387, -13383, -13367, -13359, -13356, -13343, -13340, -13329,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-13326, -13318, -13147, -13138, -13120, -13107, -13096, -13095, -13091, -13076, -13068, -13063, -13060, -12888, -12875, -12871, -12860,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-12858, -12852, -12849, -12838, -12831, -12829, -12812, -12802, -12607, -12597, -12594, -12585, -12556, -12359, -12346, -12320, -12300,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-12120, -12099, -12089, -12074, -12067, -12058, -12039, -11867, -11861, -11847, -11831, -11798, -11781, -11604, -11589, -11536, -11358,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-11340, -11339, -11324, -11303, -11097, -11077, -11067, -11055, -11052, -11045, -11041, -11038, -11024, -11020, -11019, -11018, -11014,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-10838, -10832, -10815, -10800, -10790, -10780, -10764, -10587, -10544, -10533, -10519, -10331, -10329, -10328, -10322, -10315, -10309,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;-10307, -10296, -10281, -10274, -10270, -10262, -10260, -10256, -10254};&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public static String[] pystr = new String[] {&quot;a&quot;, &quot;ai&quot;, &quot;an&quot;, &quot;ang&quot;, &quot;ao&quot;, &quot;ba&quot;, &quot;bai&quot;, &quot;ban&quot;, &quot;bang&quot;, &quot;bao&quot;, &quot;bei&quot;, &quot;ben&quot;, &quot;beng&quot;, &quot;bi&quot;, &quot;bian&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;biao&quot;, &quot;bie&quot;, &quot;bin&quot;, &quot;bing&quot;, &quot;bo&quot;, &quot;bu&quot;, &quot;ca&quot;, &quot;cai&quot;, &quot;can&quot;, &quot;cang&quot;, &quot;cao&quot;, &quot;ce&quot;, &quot;ceng&quot;, &quot;cha&quot;, &quot;chai&quot;, &quot;chan&quot;, &quot;chang&quot;, &quot;chao&quot;, &quot;che&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;chen&quot;, &quot;cheng&quot;, &quot;chi&quot;, &quot;chong&quot;, &quot;chou&quot;, &quot;chu&quot;, &quot;chuai&quot;, &quot;chuan&quot;, &quot;chuang&quot;, &quot;chui&quot;, &quot;chun&quot;, &quot;chuo&quot;, &quot;ci&quot;, &quot;cong&quot;, &quot;cou&quot;, &quot;cu&quot;, &quot;cuan&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;cui&quot;, &quot;cun&quot;, &quot;cuo&quot;, &quot;da&quot;, &quot;dai&quot;, &quot;dan&quot;, &quot;dang&quot;, &quot;dao&quot;, &quot;de&quot;, &quot;deng&quot;, &quot;di&quot;, &quot;dian&quot;, &quot;diao&quot;, &quot;die&quot;, &quot;ding&quot;, &quot;diu&quot;, &quot;dong&quot;, &quot;dou&quot;, &quot;du&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;duan&quot;, &quot;dui&quot;, &quot;dun&quot;, &quot;duo&quot;, &quot;e&quot;, &quot;en&quot;, &quot;er&quot;, &quot;fa&quot;, &quot;fan&quot;, &quot;fang&quot;, &quot;fei&quot;, &quot;fen&quot;, &quot;feng&quot;, &quot;fo&quot;, &quot;fou&quot;, &quot;fu&quot;, &quot;ga&quot;, &quot;gai&quot;, &quot;gan&quot;, &quot;gang&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;gao&quot;, &quot;ge&quot;, &quot;gei&quot;, &quot;gen&quot;, &quot;geng&quot;, &quot;gong&quot;, &quot;gou&quot;, &quot;gu&quot;, &quot;gua&quot;, &quot;guai&quot;, &quot;guan&quot;, &quot;guang&quot;, &quot;gui&quot;, &quot;gun&quot;, &quot;guo&quot;, &quot;ha&quot;, &quot;hai&quot;, &quot;han&quot;, &quot;hang&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;hao&quot;, &quot;he&quot;, &quot;hei&quot;, &quot;hen&quot;, &quot;heng&quot;, &quot;hong&quot;, &quot;hou&quot;, &quot;hu&quot;, &quot;hua&quot;, &quot;huai&quot;, &quot;huan&quot;, &quot;huang&quot;, &quot;hui&quot;, &quot;hun&quot;, &quot;huo&quot;, &quot;ji&quot;, &quot;jia&quot;, &quot;jian&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;jiang&quot;, &quot;jiao&quot;, &quot;jie&quot;, &quot;jin&quot;, &quot;jing&quot;, &quot;jiong&quot;, &quot;jiu&quot;, &quot;ju&quot;, &quot;juan&quot;, &quot;jue&quot;, &quot;jun&quot;, &quot;ka&quot;, &quot;kai&quot;, &quot;kan&quot;, &quot;kang&quot;, &quot;kao&quot;, &quot;ke&quot;, &quot;ken&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;keng&quot;, &quot;kong&quot;, &quot;kou&quot;, &quot;ku&quot;, &quot;kua&quot;, &quot;kuai&quot;, &quot;kuan&quot;, &quot;kuang&quot;, &quot;kui&quot;, &quot;kun&quot;, &quot;kuo&quot;, &quot;la&quot;, &quot;lai&quot;, &quot;lan&quot;, &quot;lang&quot;, &quot;lao&quot;, &quot;le&quot;, &quot;lei&quot;, &quot;leng&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;li&quot;, &quot;lia&quot;, &quot;lian&quot;, &quot;liang&quot;, &quot;liao&quot;, &quot;lie&quot;, &quot;lin&quot;, &quot;ling&quot;, &quot;liu&quot;, &quot;long&quot;, &quot;lou&quot;, &quot;lu&quot;, &quot;lv&quot;, &quot;luan&quot;, &quot;lue&quot;, &quot;lun&quot;, &quot;luo&quot;, &quot;ma&quot;, &quot;mai&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;man&quot;, &quot;mang&quot;, &quot;mao&quot;, &quot;me&quot;, &quot;mei&quot;, &quot;men&quot;, &quot;meng&quot;, &quot;mi&quot;, &quot;mian&quot;, &quot;miao&quot;, &quot;mie&quot;, &quot;min&quot;, &quot;ming&quot;, &quot;miu&quot;, &quot;mo&quot;, &quot;mou&quot;, &quot;mu&quot;, &quot;na&quot;, &quot;nai&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;nan&quot;, &quot;nang&quot;, &quot;nao&quot;, &quot;ne&quot;, &quot;nei&quot;, &quot;nen&quot;, &quot;neng&quot;, &quot;ni&quot;, &quot;nian&quot;, &quot;niang&quot;, &quot;niao&quot;, &quot;nie&quot;, &quot;nin&quot;, &quot;ning&quot;, &quot;niu&quot;, &quot;nong&quot;, &quot;nu&quot;, &quot;nv&quot;, &quot;nuan&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;nue&quot;, &quot;nuo&quot;, &quot;o&quot;, &quot;ou&quot;, &quot;pa&quot;, &quot;pai&quot;, &quot;pan&quot;, &quot;pang&quot;, &quot;pao&quot;, &quot;pei&quot;, &quot;pen&quot;, &quot;peng&quot;, &quot;pi&quot;, &quot;pian&quot;, &quot;piao&quot;, &quot;pie&quot;, &quot;pin&quot;, &quot;ping&quot;, &quot;po&quot;, &quot;pu&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;qi&quot;, &quot;qia&quot;, &quot;qian&quot;, &quot;qiang&quot;, &quot;qiao&quot;, &quot;qie&quot;, &quot;qin&quot;, &quot;qing&quot;, &quot;qiong&quot;, &quot;qiu&quot;, &quot;qu&quot;, &quot;quan&quot;, &quot;que&quot;, &quot;qun&quot;, &quot;ran&quot;, &quot;rang&quot;, &quot;rao&quot;, &quot;re&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;ren&quot;, &quot;reng&quot;, &quot;ri&quot;, &quot;rong&quot;, &quot;rou&quot;, &quot;ru&quot;, &quot;ruan&quot;, &quot;rui&quot;, &quot;run&quot;, &quot;ruo&quot;, &quot;sa&quot;, &quot;sai&quot;, &quot;san&quot;, &quot;sang&quot;, &quot;sao&quot;, &quot;se&quot;, &quot;sen&quot;, &quot;seng&quot;, &quot;sha&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;shai&quot;, &quot;shan&quot;, &quot;shang&quot;, &quot;shao&quot;, &quot;she&quot;, &quot;shen&quot;, &quot;sheng&quot;, &quot;shi&quot;, &quot;shou&quot;, &quot;shu&quot;, &quot;shua&quot;, &quot;shuai&quot;, &quot;shuan&quot;, &quot;shuang&quot;, &quot;shui&quot;, &quot;shun&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;shuo&quot;, &quot;si&quot;, &quot;song&quot;, &quot;sou&quot;, &quot;su&quot;, &quot;suan&quot;, &quot;sui&quot;, &quot;sun&quot;, &quot;suo&quot;, &quot;ta&quot;, &quot;tai&quot;, &quot;tan&quot;, &quot;tang&quot;, &quot;tao&quot;, &quot;te&quot;, &quot;teng&quot;, &quot;ti&quot;, &quot;tian&quot;, &quot;tiao&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;tie&quot;, &quot;ting&quot;, &quot;tong&quot;, &quot;tou&quot;, &quot;tu&quot;, &quot;tuan&quot;, &quot;tui&quot;, &quot;tun&quot;, &quot;tuo&quot;, &quot;wa&quot;, &quot;wai&quot;, &quot;wan&quot;, &quot;wang&quot;, &quot;wei&quot;, &quot;wen&quot;, &quot;weng&quot;, &quot;wo&quot;, &quot;wu&quot;, &quot;xi&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;xia&quot;, &quot;xian&quot;, &quot;xiang&quot;, &quot;xiao&quot;, &quot;xie&quot;, &quot;xin&quot;, &quot;xing&quot;, &quot;xiong&quot;, &quot;xiu&quot;, &quot;xu&quot;, &quot;xuan&quot;, &quot;xue&quot;, &quot;xun&quot;, &quot;ya&quot;, &quot;yan&quot;, &quot;yang&quot;, &quot;yao&quot;, &quot;ye&quot;, &quot;yi&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yin&quot;, &quot;ying&quot;, &quot;yo&quot;, &quot;yong&quot;, &quot;you&quot;, &quot;yu&quot;, &quot;yuan&quot;, &quot;yue&quot;, &quot;yun&quot;, &quot;za&quot;, &quot;zai&quot;, &quot;zan&quot;, &quot;zang&quot;, &quot;zao&quot;, &quot;ze&quot;, &quot;zei&quot;, &quot;zen&quot;, &quot;zeng&quot;, &quot;zha&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;zhai&quot;, &quot;zhan&quot;, &quot;zhang&quot;, &quot;zhao&quot;, &quot;zhe&quot;, &quot;zhen&quot;, &quot;zheng&quot;, &quot;zhi&quot;, &quot;zhong&quot;, &quot;zhou&quot;, &quot;zhu&quot;, &quot;zhua&quot;, &quot;zhuai&quot;, &quot;zhuan&quot;, &quot;zhuang&quot;, &quot;zhui&quot;,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;zhun&quot;, &quot;zhuo&quot;, &quot;zi&quot;, &quot;zong&quot;, &quot;zou&quot;, &quot;zu&quot;, &quot;zuan&quot;, &quot;zui&quot;, &quot;zun&quot;, &quot;zuo&quot;};&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private StringBuilder buffer;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private String resource;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private static CharacterParser characterParser = new CharacterParser();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public static CharacterParser getInstance() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return characterParser;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getResource() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return resource;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void setResource(String resource) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.resource = resource;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /** * 汉字转成ASCII码 * * @param chs *&nbsp;<a target=\"_blank\" href=\"http://www.apkbus.com/home.php?mod=space&amp;uid=309376\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">@return</a>&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private int getChsAscii(String chs) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int asc = 0;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;try {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;byte[] bytes = chs.getBytes(&quot;gb2312&quot;);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (bytes == null || bytes.length &gt; 2 || bytes.length &lt;= 0) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; throw new RuntimeException(&quot;illegal resource string&quot;);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (bytes.length == 1) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; asc = bytes[0];&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (bytes.length == 2) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; int hightByte = 256 &#43; bytes[0];&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; int lowByte = 256 &#43; bytes[1];&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; asc = (256 * hightByte &#43; lowByte) - 256 * 256;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} catch (Exception e) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;System.out.println(&quot;ERROR:ChineseSpelling.class-getChsAscii(String chs)&quot; &#43; e);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return asc;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /** * 单字解析 * * @param str * @return */&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String convert(String str) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;String result = null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int ascii = getChsAscii(str);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (ascii &gt; 0 &amp;&amp; ascii &lt; 160) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;result = String.valueOf((char) ascii);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;for (int i = (pyvalue.length - 1); i &gt;= 0; i--) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (pyvalue<span style=\"word-wrap:break-word\">&nbsp;&lt;= ascii) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;result = pystr<span style=\"word-wrap:break-word\">;&nbsp;&nbsp;</span></span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return result;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /** * 词组解析 * * @param chs * @return */&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getSelling(String chs) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;String key, value;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;buffer = new StringBuilder();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for (int i = 0; i &lt; chs.length(); i&#43;&#43;) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;key = chs.substring(i, i &#43; 1);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (key.getBytes().length &gt;= 2) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; value = (String) convert(key);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (value == null) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;value = &quot;unknown&quot;;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;} else {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; value = key;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;buffer.append(value);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return buffer.toString();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public String getSpelling() {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return this.getSelling(this.getResource());&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">}&nbsp;&nbsp;</span></span><br style=\"word-wrap:break-word\">\r\n</span></li></ul>\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">4.ClearEditText类是自定义的一个在右侧有删除图片的EditText，当然你也可以用Android原生的EditText，该类我之前有介绍，我这里就不贴上代码了<span style=\"color:#ca00; word-wrap:break-word\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/11066685\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">Android\r\n 带清除功能的输入框控件ClearEditText,仿IOS的输入框</a></span><br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">5.SortAdapter 数据的适配器类，该类需要实现SectionIndexer接口，该接口是用来控制ListView分组的，该接口有三个方法getSectionForPosition(int position)，getPositionForSection(int section)，getSections()，我们只需要自行实现前面两个方法</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<ul style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:disc\">\r\ngetSectionForPosition(int position)是根据ListView的position来获取该位置上面的name的首字母char的ascii&#20540;，例如： 如果该position上面的name是阿妹，首字母就是A，那么此方法返回的就是\'A\'字母的ascii&#20540;，也就是65， \'B\'是66，依次类推</li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:disc\">\r\ngetPositionForSection(int section)就是根据首字母的ascii&#20540;来获取在该ListView中第一次出现该首字母的位置，例如：从上面的效果图1中，如果section是65 ，也就是‘B’的ascii&#20540;，那么该方法返回的position就是2<br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<br style=\"word-wrap:break-word\">\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">然后就是getView()方法，首先我们根据ListView的position调用getSectionForPosition(int position)来获取该位置上面name的首字母的ascii&#20540;,然后根据这个ascii&#20540;调用getPositionForSection(int section)来获取第一次出现该首字母的position，如果ListView的position\r\n 等于 根据这个ascii&#20540;调用getPositionForSection(int section)来获取第一次出现该首字母的position，则显示分类字母 否则隐藏</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.List;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.content.Context;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.LayoutInflater;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.View;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.ViewGroup;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.BaseAdapter;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.SectionIndexer;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.TextView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class SortAdapter extends BaseAdapter implements SectionIndexer{&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private List&lt;SortModel&gt; list = null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private Context mContext;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public SortAdapter(Context mContext, List&lt;SortModel&gt; list) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.mContext = mContext;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.list = list;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 当ListView数据发生变化时,调用此方法来更新ListView</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param list</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public void updateListView(List&lt;SortModel&gt; list){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;this.list = list;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;notifyDataSetChanged();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int getCount() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return this.list.size();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public Object getItem(int position) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return list.get(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public long getItemId(int position) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return position;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public View getView(final int position, View view, ViewGroup arg2) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;ViewHolder viewHolder = null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;final SortModel mContent = list.get(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (view == null) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder = new ViewHolder();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;view = LayoutInflater.from(mContext).inflate(R.layout.item, null);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvTitle = (TextView) view.findViewById(R.id.title);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter = (TextView) view.findViewById(R.id.catalog);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;view.setTag(viewHolder);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder = (ViewHolder) view.getTag();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//根据position获取分类的首字母的char ascii&#20540;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int section = getSectionForPosition(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//如果当前位置等于该分类首字母的Char的位置 ，则认为是第一次出现&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if(position == getPositionForSection(section)){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter.setVisibility(View.VISIBLE);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter.setText(mContent.getSortLetters());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;viewHolder.tvLetter.setVisibility(View.GONE);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;viewHolder.tvTitle.setText(this.list.get(position).getName());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return view;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; final static class ViewHolder {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;TextView tvLetter;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;TextView tvTitle;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据ListView的当前位置获取分类的首字母的char ascii&#20540;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int getSectionForPosition(int position) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return list.get(position).getSortLetters().charAt(0);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据分类的首字母的Char ascii&#20540;获取其第一次出现该首字母的位置</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int getPositionForSection(int section) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for (int i = 0; i &lt; getCount(); i&#43;&#43;) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;String sortStr = list.get(i).getSortLetters();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;char firstChar = sortStr.toUpperCase().charAt(0);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (firstChar == section) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return i;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return -1;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; @Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public Object[] getSections() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return null;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">}&nbsp;&nbsp;</span><br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n<span style=\"color:#000; word-wrap:break-word\">6.MainActivity 这里面的代码比较简单，我们对ClearEditText设置addTextChangedListener监听，当输入框内容发生变化根据里面的&#20540;过滤ListView，里面的&#20540;为空显示原来的列表，里面对列表数据进行排序用到PinyinComparator接口，该接口主要是用来比较对象的</span><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.ArrayList;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.Collections;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.List;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.app.Activity;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.os.Bundle;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.text.Editable;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.text.TextUtils;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.text.TextWatcher;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.view.View;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.AdapterView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.AdapterView.OnItemClickListener;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.ListView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.TextView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import android.widget.Toast;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import com.example.sortlistview.SideBar.OnTouchingLetterChangedListener;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class MainActivity extends Activity {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private ListView sortListView;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private SideBar sideBar;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 显示字母的TextView</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private TextView dialog;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private SortAdapter adapter;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private ClearEditText mClearEditText;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 汉字转换成拼音的类</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private CharacterParser characterParser;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private List&lt;SortModel&gt; SourceDateList;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据拼音来排列ListView里面的数据类</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private PinyinComparator pinyinComparator;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; @Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; protected void onCreate(Bundle savedInstanceState) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;super.onCreate(savedInstanceState);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;setContentView(R.layout.activity_main);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;initViews();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private void initViews() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//实例化汉字转拼音类&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;characterParser = CharacterParser.getInstance();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;pinyinComparator = new PinyinComparator();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sideBar = (SideBar) findViewById(R.id.sidrbar);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;dialog = (TextView) findViewById(R.id.dialog);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sideBar.setTextView(dialog);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//设置右侧触摸监听&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sideBar.setOnTouchingLetterChangedListener(new OnTouchingLetterChangedListener() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void onTouchingLetterChanged(String s) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; //该字母首次出现的位置&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; int position = adapter.getPositionForSection(s.charAt(0));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if(position != -1){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView.setSelection(position);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView = (ListView) findViewById(R.id.country_lvcountry);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView.setOnItemClickListener(new OnItemClickListener() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void onItemClick(AdapterView&lt;?&gt; parent, View view,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int position, long id) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; //这里要利用adapter.getItem(position)来获取当前position所对应的对象&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; Toast.makeText(getApplication(), ((SortModel)adapter.getItem(position)).getName(), Toast.LENGTH_SHORT).show();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;SourceDateList = filledData(getResources().getStringArray(R.array.date));&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;// 根据a-z进行排序源数据&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;Collections.sort(SourceDateList, pinyinComparator);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;adapter = new SortAdapter(this, SourceDateList);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sortListView.setAdapter(adapter);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;mClearEditText = (ClearEditText) findViewById(R.id.filter_edit);&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//根据输入框输入&#20540;的改变来过滤搜索&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;mClearEditText.addTextChangedListener(new TextWatcher() {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void onTextChanged(CharSequence s, int start, int before, int count) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; //当输入框里面的&#20540;为空，更新为原来的列表，否则为过滤数据列表&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; filterData(s.toString());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void beforeTextChanged(CharSequence s, int start, int count,&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;int after) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;@Override&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;public void afterTextChanged(Editable s) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 为ListView填充数据</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param date</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @return</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private List&lt;SortModel&gt; filledData(String [] date){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;List&lt;SortModel&gt; mSortList = new ArrayList&lt;SortModel&gt;();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for(int i=0; i&lt;date.length; i&#43;&#43;){&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SortModel sortModel = new SortModel();&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sortModel.setName(date<span style=\"word-wrap:break-word\">);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//汉字转换成拼音&nbsp;&nbsp;</span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;String pinyin = characterParser.getSelling(date<span style=\"word-wrap:break-word\">);&nbsp;&nbsp;</span></span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;String sortString = pinyin.substring(0, 1).toUpperCase();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// 正则表达式，判断首字母是否是英文字母&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if(sortString.matches(&quot;[A-Z]&quot;)){&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; sortModel.setSortLetters(sortString.toUpperCase());&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}else{&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; sortModel.setSortLetters(&quot;#&quot;);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;mSortList.add(sortModel);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return mSortList;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; /**</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* 根据输入框中的&#20540;来过滤数据并更新ListView</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;* @param filterStr</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; private void filterData(String filterStr) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;List&lt;SortModel&gt; filterDateList = new ArrayList&lt;SortModel&gt;();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (TextUtils.isEmpty(filterStr)) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;filterDateList = SourceDateList;&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;filterDateList.clear();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;for (SortModel sortModel : SourceDateList) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; String name = sortModel.getName();&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (name.toUpperCase().indexOf(&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;filterStr.toString().toUpperCase()) != -1&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;|| characterParser.getSelling(name).toUpperCase()&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;.startsWith(filterStr.toString().toUpperCase())) {&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;filterDateList.add(sortModel);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;// 根据a-z进行排序&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;Collections.sort(filterDateList, pinyinComparator);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;adapter.updateListView(filterDateList);&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;</span></span></span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"word-wrap:break-word\"><span style=\"color:black; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\">}&nbsp;&nbsp;</span></span><br style=\"word-wrap:break-word\">\r\n</span></li></ul>\r\n<span style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word\"><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</span></span>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\">7.PinyinComparator接口用来对ListView中的数据根据A-Z进行排序，前面两个if判断主要是将不是以汉字开头的数据放在后面<br style=\"word-wrap:break-word\">\r\n</span></span></p>\r\n<br style=\"word-wrap:break-word\">\r\n<font face=\"Consolas,\" style=\"word-wrap:break-word\"><font color=\"silver\" style=\"word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:rgb(248,248,248)\"><span style=\"font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; word-wrap:break-word\"><span style=\"word-wrap:break-word; font-size:9px\"><span style=\"word-wrap:break-word; font-weight:700\">[java]</span>&nbsp;<span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">view\r\n plain</a></span></span></span><span style=\"color:#a0a0a0; word-wrap:break-word\"><span style=\"word-wrap:break-word; background-color:inherit\"><span style=\"word-wrap:break-word; font-size:9px\"><a target=\"_blank\" href=\"http://blog.csdn.net/xiaanming/article/details/12684155#\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">copy</a></span></span></span><br style=\"word-wrap:break-word\">\r\n</span></span></span></font><br style=\"word-wrap:break-word\">\r\n<br style=\"word-wrap:break-word\">\r\n</font>\r\n<ul type=\"1\" class=\"litype_1\" style=\"word-wrap:break-word; margin:0px 0px 0px 14px; padding:0px\">\r\n<li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">package com.example.sortlistview;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">import java.util.Comparator;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">/**</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">* @author xiaanming</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">*/&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">public class PinyinComparator implements Comparator&lt;SortModel&gt; {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; public int compare(SortModel o1, SortModel o2) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;//这里主要是用来对ListView里面的数据根据ABCDEFG...来排序&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (o2.getSortLetters().equals(&quot;#&quot;)) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return -1;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else if (o1.getSortLetters().equals(&quot;#&quot;)) {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return 1;&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return o1.getSortLetters().compareTo(o2.getSortLetters());&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">&nbsp; &nbsp; }&nbsp;&nbsp;</span></li><li style=\"word-wrap:break-word; margin:0px 0px 0px 2em; padding:0px; list-style:decimal\">\r\n<span style=\"color:black; word-wrap:break-word\">}&nbsp;&nbsp;</span><br style=\"word-wrap:break-word\">\r\n</li></ul>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<br>\r\n</p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><span style=\"color:#ca00; word-wrap:break-word\"><a target=\"_blank\" href=\"http://download.csdn.net/detail/xiaanming/6394377\" target=\"_blank\" style=\"word-wrap:break-word; color:rgb(51,102,153)\">项目源码，点击下载</a></span></span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"><br>\r\n</span></span></p>\r\n<p style=\"word-wrap:break-word; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:26px\">\r\n<span style=\"color:#000; word-wrap:break-word\"><span style=\"font-family:Arial; word-wrap:break-word\"></span></span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">宣传下本人的小制作：</span><img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"border:none; max-width:100%; font-size:18px\"><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\">&nbsp;&nbsp;\r\n 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\"><span style=\"color:rgb(255,0,0)\">豌豆荚市场</span>: 搜索 &nbsp;&quot;<span style=\"color:rgb(255,0,0)\">联机斗地主</span>&quot; &quot;<span style=\"color:rgb(255,0,0)\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p style=\"color:rgb(54,46,43); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" style=\"color:rgb(106,57,6); text-decoration:none\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<br>\r\n',1,'',0,0,'2015-02-02 00:40:54','2015-02-02 00:40:54','2015-02-02 00:40:54'),(15,1,3,'分享一个Android版 仿QQ局域网即时通信软件(可发文件、语音、录音)','517c20a7c70ef49b454455ee143d41c3',0,'\r\n\r\n<p><span style=\"font-size:24px; color:#ff0000\">一、支持的功能有文字信息交互、语音聊天、发送文件和录音</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\">源码','\r\n\r\n<p><span style=\"font-size:24px; color:#ff0000\">一、支持的功能有文字信息交互、语音聊天、发送文件和录音</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\">源码会在后面附上。</span></p>\r\n<p><span style=\"font-size:24px\">二、UI展示图</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\"><img src=\"http://img.blog.csdn.net/20140731155700005?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\"><img src=\"http://img.blog.csdn.net/20140731155709022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\"><img src=\"http://img.blog.csdn.net/20140731155717119?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:24px\">三、经过我的测试，是非常成功的。只是有一点不足就是语音实时通话的时候声音会回声甚至死机。 文件传送和文字，录音都比较成功。</span></p>\r\n<p><span style=\"font-size:24px\">四、本软件是用Java编码，在安卓平台上的应用。使用了UDP协议和TCP协议。</span></p>\r\n<p><span style=\"font-size:24px\">大家可以学习这两部分的代码。 里面注释还是比较多。</span></p>\r\n<p><span style=\"font-size:24px\">五、当然我只是个学生，这个只是学生版本，仅供大家学习借鉴之用。绝对不能用于商业拿去直接卖，或者改改就上架某市场。</span></p>\r\n<p><span style=\"font-size:24px\">六、</span><span style=\"font-size:18px\">宣传下本人的小制作：</span><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\"> &nbsp; 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p><span style=\"font-size:18px\"><span style=\"background-color:rgb(255,255,255)\"><span style=\"color:#ff0000\">豌豆荚市场</span></span>: 搜索 &nbsp;&quot;<span style=\"color:#ff0000\">联机斗地主</span>&quot; &quot;<span style=\"color:#ff0000\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p><span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<p>&nbsp;<img src=\"http://img.blog.csdn.net/20140818205324187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"font-size:18px\"></p>\r\n<p><span style=\"font-size:18px\"><a target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.seven.quickphone\" target=\"_blank\"><span style=\"color:#33cc00\">&nbsp;</span><span style=\"color:#009900\">快捷电话本</span></a>&nbsp;\r\n<a target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" target=\"_blank\">\r\n<span style=\"color:#000099\">单机斗地主Wifi版</span></a></span></p>\r\n<p><span style=\"font-size:24px\">七、最后奉上Android仿QQ通信软件的下载连接</span></p>\r\n<p><span style=\"font-size:18px\">CSDN下载地址: </span><span style=\"font-size:12px\">http://download.csdn.net/detail/cq361106306/7699897</span></p>\r\n<p><span style=\"font-size:18px\">百度盘下载地址:链接: pan.baid把我删掉u.com/s/1dD8FnTf 密码: 5u3d</span></p>\r\n<p><span style=\"font-size:24px\">八、原文出处转载必带！</span><span style=\"font-size:14px\">http://blog.csdn.net/cq361106306/article/details/38318663</span></p>\r\n<p><br>\r\n</p>\r\n','\r\n\r\n<p><span style=\"font-size:24px; color:#ff0000\">一、支持的功能有文字信息交互、语音聊天、发送文件和录音</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\">源码会在后面附上。</span></p>\r\n<p><span style=\"font-size:24px\">二、UI展示图</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\"><img src=\"http://img.blog.csdn.net/20140731155700005?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\"><img src=\"http://img.blog.csdn.net/20140731155709022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:24px; color:#ff0000\"><img src=\"http://img.blog.csdn.net/20140731155717119?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:24px\">三、经过我的测试，是非常成功的。只是有一点不足就是语音实时通话的时候声音会回声甚至死机。 文件传送和文字，录音都比较成功。</span></p>\r\n<p><span style=\"font-size:24px\">四、本软件是用Java编码，在安卓平台上的应用。使用了UDP协议和TCP协议。</span></p>\r\n<p><span style=\"font-size:24px\">大家可以学习这两部分的代码。 里面注释还是比较多。</span></p>\r\n<p><span style=\"font-size:24px\">五、当然我只是个学生，这个只是学生版本，仅供大家学习借鉴之用。绝对不能用于商业拿去直接卖，或者改改就上架某市场。</span></p>\r\n<p><span style=\"font-size:24px\">六、</span><span style=\"font-size:18px\">宣传下本人的小制作：</span><span style=\"font-size:18px\">&nbsp;</span><span style=\"font-size:18px; color:rgb(255,0,0)\">单机斗地主-wifi版</span><span style=\"font-size:18px\"> &nbsp; 希望大家多多支持。能下载下来玩一玩。</span></p>\r\n<p><span style=\"font-size:18px\"><span style=\"background-color:rgb(255,255,255)\"><span style=\"color:#ff0000\">豌豆荚市场</span></span>: 搜索 &nbsp;&quot;<span style=\"color:#ff0000\">联机斗地主</span>&quot; &quot;<span style=\"color:#ff0000\">单机斗地主-wifi版</span>&quot;都能搜到。&nbsp;</span></p>\r\n<p><span style=\"font-size:18px\">直达连接 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\">http://www.wandoujia.com/apps/com.hj.singlejoker</a></span></p>\r\n<p>&nbsp;<img src=\"http://img.blog.csdn.net/20140818205324187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20140731160257574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" style=\"font-size:18px\"></p>\r\n<p><span style=\"font-size:18px\"><a target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.seven.quickphone\" target=\"_blank\"><span style=\"color:#33cc00\">&nbsp;</span><span style=\"color:#009900\">快捷电话本</span></a>&nbsp;\r\n<a target=\"_blank\" href=\"http://www.wandoujia.com/apps/com.hj.singlejoker\" target=\"_blank\">\r\n<span style=\"color:#000099\">单机斗地主Wifi版</span></a></span></p>\r\n<p><span style=\"font-size:24px\">七、最后奉上Android仿QQ通信软件的下载连接</span></p>\r\n<p><span style=\"font-size:18px\">CSDN下载地址: </span><span style=\"font-size:12px\">http://download.csdn.net/detail/cq361106306/7699897</span></p>\r\n<p><span style=\"font-size:18px\">百度盘下载地址:链接: pan.baid把我删掉u.com/s/1dD8FnTf 密码: 5u3d</span></p>\r\n<p><span style=\"font-size:24px\">八、原文出处转载必带！</span><span style=\"font-size:14px\">http://blog.csdn.net/cq361106306/article/details/38318663</span></p>\r\n<p><br>\r\n</p>\r\n',2,'Android局域网,Android通信软件',0,0,'2015-02-02 00:40:55','2015-02-02 00:40:55','2015-02-02 00:40:55'),(16,1,4,'如何进入TOP IT公司','366e5edb2a9b052cf453ad98136604e2',0,'\r\n\r\n外企的面试都面写啥？不同的企业也是不一样的，总的来说可以归结为以下几句话：<br>\r\n<br>\r\n<br>\r\n三类企业面实战，二类企业面基础，一类企业面算','\r\n\r\n外企的面试都面写啥？不同的企业也是不一样的，总的来说可以归结为以下几句话：<br>\r\n<br>\r\n<br>\r\n三类企业面实战，二类企业面基础，一类企业面算法。<br>\r\n在此声明，此处所谓的一二三类，绝没有轻视其他企业的意思，这里的一二三类基本上是按照本科毕业的时候起薪来划分的，一类企业指的是年薪15万以上的企业，二类企业指的是年薪10万左右的企业，三类企业指的是年薪5万左右的企业。当然按照上两次的描述大家可以知道，并不是起薪高的企业的程序员一定最好发展的最好，而进入创业企业的人最后可能后来居上，成为IT达人。当然此规律也不仅仅适用于外企。<br>\r\n<br>\r\n<br>\r\n<strong>三类企业</strong><br>\r\n三类企业起薪不高，招聘的目的也相对的明确，是要找那种来了就能真枪实弹的把东西作出来的人。<br>\r\n<br>\r\n<br>\r\n他们多不太关心员工的培训和成长，不太关心员工是否对技术有浓厚的兴趣和深入的钻研，他们就是一个想法，他们要做一个东西，做这个东西需要某方面的技术，所以要找这会方面的人。<br>\r\n<br>\r\n他们不知道，大多数的程序员其实喜欢做一些在自己能力以上20%的东西，也即研究研究可以做出来，但不是太熟练，而不喜欢做一些自己已经非常熟，毫无挑战的东西。<br>\r\n<br>\r\n<br>\r\n但是他们需要这样的人<strong>，所以在面试中，面试的问题比较具体，甚至具体到一个个的配置项，也有当场给你环境，让你搭一个框架，做一个东西的</strong>。<br>\r\n<br>\r\n<br>\r\n他们希望，最好你以前做过的项目和他们现在的项目十分相&#20284;，<strong>来了就能够上手。</strong><br>\r\n<br>\r\n<br>\r\n其实很多程序员跳槽，就是因为原来的工作已经没有了挑战，想找一个更有挑战的，有更多大牛的地方，如果原来的项目我干的不亦乐乎，还来你这里干什么？<br>\r\n<br>\r\n<br>\r\n但是现在工作难找啊，所以他们总是能够找到需要的人，毕竟出来混，大家都是混口饭吃，不容易啊。<br>\r\n<br>\r\n<br>\r\n要想进入此类企业，一个最好的办法就是上手做，在学校里就可以找个实习的公司，哪怕不给钱也去(强烈谴责这种企业，剥夺劳动者的基本权利，也就在中国他们能干的出来，放到欧美罚不死他们)，先混些实践经验，做些边角料的活，然后跟着lead一步一步进入核心模块，相信只要认认真真的做过，面过这类企业应该不成问题。<br>\r\n<br>\r\n<br>\r\n此类企业的流动性相对较大，往往被用作程序员的跳板，跳到二类甚至一类的企业中去。所以不幸进入此类企业的兄弟们，在实战的过程中，别忘了多看看源码，多想想背后的原理，多补充一下计算机科学的基本知识，早日脱离苦海。<br>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<strong>二类企业</strong><br>\r\n二类企业其实薪水已经非常不错了，毕业就能进入此类企业的程序员也多是学校中的优秀分子。<br>\r\n<br>\r\n<br>\r\n此类企业注重程序员的基础，认为只要基础好，他们愿意培训并培养程序员，给你机会进行学习。<br>\r\n<br>\r\n<br>\r\n此类企业招聘的时候，职位有可能是不太确定的，可能是Java，可能是C&#43;&#43;，可能是windows，可能是Linux，<strong>他们认为只要你基础好，语言不是问题，平台不是问题，</strong>培训一下上手会很快。<br>\r\n<br>\r\n<br>\r\n记得面试一家与通信有关的欧企，面试官开始问了很多C/C&#43;&#43;的基础知识，后来问了很多操作系统和计算机网络的基础知识，最后说，他们是需要有通信背景的，然后连问我三个有关通信方面的问题，我都说不知道，最后只有坦然承认，通信我确实一点都不懂。后来我认为我是彻底没希望了，没想到后来竟收到了他们的offer，并在入职后进行了长达两个月的通信方面的培训，后来我问我的面试官怎么回事，他说，你的C/C&#43;&#43;，操作系统，计算机网络的面试题几乎都对了，我觉得你的基础不错。<br>\r\n<br>\r\n<br>\r\n所以要进入此类的企业，有关基础方面的书还是要认认真真，仔仔细细的看，下面推荐一部分：<br>\r\n<br>\r\n<br>\r\nC： 《The c programming langage》<br>\r\nC&#43;&#43;：《Thinking in C&#43;&#43;》，《The c&#43;&#43; programming language》，《effective c&#43;&#43;》，《more effective c&#43;&#43;》，《exceptional c&#43;&#43;》，《more exceptional c&#43;&#43;》，《inside the c&#43;&#43; object model》<br>\r\nJava：《Thinking in java》，《Core Java》，《effective java》，《Java Puzzlers》，《Java Network Programming》，《java concurrency in practice》，《深入Java虚拟机》<br>\r\nwindows：《Windows核心编程》，《Windows Internals》<br>\r\nlinux：《Advanced Programming in the UNIX.Environment》，《Understanding Linux Network Internals》，《UNIX Network Programming》<br>\r\nnetwork：《TCPIP Illustrated Volume I》，《The Linux Networking Architecture》<br>\r\n我没有在装B，也不是看过以上所有的书，不过上述书籍的确是程序员必藏书，我也只不过是在用到的时候翻开相关章节看看。<br>\r\n<br>\r\n<br>\r\n然而给大家的建议是，在做项目的时候，千万不能够做什么就只知道什么，与此相关基础知识也应该多看一些。面试的时候也经常遇到这种情况，就是面试者号称做过socket，问到tcp/ip拥塞控制却一无所知，会简单使用socket client端和server端几个简单函数人太多了，如何保证你能够脱颖而出呢？<br>\r\n<br>\r\n<br>\r\n其实很多事情我们觉得不可能，但是这个世界上就是有牛人确实做到了，比如英语六级能够考99分(满分100)，就是把答案全给我，就让我写作文，我也做不到啊，再如高考满分750分，山东的状元730&#43;分，也就意味着数理化全对，语文140&#43;，英语140&#43;，我的天，也是把答案给我，就让我写语文和英语的作文，我也做不到啊。<br>\r\n<br>\r\n<br>\r\n然而读以上书籍却没有上面两个例子难的不可想象，我所知道的身边的人就有C, C&#43;&#43;, linux, network这几个分支全读过的，而且不止一个。<br>\r\n<br>\r\n<br>\r\n<p>能进入二类的企业，混个中层，也能过上满不错的生活了。</p>\r\n<p>一类企业<br>\r\n一类企业薪水非常高，毕业就能进入的可以说是学校中的佼佼者了，一般会名校背景，名企实习，甚至有过获奖的才能够进入。<br>\r\n<br>\r\n<br>\r\n此类企业除了注重程序员的基础之外，更加<strong>重视程序员的思想，算法及聪明程度</strong>。<br>\r\n<br>\r\n<br>\r\n所以很多奇奇怪怪的面试题在网上都流传出来了，这些题目真可谓费尽心机。面试过程长达n轮，每轮都可能因为疏漏和状态不佳被刷掉，最后剩下的几近完美。<br>\r\n<br>\r\n<br>\r\n在面试中，程序是要当场在黑板上写出来的，很短的时间，要求很强的健壮性，面试官还会在旁边施加心理压力，你确定吗？要注意XXX。<br>\r\n<br>\r\n<br>\r\n虽然问题是经常外流的，然而新的问题却是不断的会出，可能是因为工作中有些需要解决的问题<strong>，自己想了一天多才想出的解决方案，却抽象出来考别人</strong>，让别人在很短的时间作出来，这种心理开始很爽，后来觉得很罪恶，多少有些原来自己穷，受富人欺负，后来富了又欺负穷人的味道。<br>\r\n<br>\r\n<br>\r\n有些人会质疑，这些精巧的算法在工作中真的能够用到很多吗？答案当然不是。<br>\r\n<br>\r\n<br>\r\n这其实是一个供需的问题。马克思告诉我们，商品的价&#26684;是由价&#20540;量决定的，商品应该以价&#20540;量为基础，实行等价交换。西方经济学告诉我们商品的价&#26684;会随着供需关系的变化而变化。当供需矛盾相当大的时候，商品的价&#26684;就会远离价&#20540;量。<br>\r\n<br>\r\n<br>\r\n《经济学的思维方式》一书中写到，所有的稀缺品都需要以某种方式分配，必须建立某种规则和制度，对那些要求得到稀缺品的人加以甄别，决定谁该得到多少。价&#26684;只是最常用的一种方式。<br>\r\n<br>\r\n<br>\r\n想想我们的高考吧，那些千辛万苦考上清华的学子毕业后又有多少高中的知识留在脑子里呢？学到的东西又有多少是能够在实际中用到的呢？其实很少，高考分数不过是进入清华的一个价&#26684;而已，已经由于清华只有一所，考生却有千百万这样的供需差别远远的偏离了使用价&#20540;，毕竟能够轻松看懂教科书的人太多了，他们只能够不但要全会，还要全对。<br>\r\n<br>\r\n<br>\r\n进入一类企业也是同样的，能把我上述书籍都看完的人是大有人在的，仅仅基础知识已经不能够甄别想进入一类企业的人们，所以需要奇奇怪怪的算法题。<br>\r\n<br>\r\n<br>\r\n要进入一类企业<strong>，《算法导论》这本书必不可少，要前前后后仔细的看，而且应该不止一遍。《编程珠玑》也是一本不错的书，其中的例子可以常常的回味。《编程之美》也不错，更贴近面试，更实用一些。其实更重要的是Top coder，就是多看多练。</strong><br>\r\n<br>\r\n<br>\r\n其实考入名校基本就是一种方法，多做题，<strong>以便在考场中看到题目就能够有思路，考场的时间仅仅用于保证正确率就可以了。</strong><br>\r\n<br>\r\n<br>\r\n进入一类企业也是一样，要想很短的时间，在很大的压力下写出健壮的程序，其实只有一种方法，就是类&#20284;的题目遇到过，思路是马上就有的，在会议室的时间仅仅用于保证健壮性就可以了。<br>\r\n</p>\r\n&nbsp;\r\n','\r\n\r\n外企的面试都面写啥？不同的企业也是不一样的，总的来说可以归结为以下几句话：<br>\r\n<br>\r\n<br>\r\n三类企业面实战，二类企业面基础，一类企业面算法。<br>\r\n在此声明，此处所谓的一二三类，绝没有轻视其他企业的意思，这里的一二三类基本上是按照本科毕业的时候起薪来划分的，一类企业指的是年薪15万以上的企业，二类企业指的是年薪10万左右的企业，三类企业指的是年薪5万左右的企业。当然按照上两次的描述大家可以知道，并不是起薪高的企业的程序员一定最好发展的最好，而进入创业企业的人最后可能后来居上，成为IT达人。当然此规律也不仅仅适用于外企。<br>\r\n<br>\r\n<br>\r\n<strong>三类企业</strong><br>\r\n三类企业起薪不高，招聘的目的也相对的明确，是要找那种来了就能真枪实弹的把东西作出来的人。<br>\r\n<br>\r\n<br>\r\n他们多不太关心员工的培训和成长，不太关心员工是否对技术有浓厚的兴趣和深入的钻研，他们就是一个想法，他们要做一个东西，做这个东西需要某方面的技术，所以要找这会方面的人。<br>\r\n<br>\r\n他们不知道，大多数的程序员其实喜欢做一些在自己能力以上20%的东西，也即研究研究可以做出来，但不是太熟练，而不喜欢做一些自己已经非常熟，毫无挑战的东西。<br>\r\n<br>\r\n<br>\r\n但是他们需要这样的人<strong>，所以在面试中，面试的问题比较具体，甚至具体到一个个的配置项，也有当场给你环境，让你搭一个框架，做一个东西的</strong>。<br>\r\n<br>\r\n<br>\r\n他们希望，最好你以前做过的项目和他们现在的项目十分相&#20284;，<strong>来了就能够上手。</strong><br>\r\n<br>\r\n<br>\r\n其实很多程序员跳槽，就是因为原来的工作已经没有了挑战，想找一个更有挑战的，有更多大牛的地方，如果原来的项目我干的不亦乐乎，还来你这里干什么？<br>\r\n<br>\r\n<br>\r\n但是现在工作难找啊，所以他们总是能够找到需要的人，毕竟出来混，大家都是混口饭吃，不容易啊。<br>\r\n<br>\r\n<br>\r\n要想进入此类企业，一个最好的办法就是上手做，在学校里就可以找个实习的公司，哪怕不给钱也去(强烈谴责这种企业，剥夺劳动者的基本权利，也就在中国他们能干的出来，放到欧美罚不死他们)，先混些实践经验，做些边角料的活，然后跟着lead一步一步进入核心模块，相信只要认认真真的做过，面过这类企业应该不成问题。<br>\r\n<br>\r\n<br>\r\n此类企业的流动性相对较大，往往被用作程序员的跳板，跳到二类甚至一类的企业中去。所以不幸进入此类企业的兄弟们，在实战的过程中，别忘了多看看源码，多想想背后的原理，多补充一下计算机科学的基本知识，早日脱离苦海。<br>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<strong>二类企业</strong><br>\r\n二类企业其实薪水已经非常不错了，毕业就能进入此类企业的程序员也多是学校中的优秀分子。<br>\r\n<br>\r\n<br>\r\n此类企业注重程序员的基础，认为只要基础好，他们愿意培训并培养程序员，给你机会进行学习。<br>\r\n<br>\r\n<br>\r\n此类企业招聘的时候，职位有可能是不太确定的，可能是Java，可能是C&#43;&#43;，可能是windows，可能是Linux，<strong>他们认为只要你基础好，语言不是问题，平台不是问题，</strong>培训一下上手会很快。<br>\r\n<br>\r\n<br>\r\n记得面试一家与通信有关的欧企，面试官开始问了很多C/C&#43;&#43;的基础知识，后来问了很多操作系统和计算机网络的基础知识，最后说，他们是需要有通信背景的，然后连问我三个有关通信方面的问题，我都说不知道，最后只有坦然承认，通信我确实一点都不懂。后来我认为我是彻底没希望了，没想到后来竟收到了他们的offer，并在入职后进行了长达两个月的通信方面的培训，后来我问我的面试官怎么回事，他说，你的C/C&#43;&#43;，操作系统，计算机网络的面试题几乎都对了，我觉得你的基础不错。<br>\r\n<br>\r\n<br>\r\n所以要进入此类的企业，有关基础方面的书还是要认认真真，仔仔细细的看，下面推荐一部分：<br>\r\n<br>\r\n<br>\r\nC： 《The c programming langage》<br>\r\nC&#43;&#43;：《Thinking in C&#43;&#43;》，《The c&#43;&#43; programming language》，《effective c&#43;&#43;》，《more effective c&#43;&#43;》，《exceptional c&#43;&#43;》，《more exceptional c&#43;&#43;》，《inside the c&#43;&#43; object model》<br>\r\nJava：《Thinking in java》，《Core Java》，《effective java》，《Java Puzzlers》，《Java Network Programming》，《java concurrency in practice》，《深入Java虚拟机》<br>\r\nwindows：《Windows核心编程》，《Windows Internals》<br>\r\nlinux：《Advanced Programming in the UNIX.Environment》，《Understanding Linux Network Internals》，《UNIX Network Programming》<br>\r\nnetwork：《TCPIP Illustrated Volume I》，《The Linux Networking Architecture》<br>\r\n我没有在装B，也不是看过以上所有的书，不过上述书籍的确是程序员必藏书，我也只不过是在用到的时候翻开相关章节看看。<br>\r\n<br>\r\n<br>\r\n然而给大家的建议是，在做项目的时候，千万不能够做什么就只知道什么，与此相关基础知识也应该多看一些。面试的时候也经常遇到这种情况，就是面试者号称做过socket，问到tcp/ip拥塞控制却一无所知，会简单使用socket client端和server端几个简单函数人太多了，如何保证你能够脱颖而出呢？<br>\r\n<br>\r\n<br>\r\n其实很多事情我们觉得不可能，但是这个世界上就是有牛人确实做到了，比如英语六级能够考99分(满分100)，就是把答案全给我，就让我写作文，我也做不到啊，再如高考满分750分，山东的状元730&#43;分，也就意味着数理化全对，语文140&#43;，英语140&#43;，我的天，也是把答案给我，就让我写语文和英语的作文，我也做不到啊。<br>\r\n<br>\r\n<br>\r\n然而读以上书籍却没有上面两个例子难的不可想象，我所知道的身边的人就有C, C&#43;&#43;, linux, network这几个分支全读过的，而且不止一个。<br>\r\n<br>\r\n<br>\r\n<p>能进入二类的企业，混个中层，也能过上满不错的生活了。</p>\r\n<p>一类企业<br>\r\n一类企业薪水非常高，毕业就能进入的可以说是学校中的佼佼者了，一般会名校背景，名企实习，甚至有过获奖的才能够进入。<br>\r\n<br>\r\n<br>\r\n此类企业除了注重程序员的基础之外，更加<strong>重视程序员的思想，算法及聪明程度</strong>。<br>\r\n<br>\r\n<br>\r\n所以很多奇奇怪怪的面试题在网上都流传出来了，这些题目真可谓费尽心机。面试过程长达n轮，每轮都可能因为疏漏和状态不佳被刷掉，最后剩下的几近完美。<br>\r\n<br>\r\n<br>\r\n在面试中，程序是要当场在黑板上写出来的，很短的时间，要求很强的健壮性，面试官还会在旁边施加心理压力，你确定吗？要注意XXX。<br>\r\n<br>\r\n<br>\r\n虽然问题是经常外流的，然而新的问题却是不断的会出，可能是因为工作中有些需要解决的问题<strong>，自己想了一天多才想出的解决方案，却抽象出来考别人</strong>，让别人在很短的时间作出来，这种心理开始很爽，后来觉得很罪恶，多少有些原来自己穷，受富人欺负，后来富了又欺负穷人的味道。<br>\r\n<br>\r\n<br>\r\n有些人会质疑，这些精巧的算法在工作中真的能够用到很多吗？答案当然不是。<br>\r\n<br>\r\n<br>\r\n这其实是一个供需的问题。马克思告诉我们，商品的价&#26684;是由价&#20540;量决定的，商品应该以价&#20540;量为基础，实行等价交换。西方经济学告诉我们商品的价&#26684;会随着供需关系的变化而变化。当供需矛盾相当大的时候，商品的价&#26684;就会远离价&#20540;量。<br>\r\n<br>\r\n<br>\r\n《经济学的思维方式》一书中写到，所有的稀缺品都需要以某种方式分配，必须建立某种规则和制度，对那些要求得到稀缺品的人加以甄别，决定谁该得到多少。价&#26684;只是最常用的一种方式。<br>\r\n<br>\r\n<br>\r\n想想我们的高考吧，那些千辛万苦考上清华的学子毕业后又有多少高中的知识留在脑子里呢？学到的东西又有多少是能够在实际中用到的呢？其实很少，高考分数不过是进入清华的一个价&#26684;而已，已经由于清华只有一所，考生却有千百万这样的供需差别远远的偏离了使用价&#20540;，毕竟能够轻松看懂教科书的人太多了，他们只能够不但要全会，还要全对。<br>\r\n<br>\r\n<br>\r\n进入一类企业也是同样的，能把我上述书籍都看完的人是大有人在的，仅仅基础知识已经不能够甄别想进入一类企业的人们，所以需要奇奇怪怪的算法题。<br>\r\n<br>\r\n<br>\r\n要进入一类企业<strong>，《算法导论》这本书必不可少，要前前后后仔细的看，而且应该不止一遍。《编程珠玑》也是一本不错的书，其中的例子可以常常的回味。《编程之美》也不错，更贴近面试，更实用一些。其实更重要的是Top coder，就是多看多练。</strong><br>\r\n<br>\r\n<br>\r\n其实考入名校基本就是一种方法，多做题，<strong>以便在考场中看到题目就能够有思路，考场的时间仅仅用于保证正确率就可以了。</strong><br>\r\n<br>\r\n<br>\r\n进入一类企业也是一样，要想很短的时间，在很大的压力下写出健壮的程序，其实只有一种方法，就是类&#20284;的题目遇到过，思路是马上就有的，在会议室的时间仅仅用于保证健壮性就可以了。<br>\r\n</p>\r\n&nbsp;\r\n',1,'',0,0,'2015-02-02 00:41:16','2015-02-02 00:41:16','2015-02-02 00:41:16'),(17,1,4,'Java基础-synchronized关键字的用法','f691e07deaa5fd9b22e196375df34508',0,'\r\n\r\n<p><span style=\"font-size:18px\">顾名思义是用于同步互斥的作用的。</span></p>\r\n<p><span style=\"font-size:18px\">这里精简的记一下它的使用方法以及意义：</span></p>\r\n<','\r\n\r\n<p><span style=\"font-size:18px\">顾名思义是用于同步互斥的作用的。</span></p>\r\n<p><span style=\"font-size:18px\">这里精简的记一下它的使用方法以及意义：</span></p>\r\n<p><span style=\"font-size:18px\">1. 当synchronized修饰<span style=\"color:#ffffff\"> <span style=\"background-color:rgb(0,153,0)\">\r\nthis</span></span>或者<span style=\"color:#ffffff; background-color:rgb(0,102,0)\">非静态方法</span><span style=\"background-color:rgb(255,255,255)\">或者是</span><span style=\"color:#ffffff; background-color:rgb(0,102,0)\">一个实例</span>的时候，所同步的锁是加在this或者实例对象引用上面的。比如a,b同为Main类的实例化对象，a调用被同步的方法，和b调用被同步的方法，没有形成互斥。但是不同线程的a对象调用被同步的方法就被互斥了。</span></p>\r\n<p><span style=\"font-size:18px\"></span></p>\r\n<pre code_snippet_id=\"455864\" snippet_file_name=\"blog_20140821_1_6193909\"  name=\"code\" class=\"java\">public synchronized void method(){\n//….\n}\npublic void method()\n{\nsynchronized (this)\n{\n//…..\n}\n}</pre>\r\n<p></p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n2.与1不同，当synchronized修饰<span style=\"background-color:rgb(0,102,0)\">类名.class</span> 或者<span style=\"background-color:rgb(0,102,0)\">静态方法</span>的时候. 就算是不同对象，也会形成互斥\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n<pre code_snippet_id=\"455864\" snippet_file_name=\"blog_20140821_2_5398304\"  name=\"code\" class=\"java\">Class Main\n{\npublic synchronized static void method1() \n{\n//….\n}\npublic void method2()\n{\nsynchronized(Main.class) // \n}\n}</pre><br>\r\n<a target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38736551\">转自http://blog.csdn.net/cq361106306/article/details/38736551</a><br>\r\n<p></p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n','\r\n\r\n<p><span style=\"font-size:18px\">顾名思义是用于同步互斥的作用的。</span></p>\r\n<p><span style=\"font-size:18px\">这里精简的记一下它的使用方法以及意义：</span></p>\r\n<p><span style=\"font-size:18px\">1. 当synchronized修饰<span style=\"color:#ffffff\"> <span style=\"background-color:rgb(0,153,0)\">\r\nthis</span></span>或者<span style=\"color:#ffffff; background-color:rgb(0,102,0)\">非静态方法</span><span style=\"background-color:rgb(255,255,255)\">或者是</span><span style=\"color:#ffffff; background-color:rgb(0,102,0)\">一个实例</span>的时候，所同步的锁是加在this或者实例对象引用上面的。比如a,b同为Main类的实例化对象，a调用被同步的方法，和b调用被同步的方法，没有形成互斥。但是不同线程的a对象调用被同步的方法就被互斥了。</span></p>\r\n<p><span style=\"font-size:18px\"></span></p>\r\n<pre code_snippet_id=\"455864\" snippet_file_name=\"blog_20140821_1_6193909\"  name=\"code\" class=\"java\">public synchronized void method(){\n//….\n}\npublic void method()\n{\nsynchronized (this)\n{\n//…..\n}\n}</pre>\r\n<p></p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n2.与1不同，当synchronized修饰<span style=\"background-color:rgb(0,102,0)\">类名.class</span> 或者<span style=\"background-color:rgb(0,102,0)\">静态方法</span>的时候. 就算是不同对象，也会形成互斥\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n<pre code_snippet_id=\"455864\" snippet_file_name=\"blog_20140821_2_5398304\"  name=\"code\" class=\"java\">Class Main\n{\npublic synchronized static void method1() \n{\n//….\n}\npublic void method2()\n{\nsynchronized(Main.class) // \n}\n}</pre><br>\r\n<a target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38736551\">转自http://blog.csdn.net/cq361106306/article/details/38736551</a><br>\r\n<p></p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n',1,'实例,类,java',0,0,'2015-02-02 00:41:17','2015-02-02 00:41:17','2015-02-02 00:41:17'),(18,1,4,'Java基础- super 和  this 解析','5e2cdf2558083bf16d5ccaad6910c426',0,'\r\n\r\n<p><span style=\"font-size:18px\">1. super关键字表示超（父）类的意思。this变量代表对象本身。</span></p>\r\n<p><span style=\"font-size:18px\">2. super访问父类被子类隐藏的','\r\n\r\n<p><span style=\"font-size:18px\">1. super关键字表示超（父）类的意思。this变量代表对象本身。</span></p>\r\n<p><span style=\"font-size:18px\">2. super访问父类被子类隐藏的变量或覆盖的方法。当前类如果是从超类继承而来的，当调用super.XX()就是调用基类版本的XX（）方法。<br>\r\n</span></p>\r\n<p><span style=\"font-size:18px; color:#000099\">其中超类是最近的父类。</span></p>\r\n<p><span style=\"font-size:18px\">3.调用<span style=\"color:#ff0000\">super() 父类构造函数</span>的时候只能调用在子类构造函数的<span style=\"color:#ff0000\">第一行</span></span></p>\r\n<p><span style=\"font-size:18px\">4.<span style=\"font-family:Helvetica,Tahoma,Arial,sans-serif; line-height:25.200000762939453px\">this只能在类中的非静态方法中使用，静态方法和静态的代码块中绝对不能出现this，这在“Java关键字static、final使用总结”一文中给出了明确解释。并且this只和特定的对象关联，而不和类关联，同一个类的不同对象有不同的this</span></span></p>\r\n<p><span style=\"font-size:18px\">列子：</span><pre name=\"code\" class=\"java\">class Person {\n    protected void print() {\n       System.out.println(&quot;The print() in class Person.&quot;);\n    }\n}\n \npublic class DemoSuper extends Person {\n\n    public DemoSuper(){\n\n       super(); //调用父类的构造方法，而且放第一行，如果不写，系统自动加\n    }\n    public void print() {\n       System.out.println(&quot;The print() in class DemoSuper.&quot;);\n       super.print();// 调用父类的方法\n    }\n \n    public static void main(String[] args) {\n       DemoSuper ds = new DemoSuper();\n       ds.print();\n    }\n}</pre><br>\r\n</p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n','\r\n\r\n<p><span style=\"font-size:18px\">1. super关键字表示超（父）类的意思。this变量代表对象本身。</span></p>\r\n<p><span style=\"font-size:18px\">2. super访问父类被子类隐藏的变量或覆盖的方法。当前类如果是从超类继承而来的，当调用super.XX()就是调用基类版本的XX（）方法。<br>\r\n</span></p>\r\n<p><span style=\"font-size:18px; color:#000099\">其中超类是最近的父类。</span></p>\r\n<p><span style=\"font-size:18px\">3.调用<span style=\"color:#ff0000\">super() 父类构造函数</span>的时候只能调用在子类构造函数的<span style=\"color:#ff0000\">第一行</span></span></p>\r\n<p><span style=\"font-size:18px\">4.<span style=\"font-family:Helvetica,Tahoma,Arial,sans-serif; line-height:25.200000762939453px\">this只能在类中的非静态方法中使用，静态方法和静态的代码块中绝对不能出现this，这在“Java关键字static、final使用总结”一文中给出了明确解释。并且this只和特定的对象关联，而不和类关联，同一个类的不同对象有不同的this</span></span></p>\r\n<p><span style=\"font-size:18px\">列子：</span><pre name=\"code\" class=\"java\">class Person {\n    protected void print() {\n       System.out.println(&quot;The print() in class Person.&quot;);\n    }\n}\n \npublic class DemoSuper extends Person {\n\n    public DemoSuper(){\n\n       super(); //调用父类的构造方法，而且放第一行，如果不写，系统自动加\n    }\n    public void print() {\n       System.out.println(&quot;The print() in class DemoSuper.&quot;);\n       super.print();// 调用父类的方法\n    }\n \n    public static void main(String[] args) {\n       DemoSuper ds = new DemoSuper();\n       ds.print();\n    }\n}</pre><br>\r\n</p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n<p><span style=\"font-size:18px\"><br>\r\n</span></p>\r\n',1,'java,类',0,0,'2015-02-02 00:41:18','2015-02-02 00:41:18','2015-02-02 00:41:18'),(19,1,4,'那些年学过的算法、模式、语言、框架','a76440555decfe9bd3d12473182bfda9',0,'\r\n\r\n<div style=\"text-align:center\"><br>\r\n</div>\r\n<div style=\"text-align:center\">博客搬迁至: <a target=\"_blank\" target=\"_blank\" href=\"http://www.younfor.com\">\r\nwww.younfor.com</a></div>\r\n<div styl','\r\n\r\n<div style=\"text-align:center\"><br>\r\n</div>\r\n<div style=\"text-align:center\">博客搬迁至: <a target=\"_blank\" target=\"_blank\" href=\"http://www.younfor.com\">\r\nwww.younfor.com</a></div>\r\n<div style=\"text-align:center\">现在博客正式开始为将来找工作做技术积累、希望自己能持之以恒。<img src=\"http://piccache2.soso.com/face/_7729325796095712664\" alt=\"\" style=\"font-family:Verdana; font-size:14px; line-height:21px\"></div>\r\n<div style=\"text-align:center\"><br>\r\n</div>\r\n<div style=\"text-align:center\"><span style=\"font-size:32px; color:#ff0000\">Java基础</span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">1、</span><a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38682479\" style=\"color:rgb(0,0,0); font-size:20px; text-decoration:none; font-family:\'Microsoft YaHei\'; line-height:30px\">super\r\n 和 this 解析</a><br>\r\n</div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">2、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38736551\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">synchronized关键字的用法</a></span></div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:center\"><span style=\"font-size:32px; color:#ff0000\">Java设计模式</span></div>\r\n<div style=\"text-align:center\"><br>\r\n</div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">0、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38708967\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">设计模式的六种原则</a></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">1</span>、 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38701993\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">单例模式</a></div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:center\"><span style=\"font-size:32px; color:#ff0000\">算法基础</span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">1、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38685201\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">无序数列最大相邻大小差&#20540;</a></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">2、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38704731\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">求两个有序数组两两相加的&#20540;最小的K个数</a></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">3、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38715907\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">KMP模式匹配算法学习</a></span></div>\r\n','\r\n\r\n<div style=\"text-align:center\"><br>\r\n</div>\r\n<div style=\"text-align:center\">博客搬迁至: <a target=\"_blank\" target=\"_blank\" href=\"http://www.younfor.com\">\r\nwww.younfor.com</a></div>\r\n<div style=\"text-align:center\">现在博客正式开始为将来找工作做技术积累、希望自己能持之以恒。<img src=\"http://piccache2.soso.com/face/_7729325796095712664\" alt=\"\" style=\"font-family:Verdana; font-size:14px; line-height:21px\"></div>\r\n<div style=\"text-align:center\"><br>\r\n</div>\r\n<div style=\"text-align:center\"><span style=\"font-size:32px; color:#ff0000\">Java基础</span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">1、</span><a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38682479\" style=\"color:rgb(0,0,0); font-size:20px; text-decoration:none; font-family:\'Microsoft YaHei\'; line-height:30px\">super\r\n 和 this 解析</a><br>\r\n</div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">2、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38736551\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">synchronized关键字的用法</a></span></div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:center\"><span style=\"font-size:32px; color:#ff0000\">Java设计模式</span></div>\r\n<div style=\"text-align:center\"><br>\r\n</div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">0、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38708967\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">设计模式的六种原则</a></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">1</span>、 &nbsp;<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38701993\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">单例模式</a></div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:left\"><br>\r\n</div>\r\n<div style=\"text-align:center\"><span style=\"font-size:32px; color:#ff0000\">算法基础</span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">1、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38685201\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">无序数列最大相邻大小差&#20540;</a></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">2、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38704731\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">求两个有序数组两两相加的&#20540;最小的K个数</a></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:18px\">3、<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38715907\" style=\"color:rgb(0,0,0); text-decoration:none; font-family:\'Microsoft YaHei\'; font-size:20px; line-height:30px\">KMP模式匹配算法学习</a></span></div>\r\n',1,'博客,工作,技术',0,0,'2015-02-02 00:41:20','2015-02-02 00:41:20','2015-02-02 00:41:20'),(21,1,5,'算法-KMP模式匹配算法学习','4e363c3984b06740c347988b59a8352e',0,'\r\n\r\n<p>KMP的时间复杂度是O(M&#43;N);</p>\r\n<p>KMP的关键是求Next数组。</p>\r\n<p>Next数组的意思是，当每次匹配失败的时候，保持i不变，j定位到next(j)这个位置，重','\r\n\r\n<p>KMP的时间复杂度是O(M&#43;N);</p>\r\n<p>KMP的关键是求Next数组。</p>\r\n<p>Next数组的意思是，当每次匹配失败的时候，保持i不变，j定位到next(j)这个位置，重新开始匹配。</p>\r\n<p>Next数组的由来:</p>\r\n<p>第一行是S字符串，第二行是P字符串</p>\r\n<p>例1：next[]</p>\r\n<p>0 1 2 3 4 5<span style=\"color:red\"> <span style=\"background:blue\">6</span></span> 7 8 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=6</p>\r\n<p>ZW<span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span><span style=\"color:red\">A&nbsp;</span>B EGHIJK&nbsp;&nbsp;&nbsp;</p>\r\n<p><span style=\"background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; </span><span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span><span style=\"color:red\">E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p>&nbsp; &nbsp; &nbsp; 0 1 2 3 &nbsp;<span style=\"background:blue\">4</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=4 </p>\r\n<p>&nbsp;</p>\r\n<p>0 1 2 3<span style=\"color:red\"> 4</span> 5 <span style=\"background:blue\">6</span> 7 8 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=6 (不变)</p>\r\n<p>ZW<span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span>A B E G HIJK</p>\r\n<p><span style=\"background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span>E</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0 1 <span style=\"background:blue\">2</span> 3 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=2 (说明next(4)=2)</p>\r\n<p>&nbsp;</p>\r\n<p>途中绿色块和黄色块是重叠的，当i=6,j=4的时候A!=E不匹配，不需要用传统的i=2,j=0回溯，而是将P字符串的绿色块去对应S字符串的黄色字符串，因为肉&#30524;看出黄色和绿色是相等的，而且长度刚好为2，巧合的是重新匹配的位置j=2, 这个2正好是S字符串的j下标移动的位置，也就是说：当i=6,j=4失败的时候，j=next(j) 也就是j=next(4)=2;&nbsp; 那为啥刚好是2呢，下面看例2.</p>\r\n<p>例2：</p>\r\n<p>&nbsp;</p>\r\n<p>0 1 2 3 4 5 6 7<span style=\"color:red\"> <span style=\"background:blue\">8</span></span> 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=8</p>\r\n<p>ZW&nbsp;<span style=\"background:green\">A BC&nbsp;</span><span style=\"background:yellow\">A BC&nbsp;</span>A B EGHIJK</p>\r\n<p><span style=\"background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"background:green\">A BC&nbsp;</span><span style=\"background:yellow\">A BC</span> E</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; 01 2 3 4 5 <span style=\"background:blue\">6</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=6</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>0 1 2 3 4 <span style=\"color:red\">5&nbsp;</span>6 7 <span style=\"background:blue\">8</span> 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=8(不变)</p>\r\n<p>ZW<span style=\"background:green\">A B C&nbsp;</span><span style=\"background:yellow\">A BC</span>A BEGHIJK</p>\r\n<p><span style=\"\"><span style=\"color:#ffffff; background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"background-color:green\">A B C\r\n</span></span><span style=\"background:yellow\">A BC</span>E</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 1 &nbsp;2 <span style=\"background:blue\">3</span> 45 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=3(说明next(6)=3)</p>\r\n<p>&nbsp;</p>\r\n<p>当绿色和黄色块重叠部分变成3的时候，相应的: 当i=8,j=6不匹配的时候， j=next(j)=next(6)=3; 这不是巧合。</p>\r\n<p>总结出之前提出的一个理论。那就是next(j) 的&#20540;刚好等于 [0, j-1] 闭区间，他们首部和尾部重合的长度。经前人证明这个是区间内首部和尾部重合最大的长度。</p>\r\n<p>比如 <span style=\"background:green\">ab</span>ab<span style=\"background:yellow\">ab</span>&nbsp; 这个是2</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"background:green\">a</span>bcd<span style=\"background:yellow\">a</span>&nbsp;&nbsp; 这个是1</p>\r\n<p>&nbsp;</p>\r\n<p>下面是求next数组的算法:</p>\r\n<p>按照递推的思想：</p>\r\n<p>&nbsp;&nbsp; 根据定义next[0]=-1，假设next[j]=k, 即P[0...k-1]==P[j-k,j-1]</p>\r\n<p>&nbsp;&nbsp; 1)若P[j]==P[k]，则有P[0..k]==P[j-k&#43;1,j]，很显然，next[j&#43;1]=next[j]&#43;1=k&#43;1;</p>\r\n<p>&nbsp;&nbsp; 2)若P[j]!=P[k]，则可以把其看做模式匹配的问题，即匹配失败的时候，k&#20540;如何移动，显然k=next[k]。</p>\r\n<p>&nbsp;</p>\r\n<p><strong>自从大学上数据结构课的时候，“串“那一章接触到KMP算法，不过当时咋一看，没看懂，而且老师又没有细讲，就不了了之了，后来算法分析课又讲到了这个，当时好像是弄懂了，但是2年下来，偶然看到这个算法，又蒙了。看来当时还是没把思想牢牢的把握。现在懂得了一个道理，学程序或者算法真的不能只靠记忆，这样只能当时了解一下，时过境迁就忘了，仅剩KMP有印象。有幸的是看到了一个算法大神的博文<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/v_july_v/article/details/7041827\">http://blog.csdn.net/v_july_v/article/details/7041827</a></strong></p>\r\n<p><strong>让我对KMP有了更加深层的理解了。</strong></p>\r\n<p><strong></strong></p>\r\n<pre code_snippet_id=\"455156\" snippet_file_name=\"blog_20140820_1_3628047\"  code_snippet_id=\"455156\" snippet_file_name=\"blog_20140820_1_3628047\" name=\"code\" class=\"java\">KMP\n\nnext[j]就是T字符串的前缀和后缀最大的重叠长度。\n\n主要是求next数组\nvoid GetNext(char* p,int next[])  \n{  \n    int pLen = strlen(p);  \n    next[0] = -1;  \n    int k = -1;  \n    int j = 0;  \n    while (j &lt; pLen - 1)  \n    {  \n        //p[k]表示前缀，p[j]表示后缀  \n        if (k == -1 || p[j] == p[k])   \n        {  \n            ++k;  \n            ++j;  \n            next[j] = k;  \n        }  \n        else   \n        {  \n            k = next[k];  \n        }  \n    }  \n}  \n\nint KmpSearch(char* s, char* p)  \n{  \n    int i = 0;  \n    int j = 0;  \n    int sLen = strlen(s);  \n    int pLen = strlen(p);  \n    while (i &lt; sLen &amp;&amp; j &lt; pLen)  \n    {  \n        //①如果j = -1，或者当前字符匹配成功（即S[i] == P[j]），都令i++，j++      \n        if (j == -1 || s[i] == p[j])  \n        {  \n            i++;  \n            j++;  \n        }  \n        else  \n        {  \n            //②如果j != -1，且当前字符匹配失败（即S[i] != P[j]），则令 i 不变，j = next[j]      \n            //next[j]即为j所对应的next值        \n            j = next[j];  \n        }  \n    }  \n    if (j == pLen)  \n        return i - j;  \n    else  \n        return -1;  \n}  </pre><br>\r\n<br>\r\n<p></p>\r\n','\r\n\r\n<p>KMP的时间复杂度是O(M&#43;N);</p>\r\n<p>KMP的关键是求Next数组。</p>\r\n<p>Next数组的意思是，当每次匹配失败的时候，保持i不变，j定位到next(j)这个位置，重新开始匹配。</p>\r\n<p>Next数组的由来:</p>\r\n<p>第一行是S字符串，第二行是P字符串</p>\r\n<p>例1：next[]</p>\r\n<p>0 1 2 3 4 5<span style=\"color:red\"> <span style=\"background:blue\">6</span></span> 7 8 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=6</p>\r\n<p>ZW<span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span><span style=\"color:red\">A&nbsp;</span>B EGHIJK&nbsp;&nbsp;&nbsp;</p>\r\n<p><span style=\"background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; </span><span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span><span style=\"color:red\">E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p>&nbsp; &nbsp; &nbsp; 0 1 2 3 &nbsp;<span style=\"background:blue\">4</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=4 </p>\r\n<p>&nbsp;</p>\r\n<p>0 1 2 3<span style=\"color:red\"> 4</span> 5 <span style=\"background:blue\">6</span> 7 8 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=6 (不变)</p>\r\n<p>ZW<span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span>A B E G HIJK</p>\r\n<p><span style=\"background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"background:green\">A B&nbsp;</span><span style=\"background:yellow\">A B&nbsp;</span>E</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0 1 <span style=\"background:blue\">2</span> 3 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=2 (说明next(4)=2)</p>\r\n<p>&nbsp;</p>\r\n<p>途中绿色块和黄色块是重叠的，当i=6,j=4的时候A!=E不匹配，不需要用传统的i=2,j=0回溯，而是将P字符串的绿色块去对应S字符串的黄色字符串，因为肉&#30524;看出黄色和绿色是相等的，而且长度刚好为2，巧合的是重新匹配的位置j=2, 这个2正好是S字符串的j下标移动的位置，也就是说：当i=6,j=4失败的时候，j=next(j) 也就是j=next(4)=2;&nbsp; 那为啥刚好是2呢，下面看例2.</p>\r\n<p>例2：</p>\r\n<p>&nbsp;</p>\r\n<p>0 1 2 3 4 5 6 7<span style=\"color:red\"> <span style=\"background:blue\">8</span></span> 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=8</p>\r\n<p>ZW&nbsp;<span style=\"background:green\">A BC&nbsp;</span><span style=\"background:yellow\">A BC&nbsp;</span>A B EGHIJK</p>\r\n<p><span style=\"background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"background:green\">A BC&nbsp;</span><span style=\"background:yellow\">A BC</span> E</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; 01 2 3 4 5 <span style=\"background:blue\">6</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=6</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>0 1 2 3 4 <span style=\"color:red\">5&nbsp;</span>6 7 <span style=\"background:blue\">8</span> 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=8(不变)</p>\r\n<p>ZW<span style=\"background:green\">A B C&nbsp;</span><span style=\"background:yellow\">A BC</span>A BEGHIJK</p>\r\n<p><span style=\"\"><span style=\"color:#ffffff; background-color:rgb(255,204,204)\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"background-color:green\">A B C\r\n</span></span><span style=\"background:yellow\">A BC</span>E</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 1 &nbsp;2 <span style=\"background:blue\">3</span> 45 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=3(说明next(6)=3)</p>\r\n<p>&nbsp;</p>\r\n<p>当绿色和黄色块重叠部分变成3的时候，相应的: 当i=8,j=6不匹配的时候， j=next(j)=next(6)=3; 这不是巧合。</p>\r\n<p>总结出之前提出的一个理论。那就是next(j) 的&#20540;刚好等于 [0, j-1] 闭区间，他们首部和尾部重合的长度。经前人证明这个是区间内首部和尾部重合最大的长度。</p>\r\n<p>比如 <span style=\"background:green\">ab</span>ab<span style=\"background:yellow\">ab</span>&nbsp; 这个是2</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"background:green\">a</span>bcd<span style=\"background:yellow\">a</span>&nbsp;&nbsp; 这个是1</p>\r\n<p>&nbsp;</p>\r\n<p>下面是求next数组的算法:</p>\r\n<p>按照递推的思想：</p>\r\n<p>&nbsp;&nbsp; 根据定义next[0]=-1，假设next[j]=k, 即P[0...k-1]==P[j-k,j-1]</p>\r\n<p>&nbsp;&nbsp; 1)若P[j]==P[k]，则有P[0..k]==P[j-k&#43;1,j]，很显然，next[j&#43;1]=next[j]&#43;1=k&#43;1;</p>\r\n<p>&nbsp;&nbsp; 2)若P[j]!=P[k]，则可以把其看做模式匹配的问题，即匹配失败的时候，k&#20540;如何移动，显然k=next[k]。</p>\r\n<p>&nbsp;</p>\r\n<p><strong>自从大学上数据结构课的时候，“串“那一章接触到KMP算法，不过当时咋一看，没看懂，而且老师又没有细讲，就不了了之了，后来算法分析课又讲到了这个，当时好像是弄懂了，但是2年下来，偶然看到这个算法，又蒙了。看来当时还是没把思想牢牢的把握。现在懂得了一个道理，学程序或者算法真的不能只靠记忆，这样只能当时了解一下，时过境迁就忘了，仅剩KMP有印象。有幸的是看到了一个算法大神的博文<a target=\"_blank\" target=\"_blank\" href=\"http://blog.csdn.net/v_july_v/article/details/7041827\">http://blog.csdn.net/v_july_v/article/details/7041827</a></strong></p>\r\n<p><strong>让我对KMP有了更加深层的理解了。</strong></p>\r\n<p><strong></strong></p>\r\n<pre code_snippet_id=\"455156\" snippet_file_name=\"blog_20140820_1_3628047\"  code_snippet_id=\"455156\" snippet_file_name=\"blog_20140820_1_3628047\" name=\"code\" class=\"java\">KMP\n\nnext[j]就是T字符串的前缀和后缀最大的重叠长度。\n\n主要是求next数组\nvoid GetNext(char* p,int next[])  \n{  \n    int pLen = strlen(p);  \n    next[0] = -1;  \n    int k = -1;  \n    int j = 0;  \n    while (j &lt; pLen - 1)  \n    {  \n        //p[k]表示前缀，p[j]表示后缀  \n        if (k == -1 || p[j] == p[k])   \n        {  \n            ++k;  \n            ++j;  \n            next[j] = k;  \n        }  \n        else   \n        {  \n            k = next[k];  \n        }  \n    }  \n}  \n\nint KmpSearch(char* s, char* p)  \n{  \n    int i = 0;  \n    int j = 0;  \n    int sLen = strlen(s);  \n    int pLen = strlen(p);  \n    while (i &lt; sLen &amp;&amp; j &lt; pLen)  \n    {  \n        //①如果j = -1，或者当前字符匹配成功（即S[i] == P[j]），都令i++，j++      \n        if (j == -1 || s[i] == p[j])  \n        {  \n            i++;  \n            j++;  \n        }  \n        else  \n        {  \n            //②如果j != -1，且当前字符匹配失败（即S[i] != P[j]），则令 i 不变，j = next[j]      \n            //next[j]即为j所对应的next值        \n            j = next[j];  \n        }  \n    }  \n    if (j == pLen)  \n        return i - j;  \n    else  \n        return -1;  \n}  </pre><br>\r\n<br>\r\n<p></p>\r\n',2,'kmp,算法',0,0,'2015-02-02 00:43:54','2015-02-02 00:43:54','2015-02-02 00:43:54'),(22,1,5,'算法-求两个有序数组两两相加的值最小的K个数','9eda2b28382cf7aaf5f7fc830414d6cc',0,'\r\n\r\n<p>我的思路是：</p>\r\n<p><span style=\"font-family:Tahoma,Simsun; font-size:14px; line-height:21px; background-color:rgb(232,241,248)\"><span style=\"color:#ff6600\">用队列，&nbsp;&nbsp;从(0','\r\n\r\n<p>我的思路是：</p>\r\n<p><span style=\"font-family:Tahoma,Simsun; font-size:14px; line-height:21px; background-color:rgb(232,241,248)\"><span style=\"color:#ff6600\">用队列，&nbsp;&nbsp;从(0,0)开始入队，每次出队的时候，选(1,0) (0,1) 之间最小的入队，如果是相等的都入队，如果入过队的就不入了，把出队的k个不同的输出来即可</span></span><br>\r\n</p>\r\n<p>我测试了几组数据都是对的，但是可能还是会有BUG，或者我忽略的地方。下面是我的实现代码（如果有错，请大家积极指正）</p>\r\n<p><pre name=\"code\" class=\"java\">import java.util.LinkedList;\nimport java.util.Queue;\n\n\n/**\n * 有两个序列 A 和 B,A=(a1,a2,...,ak),B=(b1,b2,...,bk),A 和 B 都按升序排列，对于\n1&lt;=i,j&lt;=k，求 k 个最小的（ai+bj），要求算法尽量高效\n * @author Administrator\n *\n */\npublic class Test {\n\n	int k=4;\n	int a[]=new int[]{1,2,3,4};\n	int b[]=new int[]{20,30,40,50};\n	boolean visited[]=new boolean[k*k];\n	int count=1,empty=a[0]+b[0]-1;\n	Queue&lt;Data&gt; queue=new LinkedList&lt;Data&gt;();\n	int result[]=new int[k];\n	class Data{\n		public int x,y,value;\n		public Data(int x,int y)\n		{\n			this.x=x;\n			this.y=y;\n			this.value=a[x]+b[y];\n		}\n	}\n	void main() {\n		for(int i=0;i&lt;k*k;i++)\n			visited[i]=false;\n		queue.add(new Data(0, 0));\n		visited[0]=true;\n		result[count-1]=a[0]+b[0];\n		while(!queue.isEmpty())\n		{\n			Data data=queue.poll();\n			int t1=empty,t2=empty;//t1 t2初始为比最小还小的方便后面比较\n			if(data.value!=result[count-1])\n			{\n				result[count]=data.value;\n				if(++count==k)\n					break;\n			}\n			if(data.x+1&lt;k &amp;&amp; (!visited[(data.x+1)*k+data.y]))\n			{\n				t1=a[data.x+1]+b[data.y];\n				visited[(data.x+1)*k+data.y]=true;\n			}\n			if(data.y+1&lt;k &amp;&amp; (!visited[(data.x)*k+data.y+1]))\n			{\n				t2=a[data.x]+b[data.y+1];\n				visited[(data.x)*k+data.y+1]=true;\n			}\n			if((t1&lt;t2&amp;&amp;t1!=empty) || (t1!=empty&amp;&amp;t2==empty) || (t1==t2 &amp;&amp;t1!=empty))\n			{\n				queue.add(new Data(data.x+1, data.y));\n			}\n			if((t1&gt;t2&amp;&amp;t2!=empty) || (t2!=empty&amp;&amp;t1==empty) || (t1==t2 &amp;&amp;t2!=empty))\n			{\n				queue.add(new Data(data.x, data.y+1));\n			}\n		}\n		for(int i=0;i&lt;count;i++)\n		{\n			System.out.print(result[i]+&quot; &quot;);\n		}\n	}\n	public static void main(String[] args)\n	{\n		new Test().main();	\n	}\n	\n}\n</pre><br>\r\n具体分析请见这个博文</p>\r\n<p>&nbsp;http://blog.csdn.net/sunnianzhong/article/details/8932374</p>\r\n<p>上面写道有三种方法，1：暴力 ，2：快排， 3：堆排</p>\r\n<p>而我的方法，并没有排序，因为他本身有序，我只是根据规律通过队列入队出队来剪掉不必要的路径。因为没有大量的数据验证，可能会有错误。我用简单的数字举例是能通过的。</p>\r\n','\r\n\r\n<p>我的思路是：</p>\r\n<p><span style=\"font-family:Tahoma,Simsun; font-size:14px; line-height:21px; background-color:rgb(232,241,248)\"><span style=\"color:#ff6600\">用队列，&nbsp;&nbsp;从(0,0)开始入队，每次出队的时候，选(1,0) (0,1) 之间最小的入队，如果是相等的都入队，如果入过队的就不入了，把出队的k个不同的输出来即可</span></span><br>\r\n</p>\r\n<p>我测试了几组数据都是对的，但是可能还是会有BUG，或者我忽略的地方。下面是我的实现代码（如果有错，请大家积极指正）</p>\r\n<p><pre name=\"code\" class=\"java\">import java.util.LinkedList;\nimport java.util.Queue;\n\n\n/**\n * 有两个序列 A 和 B,A=(a1,a2,...,ak),B=(b1,b2,...,bk),A 和 B 都按升序排列，对于\n1&lt;=i,j&lt;=k，求 k 个最小的（ai+bj），要求算法尽量高效\n * @author Administrator\n *\n */\npublic class Test {\n\n	int k=4;\n	int a[]=new int[]{1,2,3,4};\n	int b[]=new int[]{20,30,40,50};\n	boolean visited[]=new boolean[k*k];\n	int count=1,empty=a[0]+b[0]-1;\n	Queue&lt;Data&gt; queue=new LinkedList&lt;Data&gt;();\n	int result[]=new int[k];\n	class Data{\n		public int x,y,value;\n		public Data(int x,int y)\n		{\n			this.x=x;\n			this.y=y;\n			this.value=a[x]+b[y];\n		}\n	}\n	void main() {\n		for(int i=0;i&lt;k*k;i++)\n			visited[i]=false;\n		queue.add(new Data(0, 0));\n		visited[0]=true;\n		result[count-1]=a[0]+b[0];\n		while(!queue.isEmpty())\n		{\n			Data data=queue.poll();\n			int t1=empty,t2=empty;//t1 t2初始为比最小还小的方便后面比较\n			if(data.value!=result[count-1])\n			{\n				result[count]=data.value;\n				if(++count==k)\n					break;\n			}\n			if(data.x+1&lt;k &amp;&amp; (!visited[(data.x+1)*k+data.y]))\n			{\n				t1=a[data.x+1]+b[data.y];\n				visited[(data.x+1)*k+data.y]=true;\n			}\n			if(data.y+1&lt;k &amp;&amp; (!visited[(data.x)*k+data.y+1]))\n			{\n				t2=a[data.x]+b[data.y+1];\n				visited[(data.x)*k+data.y+1]=true;\n			}\n			if((t1&lt;t2&amp;&amp;t1!=empty) || (t1!=empty&amp;&amp;t2==empty) || (t1==t2 &amp;&amp;t1!=empty))\n			{\n				queue.add(new Data(data.x+1, data.y));\n			}\n			if((t1&gt;t2&amp;&amp;t2!=empty) || (t2!=empty&amp;&amp;t1==empty) || (t1==t2 &amp;&amp;t2!=empty))\n			{\n				queue.add(new Data(data.x, data.y+1));\n			}\n		}\n		for(int i=0;i&lt;count;i++)\n		{\n			System.out.print(result[i]+&quot; &quot;);\n		}\n	}\n	public static void main(String[] args)\n	{\n		new Test().main();	\n	}\n	\n}\n</pre><br>\r\n具体分析请见这个博文</p>\r\n<p>&nbsp;http://blog.csdn.net/sunnianzhong/article/details/8932374</p>\r\n<p>上面写道有三种方法，1：暴力 ，2：快排， 3：堆排</p>\r\n<p>而我的方法，并没有排序，因为他本身有序，我只是根据规律通过队列入队出队来剪掉不必要的路径。因为没有大量的数据验证，可能会有错误。我用简单的数字举例是能通过的。</p>\r\n',1,'算法,linkedlist',0,0,'2015-02-02 00:44:00','2015-02-02 00:44:00','2015-02-02 00:44:00'),(23,1,5,'算法-无序数列最大相邻大小差值','bc3e84714f18f2a98ffda0b023dae5a5',0,'\r\n\r\n<pre name=\"code\" class=\"java\">关键在于:距离平均值为（max-min）/n-1, 则距离最大的数必然大于这个值 这句话\n\n假设有4个数,最小为0.2, 最大为0.8.\n那么这四个','\r\n\r\n<pre name=\"code\" class=\"java\">关键在于:距离平均值为（max-min）/n-1, 则距离最大的数必然大于这个值 这句话\n\n假设有4个数,最小为0.2, 最大为0.8.\n那么这四个数的平均距离为(0.8-0.2)/3 = 0.2\n则必然存在两个数的差大于等于0.2,即距离最大的两个数必然不会小于0.2.\n\n分成三个桶,分别是0.2~0.4, 0.4~0.6, 0.6~0.8.\n那么距离最大的两个数必然不在同一个桶内.\n依次比较上一个桶的最大值与下一个桶的最小值的差值,找最大的即可.</pre><br>\r\n','\r\n\r\n<pre name=\"code\" class=\"java\">关键在于:距离平均值为（max-min）/n-1, 则距离最大的数必然大于这个值 这句话\n\n假设有4个数,最小为0.2, 最大为0.8.\n那么这四个数的平均距离为(0.8-0.2)/3 = 0.2\n则必然存在两个数的差大于等于0.2,即距离最大的两个数必然不会小于0.2.\n\n分成三个桶,分别是0.2~0.4, 0.4~0.6, 0.6~0.8.\n那么距离最大的两个数必然不在同一个桶内.\n依次比较上一个桶的最大值与下一个桶的最小值的差值,找最大的即可.</pre><br>\r\n',1,'算法,工作,技术',0,0,'2015-02-02 00:44:01','2015-02-02 00:44:01','2015-02-02 00:44:01'),(25,1,6,'Java设计模式-设计模式的六种原则','d4566d69686badd6a20910ea903ec3f2',0,'\r\n\r\n<p><span style=\"font-size:14px; background-color:rgb(0,153,0)\">&nbsp; &nbsp; &nbsp; &nbsp; 所谓无招胜有招，练一门功夫分为内功和外功。外功好比招式，就是所谓的23种','\r\n\r\n<p><span style=\"font-size:14px; background-color:rgb(0,153,0)\">&nbsp; &nbsp; &nbsp; &nbsp; 所谓无招胜有招，练一门功夫分为内功和外功。外功好比招式，就是所谓的23种设计模式。而内功呢，就是心法，那就是这6种法则。光会外功那是花拳绣腿，内功修为才是境界。如此众多的设计模式，学完2遍，3遍可能也会忘的只记得单例和工厂模式。但是只要原则记住，在以后的设计中，有意无意就会用的设计模式的精髓。</span></p>\r\n<p><span style=\"font-size:14px; background-color:rgb(0,153,0)\"><br>\r\n</span></p>\r\n<p style=\"text-align:center\"><span style=\"font-size:24px; color:#ff0000; background-color:rgb(255,255,255)\">六种设计原则</span></p>\r\n<p style=\"text-align:center\"><br>\r\n</p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>单一职责原则</strong></span></p>\r\n<p style=\"text-align:center\"></p>\r\n<div style=\"text-align:left\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\"><strong>不要存在多于一个导致类变更的原因。通俗的说，即一个类只负责一项职责。&nbsp;</strong></span></div>\r\n<span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong></strong></span>\r\n<div style=\"text-align:left\"><span style=\"font-size:13px; text-indent:26.66666603088379px\">问题由来：类T负责两个不同的职责：职责P1，职责P2。当由于职责P1需求发生改变而需要修改类T时，有可能会导致原本运行正常的职责P2功能发生故障。</span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:13px; text-indent:26.66666603088379px\">一句话总结：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">不能为图代码量少，把牛头马嘴一起往一个类塞</span></span></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:13px; text-indent:26.66666603088379px\"><span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\"><br>\r\n</span></span></span></div>\r\n<p style=\"text-align:center\"><span style=\"font-size:18px\"><strong>里氏替换原则</strong></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">1.子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">2.子类中可以增加自己特有的方法。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">3.当子类的方法重载父类的方法时，方法的前置条件（即方法的形参）要比父类方法的输入参数更宽松。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">4.当子类的方法实现父类的抽象方法时，方法的后置条件（即方法的返回&#20540;）要比父类更严&#26684;。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">一句话总结：<span style=\"color:rgb(255,255,255)\"><span style=\"background-color:rgb(51,102,255)\">尽</span><span style=\"background-color:rgb(51,51,255)\">量不要重写父类的已经实现了的方法，可以用接口等其他方法绕过</span></span></span></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>依赖倒置原则</strong></span><br>\r\n</p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">高层模块不应该依赖低层模块，二者都应该依赖其抽象；抽象不应该依赖细节；细节应该依赖抽象。</span><br>\r\n</strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">这里用一个列子来说明：</span></strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\"></span></span></p>\r\n<pre name=\"code\" class=\"java\" style=\"font-weight: bold;\">import java.util.LinkedList;\nimport java.util.Queue;\n\n\n\ninterface IEAT\n{\n	public void eat();//抽象吃这个动作\n}\nclass EatApple implements IEAT\n{\n\n	@Override\n	public void eat() \n	{\n		//这里是吃苹果\n		System.out.print(&quot;eat a apple&quot;);\n		\n	}\n}\nclass EatWater implements IEAT\n{\n\n	@Override\n	public void eat() {\n		// 这里是吃水\n		System.out.print(&quot;dringk water&quot;);\n		\n	}\n	\n}\npublic class Human\n{\n	public void dosomething(IEAT ieat)//我爱吃东西，吃什么呢，看传入什么\n	{\n		ieat.eat();\n	}\n	/*\n	public void dosomething(String food)//我爱吃东西，吃什么呢，看传入什么\n	{\n		if(food.equals(&quot;apple&quot;))\n		{\n			//吃苹果\n		}\n		if(food.equals(&quot;water&quot;))\n		{\n			//喝水\n		}\n	}\n	*/\n	public static void main(String[] args)\n	{\n		Human human=new Human();\n		/*\n		human.dosomething(&quot;apple&quot;);\n		human.dosomething(&quot;water&quot;);\n		 */\n		//给你吃个苹果\n		human.dosomething(new EatApple());\n		//再给你喝点水\n		human.dosomething(new EatWater());\n	}\n}\n</pre><br>\r\n其中注释的就是我们常用的方法。这种方法非常不适于扩展，因为如果要吃香蕉，吃西瓜，又要在dosomething里面写一堆判断。写着写着就混了。\r\n<p></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">因此一句话总结：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">多用抽象的接口来描述相同的动作，降低实现这个动作的人和物之间的耦合度</span></span></span></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>接口隔离原则</strong></span><br>\r\n</p>\r\n<p style=\"text-align:center\"><br>\r\n</p>\r\n<p style=\"text-align:center\"></p>\r\n<div style=\"text-align:left\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">客户端不应该依赖它不需要的接口；一个类对另一个类的依赖应该建立在最小的接口上。&nbsp;</span></div>\r\n<span style=\"font-family:宋体; font-size:13px; line-height:20px\"></span>\r\n<div style=\"text-align:left\">问题由来：类A通过接口I依赖类B，类C通过接口I依赖类D，如果接口I对于类A和类B来说不是最小接口，则类B和类D必须去实现他们不需要的方法。</div>\r\n<div style=\"text-align:left\">一句话总结：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">就好比鱼和人两个类，鱼是游泳和腮呼吸两个动作，人是走路和吃饭两个动作，这些动作不能写在一个接口里面，把这四个动作都包含了。要拆成专门对鱼和人的两个接口才行。</span></span></div>\r\n<p></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>迪米特法则</strong></span><br>\r\n</strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">迪米特法则又叫最少知道原则，最早是在1987年由美国Northeastern\r\n University的Ian Holland提出。通俗的来讲，就是一个类对自己依赖的类知道的越少越好。也就是说，对于被依赖的类来说，无论逻辑多么复杂，都尽量地的将逻辑封装在类的内部，对外除了提供的public方法，不对外泄漏任何信息。</span><br>\r\n</span></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">这个有点不好记，总结就是：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">father1&lt;-child1,father2&lt;-child2,father1和father2是的手下，\r\n father1尽量通过father2去访问child2, 不要直接在类里面访问child2. 下属怎么能随便去领导家的孩子呢，小心别人说你拐卖&nbsp;</span></span></span></span></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>开闭原则</strong></span><br>\r\n</strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-weight:bold\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-size:12px\">这个没啥好说的：<span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来实现变化。</span></span></strong></span></span></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-size:12px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\"><a target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38708967\">转自http://blog.csdn.net/cq361106306/article/details/38708967</a></span></span></span></span></p>\r\n','\r\n\r\n<p><span style=\"font-size:14px; background-color:rgb(0,153,0)\">&nbsp; &nbsp; &nbsp; &nbsp; 所谓无招胜有招，练一门功夫分为内功和外功。外功好比招式，就是所谓的23种设计模式。而内功呢，就是心法，那就是这6种法则。光会外功那是花拳绣腿，内功修为才是境界。如此众多的设计模式，学完2遍，3遍可能也会忘的只记得单例和工厂模式。但是只要原则记住，在以后的设计中，有意无意就会用的设计模式的精髓。</span></p>\r\n<p><span style=\"font-size:14px; background-color:rgb(0,153,0)\"><br>\r\n</span></p>\r\n<p style=\"text-align:center\"><span style=\"font-size:24px; color:#ff0000; background-color:rgb(255,255,255)\">六种设计原则</span></p>\r\n<p style=\"text-align:center\"><br>\r\n</p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>单一职责原则</strong></span></p>\r\n<p style=\"text-align:center\"></p>\r\n<div style=\"text-align:left\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\"><strong>不要存在多于一个导致类变更的原因。通俗的说，即一个类只负责一项职责。&nbsp;</strong></span></div>\r\n<span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong></strong></span>\r\n<div style=\"text-align:left\"><span style=\"font-size:13px; text-indent:26.66666603088379px\">问题由来：类T负责两个不同的职责：职责P1，职责P2。当由于职责P1需求发生改变而需要修改类T时，有可能会导致原本运行正常的职责P2功能发生故障。</span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:13px; text-indent:26.66666603088379px\">一句话总结：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">不能为图代码量少，把牛头马嘴一起往一个类塞</span></span></span></div>\r\n<div style=\"text-align:left\"><span style=\"font-size:13px; text-indent:26.66666603088379px\"><span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\"><br>\r\n</span></span></span></div>\r\n<p style=\"text-align:center\"><span style=\"font-size:18px\"><strong>里氏替换原则</strong></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">1.子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">2.子类中可以增加自己特有的方法。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">3.当子类的方法重载父类的方法时，方法的前置条件（即方法的形参）要比父类方法的输入参数更宽松。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">4.当子类的方法实现父类的抽象方法时，方法的后置条件（即方法的返回&#20540;）要比父类更严&#26684;。</span></span></p>\r\n<p><span style=\"font-family:宋体; line-height:20px\"><span style=\"font-size:12px\">一句话总结：<span style=\"color:rgb(255,255,255)\"><span style=\"background-color:rgb(51,102,255)\">尽</span><span style=\"background-color:rgb(51,51,255)\">量不要重写父类的已经实现了的方法，可以用接口等其他方法绕过</span></span></span></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>依赖倒置原则</strong></span><br>\r\n</p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">高层模块不应该依赖低层模块，二者都应该依赖其抽象；抽象不应该依赖细节；细节应该依赖抽象。</span><br>\r\n</strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">这里用一个列子来说明：</span></strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\"></span></span></p>\r\n<pre name=\"code\" class=\"java\" style=\"font-weight: bold;\">import java.util.LinkedList;\nimport java.util.Queue;\n\n\n\ninterface IEAT\n{\n	public void eat();//抽象吃这个动作\n}\nclass EatApple implements IEAT\n{\n\n	@Override\n	public void eat() \n	{\n		//这里是吃苹果\n		System.out.print(&quot;eat a apple&quot;);\n		\n	}\n}\nclass EatWater implements IEAT\n{\n\n	@Override\n	public void eat() {\n		// 这里是吃水\n		System.out.print(&quot;dringk water&quot;);\n		\n	}\n	\n}\npublic class Human\n{\n	public void dosomething(IEAT ieat)//我爱吃东西，吃什么呢，看传入什么\n	{\n		ieat.eat();\n	}\n	/*\n	public void dosomething(String food)//我爱吃东西，吃什么呢，看传入什么\n	{\n		if(food.equals(&quot;apple&quot;))\n		{\n			//吃苹果\n		}\n		if(food.equals(&quot;water&quot;))\n		{\n			//喝水\n		}\n	}\n	*/\n	public static void main(String[] args)\n	{\n		Human human=new Human();\n		/*\n		human.dosomething(&quot;apple&quot;);\n		human.dosomething(&quot;water&quot;);\n		 */\n		//给你吃个苹果\n		human.dosomething(new EatApple());\n		//再给你喝点水\n		human.dosomething(new EatWater());\n	}\n}\n</pre><br>\r\n其中注释的就是我们常用的方法。这种方法非常不适于扩展，因为如果要吃香蕉，吃西瓜，又要在dosomething里面写一堆判断。写着写着就混了。\r\n<p></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">因此一句话总结：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">多用抽象的接口来描述相同的动作，降低实现这个动作的人和物之间的耦合度</span></span></span></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>接口隔离原则</strong></span><br>\r\n</p>\r\n<p style=\"text-align:center\"><br>\r\n</p>\r\n<p style=\"text-align:center\"></p>\r\n<div style=\"text-align:left\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">客户端不应该依赖它不需要的接口；一个类对另一个类的依赖应该建立在最小的接口上。&nbsp;</span></div>\r\n<span style=\"font-family:宋体; font-size:13px; line-height:20px\"></span>\r\n<div style=\"text-align:left\">问题由来：类A通过接口I依赖类B，类C通过接口I依赖类D，如果接口I对于类A和类B来说不是最小接口，则类B和类D必须去实现他们不需要的方法。</div>\r\n<div style=\"text-align:left\">一句话总结：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">就好比鱼和人两个类，鱼是游泳和腮呼吸两个动作，人是走路和吃饭两个动作，这些动作不能写在一个接口里面，把这四个动作都包含了。要拆成专门对鱼和人的两个接口才行。</span></span></div>\r\n<p></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>迪米特法则</strong></span><br>\r\n</strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">迪米特法则又叫最少知道原则，最早是在1987年由美国Northeastern\r\n University的Ian Holland提出。通俗的来讲，就是一个类对自己依赖的类知道的越少越好。也就是说，对于被依赖的类来说，无论逻辑多么复杂，都尽量地的将逻辑封装在类的内部，对外除了提供的public方法，不对外泄漏任何信息。</span><br>\r\n</span></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; font-size:18px; line-height:20px\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">这个有点不好记，总结就是：<span style=\"background-color:rgb(51,51,255)\"><span style=\"color:#ffffff\">father1&lt;-child1,father2&lt;-child2,father1和father2是的手下，\r\n father1尽量通过father2去访问child2, 不要直接在类里面访问child2. 下属怎么能随便去领导家的孩子呢，小心别人说你拐卖&nbsp;</span></span></span></span></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong>开闭原则</strong></span><br>\r\n</strong></span></p>\r\n<p style=\"text-align:center\"><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-family:宋体; font-size:18px; line-height:20px; text-indent:26.66666603088379px\"><strong><br>\r\n</strong></span></strong></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-weight:bold\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><strong><span style=\"font-size:12px\">这个没啥好说的：<span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\">尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来实现变化。</span></span></strong></span></span></span></p>\r\n<p style=\"text-align:left\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-family:宋体; line-height:20px; text-indent:26.66666603088379px\"><span style=\"font-size:12px\"><span style=\"font-family:宋体; font-size:13px; line-height:20px; text-indent:26.66666603088379px\"><a target=\"_blank\" href=\"http://blog.csdn.net/cq361106306/article/details/38708967\">转自http://blog.csdn.net/cq361106306/article/details/38708967</a></span></span></span></span></p>\r\n',3,'设计,java,java设计模式',0,0,'2015-02-02 00:44:28','2015-02-02 00:44:28','2015-02-02 00:44:28'),(26,1,6,'Java设计模式-单例模式','52064685497f3498fee4dd910512f0e6',0,'\r\n\r\n<p>以前都只知道鲁码，有时候会碰到这样一个问题，在一个类里面想要调用另一个类里面的方法，或者成员变量，每次都要new一次， 或者把那个类成','\r\n\r\n<p>以前都只知道鲁码，有时候会碰到这样一个问题，在一个类里面想要调用另一个类里面的方法，或者成员变量，每次都要new一次， 或者把那个类成员设置成静态的，但是这样很不方便，而且有时候那个类每次new一下，里面的构造函数会增添新的数据等等。 在没有接触到这种单例模式的时候，我是用一个静态成员，保存那个类的实例，每次new的时候判断下是否new过了，但是不适合扩展。 然后就发现了单例模式：</p>\r\n<p>这是几种模式中我接触的第一种最简单的模式。看代码:</p>\r\n<p><pre name=\"code\" class=\"java\">public Single{\n\n  public static Single single=null;\n  \n  public static Single getInstance()\n {\n	if(single==null)\n		single=new Single();\n	return single;\n } \n\n\n\n}</pre><br>\r\n以上就是全部了，用的时候外部不用判断。直接:<pre name=\"code\" class=\"java\">Single.getInstance().XXXX</pre>就可以调用里面的东西了，是不是很方便</p>\r\n','\r\n\r\n<p>以前都只知道鲁码，有时候会碰到这样一个问题，在一个类里面想要调用另一个类里面的方法，或者成员变量，每次都要new一次， 或者把那个类成员设置成静态的，但是这样很不方便，而且有时候那个类每次new一下，里面的构造函数会增添新的数据等等。 在没有接触到这种单例模式的时候，我是用一个静态成员，保存那个类的实例，每次new的时候判断下是否new过了，但是不适合扩展。 然后就发现了单例模式：</p>\r\n<p>这是几种模式中我接触的第一种最简单的模式。看代码:</p>\r\n<p><pre name=\"code\" class=\"java\">public Single{\n\n  public static Single single=null;\n  \n  public static Single getInstance()\n {\n	if(single==null)\n		single=new Single();\n	return single;\n } \n\n\n\n}</pre><br>\r\n以上就是全部了，用的时候外部不用判断。直接:<pre name=\"code\" class=\"java\">Single.getInstance().XXXX</pre>就可以调用里面的东西了，是不是很方便</p>\r\n',1,'java设计模式,实例,类',0,0,'2015-02-02 00:44:29','2015-02-02 00:44:29','2015-02-02 00:44:29'),(28,1,7,'DirectX11 学习笔记10 - 用文件存储顶点布局','902aa0f2415396f06d108e78262e4214',0,'\r\n\r\n<p>这节需要把顶点布局写在文件里面，为了方便，因为一大串非常抽象的坐标放在CPP和程序混在一起非常的不方便。</p>\r\n<p>下面全为c&#43;&#43;知识，','\r\n\r\n<p>这节需要把顶点布局写在文件里面，为了方便，因为一大串非常抽象的坐标放在CPP和程序混在一起非常的不方便。</p>\r\n<p>下面全为c&#43;&#43;知识，读取文件里面的特定&#26684;式的数据：</p>\r\n<p></p>\r\n<pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_1_3427897\"  code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_1_3427897\" name=\"code\" class=\"html\">Vertex Count: 36\n\nData:\n\n-1.0  1.0 -1.0 0.0 0.0  0.0  0.0 -1.0\n 1.0  1.0 -1.0 1.0 0.0  0.0  0.0 -1.0\n-1.0 -1.0 -1.0 0.0 1.0  0.0  0.0 -1.0\n-1.0 -1.0 -1.0 0.0 1.0  0.0  0.0 -1.0\n 1.0  1.0 -1.0 1.0 0.0  0.0  0.0 -1.0\n 1.0 -1.0 -1.0 1.0 1.0  0.0  0.0 -1.0\n 1.0  1.0 -1.0 0.0 0.0  1.0  0.0  0.0\n 1.0  1.0  1.0 1.0 0.0  1.0  0.0  0.0\n 1.0 -1.0 -1.0 0.0 1.0  1.0  0.0  0.0\n 1.0 -1.0 -1.0 0.0 1.0  1.0  0.0  0.0\n 1.0  1.0  1.0 1.0 0.0  1.0  0.0  0.0\n 1.0 -1.0  1.0 1.0 1.0  1.0  0.0  0.0\n 1.0  1.0  1.0 0.0 0.0  0.0  0.0  1.0\n-1.0  1.0  1.0 1.0 0.0  0.0  0.0  1.0\n 1.0 -1.0  1.0 0.0 1.0  0.0  0.0  1.0\n 1.0 -1.0  1.0 0.0 1.0  0.0  0.0  1.0\n-1.0  1.0  1.0 1.0 0.0  0.0  0.0  1.0\n-1.0 -1.0  1.0 1.0 1.0  0.0  0.0  1.0\n-1.0  1.0  1.0 0.0 0.0 -1.0  0.0  0.0\n-1.0  1.0 -1.0 1.0 0.0 -1.0  0.0  0.0\n-1.0 -1.0  1.0 0.0 1.0 -1.0  0.0  0.0\n-1.0 -1.0  1.0 0.0 1.0 -1.0  0.0  0.0\n-1.0  1.0 -1.0 1.0 0.0 -1.0  0.0  0.0\n-1.0 -1.0 -1.0 1.0 1.0 -1.0  0.0  0.0\n-1.0  1.0  1.0 0.0 0.0  0.0  1.0  0.0\n 1.0  1.0  1.0 1.0 0.0  0.0  1.0  0.0\n-1.0  1.0 -1.0 0.0 1.0  0.0  1.0  0.0\n-1.0  1.0 -1.0 0.0 1.0  0.0  1.0  0.0\n 1.0  1.0  1.0 1.0 0.0  0.0  1.0  0.0\n 1.0  1.0 -1.0 1.0 1.0  0.0  1.0  0.0\n-1.0 -1.0 -1.0 0.0 0.0  0.0 -1.0  0.0\n 1.0 -1.0 -1.0 1.0 0.0  0.0 -1.0  0.0\n-1.0 -1.0  1.0 0.0 1.0  0.0 -1.0  0.0\n-1.0 -1.0  1.0 0.0 1.0  0.0 -1.0  0.0\n 1.0 -1.0 -1.0 1.0 0.0  0.0 -1.0  0.0\n 1.0 -1.0  1.0 1.0 1.0  0.0 -1.0  0.0\n</pre><br>\r\n数据就是上面这个样子，就没有索引点了，每个顶点自动重复了。\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_2_3479384\"  code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_2_3479384\" name=\"code\" class=\"cpp\">#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main()\n{\n	ifstream in;\n	in.open(&quot;cube.txt&quot;);\n	if(!in)\n	{\n		cout&lt;&lt;&quot;打开失败&quot;&lt;&lt;endl;\n	}else\n	{\n		cout&lt;&lt;&quot;打开成功&quot;&lt;&lt;endl;\n	}\n\n	char ch;\n	int count;\n	float f[8];\n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Vertex Count:&quot;\n	in&gt;&gt;count;\n	cout&lt;&lt;count&lt;&lt;endl;\n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Data:&quot;\n	while(!in.eof())\n	{\n		for(int i=0;i&lt;8;i++)\n			in&gt;&gt;f[i];\n		for(int i=0;i&lt;8;i++)\n			cout&lt;&lt;f[i]&lt;&lt;&quot; &quot;;\n		cout&lt;&lt;endl;\n	}\n	\n	in.close();\n	in.clear();\n	getchar();\n}</pre><br>\r\n上面是纯c&#43;&#43;代码，只是一个读取的列子，下节再更新如何在模型初始化里面套用。\r\n<p></p>\r\n<p>本文转载请注明：Younfor的博客笔记，http://blog.csdn.net/cq361106306/article/details/40300205</p>\r\n<p><br>\r\n</p>\r\n<p>如果套用呢。只需要在模型文件里改就行了；</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_3_9722795\"  name=\"code\" class=\"cpp\">#pragma  once\n#include &quot;XComm.h&quot;\n#include &lt;fstream&gt;\n#include &lt;iostream&gt;\nclass CubeModel\n{\nprotected:\n	struct SimpleVertex\n	{\n		XMFLOAT3 Pos;\n		XMFLOAT3 Normal;\n	};\n	struct ModelType\n	{\n		float x, y, z;\n		float tu, tv;\n		float nx, ny, nz;\n	};\n	ModelType* m_model; //模型顶点坐标数据结构\npublic://顶点缓冲和顶点索引缓冲\n	ID3D11Buffer *m_vertexBuffer, *m_indexBuffer;\n	int m_vertexCount, m_indexCount;\npublic:\n	CubeModel():m_vertexCount(0),m_indexCount(0){};\n	bool init(ID3D11Device*);\n	void close();\n	void render(ID3D11DeviceContext*);\n	bool loadModel(char * filename);\n};\n</pre>上面头文件中 &nbsp;多了一个struct ModelType 这个主要是获取数据然后存储到内存的&#26684;式。</p>\r\n<p>然后多了一个loadModel()函数 这个里面就写上面的纯c&#43;&#43;代码了</p>\r\n<p>下面修改初始化模型 init() 函数里面的前面一部分</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_4_486163\"  name=\"code\" class=\"cpp\">unsigned long* indices;\n	SimpleVertex *vertices;\n	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;\n	D3D11_SUBRESOURCE_DATA vertexData, indexData;\n	//导入模型数据\n	if(!loadModel(&quot;cube.txt&quot;))\n	{\n		return false;\n	}\n	// 创建顶点临时缓冲.\n	vertices = new SimpleVertex[m_vertexCount]; \n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	for(int i=0; i&lt;m_vertexCount; i++)\n	{\n		vertices[i].Pos = XMFLOAT3(m_model[i].x, m_model[i].y, m_model[i].z);\n		vertices[i].Normal = XMFLOAT3(m_model[i].nx, m_model[i].ny, m_model[i].nz);\n\n		indices[i] = i;\n	}\n</pre><br>\r\n<br>\r\n这个其实就是把内存中的那个m_model[i] 模型数据赋&#20540;到顶点结构中。 这里索引顶点和实际顶点的个数是一摸一样的。</p>\r\n<p>下面这个代码是之前的赋&#20540;。</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_5_6058297\"  name=\"code\" class=\"cpp\">//首先，我们创建2个临时缓冲存放顶点和索引数据，以便后面使用。. \n\n	// 设置顶点缓冲大小为3，一个三角形.\n	m_vertexCount = 8;\n\n	// 设置索引缓冲大小.\n	m_indexCount = 36;  //6面*2三角形*3个点\n\n	// 创建顶点临时缓冲.\n	SimpleVertex vertices[] = {\n		{XMFLOAT3(-1.0f, -1.0f, -1.0f),WHITE},\n		{XMFLOAT3(-1.0f, 1.0f, -1.0f),BLACK},\n		{XMFLOAT3(1.0f, 1.0f, -1.0f),RED},\n		{XMFLOAT3(1.0f, -1.0f, -1.0f),GREEN},\n		{XMFLOAT3(-1.0f, -1.0f, 1.0f),BLUE},\n		{XMFLOAT3(-1.0f, 1.0f, 1.0f),YELLOW},\n		{XMFLOAT3(1.0f, 1.0f, 1.0f),CYAN},\n		{XMFLOAT3(1.0f, -1.0f, 1.0f),MAGENTA},\n\n	};\n	//右移一段距离 \n	for(int i=0;i&lt;8;i++)\n		vertices[i].Pos.x+=6.0f;\n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	// 设置索引缓冲数据.\n	indices[0] = 0;  // 前面 \n	indices[1] = 1; \n	indices[2] = 2;  \n	indices[3] = 0; \n	indices[4] = 2; \n	indices[5] = 3;  \n\n	indices[6] = 4;  // 后面 \n	indices[7] = 6; \n	indices[8] = 5;  \n	indices[9] = 4; \n	indices[10] = 7; \n	indices[11] = 6;\n\n	indices[12] = 4;  // 左面 \n	indices[13] = 5; \n	indices[14] = 1;  \n	indices[15] = 4; \n	indices[16] = 1; \n	indices[17] = 0;\n\n	indices[18] = 3;  //右面 \n	indices[19] = 2; \n	indices[20] = 6;  \n	indices[21] = 3; \n	indices[22] = 6; \n	indices[23] = 7;\n\n	indices[24] = 1;  // 上面 \n	indices[25] = 5; \n	indices[26] = 6;  \n	indices[27] = 1; \n	indices[28] = 6; \n	indices[29] = 2;\n\n	indices[30] = 4; // 下面 \n	indices[31] = 0; \n	indices[32] = 3;  \n	indices[33] = 4; \n	indices[34] = 3; \n	indices[35] = 7;\n</pre><br>\r\n<br>\r\n</p>\r\n<p>明显要麻烦许多对不对。</p>\r\n<p><br>\r\n</p>\r\n<p>然后初始化里面我调用了一个loadModel函数。 我把里面的参数&quot;cube.txt&quot;放到了工程目录下面和.fx效果文件平级的地方</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_6_8283145\"  name=\"code\" class=\"cpp\">bool CubeModel::loadModel(char * filename)\n{\n	std::ifstream in;  \n	in.open(filename);  \n	if(!in)  \n	{  \n		std::cout&lt;&lt;&quot;打开失败&quot;&lt;&lt;std::endl;  \n	}else  \n	{  \n		std::cout&lt;&lt;&quot;打开成功&quot;&lt;&lt;std::endl;  \n	}  \n\n	char ch;  \n	int count;   \n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Vertex Count:&quot;  \n	in&gt;&gt;count;  \n	m_model = new ModelType[count];\n	m_vertexCount=count;\n	m_indexCount=count;\n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Data:&quot;  \n	for(int i=0;i&lt;count;i++)\n	{  \n		in&gt;&gt;m_model[i].x&gt;&gt;m_model[i].y&gt;&gt;m_model[i].z;\n		in&gt;&gt;m_model[i].tu&gt;&gt;m_model[i].tv;\n		in&gt;&gt;m_model[i].nx&gt;&gt;m_model[i].ny&gt;&gt;m_model[i].nz;\n	}  \n\n	in.close();  \n	in.clear();  \n	return true;\n}</pre>这里就是之前文章开头写的一段c&#43;&#43;代码核心。</p>\r\n<p>然后再close写一下释放内存就行了。</p>\r\n<p><br>\r\n<pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_7_3855280\"  name=\"code\" class=\"cpp\">void CubeModel::close()\n{\n	//释放模型\n	if(m_model)\n	{\n		delete []m_model;\n		m_model=0;\n	}\n	// 释放顶点缓冲.\n	if(m_indexBuffer)\n	{\n		m_inde.......</pre><br>\r\n<img src=\"http://img.blog.csdn.net/20141020150904401?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n','\r\n\r\n<p>这节需要把顶点布局写在文件里面，为了方便，因为一大串非常抽象的坐标放在CPP和程序混在一起非常的不方便。</p>\r\n<p>下面全为c&#43;&#43;知识，读取文件里面的特定&#26684;式的数据：</p>\r\n<p></p>\r\n<pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_1_3427897\"  code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_1_3427897\" name=\"code\" class=\"html\">Vertex Count: 36\n\nData:\n\n-1.0  1.0 -1.0 0.0 0.0  0.0  0.0 -1.0\n 1.0  1.0 -1.0 1.0 0.0  0.0  0.0 -1.0\n-1.0 -1.0 -1.0 0.0 1.0  0.0  0.0 -1.0\n-1.0 -1.0 -1.0 0.0 1.0  0.0  0.0 -1.0\n 1.0  1.0 -1.0 1.0 0.0  0.0  0.0 -1.0\n 1.0 -1.0 -1.0 1.0 1.0  0.0  0.0 -1.0\n 1.0  1.0 -1.0 0.0 0.0  1.0  0.0  0.0\n 1.0  1.0  1.0 1.0 0.0  1.0  0.0  0.0\n 1.0 -1.0 -1.0 0.0 1.0  1.0  0.0  0.0\n 1.0 -1.0 -1.0 0.0 1.0  1.0  0.0  0.0\n 1.0  1.0  1.0 1.0 0.0  1.0  0.0  0.0\n 1.0 -1.0  1.0 1.0 1.0  1.0  0.0  0.0\n 1.0  1.0  1.0 0.0 0.0  0.0  0.0  1.0\n-1.0  1.0  1.0 1.0 0.0  0.0  0.0  1.0\n 1.0 -1.0  1.0 0.0 1.0  0.0  0.0  1.0\n 1.0 -1.0  1.0 0.0 1.0  0.0  0.0  1.0\n-1.0  1.0  1.0 1.0 0.0  0.0  0.0  1.0\n-1.0 -1.0  1.0 1.0 1.0  0.0  0.0  1.0\n-1.0  1.0  1.0 0.0 0.0 -1.0  0.0  0.0\n-1.0  1.0 -1.0 1.0 0.0 -1.0  0.0  0.0\n-1.0 -1.0  1.0 0.0 1.0 -1.0  0.0  0.0\n-1.0 -1.0  1.0 0.0 1.0 -1.0  0.0  0.0\n-1.0  1.0 -1.0 1.0 0.0 -1.0  0.0  0.0\n-1.0 -1.0 -1.0 1.0 1.0 -1.0  0.0  0.0\n-1.0  1.0  1.0 0.0 0.0  0.0  1.0  0.0\n 1.0  1.0  1.0 1.0 0.0  0.0  1.0  0.0\n-1.0  1.0 -1.0 0.0 1.0  0.0  1.0  0.0\n-1.0  1.0 -1.0 0.0 1.0  0.0  1.0  0.0\n 1.0  1.0  1.0 1.0 0.0  0.0  1.0  0.0\n 1.0  1.0 -1.0 1.0 1.0  0.0  1.0  0.0\n-1.0 -1.0 -1.0 0.0 0.0  0.0 -1.0  0.0\n 1.0 -1.0 -1.0 1.0 0.0  0.0 -1.0  0.0\n-1.0 -1.0  1.0 0.0 1.0  0.0 -1.0  0.0\n-1.0 -1.0  1.0 0.0 1.0  0.0 -1.0  0.0\n 1.0 -1.0 -1.0 1.0 0.0  0.0 -1.0  0.0\n 1.0 -1.0  1.0 1.0 1.0  0.0 -1.0  0.0\n</pre><br>\r\n数据就是上面这个样子，就没有索引点了，每个顶点自动重复了。\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_2_3479384\"  code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_2_3479384\" name=\"code\" class=\"cpp\">#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main()\n{\n	ifstream in;\n	in.open(&quot;cube.txt&quot;);\n	if(!in)\n	{\n		cout&lt;&lt;&quot;打开失败&quot;&lt;&lt;endl;\n	}else\n	{\n		cout&lt;&lt;&quot;打开成功&quot;&lt;&lt;endl;\n	}\n\n	char ch;\n	int count;\n	float f[8];\n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Vertex Count:&quot;\n	in&gt;&gt;count;\n	cout&lt;&lt;count&lt;&lt;endl;\n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Data:&quot;\n	while(!in.eof())\n	{\n		for(int i=0;i&lt;8;i++)\n			in&gt;&gt;f[i];\n		for(int i=0;i&lt;8;i++)\n			cout&lt;&lt;f[i]&lt;&lt;&quot; &quot;;\n		cout&lt;&lt;endl;\n	}\n	\n	in.close();\n	in.clear();\n	getchar();\n}</pre><br>\r\n上面是纯c&#43;&#43;代码，只是一个读取的列子，下节再更新如何在模型初始化里面套用。\r\n<p></p>\r\n<p>本文转载请注明：Younfor的博客笔记，http://blog.csdn.net/cq361106306/article/details/40300205</p>\r\n<p><br>\r\n</p>\r\n<p>如果套用呢。只需要在模型文件里改就行了；</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_3_9722795\"  name=\"code\" class=\"cpp\">#pragma  once\n#include &quot;XComm.h&quot;\n#include &lt;fstream&gt;\n#include &lt;iostream&gt;\nclass CubeModel\n{\nprotected:\n	struct SimpleVertex\n	{\n		XMFLOAT3 Pos;\n		XMFLOAT3 Normal;\n	};\n	struct ModelType\n	{\n		float x, y, z;\n		float tu, tv;\n		float nx, ny, nz;\n	};\n	ModelType* m_model; //模型顶点坐标数据结构\npublic://顶点缓冲和顶点索引缓冲\n	ID3D11Buffer *m_vertexBuffer, *m_indexBuffer;\n	int m_vertexCount, m_indexCount;\npublic:\n	CubeModel():m_vertexCount(0),m_indexCount(0){};\n	bool init(ID3D11Device*);\n	void close();\n	void render(ID3D11DeviceContext*);\n	bool loadModel(char * filename);\n};\n</pre>上面头文件中 &nbsp;多了一个struct ModelType 这个主要是获取数据然后存储到内存的&#26684;式。</p>\r\n<p>然后多了一个loadModel()函数 这个里面就写上面的纯c&#43;&#43;代码了</p>\r\n<p>下面修改初始化模型 init() 函数里面的前面一部分</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_4_486163\"  name=\"code\" class=\"cpp\">unsigned long* indices;\n	SimpleVertex *vertices;\n	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;\n	D3D11_SUBRESOURCE_DATA vertexData, indexData;\n	//导入模型数据\n	if(!loadModel(&quot;cube.txt&quot;))\n	{\n		return false;\n	}\n	// 创建顶点临时缓冲.\n	vertices = new SimpleVertex[m_vertexCount]; \n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	for(int i=0; i&lt;m_vertexCount; i++)\n	{\n		vertices[i].Pos = XMFLOAT3(m_model[i].x, m_model[i].y, m_model[i].z);\n		vertices[i].Normal = XMFLOAT3(m_model[i].nx, m_model[i].ny, m_model[i].nz);\n\n		indices[i] = i;\n	}\n</pre><br>\r\n<br>\r\n这个其实就是把内存中的那个m_model[i] 模型数据赋&#20540;到顶点结构中。 这里索引顶点和实际顶点的个数是一摸一样的。</p>\r\n<p>下面这个代码是之前的赋&#20540;。</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_5_6058297\"  name=\"code\" class=\"cpp\">//首先，我们创建2个临时缓冲存放顶点和索引数据，以便后面使用。. \n\n	// 设置顶点缓冲大小为3，一个三角形.\n	m_vertexCount = 8;\n\n	// 设置索引缓冲大小.\n	m_indexCount = 36;  //6面*2三角形*3个点\n\n	// 创建顶点临时缓冲.\n	SimpleVertex vertices[] = {\n		{XMFLOAT3(-1.0f, -1.0f, -1.0f),WHITE},\n		{XMFLOAT3(-1.0f, 1.0f, -1.0f),BLACK},\n		{XMFLOAT3(1.0f, 1.0f, -1.0f),RED},\n		{XMFLOAT3(1.0f, -1.0f, -1.0f),GREEN},\n		{XMFLOAT3(-1.0f, -1.0f, 1.0f),BLUE},\n		{XMFLOAT3(-1.0f, 1.0f, 1.0f),YELLOW},\n		{XMFLOAT3(1.0f, 1.0f, 1.0f),CYAN},\n		{XMFLOAT3(1.0f, -1.0f, 1.0f),MAGENTA},\n\n	};\n	//右移一段距离 \n	for(int i=0;i&lt;8;i++)\n		vertices[i].Pos.x+=6.0f;\n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	// 设置索引缓冲数据.\n	indices[0] = 0;  // 前面 \n	indices[1] = 1; \n	indices[2] = 2;  \n	indices[3] = 0; \n	indices[4] = 2; \n	indices[5] = 3;  \n\n	indices[6] = 4;  // 后面 \n	indices[7] = 6; \n	indices[8] = 5;  \n	indices[9] = 4; \n	indices[10] = 7; \n	indices[11] = 6;\n\n	indices[12] = 4;  // 左面 \n	indices[13] = 5; \n	indices[14] = 1;  \n	indices[15] = 4; \n	indices[16] = 1; \n	indices[17] = 0;\n\n	indices[18] = 3;  //右面 \n	indices[19] = 2; \n	indices[20] = 6;  \n	indices[21] = 3; \n	indices[22] = 6; \n	indices[23] = 7;\n\n	indices[24] = 1;  // 上面 \n	indices[25] = 5; \n	indices[26] = 6;  \n	indices[27] = 1; \n	indices[28] = 6; \n	indices[29] = 2;\n\n	indices[30] = 4; // 下面 \n	indices[31] = 0; \n	indices[32] = 3;  \n	indices[33] = 4; \n	indices[34] = 3; \n	indices[35] = 7;\n</pre><br>\r\n<br>\r\n</p>\r\n<p>明显要麻烦许多对不对。</p>\r\n<p><br>\r\n</p>\r\n<p>然后初始化里面我调用了一个loadModel函数。 我把里面的参数&quot;cube.txt&quot;放到了工程目录下面和.fx效果文件平级的地方</p>\r\n<p><pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_6_8283145\"  name=\"code\" class=\"cpp\">bool CubeModel::loadModel(char * filename)\n{\n	std::ifstream in;  \n	in.open(filename);  \n	if(!in)  \n	{  \n		std::cout&lt;&lt;&quot;打开失败&quot;&lt;&lt;std::endl;  \n	}else  \n	{  \n		std::cout&lt;&lt;&quot;打开成功&quot;&lt;&lt;std::endl;  \n	}  \n\n	char ch;  \n	int count;   \n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Vertex Count:&quot;  \n	in&gt;&gt;count;  \n	m_model = new ModelType[count];\n	m_vertexCount=count;\n	m_indexCount=count;\n	while(ch=in.get(),ch!=&#39;:&#39;);//跳过&quot;Data:&quot;  \n	for(int i=0;i&lt;count;i++)\n	{  \n		in&gt;&gt;m_model[i].x&gt;&gt;m_model[i].y&gt;&gt;m_model[i].z;\n		in&gt;&gt;m_model[i].tu&gt;&gt;m_model[i].tv;\n		in&gt;&gt;m_model[i].nx&gt;&gt;m_model[i].ny&gt;&gt;m_model[i].nz;\n	}  \n\n	in.close();  \n	in.clear();  \n	return true;\n}</pre>这里就是之前文章开头写的一段c&#43;&#43;代码核心。</p>\r\n<p>然后再close写一下释放内存就行了。</p>\r\n<p><br>\r\n<pre code_snippet_id=\"489711\" snippet_file_name=\"blog_20141020_7_3855280\"  name=\"code\" class=\"cpp\">void CubeModel::close()\n{\n	//释放模型\n	if(m_model)\n	{\n		delete []m_model;\n		m_model=0;\n	}\n	// 释放顶点缓冲.\n	if(m_indexBuffer)\n	{\n		m_inde.......</pre><br>\r\n<img src=\"http://img.blog.csdn.net/20141020150904401?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n',1,'directx,directx11,c++,图形',0,0,'2015-02-02 00:45:24','2015-02-02 00:45:24','2015-02-02 00:45:24'),(29,1,7,'DirectX11 学习笔记9 - 动态顶点缓冲区 和 静态顶点缓冲区','70654d3c600286dd66c3c0e41ec11c19',0,'\r\n\r\n<p>首先说什么是缓冲区：</p>\r\n<p>缓冲区就是在.fx效果文件(.ps .vs也是) 里面定义的一个数据结构。用于.fx和cpp文件的数据通信。</p>\r\n<p>比如：<pre code_sn','\r\n\r\n<p>首先说什么是缓冲区：</p>\r\n<p>缓冲区就是在.fx效果文件(.ps .vs也是) 里面定义的一个数据结构。用于.fx和cpp文件的数据通信。</p>\r\n<p>比如：<pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_1_5845861\"  name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer \n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n};\ncbuffer LightBuffer\n{\n    float3 cameraPosition;\n    float padding;\n};</pre>cbuffer是关键字。 &nbsp;类&#20284;于struct&nbsp;</p>\r\n<p>这里就定义了2个缓冲区。</p>\r\n<p>在程序运行的时候。效果文件.fx需要获得世界矩阵观察矩阵投影矩阵等等。 因此就需要为这个缓冲区赋&#20540;。一方面可以直接写在.fx文件里面。但是</p>\r\n<p>直接写在效果文件 编译后就不能动态改变了，没有灵活性。</p>\r\n<p>下面说说2种缓冲区</p>\r\n<p><span style=\"font-size:18px\">1：静态常量缓冲区</span></p>\r\n<p>所谓静态就是在渲染器初始化的时候，就为缓冲区赋&#20540;好了。不会再变了。</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_2_7907175\"  name=\"code\" class=\"cpp\">// Create the constant buffer\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_matrixBuffer );\n	if( FAILED( hr ) )\n		return hr;</pre>上面就是创建一个静态缓冲区的列子</p>\r\n<p>其中bd.Usage属性 &nbsp;<pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_3_6828163\"  name=\"code\" class=\"cpp\">D3D11_USAGE_DEFAULT</pre>意思是 cpu在运行过程中不能够再读写数据了</p>\r\n<p>bd.COUAccessFlags=0 也得设置为0才行。</p>\r\n<p>定义好缓冲区结构之后就是初始化了</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_4_8365306\"  name=\"code\" class=\"cpp\">//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( worldMatrix);\n	cb.mView = XMMatrixTranspose( viewMatrix );\n	cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n</pre><br>\r\n初始化很简单 这里拿世界矩阵 视图矩阵 投影矩阵为例子</p>\r\n<p>2：动态顶点缓冲区</p>\r\n<p>和静态缓冲区不同。动态缓冲区用于每一帧都需要动态改变渲染数据的情况。</p>\r\n<p>比如水波，每一秒他的顶点结构都在变，因此需要用动态缓冲区动态赋&#20540;，而不是在初始化赋&#20540;</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_5_3698244\"  name=\"code\" class=\"cpp\">//create the light buffer\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DYNAMIC;\n	bd.ByteWidth = sizeof(LightBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = D3D11_CPU_ACCESS_WRITE;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_lightmaterialBuffer );\n	if( FAILED( hr ) )\n		return hr;\n	return S_OK;</pre><br>\r\n定义基本一样。，只是在Usage 里面要设置为D3D11_USAGE_DYNAMIC &nbsp;还有CPUAccessFlags也要设置为D3D11_CPU_ACCESS_WRITE</p>\r\n<p>而且在更新数据的时候不一样</p>\r\n<p>必须先用map锁定，防止还没更新好的时候设备就渲染了造成错误数据不一致</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_6_5443131\"  name=\"code\" class=\"cpp\">D3D11_MAPPED_SUBRESOURCE mappedResource;\n	ConstantBuffer *data0;\n	LightBuffer *data1;\n	//\n	// Update variables\n	//\n	//ConstantBuffer cb;\n	//cb.mWorld = XMMatrixTranspose( worldMatrix);\n	//cb.mView = XMMatrixTranspose( viewMatrix );\n	//cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	//锁定常量缓冲区\n	HR(deviceContext-&gt;Map(m_matrixBuffer,0,D3D11_MAP_WRITE_DISCARD,0,&amp;mappedResource));\n	//deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	data0=(ConstantBuffer*)mappedResource.pData;\n	data0-&gt;mWorld=XMMatrixTranspose( worldMatrix);\n	data0-&gt;mView=XMMatrixTranspose( viewMatrix );\n	data0-&gt;mProjection=XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;Unmap(m_matrixBuffer,0);\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n	//LightBuffer lb;\n	//lb.cameraPosition=cameraPos;\n	//锁定光照缓冲区\n	HR(deviceContext-&gt;Map(m_lightmaterialBuffer,0,D3D11_MAP_WRITE_DISCARD,0,&amp;mappedResource));\n	data1=(LightBuffer*)mappedResource.pData;\n	data1-&gt;cameraPosition=cameraPos;\n	deviceContext-&gt;Unmap(m_lightmaterialBuffer,0);\n	//deviceContext-&gt;UpdateSubresource( m_lightmaterialBuffer, 0, NULL, &amp;lb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 1, 1, &amp;m_lightmaterialBuffer );</pre><br>\r\n<br>\r\n这里举了2个例子，同时渲染了2个缓冲区。要注意的是，渲染两个缓冲区的时候，不是简单的先写第一个再写第二个。&nbsp;</p>\r\n<p>有一点小区别。就是在deviceContext-&gt;VSSetConstantBuffers()的时候第一个参数要增加1. 表示是第二个缓冲区啦。其他都一样。</p>\r\n','\r\n\r\n<p>首先说什么是缓冲区：</p>\r\n<p>缓冲区就是在.fx效果文件(.ps .vs也是) 里面定义的一个数据结构。用于.fx和cpp文件的数据通信。</p>\r\n<p>比如：<pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_1_5845861\"  name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer \n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n};\ncbuffer LightBuffer\n{\n    float3 cameraPosition;\n    float padding;\n};</pre>cbuffer是关键字。 &nbsp;类&#20284;于struct&nbsp;</p>\r\n<p>这里就定义了2个缓冲区。</p>\r\n<p>在程序运行的时候。效果文件.fx需要获得世界矩阵观察矩阵投影矩阵等等。 因此就需要为这个缓冲区赋&#20540;。一方面可以直接写在.fx文件里面。但是</p>\r\n<p>直接写在效果文件 编译后就不能动态改变了，没有灵活性。</p>\r\n<p>下面说说2种缓冲区</p>\r\n<p><span style=\"font-size:18px\">1：静态常量缓冲区</span></p>\r\n<p>所谓静态就是在渲染器初始化的时候，就为缓冲区赋&#20540;好了。不会再变了。</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_2_7907175\"  name=\"code\" class=\"cpp\">// Create the constant buffer\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_matrixBuffer );\n	if( FAILED( hr ) )\n		return hr;</pre>上面就是创建一个静态缓冲区的列子</p>\r\n<p>其中bd.Usage属性 &nbsp;<pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_3_6828163\"  name=\"code\" class=\"cpp\">D3D11_USAGE_DEFAULT</pre>意思是 cpu在运行过程中不能够再读写数据了</p>\r\n<p>bd.COUAccessFlags=0 也得设置为0才行。</p>\r\n<p>定义好缓冲区结构之后就是初始化了</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_4_8365306\"  name=\"code\" class=\"cpp\">//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( worldMatrix);\n	cb.mView = XMMatrixTranspose( viewMatrix );\n	cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n</pre><br>\r\n初始化很简单 这里拿世界矩阵 视图矩阵 投影矩阵为例子</p>\r\n<p>2：动态顶点缓冲区</p>\r\n<p>和静态缓冲区不同。动态缓冲区用于每一帧都需要动态改变渲染数据的情况。</p>\r\n<p>比如水波，每一秒他的顶点结构都在变，因此需要用动态缓冲区动态赋&#20540;，而不是在初始化赋&#20540;</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_5_3698244\"  name=\"code\" class=\"cpp\">//create the light buffer\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DYNAMIC;\n	bd.ByteWidth = sizeof(LightBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = D3D11_CPU_ACCESS_WRITE;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_lightmaterialBuffer );\n	if( FAILED( hr ) )\n		return hr;\n	return S_OK;</pre><br>\r\n定义基本一样。，只是在Usage 里面要设置为D3D11_USAGE_DYNAMIC &nbsp;还有CPUAccessFlags也要设置为D3D11_CPU_ACCESS_WRITE</p>\r\n<p>而且在更新数据的时候不一样</p>\r\n<p>必须先用map锁定，防止还没更新好的时候设备就渲染了造成错误数据不一致</p>\r\n<p><pre code_snippet_id=\"482885\" snippet_file_name=\"blog_20141012_6_5443131\"  name=\"code\" class=\"cpp\">D3D11_MAPPED_SUBRESOURCE mappedResource;\n	ConstantBuffer *data0;\n	LightBuffer *data1;\n	//\n	// Update variables\n	//\n	//ConstantBuffer cb;\n	//cb.mWorld = XMMatrixTranspose( worldMatrix);\n	//cb.mView = XMMatrixTranspose( viewMatrix );\n	//cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	//锁定常量缓冲区\n	HR(deviceContext-&gt;Map(m_matrixBuffer,0,D3D11_MAP_WRITE_DISCARD,0,&amp;mappedResource));\n	//deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	data0=(ConstantBuffer*)mappedResource.pData;\n	data0-&gt;mWorld=XMMatrixTranspose( worldMatrix);\n	data0-&gt;mView=XMMatrixTranspose( viewMatrix );\n	data0-&gt;mProjection=XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;Unmap(m_matrixBuffer,0);\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n	//LightBuffer lb;\n	//lb.cameraPosition=cameraPos;\n	//锁定光照缓冲区\n	HR(deviceContext-&gt;Map(m_lightmaterialBuffer,0,D3D11_MAP_WRITE_DISCARD,0,&amp;mappedResource));\n	data1=(LightBuffer*)mappedResource.pData;\n	data1-&gt;cameraPosition=cameraPos;\n	deviceContext-&gt;Unmap(m_lightmaterialBuffer,0);\n	//deviceContext-&gt;UpdateSubresource( m_lightmaterialBuffer, 0, NULL, &amp;lb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 1, 1, &amp;m_lightmaterialBuffer );</pre><br>\r\n<br>\r\n这里举了2个例子，同时渲染了2个缓冲区。要注意的是，渲染两个缓冲区的时候，不是简单的先写第一个再写第二个。&nbsp;</p>\r\n<p>有一点小区别。就是在deviceContext-&gt;VSSetConstantBuffers()的时候第一个参数要增加1. 表示是第二个缓冲区啦。其他都一样。</p>\r\n',1,'c++,directx,directx11',0,0,'2015-02-02 00:45:25','2015-02-02 00:45:25','2015-02-02 00:45:25'),(30,1,7,'DirectX11 学习笔记8 - 最简单的光照','08db3e76458a5ad3605714116bcf9e6a',0,'\r\n\r\n<p>在上一个列子的基础上加了一个地面。这个地面是光照效果生成的。</p>\r\n<p>看图：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141012010655671?watermark/2/text/aHR0cD','\r\n\r\n<p>在上一个列子的基础上加了一个地面。这个地面是光照效果生成的。</p>\r\n<p>看图：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141012010655671?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>先说明：</p>\r\n<p>光照 需要重写一个 lightshader &nbsp;就是光照的渲染器</p>\r\n<p><pre name=\"code\" class=\"cpp\">// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;NORMAL&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};</pre>你会发现之前的第二行是Color而不是现在的Normal 。 因为光照的颜色是有外界 环境光 透射光 漫反射光 形成的。</p>\r\n<p>这些光的计算全部写在一个效果文件lightShader.fx里面</p>\r\n<p><br>\r\n<pre name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer \n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n};\ncbuffer LightBuffer\n{\n    float3 cameraPosition;\n    float padding;\n};\n//--------------------------------------------------------------------------------------\nstruct VS_INPUT\n{\n	float4 Pos : POSITION;\n    float3 Normal : NORMAL;\n};\nstruct VS_OUTPUT\n{\n    float4 Pos : SV_POSITION;\n    float4 Color : COLOR;\n};\n\n//--------------------------------------------------------------------------------------\n// Vertex Shader\n//--------------------------------------------------------------------------------------\nVS_OUTPUT VS( VS_INPUT input )\n{\n    VS_OUTPUT output = (VS_OUTPUT)0;\n    float4 worldPosition;\n    // 改变顶点为四个分量其次坐标.\n    input.Pos.w = 1.0f;\n    output.Pos = mul( input.Pos, World );\n    output.Pos = mul( output.Pos, View );\n    output.Pos = mul( output.Pos, Projection );\n     // 世界坐标系中的顶点法向.\n    float3 N = mul(input.Normal, (float3x3)World);\n	N = normalize(N);\n	//世界坐标系顶点位置\n	float3 P = output.Pos.xyz;\n\n	//自发射颜色\n	float3 emissive = float3(0.0, 0.0, 0.0);\n    \n	//计算环境光\n    float3 ambient =  float3(0.3, 0.3, 0.3);\n	\n	//计算漫反射光\n    float3 L = normalize(float3(-1.0, -1.0, 1.0));\n    float diffuseLight = max(dot(N, L), 0);\n    float3 diffuse =  diffuseLight;\n\n     //计算高光\n    float3 V = normalize(cameraPosition - P);\n    float3 H = normalize(L + V);\n    float specularLight = pow(max(dot(N, H), 0), 5.0);\n \n    if (diffuseLight &lt;= 0) \n	     specularLight = 0;\n    float3 specular =  specularLight;\n\n	output.Color.xyz = emissive + ambient + diffuse + specular;\n	// float3 tt = float3(1.0, 0.0, 0.0);\n	//  output.color.xyz = float3(1.0, 0.0, 0.0);\n	output.Color.w = 1.0f;\n\n    return output;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Pixel Shader\n//--------------------------------------------------------------------------------------\nfloat4 PS( VS_OUTPUT input ) : SV_Target\n{\n    return input.Color;\n}\n</pre><br>\r\n主要就是顶点输入进行复杂的光照计算，龙书上有。还多了一个缓冲区</p>\r\n<p><pre name=\"code\" class=\"cpp\">cbuffer LightBuffer\n{\n    float3 cameraPosition;\n    float padding;\n};</pre>目前只存了光照的颜色 主要 要为4的倍数 对齐float地址</p>\r\n<p><pre name=\"code\" class=\"cpp\">//create the light buffer\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(LightBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_lightmaterialBuffer );\n	if( FAILED( hr ) )\n		return hr;</pre><br>\r\n光照渲染文件里面的缓冲区创建</p>\r\n<p><pre name=\"code\" class=\"cpp\">//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( worldMatrix);\n	cb.mView = XMMatrixTranspose( viewMatrix );\n	cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n	LightBuffer lb;\n	lb.cameraPosition=cameraPos;\n	deviceContext-&gt;UpdateSubresource( m_lightmaterialBuffer, 0, NULL, &amp;lb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 1, 1, &amp;m_matrixBuffer );</pre><br>\r\n比以前多了一个缓冲区更新。</p>\r\n<p>有了光照效果文件 &nbsp;光照渲染器 还差一个承载物</p>\r\n<p>这里是一个四边形，作为大地吧</p>\r\n<p>PlaneModel.h</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma  once\n#include &quot;XComm.h&quot;\nclass PlaneModel\n{\nprotected:\n	struct SimpleVertexN\n		  {\n			  XMFLOAT3 Pos;\n			  XMFLOAT3 Normal;\n		  };\npublic://顶点缓冲和顶点索引缓冲\n	ID3D11Buffer *m_vertexBuffer, *m_indexBuffer;\n	int m_vertexCount, m_indexCount;\npublic:\n	PlaneModel():m_vertexCount(0),m_indexCount(0){};\n	bool init(ID3D11Device*);\n	void close();\n	void render(ID3D11DeviceContext*);\n};\n</pre><br>\r\n基本跟之前立方体的方法是一摸一样的 只不过把color颜色换成了法向normal</p>\r\n<p>PlaneModel.cpp</p>\r\n<p><pre name=\"code\" class=\"cpp\">#include &quot;PlaneModel.h&quot;\nbool PlaneModel::init(ID3D11Device* device)\n{\n	SimpleVertexN* vertices;\n	unsigned long* indices;\n	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;\n	D3D11_SUBRESOURCE_DATA vertexData, indexData;\n	HRESULT result;\n\n	//首先，我们创建2个临时缓冲存放顶点和索引数据，以便后面使用。. \n\n	// 设置顶点缓冲大小为4，一个平面.\n	m_vertexCount = 4;\n\n	// 设置索引缓冲大小.,两个三角形\n	m_indexCount = 6;\n\n	// 创建顶点临时缓冲.\n	vertices = new SimpleVertexN[m_vertexCount];\n	if(!vertices)\n	{\n		return false;\n	}\n\n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	if(!indices)\n	{\n		return false;\n	}\n	//创建顺时针方向的三角形，左手规则\n	// 设置顶点数据.\n	vertices[0].Pos = XMFLOAT3(-50.0f, -3.0f, -50.0f);  \n	vertices[0].Normal = XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n	vertices[1].Pos = XMFLOAT3(-50.0f,-3.0f, 50.0f);  \n	vertices[1].Normal = XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n	vertices[2].Pos = XMFLOAT3(50.0f, -3.0f, 50.0f);  \n	vertices[2].Normal=  XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n	vertices[3].Pos = XMFLOAT3(50.0f, -3.0f, -50.0f);  \n	vertices[3].Normal =  XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n\n	// 设置索引缓冲数据.\n	indices[0] = 0;  // 前面\n	indices[1] = 1; \n	indices[2] = 2;  \n	indices[3] = 0; \n	indices[4] = 2; \n	indices[5] = 3;  \n\n	// 设置顶点缓冲描述\n	vertexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	vertexBufferDesc.ByteWidth = sizeof(SimpleVertexN) * m_vertexCount;\n	vertexBufferDesc.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	vertexBufferDesc.CPUAccessFlags = 0;\n	vertexBufferDesc.MiscFlags = 0;\n	vertexBufferDesc.StructureByteStride = 0;\n\n	// 指向保存顶点数据的临时缓冲.\n	vertexData.pSysMem = vertices;\n	vertexData.SysMemPitch = 0;\n	vertexData.SysMemSlicePitch = 0;\n\n	// 创建顶点缓冲.\n	result = device-&gt;CreateBuffer(&amp;vertexBufferDesc, &amp;vertexData, &amp;m_vertexBuffer);\n	if(FAILED(result))\n	{\n		HR(result);\n		return false;\n	}\n\n	// 设置索引缓冲描述.\n	indexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	indexBufferDesc.ByteWidth = sizeof(unsigned long) * m_indexCount;\n	indexBufferDesc.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	indexBufferDesc.CPUAccessFlags = 0;\n	indexBufferDesc.MiscFlags = 0;\n	indexBufferDesc.StructureByteStride = 0;\n\n	// 指向存临时索引缓冲.\n	indexData.pSysMem = indices;\n	indexData.SysMemPitch = 0;\n	indexData.SysMemSlicePitch = 0;\n\n	// 创建索引缓冲.\n	result = device-&gt;CreateBuffer(&amp;indexBufferDesc, &amp;indexData, &amp;m_indexBuffer);\n	if(FAILED(result))\n	{\n		HR(result);\n		return false;\n	}\n\n	// 释放临时缓冲.\n	delete [] vertices;\n	vertices = 0;\n\n	delete [] indices;\n	indices = 0;\n}\nvoid PlaneModel::close()\n{\n	// 释放顶点缓冲.\n	if(m_indexBuffer)\n	{\n		m_indexBuffer-&gt;Release();\n		m_indexBuffer = 0;\n	}\n\n	// 释放索引缓冲\n	if(m_vertexBuffer)\n	{\n		m_vertexBuffer-&gt;Release();\n		m_vertexBuffer = 0;\n	}\n}\nvoid PlaneModel::render(ID3D11DeviceContext* deviceContext)\n{\n	unsigned int stride;\n	unsigned int offset;\n\n\n	// 设置顶点缓冲跨度和偏移.\n	stride = sizeof(SimpleVertexN); \n	offset = 0;\n\n	//在input assemberl阶段绑定顶点缓冲，以便能够被渲染\n	deviceContext-&gt;IASetVertexBuffers(0, 1, &amp;m_vertexBuffer, &amp;stride, &amp;offset);\n\n	//在input assemberl阶段绑定索引缓冲，以便能够被渲染\n	deviceContext-&gt;IASetIndexBuffer(m_indexBuffer, DXGI_FORMAT_R32_UINT, 0);\n\n	// 设置体元语义，渲染三角形列表.\n	//注意这里和XModel不一样\n	deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);\n}</pre><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>在上一个列子的基础上加了一个地面。这个地面是光照效果生成的。</p>\r\n<p>看图：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141012010655671?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>先说明：</p>\r\n<p>光照 需要重写一个 lightshader &nbsp;就是光照的渲染器</p>\r\n<p><pre name=\"code\" class=\"cpp\">// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;NORMAL&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};</pre>你会发现之前的第二行是Color而不是现在的Normal 。 因为光照的颜色是有外界 环境光 透射光 漫反射光 形成的。</p>\r\n<p>这些光的计算全部写在一个效果文件lightShader.fx里面</p>\r\n<p><br>\r\n<pre name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer \n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n};\ncbuffer LightBuffer\n{\n    float3 cameraPosition;\n    float padding;\n};\n//--------------------------------------------------------------------------------------\nstruct VS_INPUT\n{\n	float4 Pos : POSITION;\n    float3 Normal : NORMAL;\n};\nstruct VS_OUTPUT\n{\n    float4 Pos : SV_POSITION;\n    float4 Color : COLOR;\n};\n\n//--------------------------------------------------------------------------------------\n// Vertex Shader\n//--------------------------------------------------------------------------------------\nVS_OUTPUT VS( VS_INPUT input )\n{\n    VS_OUTPUT output = (VS_OUTPUT)0;\n    float4 worldPosition;\n    // 改变顶点为四个分量其次坐标.\n    input.Pos.w = 1.0f;\n    output.Pos = mul( input.Pos, World );\n    output.Pos = mul( output.Pos, View );\n    output.Pos = mul( output.Pos, Projection );\n     // 世界坐标系中的顶点法向.\n    float3 N = mul(input.Normal, (float3x3)World);\n	N = normalize(N);\n	//世界坐标系顶点位置\n	float3 P = output.Pos.xyz;\n\n	//自发射颜色\n	float3 emissive = float3(0.0, 0.0, 0.0);\n    \n	//计算环境光\n    float3 ambient =  float3(0.3, 0.3, 0.3);\n	\n	//计算漫反射光\n    float3 L = normalize(float3(-1.0, -1.0, 1.0));\n    float diffuseLight = max(dot(N, L), 0);\n    float3 diffuse =  diffuseLight;\n\n     //计算高光\n    float3 V = normalize(cameraPosition - P);\n    float3 H = normalize(L + V);\n    float specularLight = pow(max(dot(N, H), 0), 5.0);\n \n    if (diffuseLight &lt;= 0) \n	     specularLight = 0;\n    float3 specular =  specularLight;\n\n	output.Color.xyz = emissive + ambient + diffuse + specular;\n	// float3 tt = float3(1.0, 0.0, 0.0);\n	//  output.color.xyz = float3(1.0, 0.0, 0.0);\n	output.Color.w = 1.0f;\n\n    return output;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Pixel Shader\n//--------------------------------------------------------------------------------------\nfloat4 PS( VS_OUTPUT input ) : SV_Target\n{\n    return input.Color;\n}\n</pre><br>\r\n主要就是顶点输入进行复杂的光照计算，龙书上有。还多了一个缓冲区</p>\r\n<p><pre name=\"code\" class=\"cpp\">cbuffer LightBuffer\n{\n    float3 cameraPosition;\n    float padding;\n};</pre>目前只存了光照的颜色 主要 要为4的倍数 对齐float地址</p>\r\n<p><pre name=\"code\" class=\"cpp\">//create the light buffer\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(LightBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_lightmaterialBuffer );\n	if( FAILED( hr ) )\n		return hr;</pre><br>\r\n光照渲染文件里面的缓冲区创建</p>\r\n<p><pre name=\"code\" class=\"cpp\">//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( worldMatrix);\n	cb.mView = XMMatrixTranspose( viewMatrix );\n	cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n	LightBuffer lb;\n	lb.cameraPosition=cameraPos;\n	deviceContext-&gt;UpdateSubresource( m_lightmaterialBuffer, 0, NULL, &amp;lb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 1, 1, &amp;m_matrixBuffer );</pre><br>\r\n比以前多了一个缓冲区更新。</p>\r\n<p>有了光照效果文件 &nbsp;光照渲染器 还差一个承载物</p>\r\n<p>这里是一个四边形，作为大地吧</p>\r\n<p>PlaneModel.h</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma  once\n#include &quot;XComm.h&quot;\nclass PlaneModel\n{\nprotected:\n	struct SimpleVertexN\n		  {\n			  XMFLOAT3 Pos;\n			  XMFLOAT3 Normal;\n		  };\npublic://顶点缓冲和顶点索引缓冲\n	ID3D11Buffer *m_vertexBuffer, *m_indexBuffer;\n	int m_vertexCount, m_indexCount;\npublic:\n	PlaneModel():m_vertexCount(0),m_indexCount(0){};\n	bool init(ID3D11Device*);\n	void close();\n	void render(ID3D11DeviceContext*);\n};\n</pre><br>\r\n基本跟之前立方体的方法是一摸一样的 只不过把color颜色换成了法向normal</p>\r\n<p>PlaneModel.cpp</p>\r\n<p><pre name=\"code\" class=\"cpp\">#include &quot;PlaneModel.h&quot;\nbool PlaneModel::init(ID3D11Device* device)\n{\n	SimpleVertexN* vertices;\n	unsigned long* indices;\n	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;\n	D3D11_SUBRESOURCE_DATA vertexData, indexData;\n	HRESULT result;\n\n	//首先，我们创建2个临时缓冲存放顶点和索引数据，以便后面使用。. \n\n	// 设置顶点缓冲大小为4，一个平面.\n	m_vertexCount = 4;\n\n	// 设置索引缓冲大小.,两个三角形\n	m_indexCount = 6;\n\n	// 创建顶点临时缓冲.\n	vertices = new SimpleVertexN[m_vertexCount];\n	if(!vertices)\n	{\n		return false;\n	}\n\n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	if(!indices)\n	{\n		return false;\n	}\n	//创建顺时针方向的三角形，左手规则\n	// 设置顶点数据.\n	vertices[0].Pos = XMFLOAT3(-50.0f, -3.0f, -50.0f);  \n	vertices[0].Normal = XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n	vertices[1].Pos = XMFLOAT3(-50.0f,-3.0f, 50.0f);  \n	vertices[1].Normal = XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n	vertices[2].Pos = XMFLOAT3(50.0f, -3.0f, 50.0f);  \n	vertices[2].Normal=  XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n	vertices[3].Pos = XMFLOAT3(50.0f, -3.0f, -50.0f);  \n	vertices[3].Normal =  XMFLOAT3(0.0f, 1.0f, 0.0f);\n\n\n	// 设置索引缓冲数据.\n	indices[0] = 0;  // 前面\n	indices[1] = 1; \n	indices[2] = 2;  \n	indices[3] = 0; \n	indices[4] = 2; \n	indices[5] = 3;  \n\n	// 设置顶点缓冲描述\n	vertexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	vertexBufferDesc.ByteWidth = sizeof(SimpleVertexN) * m_vertexCount;\n	vertexBufferDesc.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	vertexBufferDesc.CPUAccessFlags = 0;\n	vertexBufferDesc.MiscFlags = 0;\n	vertexBufferDesc.StructureByteStride = 0;\n\n	// 指向保存顶点数据的临时缓冲.\n	vertexData.pSysMem = vertices;\n	vertexData.SysMemPitch = 0;\n	vertexData.SysMemSlicePitch = 0;\n\n	// 创建顶点缓冲.\n	result = device-&gt;CreateBuffer(&amp;vertexBufferDesc, &amp;vertexData, &amp;m_vertexBuffer);\n	if(FAILED(result))\n	{\n		HR(result);\n		return false;\n	}\n\n	// 设置索引缓冲描述.\n	indexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	indexBufferDesc.ByteWidth = sizeof(unsigned long) * m_indexCount;\n	indexBufferDesc.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	indexBufferDesc.CPUAccessFlags = 0;\n	indexBufferDesc.MiscFlags = 0;\n	indexBufferDesc.StructureByteStride = 0;\n\n	// 指向存临时索引缓冲.\n	indexData.pSysMem = indices;\n	indexData.SysMemPitch = 0;\n	indexData.SysMemSlicePitch = 0;\n\n	// 创建索引缓冲.\n	result = device-&gt;CreateBuffer(&amp;indexBufferDesc, &amp;indexData, &amp;m_indexBuffer);\n	if(FAILED(result))\n	{\n		HR(result);\n		return false;\n	}\n\n	// 释放临时缓冲.\n	delete [] vertices;\n	vertices = 0;\n\n	delete [] indices;\n	indices = 0;\n}\nvoid PlaneModel::close()\n{\n	// 释放顶点缓冲.\n	if(m_indexBuffer)\n	{\n		m_indexBuffer-&gt;Release();\n		m_indexBuffer = 0;\n	}\n\n	// 释放索引缓冲\n	if(m_vertexBuffer)\n	{\n		m_vertexBuffer-&gt;Release();\n		m_vertexBuffer = 0;\n	}\n}\nvoid PlaneModel::render(ID3D11DeviceContext* deviceContext)\n{\n	unsigned int stride;\n	unsigned int offset;\n\n\n	// 设置顶点缓冲跨度和偏移.\n	stride = sizeof(SimpleVertexN); \n	offset = 0;\n\n	//在input assemberl阶段绑定顶点缓冲，以便能够被渲染\n	deviceContext-&gt;IASetVertexBuffers(0, 1, &amp;m_vertexBuffer, &amp;stride, &amp;offset);\n\n	//在input assemberl阶段绑定索引缓冲，以便能够被渲染\n	deviceContext-&gt;IASetIndexBuffer(m_indexBuffer, DXGI_FORMAT_R32_UINT, 0);\n\n	// 设置体元语义，渲染三角形列表.\n	//注意这里和XModel不一样\n	deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);\n}</pre><br>\r\n<br>\r\n</p>\r\n',1,'c++,directx,directx11,图形,读书笔记',0,0,'2015-02-02 00:45:27','2015-02-02 00:45:27','2015-02-02 00:45:27'),(31,1,7,'DirectX11 学习笔记7 - 支持自由移动的摄像机','b5ad75b18572821697a2101748817d4b',0,'\r\n\r\n<p>现在将重新制定一个camera摄像机。可以自由移动。</p>\r\n<p>比如前进 后退，上游 下潜。 各个方向渲染之类的。</p>\r\n<p>首先设置按键。</p>\r\n<p>这个时','\r\n\r\n<p>现在将重新制定一个camera摄像机。可以自由移动。</p>\r\n<p>比如前进 后退，上游 下潜。 各个方向渲染之类的。</p>\r\n<p>首先设置按键。</p>\r\n<p>这个时候需要在</p>\r\n<p>XWindow.h 里面</p>\r\n<p><pre name=\"code\" class=\"cpp\">bool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//如果A,S,D,W,Q,E,Z,X,C键按下，移动摄像机 \n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)    //前后 \n		x_graphics-&gt;x_camera-&gt;walk(-0.1f); \n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)    \n		x_graphics-&gt;x_camera-&gt;walk(0.1f); \n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)    //左右 \n		x_graphics-&gt;x_camera-&gt;strafe(-0.1f); \n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)    \n		x_graphics-&gt;x_camera-&gt;strafe(0.1f); \n	//if(GetAsyncKeyState(&#39;Q&#39;) &amp; 0x8000)    //上下 \n	//	x_graphics-&gt;x_camera-&gt;fly(-0.1f); \n	//if(GetAsyncKeyState(&#39;E&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;fly(0.1f); \n	//if(GetAsyncKeyState(&#39;Z&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;pitch(PI/180); \n	//if(GetAsyncKeyState(&#39;X&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;yaw(PI/180); \n	//if(GetAsyncKeyState(&#39;C&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;roll(PI/180);\n\n\n	//动画，旋转摄像机 \n	//x_graphics-&gt;x_camera-&gt;roll(PI/180);\n\n\n	//开始渲染\n	return x_graphics-&gt;frame();\n}</pre>添加一些按键。如果报错的话， 可能是x_camera 在XGraphics.h 类里面是私有的，可以设置成公有</p>\r\n<p><pre name=\"code\" class=\"cpp\">private: \n	bool render(); \npublic:\n	XCamera *x_camera;//摄像机\nprivate:\n	XD3Device *x_d3d;//3D设备\n	XModel *x_model;//模型\n	XShader *x_shader;//渲染器\n	HWND hwnd;</pre><br>\r\n<br>\r\n然后很简单吧</p>\r\n<p>然后就是修改摄像机了</p>\r\n<p>先上代码再讲解吧</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma once\n#include &lt;xnamath.h&gt;\nclass XCamera\n{\npublic:\n	enum CameraType { LANDOBJECT, AIRCRAFT };\n	XCamera();\n	void strafe(float units); // l左右\n	//void fly(float units);    // 上下\n	void walk(float units);   // 前后\n\n	//void pitch(float angle); // 旋转view坐标系right向量\n	//void yaw(float angle);   // 旋转up向量\n	//void roll(float angle);  // 旋转look向量\n\n	void getViewMatrix(XMMATRIX&amp; V); \n	void setCameraType(CameraType cameraType); \n	void getPosition(XMFLOAT3* pos); \n	void setPosition(XMFLOAT3* pos); \n\n	void getRight(XMFLOAT3* right);\n	void getUp(XMFLOAT3* up);\n	void getLook(XMFLOAT3* look);\nprivate:\n	CameraType _cameraType;\n	XMFLOAT3 _right,_up,_look,_pos;\n};\nXCamera::XCamera()\n{\n	_cameraType=AIRCRAFT;\n	_pos=XMFLOAT3(0.0f, 0.0f, -10.0f);\n	_right=XMFLOAT3(1.0f,0.0f,0.0f);\n	_up=XMFLOAT3(0.0f,1.0f,0.0f);\n	_look=XMFLOAT3(0.0f,0.0f,1.0f);\n}\nvoid XCamera::getPosition(XMFLOAT3* pos)\n{\n	*pos = _pos;\n}\n\nvoid XCamera::setPosition(XMFLOAT3* pos)\n{\n	_pos = *pos;\n}\n\nvoid XCamera::getRight(XMFLOAT3* right)\n{\n	*right = _right;\n}\n\nvoid XCamera::getUp(XMFLOAT3* up)\n{\n	*up = _up;\n}\n\nvoid XCamera::getLook(XMFLOAT3* look)\n{\n	*look = _look;\n}\n\n//行走，沿着摄像机观察方向的移动\nvoid XCamera::walk(float units)\n{\n	XMVECTOR vpos,vlook;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vlook=XMLoadFloat3(&amp;_look);\n	// 仅在x,z平面移动\n	if( _cameraType == LANDOBJECT )\n	{\n		vpos += XMVectorSet(_look.x, 0.0f, _look.z,0)*units;\n	}\n	if( _cameraType == AIRCRAFT )\n		vpos += vlook * units;\n	XMStoreFloat3(&amp;_pos,vpos);\n}\n\n//扫视，是指保持观察方向不变，沿向量right方向从一边平移到另一边\nvoid XCamera::strafe(float units)\n{\n	XMVECTOR vpos,vright;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vright=XMLoadFloat3(&amp;_right);\n	// 仅在x,z平面移动\n	if( _cameraType == LANDOBJECT )\n		vpos += XMVectorSet(_right.x, 0.0f, _right.z,0.0f) * units;\n\n	if( _cameraType == AIRCRAFT )\n		vpos += vright * units;\n	XMStoreFloat3(&amp;_pos,vpos);\n}/*\n//飞行模式，升降，指沿着向量up方向的移动\nvoid XCamera::fly(float units)\n{\n	// 仅在y轴移动\n	if( _cameraType == LANDOBJECT )\n		_pos.y += units;\n\n	if( _cameraType == AIRCRAFT )\n		_pos += _up * units;\n}\n\nvoid XCamera::pitch(float angle)\n{\n	XMMATRIX T;\n	T=XMMatrixRotationAxis( _right, angle);\n\n	// 绕着right向量，旋转up和look\n	_up=XMVector3TransformCoord(_up,_up, T);\n	_look=XMVector3TransformCoord(_look, T);\n}\n\nvoid XCamera::yaw(float angle)\n{\n	D3DXMATRIX T;\n\n	//对LANDOBJECT,总是绕着(0,1,0)旋转。\n	if( _cameraType == LANDOBJECT )\n		T=XMMatrixRotationY(angle);\n\n	//对于aircraft,绕着up向量旋转\n	if( _cameraType == AIRCRAFT )\n		T=XMMatrixRotationAxis(_up, angle);\n\n	// 绕着up或者y轴，旋转right和look\n	_right=XMVector3TransformCoord(_right, T);\n	_look=XMVector3TransformCoord(_look, T);\n}\n\nvoid XCamera::roll(float angle)\n{\n	//只对aircraft模式才左roll旋转\n	if( _cameraType == AIRCRAFT )\n	{\n		D3DXMATRIX T;\n		T=XMMatrixRotationAxis(_look, angle);\n\n		// 绕着look向量，旋转up和right\n		_right=XMVector3TransformCoord(_right, T);\n		_up=XMVector3TransformCoord(_up, T);\n	}\n}\n*/\nvoid XCamera::getViewMatrix(XMMATRIX &amp;V)\n{\n	XMVECTOR vlook,vup,vright,vpos;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vlook=XMLoadFloat3(&amp;_look);\n	vup=XMLoadFloat3(&amp;_up);\n	vright=XMLoadFloat3(&amp;_right);\n	// 保持view局部坐标系，各轴的彼此正交\n	vlook=XMVector3Normalize(vlook);\n	// look X right\n	vup=XMVector3Cross(vlook, vright);\n	vup=XMVector3Normalize(vup);\n\n	vright=XMVector3Cross(vup, vlook);\n	vright=XMVector3Normalize(vright);\n	V=XMMatrixLookAtLH( vpos,vlook, vup);\n	// 生成view矩阵:\n	//float x = -D3DXVec3Dot(&amp;_right, &amp;_pos);\n	//float y = -D3DXVec3Dot(&amp;_up, &amp;_pos);\n	//float z = -D3DXVec3Dot(&amp;_look, &amp;_pos);\n\n	//(*V)(0,0) = _right.x; (*V)(0, 1) = _up.x; (*V)(0, 2) = _look.x; (*V)(0, 3) = 0.0f;\n	//(*V)(1,0) = _right.y; (*V)(1, 1) = _up.y; (*V)(1, 2) = _look.y; (*V)(1, 3) = 0.0f;\n	//(*V)(2,0) = _right.z; (*V)(2, 1) = _up.z; (*V)(2, 2) = _look.z; (*V)(2, 3) = 0.0f;\n	//(*V)(3,0) = x;        (*V)(3, 1) = y;     (*V)(3, 2) = z;       (*V)(3, 3) = 1.0f;\n}\n\nvoid XCamera::setCameraType(CameraType cameraType)\n{\n	_cameraType = cameraType;\n}\n</pre><br>\r\n注释掉的地方是一个坑。为什么呢。</p>\r\n<p>下面就要讲XMVECTOR 和XMFloat3的区别</p>\r\n<p>前者是向量。后者就是一个点结构</p>\r\n<p>前者支持各种运算。差 点 &nbsp;乘 加减</p>\r\n<p>后者 只能赋&#20540;啊什么的。是不是特别奇怪。因为XMVECTOR</p>\r\n<p>看源码</p>\r\n<p><pre name=\"code\" class=\"cpp\">// Vector intrinsic: Four 32 bit floating point components aligned on a 16 byte \n// boundary and mapped to hardware vector registers\n#if defined(_XM_SSE_INTRINSICS_) &amp;&amp; !defined(_XM_NO_INTRINSICS_)\ntypedef __m128 XMVECTOR;\n#else</pre><br>\r\n128位懂了吧。不能随便玩， 不然会报错 涉及到对齐问题</p>\r\n<p>上节说了，全局变量和局部变量可以用XMVECTOR 但是类变量不建议用</p>\r\n<p>偏偏这个摄像机是类变量。作死啊。只有设成XMFloat3了</p>\r\n<p>看源码<pre name=\"code\" class=\"cpp\">// 3D Vector; 32 bit floating point components\ntypedef struct _XMFLOAT3\n{\n    FLOAT x;\n    FLOAT y;\n    FLOAT z;\n\n#ifdef __cplusplus\n\n    _XMFLOAT3() {};\n    _XMFLOAT3(FLOAT _x, FLOAT _y, FLOAT _z) : x(_x), y(_y), z(_z) {};\n    _XMFLOAT3(CONST FLOAT *pArray);\n\n    _XMFLOAT3&amp; operator= (CONST _XMFLOAT3&amp; Float3);\n\n#endif // __cplusplus</pre><br>\r\n</p>\r\n<p>32位的 只能赋&#20540; 怎么玩 怎么玩&nbsp;</p>\r\n<p>上面摄像机类加注释了的函数是之前悲剧了的，我以为Float可以做运算。结果悲剧了。</p>\r\n<p>后来查了一下。 可以用一个转换</p>\r\n<p><pre name=\"code\" class=\"cpp\">XMVECTOR vpos,vright;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vright=XMLoadFloat3(&amp;_right);\n	// 仅在x,z平面移动\n	if( _cameraType == LANDOBJECT )\n		vpos += XMVectorSet(_right.x, 0.0f, _right.z,0.0f) * units;\n\n	if( _cameraType == AIRCRAFT )\n		vpos += vright * units;\n	XMStoreFloat3(&amp;_pos,vpos);</pre><br>\r\n看懂了吗 看懂了吗。 先load 把float装到vector局部变量 &nbsp;然后进行运算</p>\r\n<p>运算完成后 &nbsp;再store&nbsp;</p>\r\n<p>是不是很烦</p>\r\n<p>是不是</p>\r\n<p>没办法。目前我只会这样弄。你嫌烦 直接全局变量吧。或者回归dx10math.h&nbsp;</p>\r\n<p>废话不说 效果图。</p>\r\n<p>只改了walk函数。 其他自己改改吧，锻炼下自己</p>\r\n<p><pre name=\"code\" class=\"cpp\">//(*V)(0,0) = _right.x; (*V)(0, 1) = _up.x; (*V)(0, 2) = _look.x; (*V)(0, 3) = 0.0f;\n	//(*V)(1,0) = _right.y; (*V)(1, 1) = _up.y; (*V)(1, 2) = _look.y; (*V)(1, 3) = 0.0f;\n	//(*V)(2,0) = _right.z; (*V)(2, 1) = _up.z; (*V)(2, 2) = _look.z; (*V)(2, 3) = 0.0f;\n	//(*V)(3,0) = x;        (*V)(3, 1) = y;     (*V)(3, 2) = z;       (*V)(3, 3) = 1.0f;</pre><br>\r\n对了还有上面这个。原教程是直接这样算的一个矩阵，麻烦吧。麻烦吧。 懂不起含义了吧 快看龙书就懂了。懂了之后怎么办。还敲这么多？？</p>\r\n<p><pre name=\"code\" class=\"cpp\">V=XMMatrixLookAtLH( vpos,vlook, vup);</pre><br>\r\n一句话搞定，就不要造轮子了<img src=\"http://img.blog.csdn.net/20141009002335687?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>现在将重新制定一个camera摄像机。可以自由移动。</p>\r\n<p>比如前进 后退，上游 下潜。 各个方向渲染之类的。</p>\r\n<p>首先设置按键。</p>\r\n<p>这个时候需要在</p>\r\n<p>XWindow.h 里面</p>\r\n<p><pre name=\"code\" class=\"cpp\">bool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//如果A,S,D,W,Q,E,Z,X,C键按下，移动摄像机 \n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)    //前后 \n		x_graphics-&gt;x_camera-&gt;walk(-0.1f); \n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)    \n		x_graphics-&gt;x_camera-&gt;walk(0.1f); \n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)    //左右 \n		x_graphics-&gt;x_camera-&gt;strafe(-0.1f); \n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)    \n		x_graphics-&gt;x_camera-&gt;strafe(0.1f); \n	//if(GetAsyncKeyState(&#39;Q&#39;) &amp; 0x8000)    //上下 \n	//	x_graphics-&gt;x_camera-&gt;fly(-0.1f); \n	//if(GetAsyncKeyState(&#39;E&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;fly(0.1f); \n	//if(GetAsyncKeyState(&#39;Z&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;pitch(PI/180); \n	//if(GetAsyncKeyState(&#39;X&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;yaw(PI/180); \n	//if(GetAsyncKeyState(&#39;C&#39;) &amp; 0x8000)    \n	//	x_graphics-&gt;x_camera-&gt;roll(PI/180);\n\n\n	//动画，旋转摄像机 \n	//x_graphics-&gt;x_camera-&gt;roll(PI/180);\n\n\n	//开始渲染\n	return x_graphics-&gt;frame();\n}</pre>添加一些按键。如果报错的话， 可能是x_camera 在XGraphics.h 类里面是私有的，可以设置成公有</p>\r\n<p><pre name=\"code\" class=\"cpp\">private: \n	bool render(); \npublic:\n	XCamera *x_camera;//摄像机\nprivate:\n	XD3Device *x_d3d;//3D设备\n	XModel *x_model;//模型\n	XShader *x_shader;//渲染器\n	HWND hwnd;</pre><br>\r\n<br>\r\n然后很简单吧</p>\r\n<p>然后就是修改摄像机了</p>\r\n<p>先上代码再讲解吧</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma once\n#include &lt;xnamath.h&gt;\nclass XCamera\n{\npublic:\n	enum CameraType { LANDOBJECT, AIRCRAFT };\n	XCamera();\n	void strafe(float units); // l左右\n	//void fly(float units);    // 上下\n	void walk(float units);   // 前后\n\n	//void pitch(float angle); // 旋转view坐标系right向量\n	//void yaw(float angle);   // 旋转up向量\n	//void roll(float angle);  // 旋转look向量\n\n	void getViewMatrix(XMMATRIX&amp; V); \n	void setCameraType(CameraType cameraType); \n	void getPosition(XMFLOAT3* pos); \n	void setPosition(XMFLOAT3* pos); \n\n	void getRight(XMFLOAT3* right);\n	void getUp(XMFLOAT3* up);\n	void getLook(XMFLOAT3* look);\nprivate:\n	CameraType _cameraType;\n	XMFLOAT3 _right,_up,_look,_pos;\n};\nXCamera::XCamera()\n{\n	_cameraType=AIRCRAFT;\n	_pos=XMFLOAT3(0.0f, 0.0f, -10.0f);\n	_right=XMFLOAT3(1.0f,0.0f,0.0f);\n	_up=XMFLOAT3(0.0f,1.0f,0.0f);\n	_look=XMFLOAT3(0.0f,0.0f,1.0f);\n}\nvoid XCamera::getPosition(XMFLOAT3* pos)\n{\n	*pos = _pos;\n}\n\nvoid XCamera::setPosition(XMFLOAT3* pos)\n{\n	_pos = *pos;\n}\n\nvoid XCamera::getRight(XMFLOAT3* right)\n{\n	*right = _right;\n}\n\nvoid XCamera::getUp(XMFLOAT3* up)\n{\n	*up = _up;\n}\n\nvoid XCamera::getLook(XMFLOAT3* look)\n{\n	*look = _look;\n}\n\n//行走，沿着摄像机观察方向的移动\nvoid XCamera::walk(float units)\n{\n	XMVECTOR vpos,vlook;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vlook=XMLoadFloat3(&amp;_look);\n	// 仅在x,z平面移动\n	if( _cameraType == LANDOBJECT )\n	{\n		vpos += XMVectorSet(_look.x, 0.0f, _look.z,0)*units;\n	}\n	if( _cameraType == AIRCRAFT )\n		vpos += vlook * units;\n	XMStoreFloat3(&amp;_pos,vpos);\n}\n\n//扫视，是指保持观察方向不变，沿向量right方向从一边平移到另一边\nvoid XCamera::strafe(float units)\n{\n	XMVECTOR vpos,vright;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vright=XMLoadFloat3(&amp;_right);\n	// 仅在x,z平面移动\n	if( _cameraType == LANDOBJECT )\n		vpos += XMVectorSet(_right.x, 0.0f, _right.z,0.0f) * units;\n\n	if( _cameraType == AIRCRAFT )\n		vpos += vright * units;\n	XMStoreFloat3(&amp;_pos,vpos);\n}/*\n//飞行模式，升降，指沿着向量up方向的移动\nvoid XCamera::fly(float units)\n{\n	// 仅在y轴移动\n	if( _cameraType == LANDOBJECT )\n		_pos.y += units;\n\n	if( _cameraType == AIRCRAFT )\n		_pos += _up * units;\n}\n\nvoid XCamera::pitch(float angle)\n{\n	XMMATRIX T;\n	T=XMMatrixRotationAxis( _right, angle);\n\n	// 绕着right向量，旋转up和look\n	_up=XMVector3TransformCoord(_up,_up, T);\n	_look=XMVector3TransformCoord(_look, T);\n}\n\nvoid XCamera::yaw(float angle)\n{\n	D3DXMATRIX T;\n\n	//对LANDOBJECT,总是绕着(0,1,0)旋转。\n	if( _cameraType == LANDOBJECT )\n		T=XMMatrixRotationY(angle);\n\n	//对于aircraft,绕着up向量旋转\n	if( _cameraType == AIRCRAFT )\n		T=XMMatrixRotationAxis(_up, angle);\n\n	// 绕着up或者y轴，旋转right和look\n	_right=XMVector3TransformCoord(_right, T);\n	_look=XMVector3TransformCoord(_look, T);\n}\n\nvoid XCamera::roll(float angle)\n{\n	//只对aircraft模式才左roll旋转\n	if( _cameraType == AIRCRAFT )\n	{\n		D3DXMATRIX T;\n		T=XMMatrixRotationAxis(_look, angle);\n\n		// 绕着look向量，旋转up和right\n		_right=XMVector3TransformCoord(_right, T);\n		_up=XMVector3TransformCoord(_up, T);\n	}\n}\n*/\nvoid XCamera::getViewMatrix(XMMATRIX &amp;V)\n{\n	XMVECTOR vlook,vup,vright,vpos;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vlook=XMLoadFloat3(&amp;_look);\n	vup=XMLoadFloat3(&amp;_up);\n	vright=XMLoadFloat3(&amp;_right);\n	// 保持view局部坐标系，各轴的彼此正交\n	vlook=XMVector3Normalize(vlook);\n	// look X right\n	vup=XMVector3Cross(vlook, vright);\n	vup=XMVector3Normalize(vup);\n\n	vright=XMVector3Cross(vup, vlook);\n	vright=XMVector3Normalize(vright);\n	V=XMMatrixLookAtLH( vpos,vlook, vup);\n	// 生成view矩阵:\n	//float x = -D3DXVec3Dot(&amp;_right, &amp;_pos);\n	//float y = -D3DXVec3Dot(&amp;_up, &amp;_pos);\n	//float z = -D3DXVec3Dot(&amp;_look, &amp;_pos);\n\n	//(*V)(0,0) = _right.x; (*V)(0, 1) = _up.x; (*V)(0, 2) = _look.x; (*V)(0, 3) = 0.0f;\n	//(*V)(1,0) = _right.y; (*V)(1, 1) = _up.y; (*V)(1, 2) = _look.y; (*V)(1, 3) = 0.0f;\n	//(*V)(2,0) = _right.z; (*V)(2, 1) = _up.z; (*V)(2, 2) = _look.z; (*V)(2, 3) = 0.0f;\n	//(*V)(3,0) = x;        (*V)(3, 1) = y;     (*V)(3, 2) = z;       (*V)(3, 3) = 1.0f;\n}\n\nvoid XCamera::setCameraType(CameraType cameraType)\n{\n	_cameraType = cameraType;\n}\n</pre><br>\r\n注释掉的地方是一个坑。为什么呢。</p>\r\n<p>下面就要讲XMVECTOR 和XMFloat3的区别</p>\r\n<p>前者是向量。后者就是一个点结构</p>\r\n<p>前者支持各种运算。差 点 &nbsp;乘 加减</p>\r\n<p>后者 只能赋&#20540;啊什么的。是不是特别奇怪。因为XMVECTOR</p>\r\n<p>看源码</p>\r\n<p><pre name=\"code\" class=\"cpp\">// Vector intrinsic: Four 32 bit floating point components aligned on a 16 byte \n// boundary and mapped to hardware vector registers\n#if defined(_XM_SSE_INTRINSICS_) &amp;&amp; !defined(_XM_NO_INTRINSICS_)\ntypedef __m128 XMVECTOR;\n#else</pre><br>\r\n128位懂了吧。不能随便玩， 不然会报错 涉及到对齐问题</p>\r\n<p>上节说了，全局变量和局部变量可以用XMVECTOR 但是类变量不建议用</p>\r\n<p>偏偏这个摄像机是类变量。作死啊。只有设成XMFloat3了</p>\r\n<p>看源码<pre name=\"code\" class=\"cpp\">// 3D Vector; 32 bit floating point components\ntypedef struct _XMFLOAT3\n{\n    FLOAT x;\n    FLOAT y;\n    FLOAT z;\n\n#ifdef __cplusplus\n\n    _XMFLOAT3() {};\n    _XMFLOAT3(FLOAT _x, FLOAT _y, FLOAT _z) : x(_x), y(_y), z(_z) {};\n    _XMFLOAT3(CONST FLOAT *pArray);\n\n    _XMFLOAT3&amp; operator= (CONST _XMFLOAT3&amp; Float3);\n\n#endif // __cplusplus</pre><br>\r\n</p>\r\n<p>32位的 只能赋&#20540; 怎么玩 怎么玩&nbsp;</p>\r\n<p>上面摄像机类加注释了的函数是之前悲剧了的，我以为Float可以做运算。结果悲剧了。</p>\r\n<p>后来查了一下。 可以用一个转换</p>\r\n<p><pre name=\"code\" class=\"cpp\">XMVECTOR vpos,vright;\n	vpos=XMLoadFloat3(&amp;_pos);\n	vright=XMLoadFloat3(&amp;_right);\n	// 仅在x,z平面移动\n	if( _cameraType == LANDOBJECT )\n		vpos += XMVectorSet(_right.x, 0.0f, _right.z,0.0f) * units;\n\n	if( _cameraType == AIRCRAFT )\n		vpos += vright * units;\n	XMStoreFloat3(&amp;_pos,vpos);</pre><br>\r\n看懂了吗 看懂了吗。 先load 把float装到vector局部变量 &nbsp;然后进行运算</p>\r\n<p>运算完成后 &nbsp;再store&nbsp;</p>\r\n<p>是不是很烦</p>\r\n<p>是不是</p>\r\n<p>没办法。目前我只会这样弄。你嫌烦 直接全局变量吧。或者回归dx10math.h&nbsp;</p>\r\n<p>废话不说 效果图。</p>\r\n<p>只改了walk函数。 其他自己改改吧，锻炼下自己</p>\r\n<p><pre name=\"code\" class=\"cpp\">//(*V)(0,0) = _right.x; (*V)(0, 1) = _up.x; (*V)(0, 2) = _look.x; (*V)(0, 3) = 0.0f;\n	//(*V)(1,0) = _right.y; (*V)(1, 1) = _up.y; (*V)(1, 2) = _look.y; (*V)(1, 3) = 0.0f;\n	//(*V)(2,0) = _right.z; (*V)(2, 1) = _up.z; (*V)(2, 2) = _look.z; (*V)(2, 3) = 0.0f;\n	//(*V)(3,0) = x;        (*V)(3, 1) = y;     (*V)(3, 2) = z;       (*V)(3, 3) = 1.0f;</pre><br>\r\n对了还有上面这个。原教程是直接这样算的一个矩阵，麻烦吧。麻烦吧。 懂不起含义了吧 快看龙书就懂了。懂了之后怎么办。还敲这么多？？</p>\r\n<p><pre name=\"code\" class=\"cpp\">V=XMMatrixLookAtLH( vpos,vlook, vup);</pre><br>\r\n一句话搞定，就不要造轮子了<img src=\"http://img.blog.csdn.net/20141009002335687?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n<br>\r\n</p>\r\n',1,'c++,directx,directx11,图形',0,0,'2015-02-02 00:45:28','2015-02-02 00:45:28','2015-02-02 00:45:28'),(32,1,7,'DirectX11 学习笔记6 - 使用D3DXMATH数学库的一个例子','f75f7cc27b01124c8fe6d1d32828107f',0,'\r\n\r\n<p>这个例子是在之前的例子基础上 ，把之前d3dx10math数学库换成了最新的d3dxmath。优点就不说了。先上效果图</p>\r\n<p><img src=\"http://img.blog.csdn.net/2014100717','\r\n\r\n<p>这个例子是在之前的例子基础上 ，把之前d3dx10math数学库换成了最新的d3dxmath。优点就不说了。先上效果图</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141007170454644?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>全部代码。以及效果文件</p>\r\n<p>文件结构</p>\r\n<p><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141007170559352?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>全部代码：</p>\r\n<p>按照上图的文件顺序</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma once\n#include &lt;D3DX10math.h&gt;\n#include &lt;xnamath.h&gt;\nclass XCamera\n{\npublic:\n	XCamera()\n	{\n		m_positionX = 0.0f;\n		m_positionY = 0.0f;\n		m_positionZ = 0.0f;\n\n		m_rotationX = 0.0f;\n		m_rotationY = 0.0f;\n		m_rotationZ = 0.0f;\n	}\n	void setPosition(float x,float y,float z)\n	{\n		m_positionX = x;\n		m_positionY = y;\n		m_positionZ = z;\n	}\n	void setRotation(float x,float y,float z)\n	{\n		m_rotationX = x;\n		m_rotationY = y;\n		m_rotationZ = z;\n	}\n	D3DXVECTOR3 getPosition()\n	{\n		return D3DXVECTOR3(m_positionX, m_positionY, m_positionZ);\n	}\n	D3DXVECTOR3 getRotation()\n	{\n		return D3DXVECTOR3(m_rotationX, m_rotationY, m_rotationZ);\n	}\n	void render(XMMATRIX&amp; viewMatrix)\n	{\n		XMVECTOR up, position, lookAt;\n		float yaw, pitch, roll;\n		XMMATRIX rotationMatrix;\n\n		// 设置up向量为(0,1,0).\n		up=XMVectorSet(0.0f, 1.0f, 0.0f, 0.0f);\n\n		// 设置摄像机的位置.\n		position=XMVectorSet(m_positionX, m_positionY,m_positionZ, 0.0f);\n		\n		// 设置摄像机lookat的方向.\n		//lookAt=XMVectorSet(0.0f, 0.0f, 1.0f, 0.0f);\n		lookAt=XMVector3Normalize(position);\n		lookAt=lookAt*(-1);\n		// 得到弧度单位的欧拉旋转 yaw (Y axis), pitch (X axis), 以及 roll (Z axis) .\n		// 1 = PI/180 =  0.0174532925\n		pitch = m_rotationX * 0.0174532925f; \n		yaw   = m_rotationY * 0.0174532925f;\n		roll  = m_rotationZ * 0.0174532925f;\n\n		// 得到旋转矩阵.\n		rotationMatrix=XMMatrixRotationRollPitchYaw(pitch,yaw,roll);\n\n		// 变换lookat和up向量，一般view能够在原点被正确旋转.\n		lookAt=XMVector3TransformCoord(lookAt,rotationMatrix);\n		up=XMVector3TransformCoord(up,rotationMatrix);\n\n		// 平移旋转后的摄像机位置.\n		lookAt = position + lookAt;\n\n		// 创建观察矩阵.\n		viewMatrix=XMMatrixLookAtLH( position, lookAt, up);\n	}\n	void getViewMatrix(XMMATRIX&amp; viewMatrix)\n	{\n		render(viewMatrix);\n	}\nprivate:\n	float m_positionX, m_positionY, m_positionZ;//摄像机在世界坐标系中的位置\n	float m_rotationX, m_rotationY, m_rotationZ;//摄像机的欧拉旋转角度\n};</pre><br>\r\n<br>\r\n</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma once\n#pragma comment(lib, &quot;dxgi.lib&quot;)\n#pragma comment(lib, &quot;d3d11.lib&quot;)\n#pragma comment(lib, &quot;d3dx11.lib&quot;)\n#pragma comment(lib, &quot;d3dx10.lib&quot;)\n#include &lt;dxgi.h&gt;\n#include &lt;d3dcommon.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;d3dx10math.h&gt;\n#include &lt;xnamath.h&gt;\n\nXMMATRIX m_projectionMatrix; //投影矩阵\nXMMATRIX m_worldMatrix;//世界坐标系矩阵\nXMMATRIX m_orthoMatrix;//正交投影矩阵\nclass XD3Device\n{\npublic:\n	XD3Device();\n	//3D设备所有初始化\n	bool init(int, int, bool, HWND, bool, float, float);\n	//关闭设备\n	void close();\n	//开始渲染设备\n	void begin(float, float, float, float);\n	//显示到前景\n	void end();\n\npublic:\n	bool m_vsync_enabled; //是否启用垂直同步\n	IDXGISwapChain* m_swapChain; //交换链对象\n	ID3D11Device* m_device;  //设备对象\n	ID3D11DeviceContext* m_deviceContext; //设备上下文对象\n	ID3D11RenderTargetView* m_renderTargetView; //渲染目标视图\n	ID3D11Texture2D* m_depthStencilBuffer; //深度模板缓冲\n	ID3D11DepthStencilState* m_depthStencilState; //深度磨成状态\n	ID3D11DepthStencilView* m_depthStencilView; //深度目标视图\n	ID3D11RasterizerState* m_rasterState; //光栅化状态\n\npublic:\n	void getWordMatrix(XMMATRIX&amp; world){world=m_worldMatrix;}\n	void getProjMatrix(XMMATRIX&amp; proj){proj=m_projectionMatrix;}\n};\nvoid XD3Device::begin(float red, float green, float blue, float alpha)\n{\n	float color[]={red,green,blue,alpha};\n	//清除后缓冲.\n	m_deviceContext-&gt;ClearRenderTargetView(m_renderTargetView, color);\n\n	//清除深度缓冲.\n	m_deviceContext-&gt;ClearDepthStencilView(m_depthStencilView, D3D11_CLEAR_DEPTH, 1.0f, 0);\n\n}\nvoid XD3Device::end()\n{\n	//渲染完成后，把后缓冲内容present到前缓冲\n	if(m_vsync_enabled)\n	{\n		// 锁定屏幕刷新率.\n		m_swapChain-&gt;Present(1, 0);\n	}\n	else\n	{\n		// 尽可能快的present后缓冲.\n		m_swapChain-&gt;Present(0, 0);\n	}\n\n}\nvoid XD3Device::close()\n{\n	// 释放交换链资源前，先设置为窗口模式，否则可能会产生异常.\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;SetFullscreenState(false, NULL);\n	}\n\n	if(m_rasterState)\n	{\n		m_rasterState-&gt;Release();\n		m_rasterState = 0;\n	}\n\n	if(m_depthStencilView)\n	{\n		m_depthStencilView-&gt;Release();\n		m_depthStencilView = 0;\n	}\n\n	if(m_depthStencilState)\n	{\n		m_depthStencilState-&gt;Release();\n		m_depthStencilState = 0;\n	}\n\n	if(m_depthStencilBuffer)\n	{\n		m_depthStencilBuffer-&gt;Release();\n		m_depthStencilBuffer = 0;\n	}\n\n	if(m_renderTargetView)\n	{\n		m_renderTargetView-&gt;Release();\n		m_renderTargetView = 0;\n	}\n\n	if(m_deviceContext)\n	{\n		m_deviceContext-&gt;Release();\n		m_deviceContext = 0;\n	}\n\n	if(m_device)\n	{\n		m_device-&gt;Release();\n		m_device = 0;\n	}\n\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;Release();\n		m_swapChain = 0;\n	}\n\n}\nXD3Device::XD3Device()\n{\n	m_swapChain = 0;\n	m_device = 0;\n	m_deviceContext = 0;\n	m_renderTargetView = 0;\n	m_depthStencilBuffer = 0;\n	m_depthStencilState = 0;\n	m_depthStencilView = 0;\n	m_rasterState = 0;\n}\n//Initialize函数包含完成D3D设置的所有代码。\nbool XD3Device::init(int screenWidth, int screenHeight, bool vsync, HWND hwnd, bool fullscreen, \n						  float screenDepth, float screenNear)\n{\n	HRESULT result;\n	//IDXGIFactory* factory;\n	//IDXGIAdapter* adapter;\n	//IDXGIOutput* adapterOutput;\n	//unsigned int numModes, stringLength;\n	//DXGI_MODE_DESC* displayModeList;\n	//DXGI_ADAPTER_DESC adapterDesc;\n	//int error;\n	DXGI_SWAP_CHAIN_DESC swapChainDesc;\n	//D3D_FEATURE_LEVEL featureLevel;\n	ID3D11Texture2D* backBufferPtr;\n	D3D11_TEXTURE2D_DESC depthBufferDesc;\n	D3D11_DEPTH_STENCIL_DESC depthStencilDesc;\n	D3D11_DEPTH_STENCIL_VIEW_DESC depthStencilViewDesc;\n	D3D11_RASTERIZER_DESC rasterDesc;\n	D3D11_VIEWPORT viewport;\n	float fieldOfView, screenAspect;\n\n\n	// 保存垂直同步设置\n	m_vsync_enabled = vsync;\n\n	// 初始化交换链描述\n	ZeroMemory(&amp;swapChainDesc, sizeof(swapChainDesc));\n	//MessageBox(hwnd, L&quot;Could 2&quot;, L&quot;Error&quot;, MB_OK); \n	// 用1个后缓冲\n	swapChainDesc.BufferCount = 1;\n\n	//帧缓冲的大小和应用程序窗口大小相等.\n	swapChainDesc.BufferDesc.Width = screenWidth;\n	swapChainDesc.BufferDesc.Height = screenHeight;\n\n	// 后缓冲的surface的格式为DXGI_FORMAT_R8G8B8A8_UNORM.\n	// surface的每个像素用4个无符号的8bit[映射到0-1]来表示。NORM表示归一化。\n	swapChainDesc.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n\n	// 如果使用垂直同步，设置后缓冲的刷新率。.\n	//刷新率就是一秒钟把后缓冲内容在屏幕上画出的次数。\n	//如果开启垂直同步，则锁定刷新率，则fps是固定的\n	if(m_vsync_enabled)\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 60;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n	else\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 0;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n\n	// 设置后缓冲的用途\n	// 我们的渲染目标缓冲为后缓冲。\n	swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n\n	// 后缓冲输出的窗口句柄.\n	swapChainDesc.OutputWindow = hwnd;\n\n	// 不使用多重采样\n	swapChainDesc.SampleDesc.Count = 1;\n	swapChainDesc.SampleDesc.Quality = 0;\n\n	// 设置全屏或者窗口模式.\n	if(fullscreen)\n	{\n		swapChainDesc.Windowed = false;\n	}\n	else\n	{\n		swapChainDesc.Windowed = true;\n	}\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	// 设定扫描线ordering以及缩放为unspecified.\n	swapChainDesc.BufferDesc.ScanlineOrdering = DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED;\n	swapChainDesc.BufferDesc.Scaling = DXGI_MODE_SCALING_UNSPECIFIED;\n\n	// 后缓冲内容呈现到屏幕后，放弃其内容\n	swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_DISCARD;\n\n	//不设置标志\n	swapChainDesc.Flags = 0;\n\n	// 设置feature level为D3D11\n	// 如果显卡不支持D3D11,我们能够通过设置这个参数，使用D3D10,或者9.\n	//featureLevel = D3D_FEATURE_LEVEL_10_1;\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n	// 创建交换链，设备以及设备上下文.\n	result = D3D11CreateDeviceAndSwapChain(NULL, D3D_DRIVER_TYPE_HARDWARE, NULL, 0, featureLevels, numFeatureLevels, \n		D3D11_SDK_VERSION, &amp;swapChainDesc, &amp;m_swapChain, &amp;m_device, NULL, &amp;m_deviceContext);\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 得到交换链中的后缓冲指针.\n	result = m_swapChain-&gt;GetBuffer(0, __uuidof(ID3D11Texture2D), (LPVOID*)&amp;backBufferPtr);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 用后缓冲创建渲染目标视图.\n	result = m_device-&gt;CreateRenderTargetView(backBufferPtr, NULL, &amp;m_renderTargetView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//释放后缓冲.(引用计数减1)\n	backBufferPtr-&gt;Release();\n	backBufferPtr = 0;\n\n	// 初始化深度缓冲描述.\n	ZeroMemory(&amp;depthBufferDesc, sizeof(depthBufferDesc));\n\n	//设置深度缓冲描述\n	depthBufferDesc.Width = screenWidth;\n	depthBufferDesc.Height = screenHeight;\n	depthBufferDesc.MipLevels = 1;//对于深度缓冲为1\n	depthBufferDesc.ArraySize = 1;//对于深度缓冲为1，对于纹理，这2个参数有更多用途\n	depthBufferDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthBufferDesc.SampleDesc.Count = 1;\n	depthBufferDesc.SampleDesc.Quality = 0;\n	depthBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	depthBufferDesc.BindFlags = D3D11_BIND_DEPTH_STENCIL;\n	depthBufferDesc.CPUAccessFlags = 0;\n	depthBufferDesc.MiscFlags = 0;\n\n	// 创建深度缓冲.\n	result = m_device-&gt;CreateTexture2D(&amp;depthBufferDesc, NULL, &amp;m_depthStencilBuffer);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 初始化深度模版状态描述.\n	ZeroMemory(&amp;depthStencilDesc, sizeof(depthStencilDesc));\n\n	// 设置深度模版状态描述.\n	depthStencilDesc.DepthEnable = true;\n	depthStencilDesc.DepthWriteMask = D3D11_DEPTH_WRITE_MASK_ALL;//D3D11_DEPTH_WRITE_MASK_ZERO禁止写深度缓冲\n	depthStencilDesc.DepthFunc = D3D11_COMPARISON_LESS;\n\n	depthStencilDesc.StencilEnable = true;\n	depthStencilDesc.StencilReadMask = 0xFF;\n	depthStencilDesc.StencilWriteMask = 0xFF;\n\n	// 对于front face 像素使用的模版操作操作.\n	depthStencilDesc.FrontFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilDepthFailOp = D3D11_STENCIL_OP_INCR;\n	depthStencilDesc.FrontFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 对于back face像素使用的模版操作模式.\n	depthStencilDesc.BackFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilDepthFailOp = D3D11_STENCIL_OP_DECR;\n	depthStencilDesc.BackFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 创建深度模版状态，使其生效\n	result = m_device-&gt;CreateDepthStencilState(&amp;depthStencilDesc, &amp;m_depthStencilState);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 设置深度模版状态.\n	m_deviceContext-&gt;OMSetDepthStencilState(m_depthStencilState, 1);\n\n	// 初始化深度模版视图.\n	ZeroMemory(&amp;depthStencilViewDesc, sizeof(depthStencilViewDesc));\n\n	// 设置深度模版视图描述.\n	depthStencilViewDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthStencilViewDesc.ViewDimension = D3D11_DSV_DIMENSION_TEXTURE2D;\n	depthStencilViewDesc.Texture2D.MipSlice = 0;\n\n	// 创建深度模版视图.\n	result = m_device-&gt;CreateDepthStencilView(m_depthStencilBuffer, &amp;depthStencilViewDesc, &amp;m_depthStencilView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 绑定渲染目标视图和深度缓冲到渲染管线.\n	m_deviceContext-&gt;OMSetRenderTargets(1, &amp;m_renderTargetView, m_depthStencilView);\n\n\n	// 设置光栅化描述，指定多边形如何被渲染.\n	rasterDesc.AntialiasedLineEnable = false;\n	rasterDesc.CullMode = D3D11_CULL_BACK;\n	rasterDesc.DepthBias = 0;\n	rasterDesc.DepthBiasClamp = 0.0f;\n	rasterDesc.DepthClipEnable = true;\n	rasterDesc.FillMode = D3D11_FILL_SOLID;\n	rasterDesc.FrontCounterClockwise = false;\n	rasterDesc.MultisampleEnable = false;\n	rasterDesc.ScissorEnable = false;\n	rasterDesc.SlopeScaledDepthBias = 0.0f;\n\n	// 创建光栅化状态\n	result = m_device-&gt;CreateRasterizerState(&amp;rasterDesc, &amp;m_rasterState);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//设置光栅化状态，使其生效\n	m_deviceContext-&gt;RSSetState(m_rasterState);\n\n\n	// 设置视口，显示全部后缓冲内容\n	viewport.Width = (float)screenWidth;\n	viewport.Height = (float)screenHeight;\n	viewport.MinDepth = 0.0f;\n	viewport.MaxDepth = 1.0f;\n	viewport.TopLeftX = 0.0f;\n	viewport.TopLeftY = 0.0f;\n\n	// 创建视口\n	m_deviceContext-&gt;RSSetViewports(1, &amp;viewport);\n\n	// 设置透视投影矩阵\n	fieldOfView = (float)D3DX_PI / 4.0f;\n	screenAspect = (float)screenWidth / (float)screenHeight;\n\n	// 创建透视投影矩阵.\n	m_projectionMatrix=XMMatrixPerspectiveFovLH( fieldOfView, screenAspect, screenNear, screenDepth);\n \n	//初始化world矩阵为单位矩阵.\n	//该矩阵实现局部坐标到世界坐标的转换\n	m_worldMatrix=XMMatrixIdentity();\n\n	// 创建正交投影矩阵，主要用来实施2D渲染.\n	m_orthoMatrix=XMMatrixOrthographicLH((float)screenWidth, (float)screenHeight, screenNear, screenDepth);\n\n	return true;\n\n\n}\n</pre><pre name=\"code\" class=\"cpp\">#pragma once\n\n#include &lt;windows.h&gt;\n#include &quot;XD3Device.h&quot;\n#include &quot;XCamera.h&quot;\n#include &quot;XModel.h&quot;\n#include &quot;XShader.h&quot;\n///////////// \n// GLOBALS // \n///////////// \nconst bool  FULL_SCREEN = false; //是否全屏 \nconst bool  VSYNC_ENABLED = true; //是否垂直同步 \nconst float SCREEN_DEPTH = 1000.0f; //深度，远点 \nconst float SCREEN_NEAR = 0.1f; //深度，近点\n\nclass XGraphics \n{ \npublic: \n	XGraphics():x_d3d(0),x_camera(0),x_model(0),x_shader(0){}\n	bool init(int, int, HWND); //初始化渲染设备\n	void close(); \n	bool frame();\n\nprivate: \n	bool render(); \nprivate:\n	XD3Device *x_d3d;//3D设备\n	XCamera *x_camera;//摄像机\n	XModel *x_model;//模型\n	XShader *x_shader;//渲染器\n	HWND hwnd;\n};\n\nbool XGraphics:: init(int screenWidth, int screenHeight, HWND hwnd) \n{\n	//先清空\n	close();\n	//初始化设备\n	this-&gt;hwnd=hwnd;\n	x_d3d=new XD3Device;\n	bool hr=x_d3d-&gt;init(screenWidth,screenHeight,VSYNC_ENABLED,hwnd,FULL_SCREEN,SCREEN_DEPTH,SCREEN_NEAR);\n	if(!hr)\n	{\n		MessageBox(hwnd, L&quot;Could not initialize Direct3D&quot;, L&quot;Error&quot;, MB_OK); \n		return false; \n	}\n	//初始化摄像机\n	x_camera=new XCamera;\n	x_camera-&gt;setPosition(3.0f,3.0f,-10.0f); \n	//初始化模型\n	x_model=new XModel;\n	x_model-&gt;init(x_d3d-&gt;m_device);\n	//初始化Shader\n	x_shader=new XShader;\n	x_shader-&gt;init(x_d3d-&gt;m_device,hwnd);\n	return true; \n}\n\nvoid XGraphics::close() \n{\n	if(x_d3d)\n	{\n		x_d3d-&gt;close();\n		delete x_d3d;\n		x_d3d=0;\n	}\n	if(x_camera)\n	{\n		delete x_camera;\n		x_camera=NULL;\n	}\n	if(x_shader)\n	{\n		x_shader-&gt;close();\n		delete x_shader;\n		x_shader=NULL;\n	}\n	if(x_model)\n	{\n		x_model-&gt;close();\n		delete x_model;\n		x_model=NULL;\n	}\n\n\n}\n\nbool XGraphics::frame() \n{\n	bool hr=render();\n	return hr; \n}\n\n\nbool XGraphics::render() \n{\n	XMMATRIX viewMatrix, projectionMatrix, worldMatrix;\n	x_d3d-&gt;begin(0.0f,0.0f,0.5f,1.0f);//蓝色\n	//世界矩阵\n	x_d3d-&gt;getWordMatrix(worldMatrix);\n	//观察矩阵\n	x_camera-&gt;getViewMatrix(viewMatrix);\n	//投影矩阵\n	x_d3d-&gt;getProjMatrix(projectionMatrix);\n	//模型加入管线\n	x_model-&gt;render(x_d3d-&gt;m_deviceContext);\n	//开始渲染\n	x_shader-&gt;render(x_d3d-&gt;m_deviceContext,x_model-&gt;m_indexCount,worldMatrix,viewMatrix,projectionMatrix);\n	//结束\n	x_d3d-&gt;end();\n	return true; \n}\n</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#pragma once\nclass XInput\n{\npublic:\n	void init();\n	void keyDown(unsigned int);\n	void keyUp(unsigned int);\n	bool isKeyDown(unsigned int);\nprivate:\n	bool x_keys[256];\n\n};\nvoid XInput::init()\n{\n	int i;\n\n	// 初始所有的键都是非按下状态. \n	for(i=0; i&lt;256; i++) \n	{ \n		x_keys[i] = false; \n	}\n\n	return; \n}\nvoid XInput::keyDown(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = true; \n	return; \n}\nvoid XInput::keyUp(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = false; \n	return; \n}\nbool XInput::isKeyDown(unsigned int key) \n{ \n	// 判断键是否被按下？ \n	return x_keys[key]; \n}\n</pre><br>\r\n<br>\r\n<pre name=\"code\" class=\"cpp\">#pragma  once\n#include &lt;D3D11.h&gt;\n//定义一些常用颜色 \nconst XMFLOAT4 WHITE(1.0f, 1.0f, 1.0f, 1.0f); \nconst XMFLOAT4 BLACK(0.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 RED(1.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 GREEN(0.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 BLUE(0.0f, 0.0f, 1.0f, 1.0f); \nconst XMFLOAT4 YELLOW(1.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 CYAN(0.0f, 1.0f, 1.0f, 1.0f); //蓝绿色 \nconst XMFLOAT4 MAGENTA(1.0f, 0.0f, 1.0f, 1.0f); //洋红色\n\nconst XMFLOAT4 BEACH_SAND(1.0f, 0.96f, 0.62f, 1.0f); \nconst XMFLOAT4 LIGHT_YELLOW_GREEN(0.48f, 0.77f, 0.46f, 1.0f); \nconst XMFLOAT4 DARK_YELLOW_GREEN(0.1f, 0.48f, 0.19f, 1.0f); \nconst XMFLOAT4 DARKBROWN(0.45f, 0.39f, 0.34f, 1.0f);\n\n\nclass XModel\n{\nprivate:struct SimpleVertex\n		{\n			XMFLOAT3 Pos;\n			XMFLOAT4 Color;\n		};\npublic://顶点缓冲和顶点索引缓冲\n		ID3D11Buffer *m_vertexBuffer, *m_indexBuffer;\n		int m_vertexCount, m_indexCount;\npublic:\n	XModel():m_vertexCount(0),m_indexCount(0){};\n	virtual void init(ID3D11Device*);\n	virtual void close();\n	virtual void render(ID3D11DeviceContext*);\n};\nvoid XModel::init(ID3D11Device* device)\n{\n	unsigned long* indices;\n	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;\n	D3D11_SUBRESOURCE_DATA vertexData, indexData;\n\n	//首先，我们创建2个临时缓冲存放顶点和索引数据，以便后面使用。. \n\n	// 设置顶点缓冲大小为3，一个三角形.\n	m_vertexCount = 8;\n\n	// 设置索引缓冲大小.\n	m_indexCount = 36;  //6面*2三角形*3个点\n\n	// 创建顶点临时缓冲.\n	SimpleVertex vertices[] = {\n		{XMFLOAT3(-1.0f, -1.0f, -1.0f),WHITE},\n		{XMFLOAT3(-1.0f, 1.0f, -1.0f),BLACK},\n		{XMFLOAT3(1.0f, 1.0f, -1.0f),RED},\n		{XMFLOAT3(1.0f, -1.0f, -1.0f),GREEN},\n		{XMFLOAT3(-1.0f, -1.0f, 1.0f),BLUE},\n		{XMFLOAT3(-1.0f, 1.0f, 1.0f),YELLOW},\n		{XMFLOAT3(1.0f, 1.0f, 1.0f),CYAN},\n		{XMFLOAT3(1.0f, -1.0f, 1.0f),MAGENTA},\n\n	};\n\n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	// 设置索引缓冲数据.\n	indices[0] = 0;  // 前面 \n	indices[1] = 1; \n	indices[2] = 2;  \n	indices[3] = 0; \n	indices[4] = 2; \n	indices[5] = 3;  \n\n	indices[6] = 4;  // 后面 \n	indices[7] = 6; \n	indices[8] = 5;  \n	indices[9] = 4; \n	indices[10] = 7; \n	indices[11] = 6;\n\n	indices[12] = 4;  // 左面 \n	indices[13] = 5; \n	indices[14] = 1;  \n	indices[15] = 4; \n	indices[16] = 1; \n	indices[17] = 0;\n\n	indices[18] = 3;  //右面 \n	indices[19] = 2; \n	indices[20] = 6;  \n	indices[21] = 3; \n	indices[22] = 6; \n	indices[23] = 7;\n\n	indices[24] = 1;  // 上面 \n	indices[25] = 5; \n	indices[26] = 6;  \n	indices[27] = 1; \n	indices[28] = 6; \n	indices[29] = 2;\n\n	indices[30] = 4; // 下面 \n	indices[31] = 0; \n	indices[32] = 3;  \n	indices[33] = 4; \n	indices[34] = 3; \n	indices[35] = 7;\n\n\n\n	// 设置顶点缓冲描述\n	vertexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	vertexBufferDesc.ByteWidth = sizeof(SimpleVertex) * m_vertexCount;\n	vertexBufferDesc.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	vertexBufferDesc.CPUAccessFlags = 0;\n	vertexBufferDesc.MiscFlags = 0;\n	vertexBufferDesc.StructureByteStride = 0;\n\n	// 指向保存顶点数据的临时缓冲.\n	vertexData.pSysMem = vertices;\n	vertexData.SysMemPitch = 0;\n	vertexData.SysMemSlicePitch = 0;\n\n	// 创建顶点缓冲.\n    device-&gt;CreateBuffer(&amp;vertexBufferDesc, &amp;vertexData, &amp;m_vertexBuffer);\n\n\n	// 设置索引缓冲描述.\n	indexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	indexBufferDesc.ByteWidth = sizeof(unsigned long) * m_indexCount;\n	indexBufferDesc.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	indexBufferDesc.CPUAccessFlags = 0;\n	indexBufferDesc.MiscFlags = 0;\n	indexBufferDesc.StructureByteStride = 0;\n\n	// 指向存临时索引缓冲.\n	indexData.pSysMem = indices;\n	indexData.SysMemPitch = 0;\n	indexData.SysMemSlicePitch = 0;\n\n	// 创建索引缓冲.\n	device-&gt;CreateBuffer(&amp;indexBufferDesc, &amp;indexData, &amp;m_indexBuffer);\n\n\n\n\n	delete [] indices;\n	indices = 0;\n}\nvoid XModel::close()\n{\n	// 释放顶点缓冲.\n	if(m_indexBuffer)\n	{\n		m_indexBuffer-&gt;Release();\n		m_indexBuffer = 0;\n	}\n\n	// 释放索引缓冲\n	if(m_vertexBuffer)\n	{\n		m_vertexBuffer-&gt;Release();\n		m_vertexBuffer = 0;\n	}\n\n}\nvoid XModel::render(ID3D11DeviceContext* deviceContext)\n{\n	unsigned int stride;\n	unsigned int offset;\n\n\n	// 设置顶点缓冲跨度和偏移.\n	stride = sizeof(SimpleVertex); \n	offset = 0;\n\n	//在input assemberl阶段绑定顶点缓冲，以便能够被渲染\n	deviceContext-&gt;IASetVertexBuffers(0, 1, &amp;m_vertexBuffer, &amp;stride, &amp;offset);\n\n	//在input assemberl阶段绑定索引缓冲，以便能够被渲染\n	deviceContext-&gt;IASetIndexBuffer(m_indexBuffer, DXGI_FORMAT_R32_UINT, 0);\n\n	// 设置体元语义，渲染三角形列表.\n	deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);\n}</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#pragma once\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;xnamath.h&gt;\n#include &lt;fstream&gt;\nusing namespace std;\n//常量缓冲区\nstruct ConstantBuffer\n{\n	XMMATRIX mWorld;\n	XMMATRIX mView;\n	XMMATRIX mProjection;\n};\nclass XShader\n{\npublic:\n	XShader();\n	HRESULT init(ID3D11Device*, HWND);//初始化\n	void close(); //关闭\n	HRESULT render(ID3D11DeviceContext* , int , XMMATRIX&amp; , XMMATRIX &amp;, XMMATRIX &amp;);//渲染\nprivate:\n	HRESULT InitializeShader(ID3D11Device*, HWND, WCHAR*);\n	void ShutdownShader();\n	void OutputShaderErrorMessage(ID3D10Blob*, HWND, WCHAR*);\n    HRESULT CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut );\n	HRESULT SetShaderParameters(ID3D11DeviceContext*, XMMATRIX&amp;, XMMATRIX&amp;, XMMATRIX&amp;);\n	void RenderShader(ID3D11DeviceContext*, int);\n\n	ID3D11VertexShader* m_vertexShader;\n	ID3D11PixelShader* m_pixelShader;\n	ID3D11InputLayout* m_layout;\n	ID3D11Buffer* m_matrixBuffer;\n};\nXShader::XShader()\n{\n	m_vertexShader = 0;\n	m_pixelShader = 0;\n	m_layout = 0;\n	m_matrixBuffer = 0;\n}\nHRESULT XShader::init(ID3D11Device* device, HWND hwnd)\n{\n	HRESULT result;\n	// 初始化vs 和ps.\n	result = InitializeShader(device, hwnd, L&quot;shader.fx&quot;);\n	return result;\n}\nvoid XShader::close()\n{\n	// 释放shader资源.\n	ShutdownShader();\n\n	return;\n}\nHRESULT XShader::render(ID3D11DeviceContext* deviceContext, int indexCount, XMMATRIX &amp;worldMatrix, \n							  XMMATRIX&amp; viewMatrix, XMMATRIX&amp; projectionMatrix)\n{\n\n	// 设置shader常量缓冲区\n	SetShaderParameters(deviceContext, worldMatrix, viewMatrix, projectionMatrix);\n\n	// 用shader渲染指定缓冲顶点\n	RenderShader(deviceContext, indexCount);\n\n	return S_OK;\n}\nHRESULT XShader::CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut )\n{\n	HRESULT hr = S_OK;\n\n	DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;\n#if defined( DEBUG ) || defined( _DEBUG )\n	// Set the D3DCOMPILE_DEBUG flag to embed debug information in the shaders.\n	// Setting this flag improves the shader debugging experience, but still allows \n	// the shaders to be optimized and to run exactly the way they will run in \n	// the release configuration of this program.\n	dwShaderFlags |= D3DCOMPILE_DEBUG;\n#endif\n\n	ID3DBlob* pErrorBlob;\n	hr = D3DX11CompileFromFile( szFileName, NULL, NULL, szEntryPoint, szShaderModel, \n		dwShaderFlags, 0, NULL, ppBlobOut, &amp;pErrorBlob, NULL );\n	if( FAILED(hr) )\n	{\n		if( pErrorBlob != NULL )\n			OutputDebugStringA( (char*)pErrorBlob-&gt;GetBufferPointer() );\n		if( pErrorBlob ) pErrorBlob-&gt;Release();\n		return hr;\n	}\n	if( pErrorBlob ) pErrorBlob-&gt;Release();\n\n	return S_OK;\n}\nHRESULT XShader::InitializeShader(ID3D11Device* device, HWND hwnd, WCHAR* Filename)\n{\n	HRESULT hr=S_OK;\n	// Compile the vertex shader\n	ID3DBlob* pVSBlob = NULL;\n	hr = CompileShaderFromFile( Filename, &quot;VS&quot;, &quot;vs_4_0&quot;, &amp;pVSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the vertex shader\n	hr = device-&gt;CreateVertexShader( pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), NULL, &amp;m_vertexShader );\n	if( FAILED( hr ) )\n	{	\n		pVSBlob-&gt;Release();\n		return hr;\n	}\n	// Compile the pixel shader\n	ID3DBlob* pPSBlob = NULL;\n	hr = CompileShaderFromFile( Filename, &quot;PS&quot;, &quot;ps_4_0&quot;, &amp;pPSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the pixel shader\n	hr = device-&gt;CreatePixelShader( pPSBlob-&gt;GetBufferPointer(), pPSBlob-&gt;GetBufferSize(), NULL, &amp;m_pixelShader );\n	pPSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;COLOR&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};\n	UINT numElements = ARRAYSIZE( layout );\n\n	// Create the input layout\n	hr = device-&gt;CreateInputLayout( layout, numElements, pVSBlob-&gt;GetBufferPointer(),\n		pVSBlob-&gt;GetBufferSize(), &amp;m_layout );\n	pVSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n	// Create the constant buffer\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_matrixBuffer );\n	if( FAILED( hr ) )\n		return hr;\n	return S_OK;\n}\n\nvoid XShader::ShutdownShader()\n{\n	// 释放常量缓冲\n	if(m_matrixBuffer)\n	{\n		m_matrixBuffer-&gt;Release();\n		m_matrixBuffer = 0;\n	}\n\n	//释放顶点布局\n	if(m_layout)\n	{\n		m_layout-&gt;Release();\n		m_layout = 0;\n	}\n\n	// 释放ps .\n	if(m_pixelShader)\n	{\n		m_pixelShader-&gt;Release();\n		m_pixelShader = 0;\n	}\n\n	// 释放vs\n	if(m_vertexShader)\n	{\n		m_vertexShader-&gt;Release();\n		m_vertexShader = 0;\n	}\n\n	return;\n}\n\nvoid XShader::OutputShaderErrorMessage(ID3D10Blob* errorMessage, HWND hwnd, WCHAR* shaderFilename)\n{\n	char* compileErrors;\n	unsigned long bufferSize, i;\n	ofstream fout;\n\n\n	// 得到错误信息buffer指针.\n	compileErrors = (char*)(errorMessage-&gt;GetBufferPointer());\n\n	// 得到buffer的长度.\n	bufferSize = errorMessage-&gt;GetBufferSize();\n\n	// 打开一个文件写错误信息.\n	fout.open(&quot;shader-error.txt&quot;);\n\n	// 输出错误信心.\n	for(i=0; i&lt;bufferSize; i++)\n	{\n		fout &lt;&lt; compileErrors[i];\n	}\n\n	// 关闭文件\n	fout.close();\n\n	// 释放错误消息.\n	errorMessage-&gt;Release();\n	errorMessage = 0;\n\n	//弹出错误提示.\n	MessageBox(hwnd, L&quot;Error compiling shader.  Check shader-error.txt for message.&quot;, shaderFilename, MB_OK);\n\n	return;\n}\n\nHRESULT XShader::SetShaderParameters(ID3D11DeviceContext* deviceContext, XMMATRIX &amp;worldMatrix, \n										   XMMATRIX &amp;viewMatrix, XMMATRIX &amp;projectionMatrix)\n{\n	//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( worldMatrix);\n	cb.mView = XMMatrixTranspose( viewMatrix );\n	cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n\n	return true;\n}\n\nvoid XShader::RenderShader(ID3D11DeviceContext* deviceContext, int indexCount)\n{\n	// 绑定顶点布局.\n	deviceContext-&gt;IASetInputLayout(m_layout);\n\n	// 设置渲染使用vs和ps.\n	deviceContext-&gt;VSSetShader(m_vertexShader, NULL, 0);\n	deviceContext-&gt;PSSetShader(m_pixelShader, NULL, 0);\n\n	// 渲染图形\n	deviceContext-&gt;DrawIndexed(indexCount, 0, 0);\n\n	return;\n}\n</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#pragma once \n//定义该宏能够减少windows头文件的大小，使编译器不编译一些不必要的文件，加快编译时间 \n#define WIN32_LEAN_AND_MEAN\n#include &lt;Windows.h&gt;\n#include &quot;XGraphics.h&quot;\n#include &quot;XInput.h&quot;\n//退出\nstatic bool Xexit=false;\n//全屏\nstatic bool fullScreen=false;\nclass XWindow\n{\nprivate:\n	//窗口类名字\n	LPCWSTR m_applicationName;\n	//实例句柄\n	HINSTANCE m_hinstance;\n	//窗口句柄\n	HWND m_hwnd;\n	int xwidth,xheight;\n	//按键类\n	XInput * x_input;\n	//图形类\n	XGraphics * x_graphics;\nprivate:\n	//初始化窗口\n	void initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName);\n	//关闭窗口\n	void closeWindows();\n	//消息循环\n	void runWindows();\n	\npublic:\n	//初始化全局\n	virtual void init();\n	//渲染\n	virtual bool frame();\n	//退出\n	virtual void close();\n	//消息函数\n	LRESULT CALLBACK MessageHandler(HWND, UINT, WPARAM, LPARAM); \n};\n//消息循环回调函数\nstatic LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);\nstatic XWindow * appXWindow=NULL;\nvoid XWindow::close()\n{\n	if(x_input)\n	{\n		delete x_input;\n		x_input=NULL;\n	}\n	if(x_graphics)\n	{\n		x_graphics-&gt;close();\n		delete x_graphics;\n		x_graphics=NULL;\n	}\n}\nvoid XWindow::init()\n{\n	xwidth=500;\n	xheight=400;\n	x_input=new XInput;\n	x_graphics=new XGraphics;\n	\n	//创建窗口\n	initWindows(xwidth,xheight,L&quot;Engine&quot;);\n	//初始化键盘\n	x_input-&gt;init();\n	//初始化渲染\n	x_graphics-&gt;init(xwidth,xheight,m_hwnd);\n\n\n	//消息循环\n	runWindows();\n	//关闭窗口\n	closeWindows();\n}\nbool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//开始渲染\n	return x_graphics-&gt;frame();\n}\nvoid XWindow::initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName)\n{\n	WNDCLASSEX wc; \n	DEVMODE dmScreenSettings; \n	int posX, posY;\n	this-&gt;m_applicationName=m_applicationName;\n	// 得到应用程序实例句柄 \n	m_hinstance = GetModuleHandle(NULL);\n	appXWindow=this;\n	// 设置窗口类参数. \n	wc.style         = CS_HREDRAW | CS_VREDRAW | CS_OWNDC; \n\n	wc.lpfnWndProc   = WndProc; //指定回调函数 \n	wc.cbClsExtra    = 0; \n	wc.cbWndExtra    = 0; \n	wc.hInstance     = m_hinstance; \n	wc.hIcon         = LoadIcon(NULL, IDI_WINLOGO); \n	wc.hIconSm       = wc.hIcon; \n	wc.hCursor       = LoadCursor(NULL, IDC_ARROW); \n	wc.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH); //默认黑色窗口黑色背景 \n	wc.lpszMenuName  = NULL; \n	wc.lpszClassName = m_applicationName; \n	wc.cbSize        = sizeof(WNDCLASSEX);\n\n	// 注册窗口类 \n	RegisterClassEx(&amp;wc);\n\n	// 根据是否全屏设置不同的分辨率. \n	if(fullScreen) \n	{ \n		// 得到windows桌面分辨率 \n		screenWidth  = GetSystemMetrics(SM_CXSCREEN); \n		screenHeight = GetSystemMetrics(SM_CYSCREEN);\n		//全屏模式下，设置窗口大小为windows桌面分辨率. \n		memset(&amp;dmScreenSettings, 0, sizeof(dmScreenSettings)); \n		dmScreenSettings.dmSize       = sizeof(dmScreenSettings); \n		dmScreenSettings.dmPelsWidth  = (unsigned long)screenWidth; \n		dmScreenSettings.dmPelsHeight = (unsigned long)screenHeight; \n		dmScreenSettings.dmBitsPerPel = 32;            \n		dmScreenSettings.dmFields     = DM_BITSPERPEL | DM_PELSWIDTH | DM_PELSHEIGHT;\n\n		// 临时设置显示设备为全屏模式，注意：应用程序退出时候，将恢复系统默认设置。 \n		ChangeDisplaySettings(&amp;dmScreenSettings, CDS_FULLSCREEN);\n\n		// 设置窗口的左上角坐标位置为(0,0). \n		posX = posY = 0; \n	} \n	else \n	{ \n		// 窗口左上角坐标位置,posX, posY\n		posX = (GetSystemMetrics(SM_CXSCREEN) - screenWidth)  / 2; \n		posY = (GetSystemMetrics(SM_CYSCREEN) - screenHeight) / 2; \n	}\n\n	// 全屏和窗口使用不同的参数. \n	if( fullScreen) \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_CLIPSIBLINGS | WS_CLIPCHILDREN | WS_POPUP, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	} \n	else \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_OVERLAPPEDWINDOW, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	}\n\n	// 显示窗口并设置其为焦点. \n	ShowWindow(m_hwnd, SW_SHOW); \n	SetForegroundWindow(m_hwnd); \n	SetFocus(m_hwnd);\n	// 隐藏鼠标. \n	//ShowCursor(false);\n\n}\n\nvoid XWindow::runWindows()\n{\n	MSG msg; \n	// 初始化消息结构. \n	ZeroMemory(&amp;msg, sizeof(MSG));\n	// 循环进行消息处理\n	while(!Xexit) \n	{ \n		// 处理windows消息. \n		if(PeekMessage(&amp;msg, NULL, 0, 0, PM_REMOVE)) \n		{ \n			TranslateMessage(&amp;msg); \n			DispatchMessage(&amp;msg); \n		}\n		// 接收到WM_QUIT消息，退出程序. \n		if(msg.message == WM_QUIT) \n		{ \n			Xexit=true;\n		} \n		else \n		{ \n			//渲染\n			Xexit=!frame();\n		}\n\n	}\n	return; \n}\nLRESULT CALLBACK WndProc(HWND hwnd, UINT umessage, WPARAM wparam, LPARAM lparam) \n{ \n	switch(umessage) \n	{\n\n		// 窗口销毁消息. \n	case WM_DESTROY: \n	case WM_CLOSE: \n		{ \n			PostQuitMessage(0); \n			return 0; \n		}\n		break;\n		//MessageHandle过程处理其它所有消息. \n	default: \n		{ \n			return appXWindow-&gt;MessageHandler(hwnd, umessage, wparam, lparam); \n		} \n		break;\n	} \n\n}\n\nLRESULT CALLBACK XWindow::MessageHandler(HWND hwnd, UINT umsg, WPARAM wparam, LPARAM lparam) \n{\n\n	switch(umsg) \n	{ \n		// 检测按键消息. \n	case WM_KEYDOWN: \n		x_input-&gt;keyDown(wparam);\n	    break;\n	case WM_KEYUP:\n		x_input-&gt;keyUp(wparam);\n		break;\n		//任何其它消息发送到windows缺省处理. \n	case WM_SIZE:\n		//防止窗口大小改变渲染变形\n		x_graphics-&gt;init(LOWORD(lparam),HIWORD(lparam),hwnd);\n		break;\n	default: \n		{ \n			return DefWindowProc(hwnd, umsg, wparam, lparam); \n		} \n	} \n	return 0;\n}\nvoid XWindow::closeWindows()\n{\n	//显示光标. \n	//ShowCursor(true);\n	// 恢复默认显示设置. \n	if(fullScreen) \n	{ \n		ChangeDisplaySettings(NULL, 0); \n	}\n	//释放窗口句柄. \n	DestroyWindow(m_hwnd); \n	m_hwnd = NULL;\n	// 释放应用程序实例. \n	UnregisterClass(m_applicationName, m_hinstance); \n	m_hinstance = NULL;\n	appXWindow=NULL;\n	return; \n}</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#include &quot;XWindow.h&quot;\n#include &lt;d3dcompiler.h&gt;\n//入口\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR pScmdline, int iCmdshow) \n{\n\n	XWindow *xwindow=new XWindow;\n	xwindow-&gt;init(); //初始化\n	xwindow-&gt;close();\n	delete xwindow;\n	return 0; \n}\n</pre><br>\r\n<pre name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// File: Tutorial04.fx\n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//--------------------------------------------------------------------------------------\n\n//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer \n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n}\n\n//--------------------------------------------------------------------------------------\nstruct VS_OUTPUT\n{\n    float4 Pos : SV_POSITION;\n    float4 Color : COLOR;\n};\n\n//--------------------------------------------------------------------------------------\n// Vertex Shader\n//--------------------------------------------------------------------------------------\nVS_OUTPUT VS( float4 Pos : POSITION, float4 Color : COLOR )\n{\n    VS_OUTPUT output = (VS_OUTPUT)0;\n    output.Pos = mul( Pos, World );\n    output.Pos = mul( output.Pos, View );\n    output.Pos = mul( output.Pos, Projection );\n    output.Color = Color;\n    return output;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Pixel Shader\n//--------------------------------------------------------------------------------------\nfloat4 PS( VS_OUTPUT input ) : SV_Target\n{\n    return input.Color;\n}\n</pre><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>这个例子是在之前的例子基础上 ，把之前d3dx10math数学库换成了最新的d3dxmath。优点就不说了。先上效果图</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141007170454644?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>全部代码。以及效果文件</p>\r\n<p>文件结构</p>\r\n<p><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141007170559352?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>全部代码：</p>\r\n<p>按照上图的文件顺序</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma once\n#include &lt;D3DX10math.h&gt;\n#include &lt;xnamath.h&gt;\nclass XCamera\n{\npublic:\n	XCamera()\n	{\n		m_positionX = 0.0f;\n		m_positionY = 0.0f;\n		m_positionZ = 0.0f;\n\n		m_rotationX = 0.0f;\n		m_rotationY = 0.0f;\n		m_rotationZ = 0.0f;\n	}\n	void setPosition(float x,float y,float z)\n	{\n		m_positionX = x;\n		m_positionY = y;\n		m_positionZ = z;\n	}\n	void setRotation(float x,float y,float z)\n	{\n		m_rotationX = x;\n		m_rotationY = y;\n		m_rotationZ = z;\n	}\n	D3DXVECTOR3 getPosition()\n	{\n		return D3DXVECTOR3(m_positionX, m_positionY, m_positionZ);\n	}\n	D3DXVECTOR3 getRotation()\n	{\n		return D3DXVECTOR3(m_rotationX, m_rotationY, m_rotationZ);\n	}\n	void render(XMMATRIX&amp; viewMatrix)\n	{\n		XMVECTOR up, position, lookAt;\n		float yaw, pitch, roll;\n		XMMATRIX rotationMatrix;\n\n		// 设置up向量为(0,1,0).\n		up=XMVectorSet(0.0f, 1.0f, 0.0f, 0.0f);\n\n		// 设置摄像机的位置.\n		position=XMVectorSet(m_positionX, m_positionY,m_positionZ, 0.0f);\n		\n		// 设置摄像机lookat的方向.\n		//lookAt=XMVectorSet(0.0f, 0.0f, 1.0f, 0.0f);\n		lookAt=XMVector3Normalize(position);\n		lookAt=lookAt*(-1);\n		// 得到弧度单位的欧拉旋转 yaw (Y axis), pitch (X axis), 以及 roll (Z axis) .\n		// 1 = PI/180 =  0.0174532925\n		pitch = m_rotationX * 0.0174532925f; \n		yaw   = m_rotationY * 0.0174532925f;\n		roll  = m_rotationZ * 0.0174532925f;\n\n		// 得到旋转矩阵.\n		rotationMatrix=XMMatrixRotationRollPitchYaw(pitch,yaw,roll);\n\n		// 变换lookat和up向量，一般view能够在原点被正确旋转.\n		lookAt=XMVector3TransformCoord(lookAt,rotationMatrix);\n		up=XMVector3TransformCoord(up,rotationMatrix);\n\n		// 平移旋转后的摄像机位置.\n		lookAt = position + lookAt;\n\n		// 创建观察矩阵.\n		viewMatrix=XMMatrixLookAtLH( position, lookAt, up);\n	}\n	void getViewMatrix(XMMATRIX&amp; viewMatrix)\n	{\n		render(viewMatrix);\n	}\nprivate:\n	float m_positionX, m_positionY, m_positionZ;//摄像机在世界坐标系中的位置\n	float m_rotationX, m_rotationY, m_rotationZ;//摄像机的欧拉旋转角度\n};</pre><br>\r\n<br>\r\n</p>\r\n<p><pre name=\"code\" class=\"cpp\">#pragma once\n#pragma comment(lib, &quot;dxgi.lib&quot;)\n#pragma comment(lib, &quot;d3d11.lib&quot;)\n#pragma comment(lib, &quot;d3dx11.lib&quot;)\n#pragma comment(lib, &quot;d3dx10.lib&quot;)\n#include &lt;dxgi.h&gt;\n#include &lt;d3dcommon.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;d3dx10math.h&gt;\n#include &lt;xnamath.h&gt;\n\nXMMATRIX m_projectionMatrix; //投影矩阵\nXMMATRIX m_worldMatrix;//世界坐标系矩阵\nXMMATRIX m_orthoMatrix;//正交投影矩阵\nclass XD3Device\n{\npublic:\n	XD3Device();\n	//3D设备所有初始化\n	bool init(int, int, bool, HWND, bool, float, float);\n	//关闭设备\n	void close();\n	//开始渲染设备\n	void begin(float, float, float, float);\n	//显示到前景\n	void end();\n\npublic:\n	bool m_vsync_enabled; //是否启用垂直同步\n	IDXGISwapChain* m_swapChain; //交换链对象\n	ID3D11Device* m_device;  //设备对象\n	ID3D11DeviceContext* m_deviceContext; //设备上下文对象\n	ID3D11RenderTargetView* m_renderTargetView; //渲染目标视图\n	ID3D11Texture2D* m_depthStencilBuffer; //深度模板缓冲\n	ID3D11DepthStencilState* m_depthStencilState; //深度磨成状态\n	ID3D11DepthStencilView* m_depthStencilView; //深度目标视图\n	ID3D11RasterizerState* m_rasterState; //光栅化状态\n\npublic:\n	void getWordMatrix(XMMATRIX&amp; world){world=m_worldMatrix;}\n	void getProjMatrix(XMMATRIX&amp; proj){proj=m_projectionMatrix;}\n};\nvoid XD3Device::begin(float red, float green, float blue, float alpha)\n{\n	float color[]={red,green,blue,alpha};\n	//清除后缓冲.\n	m_deviceContext-&gt;ClearRenderTargetView(m_renderTargetView, color);\n\n	//清除深度缓冲.\n	m_deviceContext-&gt;ClearDepthStencilView(m_depthStencilView, D3D11_CLEAR_DEPTH, 1.0f, 0);\n\n}\nvoid XD3Device::end()\n{\n	//渲染完成后，把后缓冲内容present到前缓冲\n	if(m_vsync_enabled)\n	{\n		// 锁定屏幕刷新率.\n		m_swapChain-&gt;Present(1, 0);\n	}\n	else\n	{\n		// 尽可能快的present后缓冲.\n		m_swapChain-&gt;Present(0, 0);\n	}\n\n}\nvoid XD3Device::close()\n{\n	// 释放交换链资源前，先设置为窗口模式，否则可能会产生异常.\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;SetFullscreenState(false, NULL);\n	}\n\n	if(m_rasterState)\n	{\n		m_rasterState-&gt;Release();\n		m_rasterState = 0;\n	}\n\n	if(m_depthStencilView)\n	{\n		m_depthStencilView-&gt;Release();\n		m_depthStencilView = 0;\n	}\n\n	if(m_depthStencilState)\n	{\n		m_depthStencilState-&gt;Release();\n		m_depthStencilState = 0;\n	}\n\n	if(m_depthStencilBuffer)\n	{\n		m_depthStencilBuffer-&gt;Release();\n		m_depthStencilBuffer = 0;\n	}\n\n	if(m_renderTargetView)\n	{\n		m_renderTargetView-&gt;Release();\n		m_renderTargetView = 0;\n	}\n\n	if(m_deviceContext)\n	{\n		m_deviceContext-&gt;Release();\n		m_deviceContext = 0;\n	}\n\n	if(m_device)\n	{\n		m_device-&gt;Release();\n		m_device = 0;\n	}\n\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;Release();\n		m_swapChain = 0;\n	}\n\n}\nXD3Device::XD3Device()\n{\n	m_swapChain = 0;\n	m_device = 0;\n	m_deviceContext = 0;\n	m_renderTargetView = 0;\n	m_depthStencilBuffer = 0;\n	m_depthStencilState = 0;\n	m_depthStencilView = 0;\n	m_rasterState = 0;\n}\n//Initialize函数包含完成D3D设置的所有代码。\nbool XD3Device::init(int screenWidth, int screenHeight, bool vsync, HWND hwnd, bool fullscreen, \n						  float screenDepth, float screenNear)\n{\n	HRESULT result;\n	//IDXGIFactory* factory;\n	//IDXGIAdapter* adapter;\n	//IDXGIOutput* adapterOutput;\n	//unsigned int numModes, stringLength;\n	//DXGI_MODE_DESC* displayModeList;\n	//DXGI_ADAPTER_DESC adapterDesc;\n	//int error;\n	DXGI_SWAP_CHAIN_DESC swapChainDesc;\n	//D3D_FEATURE_LEVEL featureLevel;\n	ID3D11Texture2D* backBufferPtr;\n	D3D11_TEXTURE2D_DESC depthBufferDesc;\n	D3D11_DEPTH_STENCIL_DESC depthStencilDesc;\n	D3D11_DEPTH_STENCIL_VIEW_DESC depthStencilViewDesc;\n	D3D11_RASTERIZER_DESC rasterDesc;\n	D3D11_VIEWPORT viewport;\n	float fieldOfView, screenAspect;\n\n\n	// 保存垂直同步设置\n	m_vsync_enabled = vsync;\n\n	// 初始化交换链描述\n	ZeroMemory(&amp;swapChainDesc, sizeof(swapChainDesc));\n	//MessageBox(hwnd, L&quot;Could 2&quot;, L&quot;Error&quot;, MB_OK); \n	// 用1个后缓冲\n	swapChainDesc.BufferCount = 1;\n\n	//帧缓冲的大小和应用程序窗口大小相等.\n	swapChainDesc.BufferDesc.Width = screenWidth;\n	swapChainDesc.BufferDesc.Height = screenHeight;\n\n	// 后缓冲的surface的格式为DXGI_FORMAT_R8G8B8A8_UNORM.\n	// surface的每个像素用4个无符号的8bit[映射到0-1]来表示。NORM表示归一化。\n	swapChainDesc.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n\n	// 如果使用垂直同步，设置后缓冲的刷新率。.\n	//刷新率就是一秒钟把后缓冲内容在屏幕上画出的次数。\n	//如果开启垂直同步，则锁定刷新率，则fps是固定的\n	if(m_vsync_enabled)\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 60;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n	else\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 0;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n\n	// 设置后缓冲的用途\n	// 我们的渲染目标缓冲为后缓冲。\n	swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n\n	// 后缓冲输出的窗口句柄.\n	swapChainDesc.OutputWindow = hwnd;\n\n	// 不使用多重采样\n	swapChainDesc.SampleDesc.Count = 1;\n	swapChainDesc.SampleDesc.Quality = 0;\n\n	// 设置全屏或者窗口模式.\n	if(fullscreen)\n	{\n		swapChainDesc.Windowed = false;\n	}\n	else\n	{\n		swapChainDesc.Windowed = true;\n	}\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	// 设定扫描线ordering以及缩放为unspecified.\n	swapChainDesc.BufferDesc.ScanlineOrdering = DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED;\n	swapChainDesc.BufferDesc.Scaling = DXGI_MODE_SCALING_UNSPECIFIED;\n\n	// 后缓冲内容呈现到屏幕后，放弃其内容\n	swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_DISCARD;\n\n	//不设置标志\n	swapChainDesc.Flags = 0;\n\n	// 设置feature level为D3D11\n	// 如果显卡不支持D3D11,我们能够通过设置这个参数，使用D3D10,或者9.\n	//featureLevel = D3D_FEATURE_LEVEL_10_1;\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n	// 创建交换链，设备以及设备上下文.\n	result = D3D11CreateDeviceAndSwapChain(NULL, D3D_DRIVER_TYPE_HARDWARE, NULL, 0, featureLevels, numFeatureLevels, \n		D3D11_SDK_VERSION, &amp;swapChainDesc, &amp;m_swapChain, &amp;m_device, NULL, &amp;m_deviceContext);\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 得到交换链中的后缓冲指针.\n	result = m_swapChain-&gt;GetBuffer(0, __uuidof(ID3D11Texture2D), (LPVOID*)&amp;backBufferPtr);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 用后缓冲创建渲染目标视图.\n	result = m_device-&gt;CreateRenderTargetView(backBufferPtr, NULL, &amp;m_renderTargetView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//释放后缓冲.(引用计数减1)\n	backBufferPtr-&gt;Release();\n	backBufferPtr = 0;\n\n	// 初始化深度缓冲描述.\n	ZeroMemory(&amp;depthBufferDesc, sizeof(depthBufferDesc));\n\n	//设置深度缓冲描述\n	depthBufferDesc.Width = screenWidth;\n	depthBufferDesc.Height = screenHeight;\n	depthBufferDesc.MipLevels = 1;//对于深度缓冲为1\n	depthBufferDesc.ArraySize = 1;//对于深度缓冲为1，对于纹理，这2个参数有更多用途\n	depthBufferDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthBufferDesc.SampleDesc.Count = 1;\n	depthBufferDesc.SampleDesc.Quality = 0;\n	depthBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	depthBufferDesc.BindFlags = D3D11_BIND_DEPTH_STENCIL;\n	depthBufferDesc.CPUAccessFlags = 0;\n	depthBufferDesc.MiscFlags = 0;\n\n	// 创建深度缓冲.\n	result = m_device-&gt;CreateTexture2D(&amp;depthBufferDesc, NULL, &amp;m_depthStencilBuffer);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 初始化深度模版状态描述.\n	ZeroMemory(&amp;depthStencilDesc, sizeof(depthStencilDesc));\n\n	// 设置深度模版状态描述.\n	depthStencilDesc.DepthEnable = true;\n	depthStencilDesc.DepthWriteMask = D3D11_DEPTH_WRITE_MASK_ALL;//D3D11_DEPTH_WRITE_MASK_ZERO禁止写深度缓冲\n	depthStencilDesc.DepthFunc = D3D11_COMPARISON_LESS;\n\n	depthStencilDesc.StencilEnable = true;\n	depthStencilDesc.StencilReadMask = 0xFF;\n	depthStencilDesc.StencilWriteMask = 0xFF;\n\n	// 对于front face 像素使用的模版操作操作.\n	depthStencilDesc.FrontFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilDepthFailOp = D3D11_STENCIL_OP_INCR;\n	depthStencilDesc.FrontFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 对于back face像素使用的模版操作模式.\n	depthStencilDesc.BackFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilDepthFailOp = D3D11_STENCIL_OP_DECR;\n	depthStencilDesc.BackFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 创建深度模版状态，使其生效\n	result = m_device-&gt;CreateDepthStencilState(&amp;depthStencilDesc, &amp;m_depthStencilState);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 设置深度模版状态.\n	m_deviceContext-&gt;OMSetDepthStencilState(m_depthStencilState, 1);\n\n	// 初始化深度模版视图.\n	ZeroMemory(&amp;depthStencilViewDesc, sizeof(depthStencilViewDesc));\n\n	// 设置深度模版视图描述.\n	depthStencilViewDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthStencilViewDesc.ViewDimension = D3D11_DSV_DIMENSION_TEXTURE2D;\n	depthStencilViewDesc.Texture2D.MipSlice = 0;\n\n	// 创建深度模版视图.\n	result = m_device-&gt;CreateDepthStencilView(m_depthStencilBuffer, &amp;depthStencilViewDesc, &amp;m_depthStencilView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 绑定渲染目标视图和深度缓冲到渲染管线.\n	m_deviceContext-&gt;OMSetRenderTargets(1, &amp;m_renderTargetView, m_depthStencilView);\n\n\n	// 设置光栅化描述，指定多边形如何被渲染.\n	rasterDesc.AntialiasedLineEnable = false;\n	rasterDesc.CullMode = D3D11_CULL_BACK;\n	rasterDesc.DepthBias = 0;\n	rasterDesc.DepthBiasClamp = 0.0f;\n	rasterDesc.DepthClipEnable = true;\n	rasterDesc.FillMode = D3D11_FILL_SOLID;\n	rasterDesc.FrontCounterClockwise = false;\n	rasterDesc.MultisampleEnable = false;\n	rasterDesc.ScissorEnable = false;\n	rasterDesc.SlopeScaledDepthBias = 0.0f;\n\n	// 创建光栅化状态\n	result = m_device-&gt;CreateRasterizerState(&amp;rasterDesc, &amp;m_rasterState);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//设置光栅化状态，使其生效\n	m_deviceContext-&gt;RSSetState(m_rasterState);\n\n\n	// 设置视口，显示全部后缓冲内容\n	viewport.Width = (float)screenWidth;\n	viewport.Height = (float)screenHeight;\n	viewport.MinDepth = 0.0f;\n	viewport.MaxDepth = 1.0f;\n	viewport.TopLeftX = 0.0f;\n	viewport.TopLeftY = 0.0f;\n\n	// 创建视口\n	m_deviceContext-&gt;RSSetViewports(1, &amp;viewport);\n\n	// 设置透视投影矩阵\n	fieldOfView = (float)D3DX_PI / 4.0f;\n	screenAspect = (float)screenWidth / (float)screenHeight;\n\n	// 创建透视投影矩阵.\n	m_projectionMatrix=XMMatrixPerspectiveFovLH( fieldOfView, screenAspect, screenNear, screenDepth);\n \n	//初始化world矩阵为单位矩阵.\n	//该矩阵实现局部坐标到世界坐标的转换\n	m_worldMatrix=XMMatrixIdentity();\n\n	// 创建正交投影矩阵，主要用来实施2D渲染.\n	m_orthoMatrix=XMMatrixOrthographicLH((float)screenWidth, (float)screenHeight, screenNear, screenDepth);\n\n	return true;\n\n\n}\n</pre><pre name=\"code\" class=\"cpp\">#pragma once\n\n#include &lt;windows.h&gt;\n#include &quot;XD3Device.h&quot;\n#include &quot;XCamera.h&quot;\n#include &quot;XModel.h&quot;\n#include &quot;XShader.h&quot;\n///////////// \n// GLOBALS // \n///////////// \nconst bool  FULL_SCREEN = false; //是否全屏 \nconst bool  VSYNC_ENABLED = true; //是否垂直同步 \nconst float SCREEN_DEPTH = 1000.0f; //深度，远点 \nconst float SCREEN_NEAR = 0.1f; //深度，近点\n\nclass XGraphics \n{ \npublic: \n	XGraphics():x_d3d(0),x_camera(0),x_model(0),x_shader(0){}\n	bool init(int, int, HWND); //初始化渲染设备\n	void close(); \n	bool frame();\n\nprivate: \n	bool render(); \nprivate:\n	XD3Device *x_d3d;//3D设备\n	XCamera *x_camera;//摄像机\n	XModel *x_model;//模型\n	XShader *x_shader;//渲染器\n	HWND hwnd;\n};\n\nbool XGraphics:: init(int screenWidth, int screenHeight, HWND hwnd) \n{\n	//先清空\n	close();\n	//初始化设备\n	this-&gt;hwnd=hwnd;\n	x_d3d=new XD3Device;\n	bool hr=x_d3d-&gt;init(screenWidth,screenHeight,VSYNC_ENABLED,hwnd,FULL_SCREEN,SCREEN_DEPTH,SCREEN_NEAR);\n	if(!hr)\n	{\n		MessageBox(hwnd, L&quot;Could not initialize Direct3D&quot;, L&quot;Error&quot;, MB_OK); \n		return false; \n	}\n	//初始化摄像机\n	x_camera=new XCamera;\n	x_camera-&gt;setPosition(3.0f,3.0f,-10.0f); \n	//初始化模型\n	x_model=new XModel;\n	x_model-&gt;init(x_d3d-&gt;m_device);\n	//初始化Shader\n	x_shader=new XShader;\n	x_shader-&gt;init(x_d3d-&gt;m_device,hwnd);\n	return true; \n}\n\nvoid XGraphics::close() \n{\n	if(x_d3d)\n	{\n		x_d3d-&gt;close();\n		delete x_d3d;\n		x_d3d=0;\n	}\n	if(x_camera)\n	{\n		delete x_camera;\n		x_camera=NULL;\n	}\n	if(x_shader)\n	{\n		x_shader-&gt;close();\n		delete x_shader;\n		x_shader=NULL;\n	}\n	if(x_model)\n	{\n		x_model-&gt;close();\n		delete x_model;\n		x_model=NULL;\n	}\n\n\n}\n\nbool XGraphics::frame() \n{\n	bool hr=render();\n	return hr; \n}\n\n\nbool XGraphics::render() \n{\n	XMMATRIX viewMatrix, projectionMatrix, worldMatrix;\n	x_d3d-&gt;begin(0.0f,0.0f,0.5f,1.0f);//蓝色\n	//世界矩阵\n	x_d3d-&gt;getWordMatrix(worldMatrix);\n	//观察矩阵\n	x_camera-&gt;getViewMatrix(viewMatrix);\n	//投影矩阵\n	x_d3d-&gt;getProjMatrix(projectionMatrix);\n	//模型加入管线\n	x_model-&gt;render(x_d3d-&gt;m_deviceContext);\n	//开始渲染\n	x_shader-&gt;render(x_d3d-&gt;m_deviceContext,x_model-&gt;m_indexCount,worldMatrix,viewMatrix,projectionMatrix);\n	//结束\n	x_d3d-&gt;end();\n	return true; \n}\n</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#pragma once\nclass XInput\n{\npublic:\n	void init();\n	void keyDown(unsigned int);\n	void keyUp(unsigned int);\n	bool isKeyDown(unsigned int);\nprivate:\n	bool x_keys[256];\n\n};\nvoid XInput::init()\n{\n	int i;\n\n	// 初始所有的键都是非按下状态. \n	for(i=0; i&lt;256; i++) \n	{ \n		x_keys[i] = false; \n	}\n\n	return; \n}\nvoid XInput::keyDown(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = true; \n	return; \n}\nvoid XInput::keyUp(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = false; \n	return; \n}\nbool XInput::isKeyDown(unsigned int key) \n{ \n	// 判断键是否被按下？ \n	return x_keys[key]; \n}\n</pre><br>\r\n<br>\r\n<pre name=\"code\" class=\"cpp\">#pragma  once\n#include &lt;D3D11.h&gt;\n//定义一些常用颜色 \nconst XMFLOAT4 WHITE(1.0f, 1.0f, 1.0f, 1.0f); \nconst XMFLOAT4 BLACK(0.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 RED(1.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 GREEN(0.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 BLUE(0.0f, 0.0f, 1.0f, 1.0f); \nconst XMFLOAT4 YELLOW(1.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 CYAN(0.0f, 1.0f, 1.0f, 1.0f); //蓝绿色 \nconst XMFLOAT4 MAGENTA(1.0f, 0.0f, 1.0f, 1.0f); //洋红色\n\nconst XMFLOAT4 BEACH_SAND(1.0f, 0.96f, 0.62f, 1.0f); \nconst XMFLOAT4 LIGHT_YELLOW_GREEN(0.48f, 0.77f, 0.46f, 1.0f); \nconst XMFLOAT4 DARK_YELLOW_GREEN(0.1f, 0.48f, 0.19f, 1.0f); \nconst XMFLOAT4 DARKBROWN(0.45f, 0.39f, 0.34f, 1.0f);\n\n\nclass XModel\n{\nprivate:struct SimpleVertex\n		{\n			XMFLOAT3 Pos;\n			XMFLOAT4 Color;\n		};\npublic://顶点缓冲和顶点索引缓冲\n		ID3D11Buffer *m_vertexBuffer, *m_indexBuffer;\n		int m_vertexCount, m_indexCount;\npublic:\n	XModel():m_vertexCount(0),m_indexCount(0){};\n	virtual void init(ID3D11Device*);\n	virtual void close();\n	virtual void render(ID3D11DeviceContext*);\n};\nvoid XModel::init(ID3D11Device* device)\n{\n	unsigned long* indices;\n	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;\n	D3D11_SUBRESOURCE_DATA vertexData, indexData;\n\n	//首先，我们创建2个临时缓冲存放顶点和索引数据，以便后面使用。. \n\n	// 设置顶点缓冲大小为3，一个三角形.\n	m_vertexCount = 8;\n\n	// 设置索引缓冲大小.\n	m_indexCount = 36;  //6面*2三角形*3个点\n\n	// 创建顶点临时缓冲.\n	SimpleVertex vertices[] = {\n		{XMFLOAT3(-1.0f, -1.0f, -1.0f),WHITE},\n		{XMFLOAT3(-1.0f, 1.0f, -1.0f),BLACK},\n		{XMFLOAT3(1.0f, 1.0f, -1.0f),RED},\n		{XMFLOAT3(1.0f, -1.0f, -1.0f),GREEN},\n		{XMFLOAT3(-1.0f, -1.0f, 1.0f),BLUE},\n		{XMFLOAT3(-1.0f, 1.0f, 1.0f),YELLOW},\n		{XMFLOAT3(1.0f, 1.0f, 1.0f),CYAN},\n		{XMFLOAT3(1.0f, -1.0f, 1.0f),MAGENTA},\n\n	};\n\n	// 创建索引缓冲.\n	indices = new unsigned long[m_indexCount];\n	// 设置索引缓冲数据.\n	indices[0] = 0;  // 前面 \n	indices[1] = 1; \n	indices[2] = 2;  \n	indices[3] = 0; \n	indices[4] = 2; \n	indices[5] = 3;  \n\n	indices[6] = 4;  // 后面 \n	indices[7] = 6; \n	indices[8] = 5;  \n	indices[9] = 4; \n	indices[10] = 7; \n	indices[11] = 6;\n\n	indices[12] = 4;  // 左面 \n	indices[13] = 5; \n	indices[14] = 1;  \n	indices[15] = 4; \n	indices[16] = 1; \n	indices[17] = 0;\n\n	indices[18] = 3;  //右面 \n	indices[19] = 2; \n	indices[20] = 6;  \n	indices[21] = 3; \n	indices[22] = 6; \n	indices[23] = 7;\n\n	indices[24] = 1;  // 上面 \n	indices[25] = 5; \n	indices[26] = 6;  \n	indices[27] = 1; \n	indices[28] = 6; \n	indices[29] = 2;\n\n	indices[30] = 4; // 下面 \n	indices[31] = 0; \n	indices[32] = 3;  \n	indices[33] = 4; \n	indices[34] = 3; \n	indices[35] = 7;\n\n\n\n	// 设置顶点缓冲描述\n	vertexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	vertexBufferDesc.ByteWidth = sizeof(SimpleVertex) * m_vertexCount;\n	vertexBufferDesc.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	vertexBufferDesc.CPUAccessFlags = 0;\n	vertexBufferDesc.MiscFlags = 0;\n	vertexBufferDesc.StructureByteStride = 0;\n\n	// 指向保存顶点数据的临时缓冲.\n	vertexData.pSysMem = vertices;\n	vertexData.SysMemPitch = 0;\n	vertexData.SysMemSlicePitch = 0;\n\n	// 创建顶点缓冲.\n    device-&gt;CreateBuffer(&amp;vertexBufferDesc, &amp;vertexData, &amp;m_vertexBuffer);\n\n\n	// 设置索引缓冲描述.\n	indexBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	indexBufferDesc.ByteWidth = sizeof(unsigned long) * m_indexCount;\n	indexBufferDesc.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	indexBufferDesc.CPUAccessFlags = 0;\n	indexBufferDesc.MiscFlags = 0;\n	indexBufferDesc.StructureByteStride = 0;\n\n	// 指向存临时索引缓冲.\n	indexData.pSysMem = indices;\n	indexData.SysMemPitch = 0;\n	indexData.SysMemSlicePitch = 0;\n\n	// 创建索引缓冲.\n	device-&gt;CreateBuffer(&amp;indexBufferDesc, &amp;indexData, &amp;m_indexBuffer);\n\n\n\n\n	delete [] indices;\n	indices = 0;\n}\nvoid XModel::close()\n{\n	// 释放顶点缓冲.\n	if(m_indexBuffer)\n	{\n		m_indexBuffer-&gt;Release();\n		m_indexBuffer = 0;\n	}\n\n	// 释放索引缓冲\n	if(m_vertexBuffer)\n	{\n		m_vertexBuffer-&gt;Release();\n		m_vertexBuffer = 0;\n	}\n\n}\nvoid XModel::render(ID3D11DeviceContext* deviceContext)\n{\n	unsigned int stride;\n	unsigned int offset;\n\n\n	// 设置顶点缓冲跨度和偏移.\n	stride = sizeof(SimpleVertex); \n	offset = 0;\n\n	//在input assemberl阶段绑定顶点缓冲，以便能够被渲染\n	deviceContext-&gt;IASetVertexBuffers(0, 1, &amp;m_vertexBuffer, &amp;stride, &amp;offset);\n\n	//在input assemberl阶段绑定索引缓冲，以便能够被渲染\n	deviceContext-&gt;IASetIndexBuffer(m_indexBuffer, DXGI_FORMAT_R32_UINT, 0);\n\n	// 设置体元语义，渲染三角形列表.\n	deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);\n}</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#pragma once\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;xnamath.h&gt;\n#include &lt;fstream&gt;\nusing namespace std;\n//常量缓冲区\nstruct ConstantBuffer\n{\n	XMMATRIX mWorld;\n	XMMATRIX mView;\n	XMMATRIX mProjection;\n};\nclass XShader\n{\npublic:\n	XShader();\n	HRESULT init(ID3D11Device*, HWND);//初始化\n	void close(); //关闭\n	HRESULT render(ID3D11DeviceContext* , int , XMMATRIX&amp; , XMMATRIX &amp;, XMMATRIX &amp;);//渲染\nprivate:\n	HRESULT InitializeShader(ID3D11Device*, HWND, WCHAR*);\n	void ShutdownShader();\n	void OutputShaderErrorMessage(ID3D10Blob*, HWND, WCHAR*);\n    HRESULT CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut );\n	HRESULT SetShaderParameters(ID3D11DeviceContext*, XMMATRIX&amp;, XMMATRIX&amp;, XMMATRIX&amp;);\n	void RenderShader(ID3D11DeviceContext*, int);\n\n	ID3D11VertexShader* m_vertexShader;\n	ID3D11PixelShader* m_pixelShader;\n	ID3D11InputLayout* m_layout;\n	ID3D11Buffer* m_matrixBuffer;\n};\nXShader::XShader()\n{\n	m_vertexShader = 0;\n	m_pixelShader = 0;\n	m_layout = 0;\n	m_matrixBuffer = 0;\n}\nHRESULT XShader::init(ID3D11Device* device, HWND hwnd)\n{\n	HRESULT result;\n	// 初始化vs 和ps.\n	result = InitializeShader(device, hwnd, L&quot;shader.fx&quot;);\n	return result;\n}\nvoid XShader::close()\n{\n	// 释放shader资源.\n	ShutdownShader();\n\n	return;\n}\nHRESULT XShader::render(ID3D11DeviceContext* deviceContext, int indexCount, XMMATRIX &amp;worldMatrix, \n							  XMMATRIX&amp; viewMatrix, XMMATRIX&amp; projectionMatrix)\n{\n\n	// 设置shader常量缓冲区\n	SetShaderParameters(deviceContext, worldMatrix, viewMatrix, projectionMatrix);\n\n	// 用shader渲染指定缓冲顶点\n	RenderShader(deviceContext, indexCount);\n\n	return S_OK;\n}\nHRESULT XShader::CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut )\n{\n	HRESULT hr = S_OK;\n\n	DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;\n#if defined( DEBUG ) || defined( _DEBUG )\n	// Set the D3DCOMPILE_DEBUG flag to embed debug information in the shaders.\n	// Setting this flag improves the shader debugging experience, but still allows \n	// the shaders to be optimized and to run exactly the way they will run in \n	// the release configuration of this program.\n	dwShaderFlags |= D3DCOMPILE_DEBUG;\n#endif\n\n	ID3DBlob* pErrorBlob;\n	hr = D3DX11CompileFromFile( szFileName, NULL, NULL, szEntryPoint, szShaderModel, \n		dwShaderFlags, 0, NULL, ppBlobOut, &amp;pErrorBlob, NULL );\n	if( FAILED(hr) )\n	{\n		if( pErrorBlob != NULL )\n			OutputDebugStringA( (char*)pErrorBlob-&gt;GetBufferPointer() );\n		if( pErrorBlob ) pErrorBlob-&gt;Release();\n		return hr;\n	}\n	if( pErrorBlob ) pErrorBlob-&gt;Release();\n\n	return S_OK;\n}\nHRESULT XShader::InitializeShader(ID3D11Device* device, HWND hwnd, WCHAR* Filename)\n{\n	HRESULT hr=S_OK;\n	// Compile the vertex shader\n	ID3DBlob* pVSBlob = NULL;\n	hr = CompileShaderFromFile( Filename, &quot;VS&quot;, &quot;vs_4_0&quot;, &amp;pVSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the vertex shader\n	hr = device-&gt;CreateVertexShader( pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), NULL, &amp;m_vertexShader );\n	if( FAILED( hr ) )\n	{	\n		pVSBlob-&gt;Release();\n		return hr;\n	}\n	// Compile the pixel shader\n	ID3DBlob* pPSBlob = NULL;\n	hr = CompileShaderFromFile( Filename, &quot;PS&quot;, &quot;ps_4_0&quot;, &amp;pPSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the pixel shader\n	hr = device-&gt;CreatePixelShader( pPSBlob-&gt;GetBufferPointer(), pPSBlob-&gt;GetBufferSize(), NULL, &amp;m_pixelShader );\n	pPSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;COLOR&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};\n	UINT numElements = ARRAYSIZE( layout );\n\n	// Create the input layout\n	hr = device-&gt;CreateInputLayout( layout, numElements, pVSBlob-&gt;GetBufferPointer(),\n		pVSBlob-&gt;GetBufferSize(), &amp;m_layout );\n	pVSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n	// Create the constant buffer\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = device-&gt;CreateBuffer( &amp;bd, NULL, &amp;m_matrixBuffer );\n	if( FAILED( hr ) )\n		return hr;\n	return S_OK;\n}\n\nvoid XShader::ShutdownShader()\n{\n	// 释放常量缓冲\n	if(m_matrixBuffer)\n	{\n		m_matrixBuffer-&gt;Release();\n		m_matrixBuffer = 0;\n	}\n\n	//释放顶点布局\n	if(m_layout)\n	{\n		m_layout-&gt;Release();\n		m_layout = 0;\n	}\n\n	// 释放ps .\n	if(m_pixelShader)\n	{\n		m_pixelShader-&gt;Release();\n		m_pixelShader = 0;\n	}\n\n	// 释放vs\n	if(m_vertexShader)\n	{\n		m_vertexShader-&gt;Release();\n		m_vertexShader = 0;\n	}\n\n	return;\n}\n\nvoid XShader::OutputShaderErrorMessage(ID3D10Blob* errorMessage, HWND hwnd, WCHAR* shaderFilename)\n{\n	char* compileErrors;\n	unsigned long bufferSize, i;\n	ofstream fout;\n\n\n	// 得到错误信息buffer指针.\n	compileErrors = (char*)(errorMessage-&gt;GetBufferPointer());\n\n	// 得到buffer的长度.\n	bufferSize = errorMessage-&gt;GetBufferSize();\n\n	// 打开一个文件写错误信息.\n	fout.open(&quot;shader-error.txt&quot;);\n\n	// 输出错误信心.\n	for(i=0; i&lt;bufferSize; i++)\n	{\n		fout &lt;&lt; compileErrors[i];\n	}\n\n	// 关闭文件\n	fout.close();\n\n	// 释放错误消息.\n	errorMessage-&gt;Release();\n	errorMessage = 0;\n\n	//弹出错误提示.\n	MessageBox(hwnd, L&quot;Error compiling shader.  Check shader-error.txt for message.&quot;, shaderFilename, MB_OK);\n\n	return;\n}\n\nHRESULT XShader::SetShaderParameters(ID3D11DeviceContext* deviceContext, XMMATRIX &amp;worldMatrix, \n										   XMMATRIX &amp;viewMatrix, XMMATRIX &amp;projectionMatrix)\n{\n	//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( worldMatrix);\n	cb.mView = XMMatrixTranspose( viewMatrix );\n	cb.mProjection = XMMatrixTranspose( projectionMatrix );\n	deviceContext-&gt;UpdateSubresource( m_matrixBuffer, 0, NULL, &amp;cb, 0, 0 );\n	deviceContext-&gt;VSSetConstantBuffers( 0, 1, &amp;m_matrixBuffer );\n\n	return true;\n}\n\nvoid XShader::RenderShader(ID3D11DeviceContext* deviceContext, int indexCount)\n{\n	// 绑定顶点布局.\n	deviceContext-&gt;IASetInputLayout(m_layout);\n\n	// 设置渲染使用vs和ps.\n	deviceContext-&gt;VSSetShader(m_vertexShader, NULL, 0);\n	deviceContext-&gt;PSSetShader(m_pixelShader, NULL, 0);\n\n	// 渲染图形\n	deviceContext-&gt;DrawIndexed(indexCount, 0, 0);\n\n	return;\n}\n</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#pragma once \n//定义该宏能够减少windows头文件的大小，使编译器不编译一些不必要的文件，加快编译时间 \n#define WIN32_LEAN_AND_MEAN\n#include &lt;Windows.h&gt;\n#include &quot;XGraphics.h&quot;\n#include &quot;XInput.h&quot;\n//退出\nstatic bool Xexit=false;\n//全屏\nstatic bool fullScreen=false;\nclass XWindow\n{\nprivate:\n	//窗口类名字\n	LPCWSTR m_applicationName;\n	//实例句柄\n	HINSTANCE m_hinstance;\n	//窗口句柄\n	HWND m_hwnd;\n	int xwidth,xheight;\n	//按键类\n	XInput * x_input;\n	//图形类\n	XGraphics * x_graphics;\nprivate:\n	//初始化窗口\n	void initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName);\n	//关闭窗口\n	void closeWindows();\n	//消息循环\n	void runWindows();\n	\npublic:\n	//初始化全局\n	virtual void init();\n	//渲染\n	virtual bool frame();\n	//退出\n	virtual void close();\n	//消息函数\n	LRESULT CALLBACK MessageHandler(HWND, UINT, WPARAM, LPARAM); \n};\n//消息循环回调函数\nstatic LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);\nstatic XWindow * appXWindow=NULL;\nvoid XWindow::close()\n{\n	if(x_input)\n	{\n		delete x_input;\n		x_input=NULL;\n	}\n	if(x_graphics)\n	{\n		x_graphics-&gt;close();\n		delete x_graphics;\n		x_graphics=NULL;\n	}\n}\nvoid XWindow::init()\n{\n	xwidth=500;\n	xheight=400;\n	x_input=new XInput;\n	x_graphics=new XGraphics;\n	\n	//创建窗口\n	initWindows(xwidth,xheight,L&quot;Engine&quot;);\n	//初始化键盘\n	x_input-&gt;init();\n	//初始化渲染\n	x_graphics-&gt;init(xwidth,xheight,m_hwnd);\n\n\n	//消息循环\n	runWindows();\n	//关闭窗口\n	closeWindows();\n}\nbool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//开始渲染\n	return x_graphics-&gt;frame();\n}\nvoid XWindow::initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName)\n{\n	WNDCLASSEX wc; \n	DEVMODE dmScreenSettings; \n	int posX, posY;\n	this-&gt;m_applicationName=m_applicationName;\n	// 得到应用程序实例句柄 \n	m_hinstance = GetModuleHandle(NULL);\n	appXWindow=this;\n	// 设置窗口类参数. \n	wc.style         = CS_HREDRAW | CS_VREDRAW | CS_OWNDC; \n\n	wc.lpfnWndProc   = WndProc; //指定回调函数 \n	wc.cbClsExtra    = 0; \n	wc.cbWndExtra    = 0; \n	wc.hInstance     = m_hinstance; \n	wc.hIcon         = LoadIcon(NULL, IDI_WINLOGO); \n	wc.hIconSm       = wc.hIcon; \n	wc.hCursor       = LoadCursor(NULL, IDC_ARROW); \n	wc.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH); //默认黑色窗口黑色背景 \n	wc.lpszMenuName  = NULL; \n	wc.lpszClassName = m_applicationName; \n	wc.cbSize        = sizeof(WNDCLASSEX);\n\n	// 注册窗口类 \n	RegisterClassEx(&amp;wc);\n\n	// 根据是否全屏设置不同的分辨率. \n	if(fullScreen) \n	{ \n		// 得到windows桌面分辨率 \n		screenWidth  = GetSystemMetrics(SM_CXSCREEN); \n		screenHeight = GetSystemMetrics(SM_CYSCREEN);\n		//全屏模式下，设置窗口大小为windows桌面分辨率. \n		memset(&amp;dmScreenSettings, 0, sizeof(dmScreenSettings)); \n		dmScreenSettings.dmSize       = sizeof(dmScreenSettings); \n		dmScreenSettings.dmPelsWidth  = (unsigned long)screenWidth; \n		dmScreenSettings.dmPelsHeight = (unsigned long)screenHeight; \n		dmScreenSettings.dmBitsPerPel = 32;            \n		dmScreenSettings.dmFields     = DM_BITSPERPEL | DM_PELSWIDTH | DM_PELSHEIGHT;\n\n		// 临时设置显示设备为全屏模式，注意：应用程序退出时候，将恢复系统默认设置。 \n		ChangeDisplaySettings(&amp;dmScreenSettings, CDS_FULLSCREEN);\n\n		// 设置窗口的左上角坐标位置为(0,0). \n		posX = posY = 0; \n	} \n	else \n	{ \n		// 窗口左上角坐标位置,posX, posY\n		posX = (GetSystemMetrics(SM_CXSCREEN) - screenWidth)  / 2; \n		posY = (GetSystemMetrics(SM_CYSCREEN) - screenHeight) / 2; \n	}\n\n	// 全屏和窗口使用不同的参数. \n	if( fullScreen) \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_CLIPSIBLINGS | WS_CLIPCHILDREN | WS_POPUP, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	} \n	else \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_OVERLAPPEDWINDOW, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	}\n\n	// 显示窗口并设置其为焦点. \n	ShowWindow(m_hwnd, SW_SHOW); \n	SetForegroundWindow(m_hwnd); \n	SetFocus(m_hwnd);\n	// 隐藏鼠标. \n	//ShowCursor(false);\n\n}\n\nvoid XWindow::runWindows()\n{\n	MSG msg; \n	// 初始化消息结构. \n	ZeroMemory(&amp;msg, sizeof(MSG));\n	// 循环进行消息处理\n	while(!Xexit) \n	{ \n		// 处理windows消息. \n		if(PeekMessage(&amp;msg, NULL, 0, 0, PM_REMOVE)) \n		{ \n			TranslateMessage(&amp;msg); \n			DispatchMessage(&amp;msg); \n		}\n		// 接收到WM_QUIT消息，退出程序. \n		if(msg.message == WM_QUIT) \n		{ \n			Xexit=true;\n		} \n		else \n		{ \n			//渲染\n			Xexit=!frame();\n		}\n\n	}\n	return; \n}\nLRESULT CALLBACK WndProc(HWND hwnd, UINT umessage, WPARAM wparam, LPARAM lparam) \n{ \n	switch(umessage) \n	{\n\n		// 窗口销毁消息. \n	case WM_DESTROY: \n	case WM_CLOSE: \n		{ \n			PostQuitMessage(0); \n			return 0; \n		}\n		break;\n		//MessageHandle过程处理其它所有消息. \n	default: \n		{ \n			return appXWindow-&gt;MessageHandler(hwnd, umessage, wparam, lparam); \n		} \n		break;\n	} \n\n}\n\nLRESULT CALLBACK XWindow::MessageHandler(HWND hwnd, UINT umsg, WPARAM wparam, LPARAM lparam) \n{\n\n	switch(umsg) \n	{ \n		// 检测按键消息. \n	case WM_KEYDOWN: \n		x_input-&gt;keyDown(wparam);\n	    break;\n	case WM_KEYUP:\n		x_input-&gt;keyUp(wparam);\n		break;\n		//任何其它消息发送到windows缺省处理. \n	case WM_SIZE:\n		//防止窗口大小改变渲染变形\n		x_graphics-&gt;init(LOWORD(lparam),HIWORD(lparam),hwnd);\n		break;\n	default: \n		{ \n			return DefWindowProc(hwnd, umsg, wparam, lparam); \n		} \n	} \n	return 0;\n}\nvoid XWindow::closeWindows()\n{\n	//显示光标. \n	//ShowCursor(true);\n	// 恢复默认显示设置. \n	if(fullScreen) \n	{ \n		ChangeDisplaySettings(NULL, 0); \n	}\n	//释放窗口句柄. \n	DestroyWindow(m_hwnd); \n	m_hwnd = NULL;\n	// 释放应用程序实例. \n	UnregisterClass(m_applicationName, m_hinstance); \n	m_hinstance = NULL;\n	appXWindow=NULL;\n	return; \n}</pre><br>\r\n<pre name=\"code\" class=\"cpp\">#include &quot;XWindow.h&quot;\n#include &lt;d3dcompiler.h&gt;\n//入口\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR pScmdline, int iCmdshow) \n{\n\n	XWindow *xwindow=new XWindow;\n	xwindow-&gt;init(); //初始化\n	xwindow-&gt;close();\n	delete xwindow;\n	return 0; \n}\n</pre><br>\r\n<pre name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// File: Tutorial04.fx\n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//--------------------------------------------------------------------------------------\n\n//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer \n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n}\n\n//--------------------------------------------------------------------------------------\nstruct VS_OUTPUT\n{\n    float4 Pos : SV_POSITION;\n    float4 Color : COLOR;\n};\n\n//--------------------------------------------------------------------------------------\n// Vertex Shader\n//--------------------------------------------------------------------------------------\nVS_OUTPUT VS( float4 Pos : POSITION, float4 Color : COLOR )\n{\n    VS_OUTPUT output = (VS_OUTPUT)0;\n    output.Pos = mul( Pos, World );\n    output.Pos = mul( output.Pos, View );\n    output.Pos = mul( output.Pos, Projection );\n    output.Color = Color;\n    return output;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Pixel Shader\n//--------------------------------------------------------------------------------------\nfloat4 PS( VS_OUTPUT input ) : SV_Target\n{\n    return input.Color;\n}\n</pre><br>\r\n<br>\r\n</p>\r\n',2,'c++,directx,directx11,图形',0,0,'2015-02-02 00:45:31','2015-02-02 00:45:31','2015-02-02 00:45:31'),(33,1,7,'DirectX11 学习笔记5 - D3DXMath 库','3e0135801f58ffd05e30b08a046bf1cb',0,'\r\n\r\n<p>directx11 特别推出了一个数学库 用于向量 矩阵的计算，而且使用128位 同时计算4条32位数据 (SIMD)</p>\r\n<p>之前基本是用的directx10math.h这个头文件。 &nbs','\r\n\r\n<p>directx11 特别推出了一个数学库 用于向量 矩阵的计算，而且使用128位 同时计算4条32位数据 (SIMD)</p>\r\n<p>之前基本是用的directx10math.h这个头文件。 &nbsp;这个数学库既然是新出的，肯定在硬件方便处理起来比以前的快许多，优化了很多。 技术永无止境嘛。推荐用新的</p>\r\n<p>而现在可以单独用 xnamath.h directx9 10 11 都可以用这个库，很方便。 下面的表可以快速从以前的数学库找到替换函数。</p>\r\n<p>对了 昨晚遇到一个坑。解决了很久。原来是由于xnamath 里面的 &nbsp;xmatrix &nbsp;xmvector 等 &nbsp;涉及到一个对齐问题。</p>\r\n<p>如果是 局部变量、全局变量 &nbsp;感觉不到。硬件会自动对齐。 但是如果放在类成员变量，就很容易报错了。 而且你看不出是那的问题。</p>\r\n<p>调试了很久。 所以我们在用这个库的时候，最后尽量避免设为类成员变量。</p>\r\n<p>下一节我将附上，把之前那个封装程序升级为xnamath库的完整源码，并实现了绘制一个三角形。 以后的教程都将在这个源码上演示。</p>\r\n<p>他们的区别快速查询 ：</p>\r\n<p><pre name=\"code\" class=\"cpp\">D3DXMath Type	DirectXMath Equivalent\nD3DXFLOAT16	HALF\nD3DXMATRIXA16	XMMATRIX or XMFLOAT4X4A\nD3DXQUATERNION\n\nD3DXPLANE\n\nD3DXCOLOR\n\nXMVECTOR is used rather than having unique types, so you will likely need to use an XMFLOAT4\nNote  D3DXQUATERNION::operator * calls the D3DXQuaternionMultiply function, which multiplies two quaternions. But, unless you explicitly use the XMQuaternionMultiply function, you get an incorrect answer when you use XMVECTOR::operator * on a quaternion.\n\nD3DXVECTOR2	XMFLOAT2\nD3DXVECTOR2_16F	XMHALF2\nD3DXVECTOR3	XMFLOAT3\nD3DXVECTOR4	XMFLOAT4\n(or if you can guarantee the data is 16-byte aligned, XMVECTOR or XMFLOAT4A )\n\nD3DXVECTOR4_16F	XMHALF4\n \n\nNote  There is no direct equivalent to D3DXVECTOR3_16F in XNAMath.\n\nD3DXMath Macro	DirectXMath Equivalent\nD3DX_PI	XM_PI\nD3DX_1BYPI	XM_1DIVPI\nD3DXToRadian	XMConvertToRadians\nD3DXToDegree	XMConvertToDegrees\n \n\nD3DXMath Function	DirectXMath Equivalent\nD3DXBoxBoundProbe	BoundingBox::Intersects(XMVECTOR, XMVECTOR, float&amp;)\nD3DXComputeBoundingBox	BoundingBox::CreateFromPoints\nD3DXComputeBoundingSphere	BoundingSphere::CreateFromPoints\nD3DXSphereBoundProbe	BoundingSphere::Intersects(XMVECTOR, XMVECTOR, float&amp;)\nD3DXIntersectTriFunction	TriangleTests::Intersects\nD3DXFloat32To16Array	XMConvertFloatToHalfStream\nD3DXFloat16To32Array	XMConvertHalfToFloatStream\nD3DXVec2Length	XMVector2Length or XMVector2LengthEst\nD3DXVec2LengthSq	XMVector2LengthSq\nD3DXVec2Dot	XMVector2Dot\nD3DXVec2CCW	XMVector2Cross\nD3DXVec2Add	XMVectorAdd\nD3DXVec2Subtract	XMVectorSubtract\nD3DXVec2Minimize	XMVectorMin\nD3DXVec2Maximize	XMVectorMax\nD3DXVec2Scale	XMVectorScale\nD3DXVec2Lerp	XMVectorLerp or XMVectorLerpV\nD3DXVec2Normalize	XMVector2Normalize or XMVector2NormalizeEst\nD3DXVec2Hermite	XMVectorHermite or XMVectorHermiteV\nD3DXVec2CatmullRom	XMVectorCatmullRom or XMVectorCatmullRomV\nD3DXVec2BaryCentric	XMVectorBaryCentric or XMVectorBaryCentricV\nD3DXVec2Transform	XMVector2Transform\nD3DXVec2TransformCoord	XMVector2TransformCoord\nD3DXVec2TransformNormal	XMVector2TransformNormal\nD3DXVec2TransformArray	XMVector2TransformStream\nD3DXVec2TransformCoordArray	XMVector2TransformCoordStream\nD3DXVec2TransformNormalArray	XMVector2TransformNormalStream\nD3DXVec3Length	XMVector3Length or XMVector3LengthEst\nD3DXVec3LengthSq	XMVector3LengthSq\nD3DXVec3Dot	XMVector3Dot\nD3DXVec3Cross	XMVector3Cross\nD3DXVec3Add	XMVectorAdd\nD3DXVec3Subtract	XMVectorSubtract\nD3DXVec3Minimize	XMVectorMin\nD3DXVec3Maximize	XMVectorMax\nD3DXVec3Scale	XMVectorScale\nD3DXVec3Lerp	XMVectorLerp or XMVectorLerpV\nD3DXVec3Normalize	XMVector3Normalize or XMVector3NormalizeEst\nD3DXVec3Hermite	XMVectorHermite or XMVectorHermiteV\nD3DXVec3CatmullRom	XMVectorCatmullRom or XMVectorCatmullRomV\nD3DXVec3BaryCentric	XMVectorBaryCentric or XMVectorBaryCentricV\nD3DXVec3Transform	XMVector3Transform\nD3DXVec3TransformCoord	XMVector3TransformCoord\nD3DXVec3TransformNormal	XMVector3TransformNormal\nD3DXVec3TransformArray	XMVector3TransformStream\nD3DXVec3TransformCoordArray	XMVector3TransformCoordStream\nD3DXVec3TransformNormalArray	XMVector3TransformNormalStream\nD3DXVec3Project	XMVector3Project\nD3DXVec3Unproject	XMVector3Unproject\nD3DXVec3ProjectArray	XMVector3ProjectStream\nD3DXVec3UnprojectArray	XMVector3UnprojectStream\nD3DXVec4Length	XMVector4Length or XMVector4LengthEst\nD3DXVec4LengthSq	XMVector4LengthSq\nD3DXVec4Dot	XMVector4Dot\nD3DXVec4Add	XMVectorAdd\nD3DXVec4Subtract	XMVectorSubtract\nD3DXVec4Minimize	XMVectorMin\nD3DXVec4Maximize	XMVectorMax\nD3DXVec4Scale	XMVectorScale\nD3DXVec4Lerp	XMVectorLerp or XMVectorLerpV\nD3DXVec4Cross	XMVector4Cross\nD3DXVec4Normalize	XMVector4Normalize or XMVector4NormalizeEst\nD3DXVec4Hermite	XMVectorHermite or XMVectorHermiteV\nD3DXVec4CatmullRom	XMVectorCatmullRom or XMVectorCatmullRomV\nD3DXVec4BaryCentric	XMVectorBaryCentric or XMVectorBaryCentricV\nD3DXVec4Transform	XMVector4Transform\nD3DXVec4TransformArray	XMVector4TransformStream\nD3DXMatrixIdentity	XMMatrixIdentity\nD3DXMatrixDeterminant	XMMatrixDeterminant\nD3DXMatrixDecompose	XMMatrixDecompose\nD3DXMatrixTranspose	XMMatrixTranspose\nD3DXMatrixMultiply	XMMatrixMultiply\nD3DXMatrixMultiplyTranspose	XMMatrixMultiplyTranspose\nD3DXMatrixInverse	XMMatrixInverse\nD3DXMatrixScaling	XMMatrixScaling\nD3DXMatrixTranslation	XMMatrixTranslation\nD3DXMatrixRotationX	XMMatrixRotationX\nD3DXMatrixRotationY	XMMatrixRotationY\nD3DXMatrixRotationZ	XMMatrixRotationZ\nD3DXMatrixRotationAxis	XMMatrixRotationAxis\nD3DXMatrixRotationQuaternion	XMMatrixRotationQuaternion\nD3DXMatrixRotationYawPitchRoll	XMMatrixRotationRollPitchYaw (Note the order of parameters is different: D3DXMatrixRotationYawPitchRoll takes yaw, pitch, roll, XMMatrixRotationRollPitchYaw takes pitch, yaw, roll)\nD3DXMatrixTransformation	XMMatrixTransformation\nD3DXMatrixTransformation2D	XMMatrixTransformation2D\nD3DXMatrixAffineTransformation	XMMatrixAffineTransformation\nD3DXMatrixAffineTransformation2D	XMMatrixAffineTransformation2D\nD3DXMatrixLookAtRH	XMMatrixLookAtRH\nD3DXMatrixLookAtLH	XMMatrixLookAtLH\nD3DXMatrixPerspectiveRH	XMMatrixPerspectiveRH\nD3DXMatrixPerspectiveLH	XMMatrixPerspectiveLH\nD3DXMatrixPerspectiveFovRH	XMMatrixPerspectiveFovRH\nD3DXMatrixPerspectiveFovLH	XMMatrixPerspectiveFovLH\nD3DXMatrixPerspectiveOffCenterRH	XMMatrixPerspectiveOffCenterRH\nD3DXMatrixPerspectiveOffCenterLH	XMMatrixPerspectiveOffCenterLH\nD3DXMatrixOrthoRH	XMMatrixOrthographicRH\nD3DXMatrixOrthoLH	XMMatrixOrthographicLH\nD3DXMatrixOrthoOffCenterRH	XMMatrixOrthographicOffCenterRH\nD3DXMatrixOrthoOffCenterLH	XMMatrixOrthographicOffCenterLH\nD3DXMatrixShadow	XMMatrixShadow\nD3DXMatrixReflect	XMMatrixReflect\nD3DXQuaternionLength	XMQuaternionLength\nD3DXQuaternionLengthSq	XMQuaternionLengthSq\nD3DXQuaternionDot	XMQuaternionDot\nD3DXQuaternionIdentity	XMQuaternionIdentity\nD3DXQuaternionIsIdentity	XMQuaternionIsIdentity\nD3DXQuaternionConjugate	XMQuaternionConjugate\nD3DXQuaternionToAxisAngle	XMQuaternionToAxisAngle\nD3DXQuaternionRotationMatrix	XMQuaternionRotationMatrix\nD3DXQuaternionRotationAxis	XMQuaternionRotationAxis\nD3DXQuaternionRotationYawPitchRoll	XMQuaternionRotationRollPitchYaw (Note the order of parameters is different: D3DXQuaternionRotationYawPitchRoll takes yaw, pitch, roll, XMQuaternionRotationRollPitchYaw takes pitch, yaw, roll)\nD3DXQuaternionMultiply	XMQuaternionMultiply\nD3DXQuaternionNormalize	XMQuaternionNormalize or XMQuaternionNormalizeEst\nD3DXQuaternionInverse	XMQuaternionInverse\nD3DXQuaternionLn	XMQuaternionLn\nD3DXQuaternionExp	XMQuaternionExp\nD3DXQuaternionSlerp	XMQuaternionSlerp or XMQuaternionSlerpV\nD3DXQuaternionSquad	XMQuaternionSquad or XMQuaternionSquadV\nD3DXQuaternionSquadSetup	XMQuaternionSquadSetup\nD3DXQuaternionBaryCentric	XMQuaternionBaryCentric or XMQuaternionBaryCentricV\nD3DXPlaneDot	XMPlaneDot\nD3DXPlaneDotCoord	XMPlaneDotCoord\nD3DXPlaneDotNormal	XMPlaneDotNormal\nD3DXPlaneScale	XMVectorScale\nD3DXPlaneNormalize	XMPlaneNormalize or XMPlaneNormalizeEst\nD3DXPlaneIntersectLine	XMPlaneIntersectLine\nD3DXPlaneFromPointNormal	XMPlaneFromPointNormal\nD3DXPlaneFromPoints	XMPlaneFromPoints\nD3DXPlaneTransform	XMPlaneTransform\nD3DXPlaneTransformArray	XMPlaneTransformStream\nD3DXColorNegative	XMColorNegative\nD3DXColorAdd	XMVectorAdd\nD3DXColorSubtract	XMVectorSubtract\nD3DXColorScale	XMVectorScale\nD3DXColorModulate	XMColorModulate\nD3DXColorLerp	XMVectorLerp or XMVectorLerpV\nD3DXColorAdjustSaturation	XMColorAdjustSaturation\nD3DXColorAdjustContrast	XMColorAdjustContrast\nD3DXFresnelTerm	XMFresnelTerm</pre><br>\r\n<br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n','\r\n\r\n<p>directx11 特别推出了一个数学库 用于向量 矩阵的计算，而且使用128位 同时计算4条32位数据 (SIMD)</p>\r\n<p>之前基本是用的directx10math.h这个头文件。 &nbsp;这个数学库既然是新出的，肯定在硬件方便处理起来比以前的快许多，优化了很多。 技术永无止境嘛。推荐用新的</p>\r\n<p>而现在可以单独用 xnamath.h directx9 10 11 都可以用这个库，很方便。 下面的表可以快速从以前的数学库找到替换函数。</p>\r\n<p>对了 昨晚遇到一个坑。解决了很久。原来是由于xnamath 里面的 &nbsp;xmatrix &nbsp;xmvector 等 &nbsp;涉及到一个对齐问题。</p>\r\n<p>如果是 局部变量、全局变量 &nbsp;感觉不到。硬件会自动对齐。 但是如果放在类成员变量，就很容易报错了。 而且你看不出是那的问题。</p>\r\n<p>调试了很久。 所以我们在用这个库的时候，最后尽量避免设为类成员变量。</p>\r\n<p>下一节我将附上，把之前那个封装程序升级为xnamath库的完整源码，并实现了绘制一个三角形。 以后的教程都将在这个源码上演示。</p>\r\n<p>他们的区别快速查询 ：</p>\r\n<p><pre name=\"code\" class=\"cpp\">D3DXMath Type	DirectXMath Equivalent\nD3DXFLOAT16	HALF\nD3DXMATRIXA16	XMMATRIX or XMFLOAT4X4A\nD3DXQUATERNION\n\nD3DXPLANE\n\nD3DXCOLOR\n\nXMVECTOR is used rather than having unique types, so you will likely need to use an XMFLOAT4\nNote  D3DXQUATERNION::operator * calls the D3DXQuaternionMultiply function, which multiplies two quaternions. But, unless you explicitly use the XMQuaternionMultiply function, you get an incorrect answer when you use XMVECTOR::operator * on a quaternion.\n\nD3DXVECTOR2	XMFLOAT2\nD3DXVECTOR2_16F	XMHALF2\nD3DXVECTOR3	XMFLOAT3\nD3DXVECTOR4	XMFLOAT4\n(or if you can guarantee the data is 16-byte aligned, XMVECTOR or XMFLOAT4A )\n\nD3DXVECTOR4_16F	XMHALF4\n \n\nNote  There is no direct equivalent to D3DXVECTOR3_16F in XNAMath.\n\nD3DXMath Macro	DirectXMath Equivalent\nD3DX_PI	XM_PI\nD3DX_1BYPI	XM_1DIVPI\nD3DXToRadian	XMConvertToRadians\nD3DXToDegree	XMConvertToDegrees\n \n\nD3DXMath Function	DirectXMath Equivalent\nD3DXBoxBoundProbe	BoundingBox::Intersects(XMVECTOR, XMVECTOR, float&amp;)\nD3DXComputeBoundingBox	BoundingBox::CreateFromPoints\nD3DXComputeBoundingSphere	BoundingSphere::CreateFromPoints\nD3DXSphereBoundProbe	BoundingSphere::Intersects(XMVECTOR, XMVECTOR, float&amp;)\nD3DXIntersectTriFunction	TriangleTests::Intersects\nD3DXFloat32To16Array	XMConvertFloatToHalfStream\nD3DXFloat16To32Array	XMConvertHalfToFloatStream\nD3DXVec2Length	XMVector2Length or XMVector2LengthEst\nD3DXVec2LengthSq	XMVector2LengthSq\nD3DXVec2Dot	XMVector2Dot\nD3DXVec2CCW	XMVector2Cross\nD3DXVec2Add	XMVectorAdd\nD3DXVec2Subtract	XMVectorSubtract\nD3DXVec2Minimize	XMVectorMin\nD3DXVec2Maximize	XMVectorMax\nD3DXVec2Scale	XMVectorScale\nD3DXVec2Lerp	XMVectorLerp or XMVectorLerpV\nD3DXVec2Normalize	XMVector2Normalize or XMVector2NormalizeEst\nD3DXVec2Hermite	XMVectorHermite or XMVectorHermiteV\nD3DXVec2CatmullRom	XMVectorCatmullRom or XMVectorCatmullRomV\nD3DXVec2BaryCentric	XMVectorBaryCentric or XMVectorBaryCentricV\nD3DXVec2Transform	XMVector2Transform\nD3DXVec2TransformCoord	XMVector2TransformCoord\nD3DXVec2TransformNormal	XMVector2TransformNormal\nD3DXVec2TransformArray	XMVector2TransformStream\nD3DXVec2TransformCoordArray	XMVector2TransformCoordStream\nD3DXVec2TransformNormalArray	XMVector2TransformNormalStream\nD3DXVec3Length	XMVector3Length or XMVector3LengthEst\nD3DXVec3LengthSq	XMVector3LengthSq\nD3DXVec3Dot	XMVector3Dot\nD3DXVec3Cross	XMVector3Cross\nD3DXVec3Add	XMVectorAdd\nD3DXVec3Subtract	XMVectorSubtract\nD3DXVec3Minimize	XMVectorMin\nD3DXVec3Maximize	XMVectorMax\nD3DXVec3Scale	XMVectorScale\nD3DXVec3Lerp	XMVectorLerp or XMVectorLerpV\nD3DXVec3Normalize	XMVector3Normalize or XMVector3NormalizeEst\nD3DXVec3Hermite	XMVectorHermite or XMVectorHermiteV\nD3DXVec3CatmullRom	XMVectorCatmullRom or XMVectorCatmullRomV\nD3DXVec3BaryCentric	XMVectorBaryCentric or XMVectorBaryCentricV\nD3DXVec3Transform	XMVector3Transform\nD3DXVec3TransformCoord	XMVector3TransformCoord\nD3DXVec3TransformNormal	XMVector3TransformNormal\nD3DXVec3TransformArray	XMVector3TransformStream\nD3DXVec3TransformCoordArray	XMVector3TransformCoordStream\nD3DXVec3TransformNormalArray	XMVector3TransformNormalStream\nD3DXVec3Project	XMVector3Project\nD3DXVec3Unproject	XMVector3Unproject\nD3DXVec3ProjectArray	XMVector3ProjectStream\nD3DXVec3UnprojectArray	XMVector3UnprojectStream\nD3DXVec4Length	XMVector4Length or XMVector4LengthEst\nD3DXVec4LengthSq	XMVector4LengthSq\nD3DXVec4Dot	XMVector4Dot\nD3DXVec4Add	XMVectorAdd\nD3DXVec4Subtract	XMVectorSubtract\nD3DXVec4Minimize	XMVectorMin\nD3DXVec4Maximize	XMVectorMax\nD3DXVec4Scale	XMVectorScale\nD3DXVec4Lerp	XMVectorLerp or XMVectorLerpV\nD3DXVec4Cross	XMVector4Cross\nD3DXVec4Normalize	XMVector4Normalize or XMVector4NormalizeEst\nD3DXVec4Hermite	XMVectorHermite or XMVectorHermiteV\nD3DXVec4CatmullRom	XMVectorCatmullRom or XMVectorCatmullRomV\nD3DXVec4BaryCentric	XMVectorBaryCentric or XMVectorBaryCentricV\nD3DXVec4Transform	XMVector4Transform\nD3DXVec4TransformArray	XMVector4TransformStream\nD3DXMatrixIdentity	XMMatrixIdentity\nD3DXMatrixDeterminant	XMMatrixDeterminant\nD3DXMatrixDecompose	XMMatrixDecompose\nD3DXMatrixTranspose	XMMatrixTranspose\nD3DXMatrixMultiply	XMMatrixMultiply\nD3DXMatrixMultiplyTranspose	XMMatrixMultiplyTranspose\nD3DXMatrixInverse	XMMatrixInverse\nD3DXMatrixScaling	XMMatrixScaling\nD3DXMatrixTranslation	XMMatrixTranslation\nD3DXMatrixRotationX	XMMatrixRotationX\nD3DXMatrixRotationY	XMMatrixRotationY\nD3DXMatrixRotationZ	XMMatrixRotationZ\nD3DXMatrixRotationAxis	XMMatrixRotationAxis\nD3DXMatrixRotationQuaternion	XMMatrixRotationQuaternion\nD3DXMatrixRotationYawPitchRoll	XMMatrixRotationRollPitchYaw (Note the order of parameters is different: D3DXMatrixRotationYawPitchRoll takes yaw, pitch, roll, XMMatrixRotationRollPitchYaw takes pitch, yaw, roll)\nD3DXMatrixTransformation	XMMatrixTransformation\nD3DXMatrixTransformation2D	XMMatrixTransformation2D\nD3DXMatrixAffineTransformation	XMMatrixAffineTransformation\nD3DXMatrixAffineTransformation2D	XMMatrixAffineTransformation2D\nD3DXMatrixLookAtRH	XMMatrixLookAtRH\nD3DXMatrixLookAtLH	XMMatrixLookAtLH\nD3DXMatrixPerspectiveRH	XMMatrixPerspectiveRH\nD3DXMatrixPerspectiveLH	XMMatrixPerspectiveLH\nD3DXMatrixPerspectiveFovRH	XMMatrixPerspectiveFovRH\nD3DXMatrixPerspectiveFovLH	XMMatrixPerspectiveFovLH\nD3DXMatrixPerspectiveOffCenterRH	XMMatrixPerspectiveOffCenterRH\nD3DXMatrixPerspectiveOffCenterLH	XMMatrixPerspectiveOffCenterLH\nD3DXMatrixOrthoRH	XMMatrixOrthographicRH\nD3DXMatrixOrthoLH	XMMatrixOrthographicLH\nD3DXMatrixOrthoOffCenterRH	XMMatrixOrthographicOffCenterRH\nD3DXMatrixOrthoOffCenterLH	XMMatrixOrthographicOffCenterLH\nD3DXMatrixShadow	XMMatrixShadow\nD3DXMatrixReflect	XMMatrixReflect\nD3DXQuaternionLength	XMQuaternionLength\nD3DXQuaternionLengthSq	XMQuaternionLengthSq\nD3DXQuaternionDot	XMQuaternionDot\nD3DXQuaternionIdentity	XMQuaternionIdentity\nD3DXQuaternionIsIdentity	XMQuaternionIsIdentity\nD3DXQuaternionConjugate	XMQuaternionConjugate\nD3DXQuaternionToAxisAngle	XMQuaternionToAxisAngle\nD3DXQuaternionRotationMatrix	XMQuaternionRotationMatrix\nD3DXQuaternionRotationAxis	XMQuaternionRotationAxis\nD3DXQuaternionRotationYawPitchRoll	XMQuaternionRotationRollPitchYaw (Note the order of parameters is different: D3DXQuaternionRotationYawPitchRoll takes yaw, pitch, roll, XMQuaternionRotationRollPitchYaw takes pitch, yaw, roll)\nD3DXQuaternionMultiply	XMQuaternionMultiply\nD3DXQuaternionNormalize	XMQuaternionNormalize or XMQuaternionNormalizeEst\nD3DXQuaternionInverse	XMQuaternionInverse\nD3DXQuaternionLn	XMQuaternionLn\nD3DXQuaternionExp	XMQuaternionExp\nD3DXQuaternionSlerp	XMQuaternionSlerp or XMQuaternionSlerpV\nD3DXQuaternionSquad	XMQuaternionSquad or XMQuaternionSquadV\nD3DXQuaternionSquadSetup	XMQuaternionSquadSetup\nD3DXQuaternionBaryCentric	XMQuaternionBaryCentric or XMQuaternionBaryCentricV\nD3DXPlaneDot	XMPlaneDot\nD3DXPlaneDotCoord	XMPlaneDotCoord\nD3DXPlaneDotNormal	XMPlaneDotNormal\nD3DXPlaneScale	XMVectorScale\nD3DXPlaneNormalize	XMPlaneNormalize or XMPlaneNormalizeEst\nD3DXPlaneIntersectLine	XMPlaneIntersectLine\nD3DXPlaneFromPointNormal	XMPlaneFromPointNormal\nD3DXPlaneFromPoints	XMPlaneFromPoints\nD3DXPlaneTransform	XMPlaneTransform\nD3DXPlaneTransformArray	XMPlaneTransformStream\nD3DXColorNegative	XMColorNegative\nD3DXColorAdd	XMVectorAdd\nD3DXColorSubtract	XMVectorSubtract\nD3DXColorScale	XMVectorScale\nD3DXColorModulate	XMColorModulate\nD3DXColorLerp	XMVectorLerp or XMVectorLerpV\nD3DXColorAdjustSaturation	XMColorAdjustSaturation\nD3DXColorAdjustContrast	XMColorAdjustContrast\nD3DXFresnelTerm	XMFresnelTerm</pre><br>\r\n<br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n',1,'directx,directx11,c++',0,0,'2015-02-02 00:45:32','2015-02-02 00:45:32','2015-02-02 00:45:32');
INSERT INTO `blog_post` VALUES (34,1,7,'DirectX11 学习笔记4 -  一个完整的封装框架','250a4a58e61541873e0b0cffaf15c434',0,'\r\n\r\n<p><img src=\"http://img.blog.csdn.net/20141004235016185?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"','\r\n\r\n<p><img src=\"http://img.blog.csdn.net/20141004235016185?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p><br>\r\n</p>\r\n<p>本程序主要由5个文件组成。1个CPP 4个H文件 &nbsp;本来H文件可以分为4个CPP4个H，但是感觉太多了，就写到一起了</p>\r\n<p><span style=\"font-size:24px\">XMain&nbsp;</span></p>\r\n<p><span style=\"font-size:14px\">这个文件就是windows程序的入口函数</span></p>\r\n<p><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_1_1943715\"  name=\"code\" class=\"cpp\">&lt;span style=&quot;font-size:14px;&quot;&gt;//入口\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR pScmdline, int iCmdshow) \n{\n\n	XWindow *xwindow=new XWindow;\n	xwindow-&gt;init(); //初始化\n	xwindow-&gt;close();\n	delete xwindow;\n	return 0; \n}&lt;/span&gt;</pre></p>\r\n<p>接下来就是进入XWindow.h&nbsp;</p>\r\n<p><span style=\"font-size:24px\">XWindow.h</span></p>\r\n<p><span style=\"font-size:14px\">首先是init()</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_2_520183\"  name=\"code\" class=\"cpp\">xwidth=500;\n	xheight=400;\n	x_input=new XInput;\n	x_graphics=new XGraphics;\n	\n	//创建窗口\n	initWindows(xwidth,xheight,L&quot;Engine&quot;);\n	//初始化键盘\n	x_input-&gt;init();\n	//初始化渲染\n	x_graphics-&gt;init(xwidth,xheight,m_hwnd);\n\n\n	//消息循环\n	runWindows();\n	//关闭窗口\n	closeWindows();</pre>主要就是创建了 窗口，键初始化，渲染初始化。 然后就可以开始我们的消息循环了。</p>\r\n<p><span style=\"font-size:14px\">窗口初始化学过windows编程的就知道比较简单，然后x_input后面讲。</span></p>\r\n<p><span style=\"font-size:14px\">唯一与Directx相关的就是消息循环和渲染了。</span></p>\r\n<p><span style=\"font-size:14px\">其中消息循环：</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_3_9096651\"  name=\"code\" class=\"cpp\">MSG msg; \n	// 初始化消息结构. \n	ZeroMemory(&amp;msg, sizeof(MSG));\n	// 循环进行消息处理\n	while(!Xexit) \n	{ \n		// 处理windows消息. \n		if(PeekMessage(&amp;msg, NULL, 0, 0, PM_REMOVE)) \n		{ \n			TranslateMessage(&amp;msg); \n			DispatchMessage(&amp;msg); \n		}\n		// 接收到WM_QUIT消息，退出程序. \n		if(msg.message == WM_QUIT) \n		{ \n			Xexit=true;\n		} \n		else \n		{ \n			//渲染\n			Xexit=!frame();\n		}\n\n	}</pre><br>\r\n加了一个frame函数， 意思就是除了接受windows的正常消息之外。还不断的循环着一个函数frame.&nbsp;</p>\r\n<p><span style=\"font-size:14px\">这个frame就是渲染有关的啦。</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_4_2448866\"  name=\"code\" class=\"cpp\">bool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//开始渲染\n	return x_graphics-&gt;frame();\n}</pre><br>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_5_1025335\"  name=\"code\" class=\"cpp\">bool XGraphics::frame() \n{\n	bool hr=render();\n	return hr; \n}\n</pre><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_6_9601802\"  name=\"code\" class=\"cpp\">bool XGraphics::render() \n{\n	x_d3d-&gt;begin(0.0f,0.0f,0.5f,1.0f);//蓝色\n	x_d3d-&gt;end();\n	return true; \n}\n</pre><br>\r\n如上面一层一层的调用。其实最终就是绘制了一个蓝色的背景。之所以写这么多层，而不在一个程序里2行代码搞定，是因为之后的工程越来越大，全部放一个文件，会非常难分析其逻辑，而且非常难修改。</p>\r\n<p><span style=\"font-size:24px\">XGraphics</span></p>\r\n<p><span style=\"font-size:24px\">以后主要代码就是写在这个类里面了，现在还是空空的。</span></p>\r\n<p><span style=\"font-size:24px\">XD3Device</span></p>\r\n<p><span style=\"font-size:14px\">这个类就是做这个框架的意义了。</span></p>\r\n<p><span style=\"font-size:14px\">里面的init() 初始化了一堆很复杂，很烦躁的。 &nbsp;设备链，深度模板缓冲，各种状态绑定等等。都是一次性的。后面只需要改改参数就行。所以把它隔离到这个类。</span></p>\r\n<p><span style=\"font-size:14px\">只要在用的时候轻轻调用一个函数就可以了</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_7_8178271\"  name=\"code\" class=\"cpp\">bool XGraphics:: init(int screenWidth, int screenHeight, HWND hwnd) \n{\n	x_d3d=new XD3Device;\n	bool hr=x_d3d-&gt;init(screenWidth,screenHeight,VSYNC_ENABLED,hwnd,FULL_SCREEN,SCREEN_DEPTH,SCREEN_NEAR);\n	if(!hr)\n	{\n		MessageBox(hwnd, L&quot;Could not initialize Direct3D&quot;, L&quot;Error&quot;, MB_OK); \n		return false; \n	}\n	return true; \n}</pre><br>\r\n<br>\r\n</p>\r\n<p>全部代码</p>\r\n<p>XGraphics.h</p>\r\n<p>效果<img src=\"http://img.blog.csdn.net/20141004235247692?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_1_2864854\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_1_2864854\" name=\"code\" class=\"cpp\">#pragma once\n\n#include &lt;windows.h&gt;\n#include &quot;XD3Device.h&quot;\n///////////// \n// GLOBALS // \n///////////// \nconst bool  FULL_SCREEN = false; //是否全屏 \nconst bool  VSYNC_ENABLED = true; //是否垂直同步 \nconst float SCREEN_DEPTH = 1000.0f; //深度，远点 \nconst float SCREEN_NEAR = 0.1f; //深度，近点\n\nclass XGraphics \n{ \npublic: \n	bool init(int, int, HWND); //初始化渲染设备\n	void close(); \n	bool frame();\n\nprivate: \n	bool render(); \nprivate:\n	XD3Device *x_d3d;\n};\n\nbool XGraphics:: init(int screenWidth, int screenHeight, HWND hwnd) \n{\n	x_d3d=new XD3Device;\n	bool hr=x_d3d-&gt;init(screenWidth,screenHeight,VSYNC_ENABLED,hwnd,FULL_SCREEN,SCREEN_DEPTH,SCREEN_NEAR);\n	if(!hr)\n	{\n		MessageBox(hwnd, L&quot;Could not initialize Direct3D&quot;, L&quot;Error&quot;, MB_OK); \n		return false; \n	}\n	return true; \n}\n\nvoid XGraphics::close() \n{\n	if(x_d3d)\n	{\n		x_d3d-&gt;close();\n		delete x_d3d;\n		x_d3d=0;\n	}\n}\n\nbool XGraphics::frame() \n{\n	bool hr=render();\n	return hr; \n}\n\n\nbool XGraphics::render() \n{\n	x_d3d-&gt;begin(0.0f,0.0f,0.5f,1.0f);//蓝色\n	x_d3d-&gt;end();\n	return true; \n}\n</pre><br>\r\nXWindows.h\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_2_7990830\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_2_7990830\" name=\"code\" class=\"cpp\">#pragma once \n//定义该宏能够减少windows头文件的大小，使编译器不编译一些不必要的文件，加快编译时间 \n#define WIN32_LEAN_AND_MEAN\n#include &lt;Windows.h&gt;\n#include &quot;XGraphics.h&quot;\n#include &quot;XInput.h&quot;\n//退出\nstatic bool Xexit=false;\n//全屏\nstatic bool fullScreen=false;\nclass XWindow\n{\nprivate:\n	//窗口类名字\n	LPCWSTR m_applicationName;\n	//实例句柄\n	HINSTANCE m_hinstance;\n	//窗口句柄\n	HWND m_hwnd;\n	int xwidth,xheight;\n	//按键类\n	XInput * x_input;\n	//图形类\n	XGraphics * x_graphics;\nprivate:\n	//初始化窗口\n	void initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName);\n	//关闭窗口\n	void closeWindows();\n	//消息循环\n	void runWindows();\n	\npublic:\n	//初始化全局\n	virtual void init();\n	//渲染\n	virtual bool frame();\n	//退出\n	virtual void close();\n	//消息函数\n	LRESULT CALLBACK MessageHandler(HWND, UINT, WPARAM, LPARAM); \n};\n//消息循环回调函数\nstatic LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);\nstatic XWindow * appXWindow=NULL;\nvoid XWindow::close()\n{\n	if(x_input)\n	{\n		delete x_input;\n		x_input=NULL;\n	}\n	if(x_graphics)\n	{\n		x_graphics-&gt;close();\n		delete x_graphics;\n		x_graphics=NULL;\n	}\n}\nvoid XWindow::init()\n{\n	xwidth=500;\n	xheight=400;\n	x_input=new XInput;\n	x_graphics=new XGraphics;\n	\n	//创建窗口\n	initWindows(xwidth,xheight,L&quot;Engine&quot;);\n	//初始化键盘\n	x_input-&gt;init();\n	//初始化渲染\n	x_graphics-&gt;init(xwidth,xheight,m_hwnd);\n\n\n	//消息循环\n	runWindows();\n	//关闭窗口\n	closeWindows();\n}\nbool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//开始渲染\n	return x_graphics-&gt;frame();\n}\nvoid XWindow::initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName)\n{\n	WNDCLASSEX wc; \n	DEVMODE dmScreenSettings; \n	int posX, posY;\n	this-&gt;m_applicationName=m_applicationName;\n	// 得到应用程序实例句柄 \n	m_hinstance = GetModuleHandle(NULL);\n	appXWindow=this;\n	// 设置窗口类参数. \n	wc.style         = CS_HREDRAW | CS_VREDRAW | CS_OWNDC; \n\n	wc.lpfnWndProc   = WndProc; //指定回调函数 \n	wc.cbClsExtra    = 0; \n	wc.cbWndExtra    = 0; \n	wc.hInstance     = m_hinstance; \n	wc.hIcon         = LoadIcon(NULL, IDI_WINLOGO); \n	wc.hIconSm       = wc.hIcon; \n	wc.hCursor       = LoadCursor(NULL, IDC_ARROW); \n	wc.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH); //默认黑色窗口黑色背景 \n	wc.lpszMenuName  = NULL; \n	wc.lpszClassName = m_applicationName; \n	wc.cbSize        = sizeof(WNDCLASSEX);\n\n	// 注册窗口类 \n	RegisterClassEx(&amp;wc);\n\n	// 根据是否全屏设置不同的分辨率. \n	if(fullScreen) \n	{ \n		// 得到windows桌面分辨率 \n		screenWidth  = GetSystemMetrics(SM_CXSCREEN); \n		screenHeight = GetSystemMetrics(SM_CYSCREEN);\n		//全屏模式下，设置窗口大小为windows桌面分辨率. \n		memset(&amp;dmScreenSettings, 0, sizeof(dmScreenSettings)); \n		dmScreenSettings.dmSize       = sizeof(dmScreenSettings); \n		dmScreenSettings.dmPelsWidth  = (unsigned long)screenWidth; \n		dmScreenSettings.dmPelsHeight = (unsigned long)screenHeight; \n		dmScreenSettings.dmBitsPerPel = 32;            \n		dmScreenSettings.dmFields     = DM_BITSPERPEL | DM_PELSWIDTH | DM_PELSHEIGHT;\n\n		// 临时设置显示设备为全屏模式，注意：应用程序退出时候，将恢复系统默认设置。 \n		ChangeDisplaySettings(&amp;dmScreenSettings, CDS_FULLSCREEN);\n\n		// 设置窗口的左上角坐标位置为(0,0). \n		posX = posY = 0; \n	} \n	else \n	{ \n		// 窗口左上角坐标位置,posX, posY\n		posX = (GetSystemMetrics(SM_CXSCREEN) - screenWidth)  / 2; \n		posY = (GetSystemMetrics(SM_CYSCREEN) - screenHeight) / 2; \n	}\n\n	// 全屏和窗口使用不同的参数. \n	if( fullScreen) \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_CLIPSIBLINGS | WS_CLIPCHILDREN | WS_POPUP, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	} \n	else \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_OVERLAPPEDWINDOW, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	}\n\n	// 显示窗口并设置其为焦点. \n	ShowWindow(m_hwnd, SW_SHOW); \n	SetForegroundWindow(m_hwnd); \n	SetFocus(m_hwnd);\n	// 隐藏鼠标. \n	//ShowCursor(false);\n\n}\n\nvoid XWindow::runWindows()\n{\n	MSG msg; \n	// 初始化消息结构. \n	ZeroMemory(&amp;msg, sizeof(MSG));\n	// 循环进行消息处理\n	while(!Xexit) \n	{ \n		// 处理windows消息. \n		if(PeekMessage(&amp;msg, NULL, 0, 0, PM_REMOVE)) \n		{ \n			TranslateMessage(&amp;msg); \n			DispatchMessage(&amp;msg); \n		}\n		// 接收到WM_QUIT消息，退出程序. \n		if(msg.message == WM_QUIT) \n		{ \n			Xexit=true;\n		} \n		else \n		{ \n			//渲染\n			Xexit=!frame();\n		}\n\n	}\n	return; \n}\nLRESULT CALLBACK WndProc(HWND hwnd, UINT umessage, WPARAM wparam, LPARAM lparam) \n{ \n	switch(umessage) \n	{\n\n		// 窗口销毁消息. \n	case WM_DESTROY: \n	case WM_CLOSE: \n		{ \n			PostQuitMessage(0); \n			return 0; \n		}\n		break;\n		//MessageHandle过程处理其它所有消息. \n	default: \n		{ \n			return appXWindow-&gt;MessageHandler(hwnd, umessage, wparam, lparam); \n		} \n		break;\n	} \n\n}\n\nLRESULT CALLBACK XWindow::MessageHandler(HWND hwnd, UINT umsg, WPARAM wparam, LPARAM lparam) \n{\n\n	switch(umsg) \n	{ \n		// 检测按键消息. \n	case WM_KEYDOWN: \n		x_input-&gt;keyDown(wparam);\n	    break;\n	case WM_KEYUP:\n		x_input-&gt;keyUp(wparam);\n		break;\n		//任何其它消息发送到windows缺省处理. \n	default: \n		{ \n			return DefWindowProc(hwnd, umsg, wparam, lparam); \n		} \n	} \n	return 0;\n}\nvoid XWindow::closeWindows()\n{\n	//显示光标. \n	//ShowCursor(true);\n	// 恢复默认显示设置. \n	if(fullScreen) \n	{ \n		ChangeDisplaySettings(NULL, 0); \n	}\n	//释放窗口句柄. \n	DestroyWindow(m_hwnd); \n	m_hwnd = NULL;\n	// 释放应用程序实例. \n	UnregisterClass(m_applicationName, m_hinstance); \n	m_hinstance = NULL;\n	appXWindow=NULL;\n	return; \n}</pre><br>\r\nXInput.h\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_3_7260482\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_3_7260482\" name=\"code\" class=\"cpp\">#pragma once\nclass XInput\n{\npublic:\n	void init();\n	void keyDown(unsigned int);\n	void keyUp(unsigned int);\n	bool isKeyDown(unsigned int);\nprivate:\n	bool x_keys[256];\n\n};\nvoid XInput::init()\n{\n	int i;\n\n	// 初始所有的键都是非按下状态. \n	for(i=0; i&lt;256; i++) \n	{ \n		x_keys[i] = false; \n	}\n\n	return; \n}\nvoid XInput::keyDown(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = true; \n	return; \n}\nvoid XInput::keyUp(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = false; \n	return; \n}\nbool XInput::isKeyDown(unsigned int key) \n{ \n	// 判断键是否被按下？ \n	return x_keys[key]; \n}\n</pre><br>\r\nXMain.cpp\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_4_7369166\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_4_7369166\" name=\"code\" class=\"cpp\">#include &quot;XWindow.h&quot;\n//入口\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR pScmdline, int iCmdshow) \n{\n\n	XWindow *xwindow=new XWindow;\n	xwindow-&gt;init(); //初始化\n	xwindow-&gt;close();\n	delete xwindow;\n	return 0; \n}\n</pre><br>\r\nXD3Device.h\r\n<p></p>\r\n<p><br>\r\n</p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_5_7718613\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_5_7718613\" name=\"code\" class=\"cpp\">&lt;/pre&gt;&lt;pre name=&quot;code&quot; class=&quot;cpp&quot;&gt;#pragma once\n#pragma comment(lib, &quot;dxgi.lib&quot;)\n#pragma comment(lib, &quot;d3d11.lib&quot;)\n#pragma comment(lib, &quot;d3dx11.lib&quot;)\n#pragma comment(lib, &quot;d3dx10.lib&quot;)\n#include &lt;dxgi.h&gt;\n#include &lt;d3dcommon.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx10math.h&gt;\n#include &lt;xnamath.h&gt;\nclass XD3Device\n{\npublic:\n	XD3Device();\n	//3D设备所有初始化\n	bool init(int, int, bool, HWND, bool, float, float);\n	//关闭设备\n	void close();\n	//开始渲染设备\n	void begin(float, float, float, float);\n	//显示到前景\n	void end();\n\npublic:\n	bool m_vsync_enabled; //是否启用垂直同步\n	IDXGISwapChain* m_swapChain; //交换链对象\n	ID3D11Device* m_device;  //设备对象\n	ID3D11DeviceContext* m_deviceContext; //设备上下文对象\n	ID3D11RenderTargetView* m_renderTargetView; //渲染目标视图\n	ID3D11Texture2D* m_depthStencilBuffer; //深度模板缓冲\n	ID3D11DepthStencilState* m_depthStencilState; //深度磨成状态\n	ID3D11DepthStencilView* m_depthStencilView; //深度目标视图\n	ID3D11RasterizerState* m_rasterState; //光栅化状态\n	D3DXMATRIX m_projectionMatrix; //投影矩阵\n	D3DXMATRIX m_worldMatrix;//世界坐标系矩阵\n	D3DXMATRIX m_orthoMatrix;//正交投影矩阵\n};\nvoid XD3Device::begin(float red, float green, float blue, float alpha)\n{\n	float color[]={red,green,blue,alpha};\n	//清除后缓冲.\n	m_deviceContext-&gt;ClearRenderTargetView(m_renderTargetView, color);\n\n	//清除深度缓冲.\n	m_deviceContext-&gt;ClearDepthStencilView(m_depthStencilView, D3D11_CLEAR_DEPTH, 1.0f, 0);\n\n}\nvoid XD3Device::end()\n{\n	//渲染完成后，把后缓冲内容present到前缓冲\n	if(m_vsync_enabled)\n	{\n		// 锁定屏幕刷新率.\n		m_swapChain-&gt;Present(1, 0);\n	}\n	else\n	{\n		// 尽可能快的present后缓冲.\n		m_swapChain-&gt;Present(0, 0);\n	}\n\n}\nvoid XD3Device::close()\n{\n	// 释放交换链资源前，先设置为窗口模式，否则可能会产生异常.\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;SetFullscreenState(false, NULL);\n	}\n\n	if(m_rasterState)\n	{\n		m_rasterState-&gt;Release();\n		m_rasterState = 0;\n	}\n\n	if(m_depthStencilView)\n	{\n		m_depthStencilView-&gt;Release();\n		m_depthStencilView = 0;\n	}\n\n	if(m_depthStencilState)\n	{\n		m_depthStencilState-&gt;Release();\n		m_depthStencilState = 0;\n	}\n\n	if(m_depthStencilBuffer)\n	{\n		m_depthStencilBuffer-&gt;Release();\n		m_depthStencilBuffer = 0;\n	}\n\n	if(m_renderTargetView)\n	{\n		m_renderTargetView-&gt;Release();\n		m_renderTargetView = 0;\n	}\n\n	if(m_deviceContext)\n	{\n		m_deviceContext-&gt;Release();\n		m_deviceContext = 0;\n	}\n\n	if(m_device)\n	{\n		m_device-&gt;Release();\n		m_device = 0;\n	}\n\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;Release();\n		m_swapChain = 0;\n	}\n\n}\nXD3Device::XD3Device()\n{\n	m_swapChain = 0;\n	m_device = 0;\n	m_deviceContext = 0;\n	m_renderTargetView = 0;\n	m_depthStencilBuffer = 0;\n	m_depthStencilState = 0;\n	m_depthStencilView = 0;\n	m_rasterState = 0;\n}\n//Initialize函数包含完成D3D设置的所有代码。\nbool XD3Device::init(int screenWidth, int screenHeight, bool vsync, HWND hwnd, bool fullscreen, \n						  float screenDepth, float screenNear)\n{\n	HRESULT result;\n	IDXGIFactory* factory;\n	IDXGIAdapter* adapter;\n	IDXGIOutput* adapterOutput;\n	unsigned int numModes, i, stringLength;\n	DXGI_MODE_DESC* displayModeList;\n	DXGI_ADAPTER_DESC adapterDesc;\n	int error;\n	DXGI_SWAP_CHAIN_DESC swapChainDesc;\n	D3D_FEATURE_LEVEL featureLevel;\n	ID3D11Texture2D* backBufferPtr;\n	D3D11_TEXTURE2D_DESC depthBufferDesc;\n	D3D11_DEPTH_STENCIL_DESC depthStencilDesc;\n	D3D11_DEPTH_STENCIL_VIEW_DESC depthStencilViewDesc;\n	D3D11_RASTERIZER_DESC rasterDesc;\n	D3D11_VIEWPORT viewport;\n	float fieldOfView, screenAspect;\n\n\n	// 保存垂直同步设置\n	m_vsync_enabled = vsync;\n\n	// 初始化交换链描述\n	ZeroMemory(&amp;swapChainDesc, sizeof(swapChainDesc));\n	//MessageBox(hwnd, L&quot;Could 2&quot;, L&quot;Error&quot;, MB_OK); \n	// 用1个后缓冲\n	swapChainDesc.BufferCount = 1;\n\n	//帧缓冲的大小和应用程序窗口大小相等.\n	swapChainDesc.BufferDesc.Width = screenWidth;\n	swapChainDesc.BufferDesc.Height = screenHeight;\n\n	// 后缓冲的surface的格式为DXGI_FORMAT_R8G8B8A8_UNORM.\n	// surface的每个像素用4个无符号的8bit[映射到0-1]来表示。NORM表示归一化。\n	swapChainDesc.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n\n	// 如果使用垂直同步，设置后缓冲的刷新率。.\n	//刷新率就是一秒钟把后缓冲内容在屏幕上画出的次数。\n	//如果开启垂直同步，则锁定刷新率，则fps是固定的\n	if(m_vsync_enabled)\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 60;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n	else\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 0;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n\n	// 设置后缓冲的用途\n	// 我们的渲染目标缓冲为后缓冲。\n	swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n\n	// 后缓冲输出的窗口句柄.\n	swapChainDesc.OutputWindow = hwnd;\n\n	// 不使用多重采样\n	swapChainDesc.SampleDesc.Count = 1;\n	swapChainDesc.SampleDesc.Quality = 0;\n\n	// 设置全屏或者窗口模式.\n	if(fullscreen)\n	{\n		swapChainDesc.Windowed = false;\n	}\n	else\n	{\n		swapChainDesc.Windowed = true;\n	}\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	// 设定扫描线ordering以及缩放为unspecified.\n	swapChainDesc.BufferDesc.ScanlineOrdering = DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED;\n	swapChainDesc.BufferDesc.Scaling = DXGI_MODE_SCALING_UNSPECIFIED;\n\n	// 后缓冲内容呈现到屏幕后，放弃其内容\n	swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_DISCARD;\n\n	//不设置标志\n	swapChainDesc.Flags = 0;\n\n	// 设置feature level为D3D11\n	// 如果显卡不支持D3D11,我们能够通过设置这个参数，使用D3D10,或者9.\n	//featureLevel = D3D_FEATURE_LEVEL_10_1;\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n	// 创建交换链，设备以及设备上下文.\n	result = D3D11CreateDeviceAndSwapChain(NULL, D3D_DRIVER_TYPE_HARDWARE, NULL, 0, featureLevels, numFeatureLevels, \n		D3D11_SDK_VERSION, &amp;swapChainDesc, &amp;m_swapChain, &amp;m_device, NULL, &amp;m_deviceContext);\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 得到交换链中的后缓冲指针.\n	result = m_swapChain-&gt;GetBuffer(0, __uuidof(ID3D11Texture2D), (LPVOID*)&amp;backBufferPtr);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 用后缓冲创建渲染目标视图.\n	result = m_device-&gt;CreateRenderTargetView(backBufferPtr, NULL, &amp;m_renderTargetView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//释放后缓冲.(引用计数减1)\n	backBufferPtr-&gt;Release();\n	backBufferPtr = 0;\n\n	// 初始化深度缓冲描述.\n	ZeroMemory(&amp;depthBufferDesc, sizeof(depthBufferDesc));\n\n	//设置深度缓冲描述\n	depthBufferDesc.Width = screenWidth;\n	depthBufferDesc.Height = screenHeight;\n	depthBufferDesc.MipLevels = 1;//对于深度缓冲为1\n	depthBufferDesc.ArraySize = 1;//对于深度缓冲为1，对于纹理，这2个参数有更多用途\n	depthBufferDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthBufferDesc.SampleDesc.Count = 1;\n	depthBufferDesc.SampleDesc.Quality = 0;\n	depthBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	depthBufferDesc.BindFlags = D3D11_BIND_DEPTH_STENCIL;\n	depthBufferDesc.CPUAccessFlags = 0;\n	depthBufferDesc.MiscFlags = 0;\n\n	// 创建深度缓冲.\n	result = m_device-&gt;CreateTexture2D(&amp;depthBufferDesc, NULL, &amp;m_depthStencilBuffer);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 初始化深度模版状态描述.\n	ZeroMemory(&amp;depthStencilDesc, sizeof(depthStencilDesc));\n\n	// 设置深度模版状态描述.\n	depthStencilDesc.DepthEnable = true;\n	depthStencilDesc.DepthWriteMask = D3D11_DEPTH_WRITE_MASK_ALL;//D3D11_DEPTH_WRITE_MASK_ZERO禁止写深度缓冲\n	depthStencilDesc.DepthFunc = D3D11_COMPARISON_LESS;\n\n	depthStencilDesc.StencilEnable = true;\n	depthStencilDesc.StencilReadMask = 0xFF;\n	depthStencilDesc.StencilWriteMask = 0xFF;\n\n	// 对于front face 像素使用的模版操作操作.\n	depthStencilDesc.FrontFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilDepthFailOp = D3D11_STENCIL_OP_INCR;\n	depthStencilDesc.FrontFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 对于back face像素使用的模版操作模式.\n	depthStencilDesc.BackFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilDepthFailOp = D3D11_STENCIL_OP_DECR;\n	depthStencilDesc.BackFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 创建深度模版状态，使其生效\n	result = m_device-&gt;CreateDepthStencilState(&amp;depthStencilDesc, &amp;m_depthStencilState);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 设置深度模版状态.\n	m_deviceContext-&gt;OMSetDepthStencilState(m_depthStencilState, 1);\n\n	// 初始化深度模版视图.\n	ZeroMemory(&amp;depthStencilViewDesc, sizeof(depthStencilViewDesc));\n\n	// 设置深度模版视图描述.\n	depthStencilViewDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthStencilViewDesc.ViewDimension = D3D11_DSV_DIMENSION_TEXTURE2D;\n	depthStencilViewDesc.Texture2D.MipSlice = 0;\n\n	// 创建深度模版视图.\n	result = m_device-&gt;CreateDepthStencilView(m_depthStencilBuffer, &amp;depthStencilViewDesc, &amp;m_depthStencilView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 绑定渲染目标视图和深度缓冲到渲染管线.\n	m_deviceContext-&gt;OMSetRenderTargets(1, &amp;m_renderTargetView, m_depthStencilView);\n\n\n	// 设置光栅化描述，指定多边形如何被渲染.\n	rasterDesc.AntialiasedLineEnable = false;\n	rasterDesc.CullMode = D3D11_CULL_BACK;\n	rasterDesc.DepthBias = 0;\n	rasterDesc.DepthBiasClamp = 0.0f;\n	rasterDesc.DepthClipEnable = true;\n	rasterDesc.FillMode = D3D11_FILL_SOLID;\n	rasterDesc.FrontCounterClockwise = false;\n	rasterDesc.MultisampleEnable = false;\n	rasterDesc.ScissorEnable = false;\n	rasterDesc.SlopeScaledDepthBias = 0.0f;\n\n	// 创建光栅化状态\n	result = m_device-&gt;CreateRasterizerState(&amp;rasterDesc, &amp;m_rasterState);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//设置光栅化状态，使其生效\n	m_deviceContext-&gt;RSSetState(m_rasterState);\n\n\n	// 设置视口，显示全部后缓冲内容\n	viewport.Width = (float)screenWidth;\n	viewport.Height = (float)screenHeight;\n	viewport.MinDepth = 0.0f;\n	viewport.MaxDepth = 1.0f;\n	viewport.TopLeftX = 0.0f;\n	viewport.TopLeftY = 0.0f;\n\n	// 创建视口\n	m_deviceContext-&gt;RSSetViewports(1, &amp;viewport);\n\n	// 设置透视投影矩阵\n	fieldOfView = (float)D3DX_PI / 4.0f;\n	screenAspect = (float)screenWidth / (float)screenHeight;\n\n	// 创建透视投影矩阵.\n	D3DXMatrixPerspectiveFovLH(&amp;m_projectionMatrix, fieldOfView, screenAspect, screenNear, screenDepth);\n\n	//初始化world矩阵为单位矩阵.\n	//该矩阵实现局部坐标到世界坐标的转换\n	D3DXMatrixIdentity(&amp;m_worldMatrix);\n\n\n	// 创建正交投影矩阵，主要用来实施2D渲染.\n	D3DXMatrixOrthoLH(&amp;m_orthoMatrix, (float)screenWidth, (float)screenHeight, screenNear, screenDepth);\n\n	return true;\n\n\n}\n</pre><br>\r\n<br>\r\n<br>\r\n<p></p>\r\n','\r\n\r\n<p><img src=\"http://img.blog.csdn.net/20141004235016185?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p><br>\r\n</p>\r\n<p>本程序主要由5个文件组成。1个CPP 4个H文件 &nbsp;本来H文件可以分为4个CPP4个H，但是感觉太多了，就写到一起了</p>\r\n<p><span style=\"font-size:24px\">XMain&nbsp;</span></p>\r\n<p><span style=\"font-size:14px\">这个文件就是windows程序的入口函数</span></p>\r\n<p><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_1_1943715\"  name=\"code\" class=\"cpp\">&lt;span style=&quot;font-size:14px;&quot;&gt;//入口\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR pScmdline, int iCmdshow) \n{\n\n	XWindow *xwindow=new XWindow;\n	xwindow-&gt;init(); //初始化\n	xwindow-&gt;close();\n	delete xwindow;\n	return 0; \n}&lt;/span&gt;</pre></p>\r\n<p>接下来就是进入XWindow.h&nbsp;</p>\r\n<p><span style=\"font-size:24px\">XWindow.h</span></p>\r\n<p><span style=\"font-size:14px\">首先是init()</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_2_520183\"  name=\"code\" class=\"cpp\">xwidth=500;\n	xheight=400;\n	x_input=new XInput;\n	x_graphics=new XGraphics;\n	\n	//创建窗口\n	initWindows(xwidth,xheight,L&quot;Engine&quot;);\n	//初始化键盘\n	x_input-&gt;init();\n	//初始化渲染\n	x_graphics-&gt;init(xwidth,xheight,m_hwnd);\n\n\n	//消息循环\n	runWindows();\n	//关闭窗口\n	closeWindows();</pre>主要就是创建了 窗口，键初始化，渲染初始化。 然后就可以开始我们的消息循环了。</p>\r\n<p><span style=\"font-size:14px\">窗口初始化学过windows编程的就知道比较简单，然后x_input后面讲。</span></p>\r\n<p><span style=\"font-size:14px\">唯一与Directx相关的就是消息循环和渲染了。</span></p>\r\n<p><span style=\"font-size:14px\">其中消息循环：</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_3_9096651\"  name=\"code\" class=\"cpp\">MSG msg; \n	// 初始化消息结构. \n	ZeroMemory(&amp;msg, sizeof(MSG));\n	// 循环进行消息处理\n	while(!Xexit) \n	{ \n		// 处理windows消息. \n		if(PeekMessage(&amp;msg, NULL, 0, 0, PM_REMOVE)) \n		{ \n			TranslateMessage(&amp;msg); \n			DispatchMessage(&amp;msg); \n		}\n		// 接收到WM_QUIT消息，退出程序. \n		if(msg.message == WM_QUIT) \n		{ \n			Xexit=true;\n		} \n		else \n		{ \n			//渲染\n			Xexit=!frame();\n		}\n\n	}</pre><br>\r\n加了一个frame函数， 意思就是除了接受windows的正常消息之外。还不断的循环着一个函数frame.&nbsp;</p>\r\n<p><span style=\"font-size:14px\">这个frame就是渲染有关的啦。</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_4_2448866\"  name=\"code\" class=\"cpp\">bool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//开始渲染\n	return x_graphics-&gt;frame();\n}</pre><br>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_5_1025335\"  name=\"code\" class=\"cpp\">bool XGraphics::frame() \n{\n	bool hr=render();\n	return hr; \n}\n</pre><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_6_9601802\"  name=\"code\" class=\"cpp\">bool XGraphics::render() \n{\n	x_d3d-&gt;begin(0.0f,0.0f,0.5f,1.0f);//蓝色\n	x_d3d-&gt;end();\n	return true; \n}\n</pre><br>\r\n如上面一层一层的调用。其实最终就是绘制了一个蓝色的背景。之所以写这么多层，而不在一个程序里2行代码搞定，是因为之后的工程越来越大，全部放一个文件，会非常难分析其逻辑，而且非常难修改。</p>\r\n<p><span style=\"font-size:24px\">XGraphics</span></p>\r\n<p><span style=\"font-size:24px\">以后主要代码就是写在这个类里面了，现在还是空空的。</span></p>\r\n<p><span style=\"font-size:24px\">XD3Device</span></p>\r\n<p><span style=\"font-size:14px\">这个类就是做这个框架的意义了。</span></p>\r\n<p><span style=\"font-size:14px\">里面的init() 初始化了一堆很复杂，很烦躁的。 &nbsp;设备链，深度模板缓冲，各种状态绑定等等。都是一次性的。后面只需要改改参数就行。所以把它隔离到这个类。</span></p>\r\n<p><span style=\"font-size:14px\">只要在用的时候轻轻调用一个函数就可以了</span></p>\r\n<p><span style=\"font-size:14px\"></span><pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141005_7_8178271\"  name=\"code\" class=\"cpp\">bool XGraphics:: init(int screenWidth, int screenHeight, HWND hwnd) \n{\n	x_d3d=new XD3Device;\n	bool hr=x_d3d-&gt;init(screenWidth,screenHeight,VSYNC_ENABLED,hwnd,FULL_SCREEN,SCREEN_DEPTH,SCREEN_NEAR);\n	if(!hr)\n	{\n		MessageBox(hwnd, L&quot;Could not initialize Direct3D&quot;, L&quot;Error&quot;, MB_OK); \n		return false; \n	}\n	return true; \n}</pre><br>\r\n<br>\r\n</p>\r\n<p>全部代码</p>\r\n<p>XGraphics.h</p>\r\n<p>效果<img src=\"http://img.blog.csdn.net/20141004235247692?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_1_2864854\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_1_2864854\" name=\"code\" class=\"cpp\">#pragma once\n\n#include &lt;windows.h&gt;\n#include &quot;XD3Device.h&quot;\n///////////// \n// GLOBALS // \n///////////// \nconst bool  FULL_SCREEN = false; //是否全屏 \nconst bool  VSYNC_ENABLED = true; //是否垂直同步 \nconst float SCREEN_DEPTH = 1000.0f; //深度，远点 \nconst float SCREEN_NEAR = 0.1f; //深度，近点\n\nclass XGraphics \n{ \npublic: \n	bool init(int, int, HWND); //初始化渲染设备\n	void close(); \n	bool frame();\n\nprivate: \n	bool render(); \nprivate:\n	XD3Device *x_d3d;\n};\n\nbool XGraphics:: init(int screenWidth, int screenHeight, HWND hwnd) \n{\n	x_d3d=new XD3Device;\n	bool hr=x_d3d-&gt;init(screenWidth,screenHeight,VSYNC_ENABLED,hwnd,FULL_SCREEN,SCREEN_DEPTH,SCREEN_NEAR);\n	if(!hr)\n	{\n		MessageBox(hwnd, L&quot;Could not initialize Direct3D&quot;, L&quot;Error&quot;, MB_OK); \n		return false; \n	}\n	return true; \n}\n\nvoid XGraphics::close() \n{\n	if(x_d3d)\n	{\n		x_d3d-&gt;close();\n		delete x_d3d;\n		x_d3d=0;\n	}\n}\n\nbool XGraphics::frame() \n{\n	bool hr=render();\n	return hr; \n}\n\n\nbool XGraphics::render() \n{\n	x_d3d-&gt;begin(0.0f,0.0f,0.5f,1.0f);//蓝色\n	x_d3d-&gt;end();\n	return true; \n}\n</pre><br>\r\nXWindows.h\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_2_7990830\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_2_7990830\" name=\"code\" class=\"cpp\">#pragma once \n//定义该宏能够减少windows头文件的大小，使编译器不编译一些不必要的文件，加快编译时间 \n#define WIN32_LEAN_AND_MEAN\n#include &lt;Windows.h&gt;\n#include &quot;XGraphics.h&quot;\n#include &quot;XInput.h&quot;\n//退出\nstatic bool Xexit=false;\n//全屏\nstatic bool fullScreen=false;\nclass XWindow\n{\nprivate:\n	//窗口类名字\n	LPCWSTR m_applicationName;\n	//实例句柄\n	HINSTANCE m_hinstance;\n	//窗口句柄\n	HWND m_hwnd;\n	int xwidth,xheight;\n	//按键类\n	XInput * x_input;\n	//图形类\n	XGraphics * x_graphics;\nprivate:\n	//初始化窗口\n	void initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName);\n	//关闭窗口\n	void closeWindows();\n	//消息循环\n	void runWindows();\n	\npublic:\n	//初始化全局\n	virtual void init();\n	//渲染\n	virtual bool frame();\n	//退出\n	virtual void close();\n	//消息函数\n	LRESULT CALLBACK MessageHandler(HWND, UINT, WPARAM, LPARAM); \n};\n//消息循环回调函数\nstatic LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);\nstatic XWindow * appXWindow=NULL;\nvoid XWindow::close()\n{\n	if(x_input)\n	{\n		delete x_input;\n		x_input=NULL;\n	}\n	if(x_graphics)\n	{\n		x_graphics-&gt;close();\n		delete x_graphics;\n		x_graphics=NULL;\n	}\n}\nvoid XWindow::init()\n{\n	xwidth=500;\n	xheight=400;\n	x_input=new XInput;\n	x_graphics=new XGraphics;\n	\n	//创建窗口\n	initWindows(xwidth,xheight,L&quot;Engine&quot;);\n	//初始化键盘\n	x_input-&gt;init();\n	//初始化渲染\n	x_graphics-&gt;init(xwidth,xheight,m_hwnd);\n\n\n	//消息循环\n	runWindows();\n	//关闭窗口\n	closeWindows();\n}\nbool XWindow::frame()\n{\n	//判断是否按下ESC键\n	if(x_input-&gt;isKeyDown(VK_ESCAPE))\n		return false;\n	//开始渲染\n	return x_graphics-&gt;frame();\n}\nvoid XWindow::initWindows(int&amp; screenWidth, int&amp; screenHeight,LPCWSTR m_applicationName)\n{\n	WNDCLASSEX wc; \n	DEVMODE dmScreenSettings; \n	int posX, posY;\n	this-&gt;m_applicationName=m_applicationName;\n	// 得到应用程序实例句柄 \n	m_hinstance = GetModuleHandle(NULL);\n	appXWindow=this;\n	// 设置窗口类参数. \n	wc.style         = CS_HREDRAW | CS_VREDRAW | CS_OWNDC; \n\n	wc.lpfnWndProc   = WndProc; //指定回调函数 \n	wc.cbClsExtra    = 0; \n	wc.cbWndExtra    = 0; \n	wc.hInstance     = m_hinstance; \n	wc.hIcon         = LoadIcon(NULL, IDI_WINLOGO); \n	wc.hIconSm       = wc.hIcon; \n	wc.hCursor       = LoadCursor(NULL, IDC_ARROW); \n	wc.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH); //默认黑色窗口黑色背景 \n	wc.lpszMenuName  = NULL; \n	wc.lpszClassName = m_applicationName; \n	wc.cbSize        = sizeof(WNDCLASSEX);\n\n	// 注册窗口类 \n	RegisterClassEx(&amp;wc);\n\n	// 根据是否全屏设置不同的分辨率. \n	if(fullScreen) \n	{ \n		// 得到windows桌面分辨率 \n		screenWidth  = GetSystemMetrics(SM_CXSCREEN); \n		screenHeight = GetSystemMetrics(SM_CYSCREEN);\n		//全屏模式下，设置窗口大小为windows桌面分辨率. \n		memset(&amp;dmScreenSettings, 0, sizeof(dmScreenSettings)); \n		dmScreenSettings.dmSize       = sizeof(dmScreenSettings); \n		dmScreenSettings.dmPelsWidth  = (unsigned long)screenWidth; \n		dmScreenSettings.dmPelsHeight = (unsigned long)screenHeight; \n		dmScreenSettings.dmBitsPerPel = 32;            \n		dmScreenSettings.dmFields     = DM_BITSPERPEL | DM_PELSWIDTH | DM_PELSHEIGHT;\n\n		// 临时设置显示设备为全屏模式，注意：应用程序退出时候，将恢复系统默认设置。 \n		ChangeDisplaySettings(&amp;dmScreenSettings, CDS_FULLSCREEN);\n\n		// 设置窗口的左上角坐标位置为(0,0). \n		posX = posY = 0; \n	} \n	else \n	{ \n		// 窗口左上角坐标位置,posX, posY\n		posX = (GetSystemMetrics(SM_CXSCREEN) - screenWidth)  / 2; \n		posY = (GetSystemMetrics(SM_CYSCREEN) - screenHeight) / 2; \n	}\n\n	// 全屏和窗口使用不同的参数. \n	if( fullScreen) \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_CLIPSIBLINGS | WS_CLIPCHILDREN | WS_POPUP, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	} \n	else \n	{ \n		m_hwnd = CreateWindowEx(WS_EX_APPWINDOW, m_applicationName, m_applicationName, \n			WS_OVERLAPPEDWINDOW, \n			posX, posY, screenWidth, screenHeight, NULL, NULL, m_hinstance, NULL); \n	}\n\n	// 显示窗口并设置其为焦点. \n	ShowWindow(m_hwnd, SW_SHOW); \n	SetForegroundWindow(m_hwnd); \n	SetFocus(m_hwnd);\n	// 隐藏鼠标. \n	//ShowCursor(false);\n\n}\n\nvoid XWindow::runWindows()\n{\n	MSG msg; \n	// 初始化消息结构. \n	ZeroMemory(&amp;msg, sizeof(MSG));\n	// 循环进行消息处理\n	while(!Xexit) \n	{ \n		// 处理windows消息. \n		if(PeekMessage(&amp;msg, NULL, 0, 0, PM_REMOVE)) \n		{ \n			TranslateMessage(&amp;msg); \n			DispatchMessage(&amp;msg); \n		}\n		// 接收到WM_QUIT消息，退出程序. \n		if(msg.message == WM_QUIT) \n		{ \n			Xexit=true;\n		} \n		else \n		{ \n			//渲染\n			Xexit=!frame();\n		}\n\n	}\n	return; \n}\nLRESULT CALLBACK WndProc(HWND hwnd, UINT umessage, WPARAM wparam, LPARAM lparam) \n{ \n	switch(umessage) \n	{\n\n		// 窗口销毁消息. \n	case WM_DESTROY: \n	case WM_CLOSE: \n		{ \n			PostQuitMessage(0); \n			return 0; \n		}\n		break;\n		//MessageHandle过程处理其它所有消息. \n	default: \n		{ \n			return appXWindow-&gt;MessageHandler(hwnd, umessage, wparam, lparam); \n		} \n		break;\n	} \n\n}\n\nLRESULT CALLBACK XWindow::MessageHandler(HWND hwnd, UINT umsg, WPARAM wparam, LPARAM lparam) \n{\n\n	switch(umsg) \n	{ \n		// 检测按键消息. \n	case WM_KEYDOWN: \n		x_input-&gt;keyDown(wparam);\n	    break;\n	case WM_KEYUP:\n		x_input-&gt;keyUp(wparam);\n		break;\n		//任何其它消息发送到windows缺省处理. \n	default: \n		{ \n			return DefWindowProc(hwnd, umsg, wparam, lparam); \n		} \n	} \n	return 0;\n}\nvoid XWindow::closeWindows()\n{\n	//显示光标. \n	//ShowCursor(true);\n	// 恢复默认显示设置. \n	if(fullScreen) \n	{ \n		ChangeDisplaySettings(NULL, 0); \n	}\n	//释放窗口句柄. \n	DestroyWindow(m_hwnd); \n	m_hwnd = NULL;\n	// 释放应用程序实例. \n	UnregisterClass(m_applicationName, m_hinstance); \n	m_hinstance = NULL;\n	appXWindow=NULL;\n	return; \n}</pre><br>\r\nXInput.h\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_3_7260482\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_3_7260482\" name=\"code\" class=\"cpp\">#pragma once\nclass XInput\n{\npublic:\n	void init();\n	void keyDown(unsigned int);\n	void keyUp(unsigned int);\n	bool isKeyDown(unsigned int);\nprivate:\n	bool x_keys[256];\n\n};\nvoid XInput::init()\n{\n	int i;\n\n	// 初始所有的键都是非按下状态. \n	for(i=0; i&lt;256; i++) \n	{ \n		x_keys[i] = false; \n	}\n\n	return; \n}\nvoid XInput::keyDown(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = true; \n	return; \n}\nvoid XInput::keyUp(unsigned int input) \n{ \n	//键被按下. \n	x_keys[input] = false; \n	return; \n}\nbool XInput::isKeyDown(unsigned int key) \n{ \n	// 判断键是否被按下？ \n	return x_keys[key]; \n}\n</pre><br>\r\nXMain.cpp\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_4_7369166\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_4_7369166\" name=\"code\" class=\"cpp\">#include &quot;XWindow.h&quot;\n//入口\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR pScmdline, int iCmdshow) \n{\n\n	XWindow *xwindow=new XWindow;\n	xwindow-&gt;init(); //初始化\n	xwindow-&gt;close();\n	delete xwindow;\n	return 0; \n}\n</pre><br>\r\nXD3Device.h\r\n<p></p>\r\n<p><br>\r\n</p>\r\n<p></p>\r\n<pre code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_5_7718613\"  code_snippet_id=\"479413\" snippet_file_name=\"blog_20141004_5_7718613\" name=\"code\" class=\"cpp\">&lt;/pre&gt;&lt;pre name=&quot;code&quot; class=&quot;cpp&quot;&gt;#pragma once\n#pragma comment(lib, &quot;dxgi.lib&quot;)\n#pragma comment(lib, &quot;d3d11.lib&quot;)\n#pragma comment(lib, &quot;d3dx11.lib&quot;)\n#pragma comment(lib, &quot;d3dx10.lib&quot;)\n#include &lt;dxgi.h&gt;\n#include &lt;d3dcommon.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx10math.h&gt;\n#include &lt;xnamath.h&gt;\nclass XD3Device\n{\npublic:\n	XD3Device();\n	//3D设备所有初始化\n	bool init(int, int, bool, HWND, bool, float, float);\n	//关闭设备\n	void close();\n	//开始渲染设备\n	void begin(float, float, float, float);\n	//显示到前景\n	void end();\n\npublic:\n	bool m_vsync_enabled; //是否启用垂直同步\n	IDXGISwapChain* m_swapChain; //交换链对象\n	ID3D11Device* m_device;  //设备对象\n	ID3D11DeviceContext* m_deviceContext; //设备上下文对象\n	ID3D11RenderTargetView* m_renderTargetView; //渲染目标视图\n	ID3D11Texture2D* m_depthStencilBuffer; //深度模板缓冲\n	ID3D11DepthStencilState* m_depthStencilState; //深度磨成状态\n	ID3D11DepthStencilView* m_depthStencilView; //深度目标视图\n	ID3D11RasterizerState* m_rasterState; //光栅化状态\n	D3DXMATRIX m_projectionMatrix; //投影矩阵\n	D3DXMATRIX m_worldMatrix;//世界坐标系矩阵\n	D3DXMATRIX m_orthoMatrix;//正交投影矩阵\n};\nvoid XD3Device::begin(float red, float green, float blue, float alpha)\n{\n	float color[]={red,green,blue,alpha};\n	//清除后缓冲.\n	m_deviceContext-&gt;ClearRenderTargetView(m_renderTargetView, color);\n\n	//清除深度缓冲.\n	m_deviceContext-&gt;ClearDepthStencilView(m_depthStencilView, D3D11_CLEAR_DEPTH, 1.0f, 0);\n\n}\nvoid XD3Device::end()\n{\n	//渲染完成后，把后缓冲内容present到前缓冲\n	if(m_vsync_enabled)\n	{\n		// 锁定屏幕刷新率.\n		m_swapChain-&gt;Present(1, 0);\n	}\n	else\n	{\n		// 尽可能快的present后缓冲.\n		m_swapChain-&gt;Present(0, 0);\n	}\n\n}\nvoid XD3Device::close()\n{\n	// 释放交换链资源前，先设置为窗口模式，否则可能会产生异常.\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;SetFullscreenState(false, NULL);\n	}\n\n	if(m_rasterState)\n	{\n		m_rasterState-&gt;Release();\n		m_rasterState = 0;\n	}\n\n	if(m_depthStencilView)\n	{\n		m_depthStencilView-&gt;Release();\n		m_depthStencilView = 0;\n	}\n\n	if(m_depthStencilState)\n	{\n		m_depthStencilState-&gt;Release();\n		m_depthStencilState = 0;\n	}\n\n	if(m_depthStencilBuffer)\n	{\n		m_depthStencilBuffer-&gt;Release();\n		m_depthStencilBuffer = 0;\n	}\n\n	if(m_renderTargetView)\n	{\n		m_renderTargetView-&gt;Release();\n		m_renderTargetView = 0;\n	}\n\n	if(m_deviceContext)\n	{\n		m_deviceContext-&gt;Release();\n		m_deviceContext = 0;\n	}\n\n	if(m_device)\n	{\n		m_device-&gt;Release();\n		m_device = 0;\n	}\n\n	if(m_swapChain)\n	{\n		m_swapChain-&gt;Release();\n		m_swapChain = 0;\n	}\n\n}\nXD3Device::XD3Device()\n{\n	m_swapChain = 0;\n	m_device = 0;\n	m_deviceContext = 0;\n	m_renderTargetView = 0;\n	m_depthStencilBuffer = 0;\n	m_depthStencilState = 0;\n	m_depthStencilView = 0;\n	m_rasterState = 0;\n}\n//Initialize函数包含完成D3D设置的所有代码。\nbool XD3Device::init(int screenWidth, int screenHeight, bool vsync, HWND hwnd, bool fullscreen, \n						  float screenDepth, float screenNear)\n{\n	HRESULT result;\n	IDXGIFactory* factory;\n	IDXGIAdapter* adapter;\n	IDXGIOutput* adapterOutput;\n	unsigned int numModes, i, stringLength;\n	DXGI_MODE_DESC* displayModeList;\n	DXGI_ADAPTER_DESC adapterDesc;\n	int error;\n	DXGI_SWAP_CHAIN_DESC swapChainDesc;\n	D3D_FEATURE_LEVEL featureLevel;\n	ID3D11Texture2D* backBufferPtr;\n	D3D11_TEXTURE2D_DESC depthBufferDesc;\n	D3D11_DEPTH_STENCIL_DESC depthStencilDesc;\n	D3D11_DEPTH_STENCIL_VIEW_DESC depthStencilViewDesc;\n	D3D11_RASTERIZER_DESC rasterDesc;\n	D3D11_VIEWPORT viewport;\n	float fieldOfView, screenAspect;\n\n\n	// 保存垂直同步设置\n	m_vsync_enabled = vsync;\n\n	// 初始化交换链描述\n	ZeroMemory(&amp;swapChainDesc, sizeof(swapChainDesc));\n	//MessageBox(hwnd, L&quot;Could 2&quot;, L&quot;Error&quot;, MB_OK); \n	// 用1个后缓冲\n	swapChainDesc.BufferCount = 1;\n\n	//帧缓冲的大小和应用程序窗口大小相等.\n	swapChainDesc.BufferDesc.Width = screenWidth;\n	swapChainDesc.BufferDesc.Height = screenHeight;\n\n	// 后缓冲的surface的格式为DXGI_FORMAT_R8G8B8A8_UNORM.\n	// surface的每个像素用4个无符号的8bit[映射到0-1]来表示。NORM表示归一化。\n	swapChainDesc.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n\n	// 如果使用垂直同步，设置后缓冲的刷新率。.\n	//刷新率就是一秒钟把后缓冲内容在屏幕上画出的次数。\n	//如果开启垂直同步，则锁定刷新率，则fps是固定的\n	if(m_vsync_enabled)\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 60;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n	else\n	{\n		swapChainDesc.BufferDesc.RefreshRate.Numerator = 0;\n		swapChainDesc.BufferDesc.RefreshRate.Denominator = 1;\n	}\n\n	// 设置后缓冲的用途\n	// 我们的渲染目标缓冲为后缓冲。\n	swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n\n	// 后缓冲输出的窗口句柄.\n	swapChainDesc.OutputWindow = hwnd;\n\n	// 不使用多重采样\n	swapChainDesc.SampleDesc.Count = 1;\n	swapChainDesc.SampleDesc.Quality = 0;\n\n	// 设置全屏或者窗口模式.\n	if(fullscreen)\n	{\n		swapChainDesc.Windowed = false;\n	}\n	else\n	{\n		swapChainDesc.Windowed = true;\n	}\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	// 设定扫描线ordering以及缩放为unspecified.\n	swapChainDesc.BufferDesc.ScanlineOrdering = DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED;\n	swapChainDesc.BufferDesc.Scaling = DXGI_MODE_SCALING_UNSPECIFIED;\n\n	// 后缓冲内容呈现到屏幕后，放弃其内容\n	swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_DISCARD;\n\n	//不设置标志\n	swapChainDesc.Flags = 0;\n\n	// 设置feature level为D3D11\n	// 如果显卡不支持D3D11,我们能够通过设置这个参数，使用D3D10,或者9.\n	//featureLevel = D3D_FEATURE_LEVEL_10_1;\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n	// 创建交换链，设备以及设备上下文.\n	result = D3D11CreateDeviceAndSwapChain(NULL, D3D_DRIVER_TYPE_HARDWARE, NULL, 0, featureLevels, numFeatureLevels, \n		D3D11_SDK_VERSION, &amp;swapChainDesc, &amp;m_swapChain, &amp;m_device, NULL, &amp;m_deviceContext);\n	//MessageBox(hwnd, L&quot;Could 1&quot;, L&quot;Error&quot;, MB_OK); \n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 得到交换链中的后缓冲指针.\n	result = m_swapChain-&gt;GetBuffer(0, __uuidof(ID3D11Texture2D), (LPVOID*)&amp;backBufferPtr);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 用后缓冲创建渲染目标视图.\n	result = m_device-&gt;CreateRenderTargetView(backBufferPtr, NULL, &amp;m_renderTargetView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//释放后缓冲.(引用计数减1)\n	backBufferPtr-&gt;Release();\n	backBufferPtr = 0;\n\n	// 初始化深度缓冲描述.\n	ZeroMemory(&amp;depthBufferDesc, sizeof(depthBufferDesc));\n\n	//设置深度缓冲描述\n	depthBufferDesc.Width = screenWidth;\n	depthBufferDesc.Height = screenHeight;\n	depthBufferDesc.MipLevels = 1;//对于深度缓冲为1\n	depthBufferDesc.ArraySize = 1;//对于深度缓冲为1，对于纹理，这2个参数有更多用途\n	depthBufferDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthBufferDesc.SampleDesc.Count = 1;\n	depthBufferDesc.SampleDesc.Quality = 0;\n	depthBufferDesc.Usage = D3D11_USAGE_DEFAULT;\n	depthBufferDesc.BindFlags = D3D11_BIND_DEPTH_STENCIL;\n	depthBufferDesc.CPUAccessFlags = 0;\n	depthBufferDesc.MiscFlags = 0;\n\n	// 创建深度缓冲.\n	result = m_device-&gt;CreateTexture2D(&amp;depthBufferDesc, NULL, &amp;m_depthStencilBuffer);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 初始化深度模版状态描述.\n	ZeroMemory(&amp;depthStencilDesc, sizeof(depthStencilDesc));\n\n	// 设置深度模版状态描述.\n	depthStencilDesc.DepthEnable = true;\n	depthStencilDesc.DepthWriteMask = D3D11_DEPTH_WRITE_MASK_ALL;//D3D11_DEPTH_WRITE_MASK_ZERO禁止写深度缓冲\n	depthStencilDesc.DepthFunc = D3D11_COMPARISON_LESS;\n\n	depthStencilDesc.StencilEnable = true;\n	depthStencilDesc.StencilReadMask = 0xFF;\n	depthStencilDesc.StencilWriteMask = 0xFF;\n\n	// 对于front face 像素使用的模版操作操作.\n	depthStencilDesc.FrontFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilDepthFailOp = D3D11_STENCIL_OP_INCR;\n	depthStencilDesc.FrontFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.FrontFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 对于back face像素使用的模版操作模式.\n	depthStencilDesc.BackFace.StencilFailOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilDepthFailOp = D3D11_STENCIL_OP_DECR;\n	depthStencilDesc.BackFace.StencilPassOp = D3D11_STENCIL_OP_KEEP;\n	depthStencilDesc.BackFace.StencilFunc = D3D11_COMPARISON_ALWAYS;\n\n	// 创建深度模版状态，使其生效\n	result = m_device-&gt;CreateDepthStencilState(&amp;depthStencilDesc, &amp;m_depthStencilState);\n	if(FAILED(result))\n	{\n		return false;\n\n	}\n\n	// 设置深度模版状态.\n	m_deviceContext-&gt;OMSetDepthStencilState(m_depthStencilState, 1);\n\n	// 初始化深度模版视图.\n	ZeroMemory(&amp;depthStencilViewDesc, sizeof(depthStencilViewDesc));\n\n	// 设置深度模版视图描述.\n	depthStencilViewDesc.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	depthStencilViewDesc.ViewDimension = D3D11_DSV_DIMENSION_TEXTURE2D;\n	depthStencilViewDesc.Texture2D.MipSlice = 0;\n\n	// 创建深度模版视图.\n	result = m_device-&gt;CreateDepthStencilView(m_depthStencilBuffer, &amp;depthStencilViewDesc, &amp;m_depthStencilView);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	// 绑定渲染目标视图和深度缓冲到渲染管线.\n	m_deviceContext-&gt;OMSetRenderTargets(1, &amp;m_renderTargetView, m_depthStencilView);\n\n\n	// 设置光栅化描述，指定多边形如何被渲染.\n	rasterDesc.AntialiasedLineEnable = false;\n	rasterDesc.CullMode = D3D11_CULL_BACK;\n	rasterDesc.DepthBias = 0;\n	rasterDesc.DepthBiasClamp = 0.0f;\n	rasterDesc.DepthClipEnable = true;\n	rasterDesc.FillMode = D3D11_FILL_SOLID;\n	rasterDesc.FrontCounterClockwise = false;\n	rasterDesc.MultisampleEnable = false;\n	rasterDesc.ScissorEnable = false;\n	rasterDesc.SlopeScaledDepthBias = 0.0f;\n\n	// 创建光栅化状态\n	result = m_device-&gt;CreateRasterizerState(&amp;rasterDesc, &amp;m_rasterState);\n	if(FAILED(result))\n	{\n		return false;\n	}\n\n	//设置光栅化状态，使其生效\n	m_deviceContext-&gt;RSSetState(m_rasterState);\n\n\n	// 设置视口，显示全部后缓冲内容\n	viewport.Width = (float)screenWidth;\n	viewport.Height = (float)screenHeight;\n	viewport.MinDepth = 0.0f;\n	viewport.MaxDepth = 1.0f;\n	viewport.TopLeftX = 0.0f;\n	viewport.TopLeftY = 0.0f;\n\n	// 创建视口\n	m_deviceContext-&gt;RSSetViewports(1, &amp;viewport);\n\n	// 设置透视投影矩阵\n	fieldOfView = (float)D3DX_PI / 4.0f;\n	screenAspect = (float)screenWidth / (float)screenHeight;\n\n	// 创建透视投影矩阵.\n	D3DXMatrixPerspectiveFovLH(&amp;m_projectionMatrix, fieldOfView, screenAspect, screenNear, screenDepth);\n\n	//初始化world矩阵为单位矩阵.\n	//该矩阵实现局部坐标到世界坐标的转换\n	D3DXMatrixIdentity(&amp;m_worldMatrix);\n\n\n	// 创建正交投影矩阵，主要用来实施2D渲染.\n	D3DXMatrixOrthoLH(&amp;m_orthoMatrix, (float)screenWidth, (float)screenHeight, screenNear, screenDepth);\n\n	return true;\n\n\n}\n</pre><br>\r\n<br>\r\n<br>\r\n<p></p>\r\n',1,'directx11,c++,图形,visual studio 2008',0,0,'2015-02-02 00:45:36','2015-02-02 00:45:36','2015-02-02 00:45:36'),(35,1,7,'DirectX11 学习笔记3 - 创建一个立方体 和 坐标轴','7632f699733cb14bb17611aef1383596',0,'\r\n\r\n<p>这个程序再进一步的将上一个程序 面向对象化。 把模型类独立出来。更加像一个框架。</p>\r\n<p>在此中遇到了一个很逗比的问题，弄了一晚上，看','\r\n\r\n<p>这个程序再进一步的将上一个程序 面向对象化。 把模型类独立出来。更加像一个框架。</p>\r\n<p>在此中遇到了一个很逗比的问题，弄了一晚上，看了好几遍其他列子才找到。就是有些函数一定要放在Render里面实时更新，而不是只放到初始化InitModel里面</p>\r\n<p>因为当要渲染多个物体的时候，缓冲区的内容是要随设备变化的。 话不多说直接上代码</p>\r\n<p><br>\r\n</p>\r\n<p>主程序main</p>\r\n<p><pre name=\"code\" class=\"cpp\">#include &quot;D3DBase.h&quot;\n#include &quot;Axis.h&quot;\n#include &quot;Cube.h&quot;\nclass D3DProgam:public D3DBase\n{\npublic:\n	virtual void Render();      //渲染\n	virtual HRESULT InitModel();//模型\n	virtual void CleanupDevice();//清理\npublic:\n	AxisModel *axisModel;\n	CubeModel *cubeModel;\n};\n//实例化程序\nD3DProgam d3d;\nHRESULT D3DProgam::InitModel()\n{\n	\n	//init CubeModel\n	cubeModel=new CubeModel;\n	cubeModel-&gt;InitModel();\n	//init AxisModel\n	axisModel=new AxisModel;\n	axisModel-&gt;InitModel();\n	\n	return S_OK;\n}\n\n\n\n//渲染\nvoid D3DProgam::Render()\n{\n	//设置摄像机转动\n	setCamera();\n	//清除背景\n	float ClearColor[4] = { 0.0f, 0.125f, 0.3f, 1.0f }; // red,green,blue,alpha\n	g_pImmediateContext-&gt;ClearRenderTargetView( g_pRenderTargetView, ClearColor );\n	g_pImmediateContext-&gt;ClearDepthStencilView( g_pDepthStencilView, D3D11_CLEAR_DEPTH, 1.0f, 0 );\n	//渲染模型\n	cubeModel-&gt;Render();\n	axisModel-&gt;Render();\n	//刷新背景缓冲到前景\n	g_pSwapChain-&gt;Present( 0, 0 );\n}\nvoid D3DProgam::CleanupDevice()\n{\n	D3DBase::CleanupDevice();//先调用父类的清理\n	axisModel-&gt;CleanupDevice();\n	cubeModel-&gt;CleanupDevice();\n\n}\n//程序开始\nint WINAPI wWinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow )\n{\n	return D3DBase::BeginD3D(d3d,hInstance,hPrevInstance,lpCmdLine,nCmdShow);\n}</pre><br>\r\n实现逻辑的程序尽可能精简和面向对象化了，其中 坐标轴和立方体为两个对象，我分别用2个类来表示</p>\r\n<p><pre name=\"code\" class=\"cpp\">class CubeModel\n{\npublic:\n	HRESULT InitModel();\n	void Render();\n	void CleanupDevice();//清理\npublic:\n	ID3D11Buffer*           g_pVertexBuffer;    //顶点缓冲\n	ID3D11Buffer*           g_pIndexBuffer;     //顶点索引\n\n};\nvoid CubeModel::CleanupDevice()\n{\n	if( g_pVertexBuffer ) g_pVertexBuffer-&gt;Release();\n	if( g_pIndexBuffer ) g_pIndexBuffer-&gt;Release();\n}\nvoid CubeModel::Render()\n{\n	// 绑定到管线\n	UINT stride = sizeof( SimpleVertex );\n	UINT offset = 0;\n	g_pImmediateContext-&gt;IASetVertexBuffers( 0, 1, &amp;g_pVertexBuffer, &amp;stride, &amp;offset );\n	g_pImmediateContext-&gt;IASetIndexBuffer( g_pIndexBuffer, DXGI_FORMAT_R16_UINT, 0 );\n	g_pImmediateContext-&gt;IASetPrimitiveTopology( D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST );\n	//更新常量缓冲区\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( g_World );\n	cb.mView = XMMatrixTranspose( g_View );\n	cb.mProjection = XMMatrixTranspose( g_Projection );\n	g_pImmediateContext-&gt;UpdateSubresource( g_pConstantBuffer, 0, NULL, &amp;cb, 0, 0 );\n	//渲染\n	g_pImmediateContext-&gt;VSSetShader( g_pVertexShader, NULL, 0 );\n	g_pImmediateContext-&gt;VSSetConstantBuffers( 0, 1, &amp;g_pConstantBuffer );\n	g_pImmediateContext-&gt;PSSetShader( g_pPixelShader, NULL, 0 );\n	g_pImmediateContext-&gt;DrawIndexed( 36, 0, 0 );        // 36 vertices needed for 12 triangles in a triangle list\n}\nHRESULT CubeModel::InitModel()\n{\n	HRESULT hr = S_OK;\n	// Create vertex buffer\n	SimpleVertex vertices[] =\n	{\n		{ XMFLOAT3( -1.0f, 1.0f, -1.0f ),WHITE },\n		{ XMFLOAT3( 1.0f, 1.0f, -1.0f ), XMFLOAT4( 0.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, 1.0f, 1.0f ), XMFLOAT4( 0.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, 1.0f, 1.0f ), XMFLOAT4( 1.0f, 0.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 0.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, 1.0f ), XMFLOAT4( 1.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, 1.0f ), XMFLOAT4( 0.0f, 0.0f, 0.0f, 1.0f ) },\n	};\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( SimpleVertex ) * 8;\n	bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	D3D11_SUBRESOURCE_DATA InitData;\n	ZeroMemory( &amp;InitData, sizeof(InitData) );\n	InitData.pSysMem = vertices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pVertexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	\n\n	// Create index buffer\n	WORD indices[] =\n	{\n		3,1,0,\n		2,1,3,\n\n		0,5,4,\n		1,5,0,\n\n		3,4,7,\n		0,4,3,\n\n		1,6,5,\n		2,6,1,\n\n		2,7,6,\n		3,7,2,\n\n		6,4,5,\n		7,4,6,\n	};\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( WORD ) * 36;        // 36 vertices needed for 12 triangles in a triangle list\n	bd.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	InitData.pSysMem = indices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pIndexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// 创建常量缓冲区\n\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	g_pd3dDevice-&gt;CreateBuffer( &amp;bd, NULL, &amp;g_pConstantBuffer );\n\n	return S_OK;\n	\n}</pre><br>\r\n<pre name=\"code\" class=\"cpp\">class AxisModel\n{\npublic:\n	HRESULT InitModel();\n	void Render();\n	void CleanupDevice();//清理\npublic:\n	ID3D11Buffer*           g_pVertexBuffer;    //顶点缓冲\n	ID3D11Buffer*           g_pIndexBuffer;     //顶点索引\n	\n};\nvoid AxisModel::CleanupDevice()\n{\n	if( g_pVertexBuffer ) g_pVertexBuffer-&gt;Release();\n	if( g_pIndexBuffer ) g_pIndexBuffer-&gt;Release();\n}\nvoid AxisModel::Render()\n{\n	//绑定渲染管线\n	UINT stride = sizeof( SimpleVertex );\n	UINT offset = 0;\n	g_pImmediateContext-&gt;IASetVertexBuffers( 0, 1, &amp;g_pVertexBuffer, &amp;stride, &amp;offset );\n	g_pImmediateContext-&gt;IASetIndexBuffer( g_pIndexBuffer, DXGI_FORMAT_R16_UINT, 0 );\n	g_pImmediateContext-&gt;IASetPrimitiveTopology( D3D11_PRIMITIVE_TOPOLOGY_LINELIST );\n	//常量缓冲区\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( g_World );\n	cb.mView = XMMatrixTranspose( g_View );\n	cb.mProjection = XMMatrixTranspose( g_Projection );\n	g_pImmediateContext-&gt;UpdateSubresource( g_pConstantBuffer, 0, NULL, &amp;cb, 0, 0 );\n	//渲染绘制\n	g_pImmediateContext-&gt;VSSetShader( g_pVertexShader, NULL, 0 );\n	g_pImmediateContext-&gt;VSSetConstantBuffers( 0, 1, &amp;g_pConstantBuffer );\n	g_pImmediateContext-&gt;PSSetShader( g_pPixelShader, NULL, 0 );\n	g_pImmediateContext-&gt;DrawIndexed( 6, 0, 0 );        // 36 vertices needed for 12 triangles in a triangle list\n}\nHRESULT AxisModel::InitModel()\n{\n	HRESULT hr = S_OK;\n	//定义顶点缓冲\n	SimpleVertex vertices[] =\n	{\n		{ XMFLOAT3( 0.0f, 0.0f, 0.0f),RED }, //x轴\n		{ XMFLOAT3( 10.0f, 0.0f, 0.0f ),RED },\n		{ XMFLOAT3( 0.0f, 0.0f, 0.0f ), GREEN },//y轴\n		{ XMFLOAT3( 0.0f, 10.0f, 0.0f ), GREEN },\n		{ XMFLOAT3( 0.0f, 0.0f, 0.0f ), BLUE },//z轴\n		{ XMFLOAT3( 0.0f, 0.0f, 10.0f ),BLUE },\n	};\n	//创建顶点缓冲区\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( SimpleVertex ) * 6;\n	bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	D3D11_SUBRESOURCE_DATA InitData;\n	ZeroMemory( &amp;InitData, sizeof(InitData) );\n	InitData.pSysMem = vertices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pVertexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n\n	//定义索引缓冲\n	WORD indices[] =\n	{\n		0,1,2,3,4,5\n	};\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( WORD ) * 6;        // 36 vertices needed for 12 triangles in a triangle list\n	bd.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	InitData.pSysMem = indices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pIndexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n	// 创建常量缓冲区\n\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	g_pd3dDevice-&gt;CreateBuffer( &amp;bd, NULL, &amp;g_pConstantBuffer );\n	\n\n	\n	return S_OK;\n}</pre><br>\r\n细心地就会发现上面两个模型类是一摸一样的结构，其实还可以定义一个模型基类，使他们都继承。这样就更加面向对象化了</p>\r\n<p>两个类的作用具体在注释里面已经有了</p>\r\n<p>1： 定义顶点缓冲 &nbsp;</p>\r\n<p>2：定义索引缓冲</p>\r\n<p>3：定义常量缓冲 (作用是存储世界矩阵，观察矩阵，投影矩阵) 因为后面这个矩阵是随渲染时间的变换而变换的，因此后面会在Render里面再实时更新</p>\r\n<p>4: &nbsp;Render 渲染&nbsp;</p>\r\n<p>这里就是之前我出过的一次错误，渲染的时候记得 要将顶点缓冲区，索引缓冲区告诉设备，绑定到设备，而且是实时的，然后常量缓冲区也要告诉着色器</p>\r\n<p>然后就是绘制。</p>\r\n<p>最后一个文件就是基类。这个是一堆初始化设备，windows窗口的函数，变动几乎没有</p>\r\n<p><pre name=\"code\" class=\"cpp\">#include &lt;windows.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;xnamath.h&gt;\n#include &quot;resource.h&quot;\n\n//--------------------------------------------------------------------------------------\n// Global Variables\n//--------------------------------------------------------------------------------------\nHINSTANCE               g_hInst = NULL;\nHWND                    g_hWnd = NULL;\nD3D_DRIVER_TYPE         g_driverType = D3D_DRIVER_TYPE_NULL;\nD3D_FEATURE_LEVEL       g_featureLevel = D3D_FEATURE_LEVEL_11_0;\nID3D11Device*           g_pd3dDevice = NULL;\nID3D11Texture2D*        g_pDepthStencil = NULL;\nID3D11DepthStencilView* g_pDepthStencilView = NULL;\nID3D11DeviceContext*    g_pImmediateContext = NULL;\nIDXGISwapChain*         g_pSwapChain = NULL;\nID3D11RenderTargetView* g_pRenderTargetView = NULL;\nID3D11VertexShader*     g_pVertexShader = NULL;\nID3D11PixelShader*      g_pPixelShader = NULL;\nID3D11InputLayout*      g_pVertexLayout = NULL;\nID3D11Buffer*           g_pConstantBuffer = NULL;  //转换矩阵缓冲\n//转换矩阵\nXMMATRIX                g_World;\nXMMATRIX                g_View;\nXMMATRIX                g_Projection;\nconst XMFLOAT4 WHITE(1.0f, 1.0f, 1.0f, 1.0f); \nconst XMFLOAT4 BLACK(0.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 RED(1.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 GREEN(0.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 BLUE(0.0f, 0.0f, 1.0f, 1.0f); \nconst XMFLOAT4 YELLOW(1.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 CYAN(0.0f, 1.0f, 1.0f, 1.0f); //蓝绿色 \nconst XMFLOAT4 MAGENTA(1.0f, 0.0f, 1.0f, 1.0f); //洋红色\n\nconst XMFLOAT4 BEACH_SAND(1.0f, 0.96f, 0.62f, 1.0f); \nconst XMFLOAT4 LIGHT_YELLOW_GREEN(0.48f, 0.77f, 0.46f, 1.0f); \nconst XMFLOAT4 DARK_YELLOW_GREEN(0.1f, 0.48f, 0.19f, 1.0f); \nconst XMFLOAT4 DARKBROWN(0.45f, 0.39f, 0.34f, 1.0f);\n//--------------------------------------------------------------------------------------\n// Structures\n//--------------------------------------------------------------------------------------\nstruct SimpleVertex\n{\n	XMFLOAT3 Pos;//位置\n	XMFLOAT4 Color;//颜色\n};\nstruct ConstantBuffer\n{\n	XMMATRIX mWorld;//世界矩阵\n	XMMATRIX mView;//观察矩阵\n	XMMATRIX mProjection;//投影矩阵\n};\nclass D3DBase\n{\npublic:\n	//--------------------------------------------------------------------------------------\n	// Forward declarations\n	//--------------------------------------------------------------------------------------\n	D3DBase():vX(0),vY(0),vZ(0),rX(0),rY(0),rZ(0){};\n	HRESULT InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h );\n	virtual HRESULT InitDevice();\n	virtual void Render()=0;\n	virtual HRESULT InitModel()=0;\n	virtual HRESULT VS_Shader();\n	virtual HRESULT InputLayout();\n	virtual HRESULT PS_Shader();\n	virtual void setCamera();\n	static int BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow);\n	virtual void CleanupDevice();\n	virtual HRESULT CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut );\npublic:\n	ID3DBlob* pVSBlob,*pPSBlob;\n	UINT width;\n	UINT height;\n	float vX,vY,vZ;// 观察矩阵 Eye的坐标\n	float rX,rY,rZ;// 旋转的角度\n};\nLRESULT CALLBACK   WndProc( HWND, UINT, WPARAM, LPARAM );\n\n//--------------------------------------------------------------------------------------\n// Register class and create window\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h )\n{\n	// Register class\n	WNDCLASSEX wcex;\n	wcex.cbSize = sizeof( WNDCLASSEX );\n	wcex.style = CS_HREDRAW | CS_VREDRAW;\n	wcex.lpfnWndProc = WndProc;\n	wcex.cbClsExtra = 0;\n	wcex.cbWndExtra = 0;\n	wcex.hInstance = hInstance;\n	wcex.hIcon = LoadIcon( hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	wcex.hCursor = LoadCursor( NULL, IDC_ARROW );\n	wcex.hbrBackground = ( HBRUSH )( COLOR_WINDOW + 1 );\n	wcex.lpszMenuName = NULL;\n	wcex.lpszClassName = L&quot;TutorialWindowClass&quot;;\n	wcex.hIconSm = LoadIcon( wcex.hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	if( !RegisterClassEx( &amp;wcex ) )\n		return E_FAIL;\n\n	// Create window\n	g_hInst = hInstance;\n	RECT rc = { 0, 0, w, h };\n	AdjustWindowRect( &amp;rc, WS_OVERLAPPEDWINDOW, FALSE );\n	g_hWnd = CreateWindow( L&quot;TutorialWindowClass&quot;, L&quot;Direct3D 11 Tutorial 3: Shaders&quot;,\n		WS_OVERLAPPEDWINDOW,\n		CW_USEDEFAULT, CW_USEDEFAULT, rc.right - rc.left, rc.bottom - rc.top, NULL, NULL, hInstance,\n		NULL );\n	if( !g_hWnd )\n		return E_FAIL;\n\n	ShowWindow( g_hWnd, nCmdShow );\n\n	return S_OK;\n}\n\n\n\n//--------------------------------------------------------------------------------------\n// Create Direct3D device and swap chain\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitDevice()\n{\n	HRESULT hr = S_OK;\n\n	RECT rc;\n	GetClientRect( g_hWnd, &amp;rc );\n	width = rc.right - rc.left;\n	height = rc.bottom - rc.top;\n\n	UINT createDeviceFlags = 0;\n#ifdef _DEBUG\n	createDeviceFlags |= D3D11_CREATE_DEVICE_DEBUG;\n#endif\n\n	D3D_DRIVER_TYPE driverTypes[] =\n	{\n		D3D_DRIVER_TYPE_HARDWARE,\n		D3D_DRIVER_TYPE_WARP,\n		D3D_DRIVER_TYPE_REFERENCE,\n	};\n	UINT numDriverTypes = ARRAYSIZE( driverTypes );\n\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n\n	//交换链定义\n	DXGI_SWAP_CHAIN_DESC sd;\n	ZeroMemory( &amp;sd, sizeof( sd ) );\n	sd.BufferCount = 1;\n	sd.BufferDesc.Width = width;\n	sd.BufferDesc.Height = height;\n	sd.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n	sd.BufferDesc.RefreshRate.Numerator = 60;\n	sd.BufferDesc.RefreshRate.Denominator = 1;\n	sd.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n	sd.OutputWindow = g_hWnd;\n	sd.SampleDesc.Count = 1;\n	sd.SampleDesc.Quality = 0;\n	sd.Windowed = TRUE;\n\n	for( UINT driverTypeIndex = 0; driverTypeIndex &lt; numDriverTypes; driverTypeIndex++ )\n	{\n		g_driverType = driverTypes[driverTypeIndex];\n		hr = D3D11CreateDeviceAndSwapChain( NULL, g_driverType, NULL, createDeviceFlags, featureLevels, numFeatureLevels,\n			D3D11_SDK_VERSION, &amp;sd, &amp;g_pSwapChain, &amp;g_pd3dDevice, &amp;g_featureLevel, &amp;g_pImmediateContext );\n		if( SUCCEEDED( hr ) )\n			break;\n	}\n	if( FAILED( hr ) )\n		return hr;\n\n	// 创建渲染目标视图\n	ID3D11Texture2D* pBackBuffer = NULL;\n	hr = g_pSwapChain-&gt;GetBuffer( 0, __uuidof( ID3D11Texture2D ), ( LPVOID* )&amp;pBackBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	hr = g_pd3dDevice-&gt;CreateRenderTargetView( pBackBuffer, NULL, &amp;g_pRenderTargetView );\n	pBackBuffer-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n	//定义深度缓冲\n	D3D11_TEXTURE2D_DESC descDepth;\n	ZeroMemory( &amp;descDepth, sizeof(descDepth) );\n	descDepth.Width = width;\n	descDepth.Height = height;\n	descDepth.MipLevels = 1;\n	descDepth.ArraySize = 1;\n	descDepth.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	descDepth.SampleDesc.Count = 1;\n	descDepth.SampleDesc.Quality = 0;\n	descDepth.Usage = D3D11_USAGE_DEFAULT;\n	descDepth.BindFlags = D3D11_BIND_DEPTH_STENCIL;\n	descDepth.CPUAccessFlags = 0;\n	descDepth.MiscFlags = 0;\n	hr = g_pd3dDevice-&gt;CreateTexture2D( &amp;descDepth, NULL, &amp;g_pDepthStencil );\n	if( FAILED( hr ) )\n		return hr;\n\n	//创建深度缓冲视图\n	D3D11_DEPTH_STENCIL_VIEW_DESC descDSV;\n	ZeroMemory( &amp;descDSV, sizeof(descDSV) );\n	descDSV.Format = descDepth.Format;\n	descDSV.ViewDimension = D3D11_DSV_DIMENSION_TEXTURE2D;\n	descDSV.Texture2D.MipSlice = 0;\n	hr = g_pd3dDevice-&gt;CreateDepthStencilView( g_pDepthStencil, &amp;descDSV, &amp;g_pDepthStencilView );\n	if( FAILED( hr ) )\n		return hr;\n\n	g_pImmediateContext-&gt;OMSetRenderTargets( 1, &amp;g_pRenderTargetView, g_pDepthStencilView );\n\n	//设置视口\n	D3D11_VIEWPORT vp;\n	vp.Width = (FLOAT)width;\n	vp.Height = (FLOAT)height;\n	vp.MinDepth = 0.0f;\n	vp.MaxDepth = 1.0f;\n	vp.TopLeftX = 0;\n	vp.TopLeftY = 0;\n	g_pImmediateContext-&gt;RSSetViewports( 1, &amp;vp );\n\n	return S_OK;\n}\nHRESULT D3DBase::PS_Shader()\n{\n	// Compile the pixel shader\n	HRESULT hr=S_OK;\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;PS&quot;, &quot;ps_4_0&quot;, &amp;pPSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the pixel shader\n	hr = g_pd3dDevice-&gt;CreatePixelShader( pPSBlob-&gt;GetBufferPointer(), pPSBlob-&gt;GetBufferSize(), NULL, &amp;g_pPixelShader );\n	pPSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n}\nHRESULT D3DBase::InputLayout()\n{\n	HRESULT hr = S_OK;\n	// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;COLOR&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};\n	UINT numElements = ARRAYSIZE( layout );\n\n	// Create the input layout\n	hr = g_pd3dDevice-&gt;CreateInputLayout( layout, numElements, pVSBlob-&gt;GetBufferPointer(),\n		pVSBlob-&gt;GetBufferSize(), &amp;g_pVertexLayout );\n	pVSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set the input layout\n	g_pImmediateContext-&gt;IASetInputLayout( g_pVertexLayout );\n\n}\nHRESULT D3DBase::VS_Shader()\n{\n	HRESULT hr = S_OK;\n	// Compile the vertex shader\n	\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;VS&quot;, &quot;vs_4_0&quot;, &amp;pVSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the vertex shader\n	hr = g_pd3dDevice-&gt;CreateVertexShader( pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), NULL, &amp;g_pVertexShader );\n	if( FAILED( hr ) )\n	{	\n		pVSBlob-&gt;Release();\n		return hr;\n	}\n	return S_OK;\n}\n//摄像机\nvoid D3DBase::setCamera()\n{\n	//按键事件\n	//如果A,S,D,W,Q,E,Z,X,C键按下，移动摄像机\n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)	//前\n		vZ+=0.001f;\n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)	//后\n		vZ-=0.001f;\n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)  //左\n		vX-=0.001f; \n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)   //右\n		vX+=0.001f; \n	if(GetAsyncKeyState(&#39;Q&#39;) &amp; 0x8000)    //上\n		vY+=0.001f;\n	if(GetAsyncKeyState(&#39;E&#39;) &amp; 0x8000)    //下\n		vY-=0.001f;\n	//旋转\n	if(GetAsyncKeyState(&#39;Z&#39;) &amp; 0x8000)    //x轴\n		rX+=0.001f;\n	if(GetAsyncKeyState(&#39;X&#39;) &amp; 0x8000)    //y轴\n		rY+=0.001f;\n	if(GetAsyncKeyState(&#39;C&#39;) &amp; 0x8000)    //z轴\n		rZ+=0.001f;\n	// 世界矩阵\n	g_World = XMMatrixIdentity();\n\n	// 观察矩阵\n	XMVECTOR Eye = XMVectorSet( 0.0f+vX, 1.0f+vY, -5.0f+vZ, 0.0f );\n	XMVECTOR At = XMVectorSet( 0.0f+vX, 1.0f+vY, 0.0f, 0.0f );\n	XMVECTOR Up = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	g_View = XMMatrixLookAtLH( Eye, At, Up );\n	g_View*=XMMatrixRotationX(rX)*XMMatrixRotationY(rY)*XMMatrixRotationZ(rZ); \n	// 投影矩阵\n	g_Projection = XMMatrixPerspectiveFovLH( XM_PIDIV2, width / (FLOAT)height, 0.01f, 100.0f );\n	// Update our time\n	static float t = 0.0f;\n	if( g_driverType == D3D_DRIVER_TYPE_REFERENCE )\n	{\n		t += ( float )XM_PI * 0.0125f;\n	}\n	else\n	{\n		static DWORD dwTimeStart = 0;\n		DWORD dwTimeCur = GetTickCount();\n		if( dwTimeStart == 0 )\n			dwTimeStart = dwTimeCur;\n		t = ( dwTimeCur - dwTimeStart ) / 1000.0f;\n	}\n\n	//\n	// Animate the cube\n	//\n	g_World = XMMatrixRotationY( t );\n\n}\n//--------------------------------------------------------------------------------------\n// Helper for compiling shaders with D3DX11\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut )\n{\n	HRESULT hr = S_OK;\n\n	DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;\n#if defined( DEBUG ) || defined( _DEBUG )\n	// Set the D3DCOMPILE_DEBUG flag to embed debug information in the shaders.\n	// Setting this flag improves the shader debugging experience, but still allows \n	// the shaders to be optimized and to run exactly the way they will run in \n	// the release configuration of this program.\n	dwShaderFlags |= D3DCOMPILE_DEBUG;\n#endif\n\n	ID3DBlob* pErrorBlob;\n	hr = D3DX11CompileFromFile( szFileName, NULL, NULL, szEntryPoint, szShaderModel, \n		dwShaderFlags, 0, NULL, ppBlobOut, &amp;pErrorBlob, NULL );\n	if( FAILED(hr) )\n	{\n		if( pErrorBlob != NULL )\n			OutputDebugStringA( (char*)pErrorBlob-&gt;GetBufferPointer() );\n		if( pErrorBlob ) pErrorBlob-&gt;Release();\n		return hr;\n	}\n	if( pErrorBlob ) pErrorBlob-&gt;Release();\n\n	return S_OK;\n}\n\n\n\n\n//--------------------------------------------------------------------------------------\n// Clean up the objects we&#39;ve created\n//--------------------------------------------------------------------------------------\nvoid D3DBase::CleanupDevice()\n{\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;ClearState();\n	if( g_pVertexLayout ) g_pVertexLayout-&gt;Release();\n	if( g_pVertexShader ) g_pVertexShader-&gt;Release();\n	if( g_pPixelShader ) g_pPixelShader-&gt;Release();\n	if( g_pRenderTargetView ) g_pRenderTargetView-&gt;Release();\n	if( g_pSwapChain ) g_pSwapChain-&gt;Release();\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;Release();\n	if( g_pd3dDevice ) g_pd3dDevice-&gt;Release();\n	if( g_pConstantBuffer ) g_pConstantBuffer-&gt;Release();\n}\n\n\n//--------------------------------------------------------------------------------------\n// Called every time the application receives a message\n//--------------------------------------------------------------------------------------\nLRESULT CALLBACK WndProc( HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam )\n{\n	PAINTSTRUCT ps;\n	HDC hdc;\n\n	switch( message )\n	{\n	case WM_PAINT:\n		hdc = BeginPaint( hWnd, &amp;ps );\n		EndPaint( hWnd, &amp;ps );\n		break;\n\n	case WM_DESTROY:\n		PostQuitMessage( 0 );\n		break;\n\n	default:\n		return DefWindowProc( hWnd, message, wParam, lParam );\n	}\n\n	return 0;\n}\n\nint D3DBase::BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow)\n{\n	UNREFERENCED_PARAMETER( hPrevInstance );\n	UNREFERENCED_PARAMETER( lpCmdLine );\n\n	//初始化window窗口\n	if( FAILED( d3d.InitWindow( hInstance, nCmdShow ,640,480) ) )\n		return 0;\n	//初始化设备\n	if( FAILED( d3d.InitDevice() ) )\n	{\n		d3d.CleanupDevice();\n		return 0;\n	}\n	//初始化\n	d3d.VS_Shader();  //顶点着色器\n	d3d.InputLayout();//顶点结构\n	d3d.PS_Shader();  //像素着色器\n	d3d.InitModel(); //构造顶点模型数据\n	//消息循环\n	MSG msg = {0};\n	while( WM_QUIT != msg.message )\n	{\n		if( PeekMessage( &amp;msg, NULL, 0, 0, PM_REMOVE ) )\n		{\n			TranslateMessage( &amp;msg );\n			DispatchMessage( &amp;msg );\n		}\n		else\n		{\n			//开始渲染\n			d3d.Render();\n		}\n	}\n	d3d.CleanupDevice();\n	return ( int )msg.wParam;\n}</pre><br>\r\n效果：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141002220828191?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>这个效果学习的最初列子来自博客http://www.cnblogs.com/mikewolf2002/archive/2012/03/18/2404564.html</p>\r\n','\r\n\r\n<p>这个程序再进一步的将上一个程序 面向对象化。 把模型类独立出来。更加像一个框架。</p>\r\n<p>在此中遇到了一个很逗比的问题，弄了一晚上，看了好几遍其他列子才找到。就是有些函数一定要放在Render里面实时更新，而不是只放到初始化InitModel里面</p>\r\n<p>因为当要渲染多个物体的时候，缓冲区的内容是要随设备变化的。 话不多说直接上代码</p>\r\n<p><br>\r\n</p>\r\n<p>主程序main</p>\r\n<p><pre name=\"code\" class=\"cpp\">#include &quot;D3DBase.h&quot;\n#include &quot;Axis.h&quot;\n#include &quot;Cube.h&quot;\nclass D3DProgam:public D3DBase\n{\npublic:\n	virtual void Render();      //渲染\n	virtual HRESULT InitModel();//模型\n	virtual void CleanupDevice();//清理\npublic:\n	AxisModel *axisModel;\n	CubeModel *cubeModel;\n};\n//实例化程序\nD3DProgam d3d;\nHRESULT D3DProgam::InitModel()\n{\n	\n	//init CubeModel\n	cubeModel=new CubeModel;\n	cubeModel-&gt;InitModel();\n	//init AxisModel\n	axisModel=new AxisModel;\n	axisModel-&gt;InitModel();\n	\n	return S_OK;\n}\n\n\n\n//渲染\nvoid D3DProgam::Render()\n{\n	//设置摄像机转动\n	setCamera();\n	//清除背景\n	float ClearColor[4] = { 0.0f, 0.125f, 0.3f, 1.0f }; // red,green,blue,alpha\n	g_pImmediateContext-&gt;ClearRenderTargetView( g_pRenderTargetView, ClearColor );\n	g_pImmediateContext-&gt;ClearDepthStencilView( g_pDepthStencilView, D3D11_CLEAR_DEPTH, 1.0f, 0 );\n	//渲染模型\n	cubeModel-&gt;Render();\n	axisModel-&gt;Render();\n	//刷新背景缓冲到前景\n	g_pSwapChain-&gt;Present( 0, 0 );\n}\nvoid D3DProgam::CleanupDevice()\n{\n	D3DBase::CleanupDevice();//先调用父类的清理\n	axisModel-&gt;CleanupDevice();\n	cubeModel-&gt;CleanupDevice();\n\n}\n//程序开始\nint WINAPI wWinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow )\n{\n	return D3DBase::BeginD3D(d3d,hInstance,hPrevInstance,lpCmdLine,nCmdShow);\n}</pre><br>\r\n实现逻辑的程序尽可能精简和面向对象化了，其中 坐标轴和立方体为两个对象，我分别用2个类来表示</p>\r\n<p><pre name=\"code\" class=\"cpp\">class CubeModel\n{\npublic:\n	HRESULT InitModel();\n	void Render();\n	void CleanupDevice();//清理\npublic:\n	ID3D11Buffer*           g_pVertexBuffer;    //顶点缓冲\n	ID3D11Buffer*           g_pIndexBuffer;     //顶点索引\n\n};\nvoid CubeModel::CleanupDevice()\n{\n	if( g_pVertexBuffer ) g_pVertexBuffer-&gt;Release();\n	if( g_pIndexBuffer ) g_pIndexBuffer-&gt;Release();\n}\nvoid CubeModel::Render()\n{\n	// 绑定到管线\n	UINT stride = sizeof( SimpleVertex );\n	UINT offset = 0;\n	g_pImmediateContext-&gt;IASetVertexBuffers( 0, 1, &amp;g_pVertexBuffer, &amp;stride, &amp;offset );\n	g_pImmediateContext-&gt;IASetIndexBuffer( g_pIndexBuffer, DXGI_FORMAT_R16_UINT, 0 );\n	g_pImmediateContext-&gt;IASetPrimitiveTopology( D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST );\n	//更新常量缓冲区\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( g_World );\n	cb.mView = XMMatrixTranspose( g_View );\n	cb.mProjection = XMMatrixTranspose( g_Projection );\n	g_pImmediateContext-&gt;UpdateSubresource( g_pConstantBuffer, 0, NULL, &amp;cb, 0, 0 );\n	//渲染\n	g_pImmediateContext-&gt;VSSetShader( g_pVertexShader, NULL, 0 );\n	g_pImmediateContext-&gt;VSSetConstantBuffers( 0, 1, &amp;g_pConstantBuffer );\n	g_pImmediateContext-&gt;PSSetShader( g_pPixelShader, NULL, 0 );\n	g_pImmediateContext-&gt;DrawIndexed( 36, 0, 0 );        // 36 vertices needed for 12 triangles in a triangle list\n}\nHRESULT CubeModel::InitModel()\n{\n	HRESULT hr = S_OK;\n	// Create vertex buffer\n	SimpleVertex vertices[] =\n	{\n		{ XMFLOAT3( -1.0f, 1.0f, -1.0f ),WHITE },\n		{ XMFLOAT3( 1.0f, 1.0f, -1.0f ), XMFLOAT4( 0.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, 1.0f, 1.0f ), XMFLOAT4( 0.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, 1.0f, 1.0f ), XMFLOAT4( 1.0f, 0.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 0.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, 1.0f ), XMFLOAT4( 1.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, 1.0f ), XMFLOAT4( 0.0f, 0.0f, 0.0f, 1.0f ) },\n	};\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( SimpleVertex ) * 8;\n	bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	D3D11_SUBRESOURCE_DATA InitData;\n	ZeroMemory( &amp;InitData, sizeof(InitData) );\n	InitData.pSysMem = vertices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pVertexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	\n\n	// Create index buffer\n	WORD indices[] =\n	{\n		3,1,0,\n		2,1,3,\n\n		0,5,4,\n		1,5,0,\n\n		3,4,7,\n		0,4,3,\n\n		1,6,5,\n		2,6,1,\n\n		2,7,6,\n		3,7,2,\n\n		6,4,5,\n		7,4,6,\n	};\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( WORD ) * 36;        // 36 vertices needed for 12 triangles in a triangle list\n	bd.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	InitData.pSysMem = indices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pIndexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// 创建常量缓冲区\n\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	g_pd3dDevice-&gt;CreateBuffer( &amp;bd, NULL, &amp;g_pConstantBuffer );\n\n	return S_OK;\n	\n}</pre><br>\r\n<pre name=\"code\" class=\"cpp\">class AxisModel\n{\npublic:\n	HRESULT InitModel();\n	void Render();\n	void CleanupDevice();//清理\npublic:\n	ID3D11Buffer*           g_pVertexBuffer;    //顶点缓冲\n	ID3D11Buffer*           g_pIndexBuffer;     //顶点索引\n	\n};\nvoid AxisModel::CleanupDevice()\n{\n	if( g_pVertexBuffer ) g_pVertexBuffer-&gt;Release();\n	if( g_pIndexBuffer ) g_pIndexBuffer-&gt;Release();\n}\nvoid AxisModel::Render()\n{\n	//绑定渲染管线\n	UINT stride = sizeof( SimpleVertex );\n	UINT offset = 0;\n	g_pImmediateContext-&gt;IASetVertexBuffers( 0, 1, &amp;g_pVertexBuffer, &amp;stride, &amp;offset );\n	g_pImmediateContext-&gt;IASetIndexBuffer( g_pIndexBuffer, DXGI_FORMAT_R16_UINT, 0 );\n	g_pImmediateContext-&gt;IASetPrimitiveTopology( D3D11_PRIMITIVE_TOPOLOGY_LINELIST );\n	//常量缓冲区\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( g_World );\n	cb.mView = XMMatrixTranspose( g_View );\n	cb.mProjection = XMMatrixTranspose( g_Projection );\n	g_pImmediateContext-&gt;UpdateSubresource( g_pConstantBuffer, 0, NULL, &amp;cb, 0, 0 );\n	//渲染绘制\n	g_pImmediateContext-&gt;VSSetShader( g_pVertexShader, NULL, 0 );\n	g_pImmediateContext-&gt;VSSetConstantBuffers( 0, 1, &amp;g_pConstantBuffer );\n	g_pImmediateContext-&gt;PSSetShader( g_pPixelShader, NULL, 0 );\n	g_pImmediateContext-&gt;DrawIndexed( 6, 0, 0 );        // 36 vertices needed for 12 triangles in a triangle list\n}\nHRESULT AxisModel::InitModel()\n{\n	HRESULT hr = S_OK;\n	//定义顶点缓冲\n	SimpleVertex vertices[] =\n	{\n		{ XMFLOAT3( 0.0f, 0.0f, 0.0f),RED }, //x轴\n		{ XMFLOAT3( 10.0f, 0.0f, 0.0f ),RED },\n		{ XMFLOAT3( 0.0f, 0.0f, 0.0f ), GREEN },//y轴\n		{ XMFLOAT3( 0.0f, 10.0f, 0.0f ), GREEN },\n		{ XMFLOAT3( 0.0f, 0.0f, 0.0f ), BLUE },//z轴\n		{ XMFLOAT3( 0.0f, 0.0f, 10.0f ),BLUE },\n	};\n	//创建顶点缓冲区\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( SimpleVertex ) * 6;\n	bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	D3D11_SUBRESOURCE_DATA InitData;\n	ZeroMemory( &amp;InitData, sizeof(InitData) );\n	InitData.pSysMem = vertices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pVertexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n\n	//定义索引缓冲\n	WORD indices[] =\n	{\n		0,1,2,3,4,5\n	};\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( WORD ) * 6;        // 36 vertices needed for 12 triangles in a triangle list\n	bd.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	InitData.pSysMem = indices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pIndexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n	// 创建常量缓冲区\n\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	g_pd3dDevice-&gt;CreateBuffer( &amp;bd, NULL, &amp;g_pConstantBuffer );\n	\n\n	\n	return S_OK;\n}</pre><br>\r\n细心地就会发现上面两个模型类是一摸一样的结构，其实还可以定义一个模型基类，使他们都继承。这样就更加面向对象化了</p>\r\n<p>两个类的作用具体在注释里面已经有了</p>\r\n<p>1： 定义顶点缓冲 &nbsp;</p>\r\n<p>2：定义索引缓冲</p>\r\n<p>3：定义常量缓冲 (作用是存储世界矩阵，观察矩阵，投影矩阵) 因为后面这个矩阵是随渲染时间的变换而变换的，因此后面会在Render里面再实时更新</p>\r\n<p>4: &nbsp;Render 渲染&nbsp;</p>\r\n<p>这里就是之前我出过的一次错误，渲染的时候记得 要将顶点缓冲区，索引缓冲区告诉设备，绑定到设备，而且是实时的，然后常量缓冲区也要告诉着色器</p>\r\n<p>然后就是绘制。</p>\r\n<p>最后一个文件就是基类。这个是一堆初始化设备，windows窗口的函数，变动几乎没有</p>\r\n<p><pre name=\"code\" class=\"cpp\">#include &lt;windows.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;xnamath.h&gt;\n#include &quot;resource.h&quot;\n\n//--------------------------------------------------------------------------------------\n// Global Variables\n//--------------------------------------------------------------------------------------\nHINSTANCE               g_hInst = NULL;\nHWND                    g_hWnd = NULL;\nD3D_DRIVER_TYPE         g_driverType = D3D_DRIVER_TYPE_NULL;\nD3D_FEATURE_LEVEL       g_featureLevel = D3D_FEATURE_LEVEL_11_0;\nID3D11Device*           g_pd3dDevice = NULL;\nID3D11Texture2D*        g_pDepthStencil = NULL;\nID3D11DepthStencilView* g_pDepthStencilView = NULL;\nID3D11DeviceContext*    g_pImmediateContext = NULL;\nIDXGISwapChain*         g_pSwapChain = NULL;\nID3D11RenderTargetView* g_pRenderTargetView = NULL;\nID3D11VertexShader*     g_pVertexShader = NULL;\nID3D11PixelShader*      g_pPixelShader = NULL;\nID3D11InputLayout*      g_pVertexLayout = NULL;\nID3D11Buffer*           g_pConstantBuffer = NULL;  //转换矩阵缓冲\n//转换矩阵\nXMMATRIX                g_World;\nXMMATRIX                g_View;\nXMMATRIX                g_Projection;\nconst XMFLOAT4 WHITE(1.0f, 1.0f, 1.0f, 1.0f); \nconst XMFLOAT4 BLACK(0.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 RED(1.0f, 0.0f, 0.0f, 1.0f); \nconst XMFLOAT4 GREEN(0.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 BLUE(0.0f, 0.0f, 1.0f, 1.0f); \nconst XMFLOAT4 YELLOW(1.0f, 1.0f, 0.0f, 1.0f); \nconst XMFLOAT4 CYAN(0.0f, 1.0f, 1.0f, 1.0f); //蓝绿色 \nconst XMFLOAT4 MAGENTA(1.0f, 0.0f, 1.0f, 1.0f); //洋红色\n\nconst XMFLOAT4 BEACH_SAND(1.0f, 0.96f, 0.62f, 1.0f); \nconst XMFLOAT4 LIGHT_YELLOW_GREEN(0.48f, 0.77f, 0.46f, 1.0f); \nconst XMFLOAT4 DARK_YELLOW_GREEN(0.1f, 0.48f, 0.19f, 1.0f); \nconst XMFLOAT4 DARKBROWN(0.45f, 0.39f, 0.34f, 1.0f);\n//--------------------------------------------------------------------------------------\n// Structures\n//--------------------------------------------------------------------------------------\nstruct SimpleVertex\n{\n	XMFLOAT3 Pos;//位置\n	XMFLOAT4 Color;//颜色\n};\nstruct ConstantBuffer\n{\n	XMMATRIX mWorld;//世界矩阵\n	XMMATRIX mView;//观察矩阵\n	XMMATRIX mProjection;//投影矩阵\n};\nclass D3DBase\n{\npublic:\n	//--------------------------------------------------------------------------------------\n	// Forward declarations\n	//--------------------------------------------------------------------------------------\n	D3DBase():vX(0),vY(0),vZ(0),rX(0),rY(0),rZ(0){};\n	HRESULT InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h );\n	virtual HRESULT InitDevice();\n	virtual void Render()=0;\n	virtual HRESULT InitModel()=0;\n	virtual HRESULT VS_Shader();\n	virtual HRESULT InputLayout();\n	virtual HRESULT PS_Shader();\n	virtual void setCamera();\n	static int BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow);\n	virtual void CleanupDevice();\n	virtual HRESULT CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut );\npublic:\n	ID3DBlob* pVSBlob,*pPSBlob;\n	UINT width;\n	UINT height;\n	float vX,vY,vZ;// 观察矩阵 Eye的坐标\n	float rX,rY,rZ;// 旋转的角度\n};\nLRESULT CALLBACK   WndProc( HWND, UINT, WPARAM, LPARAM );\n\n//--------------------------------------------------------------------------------------\n// Register class and create window\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h )\n{\n	// Register class\n	WNDCLASSEX wcex;\n	wcex.cbSize = sizeof( WNDCLASSEX );\n	wcex.style = CS_HREDRAW | CS_VREDRAW;\n	wcex.lpfnWndProc = WndProc;\n	wcex.cbClsExtra = 0;\n	wcex.cbWndExtra = 0;\n	wcex.hInstance = hInstance;\n	wcex.hIcon = LoadIcon( hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	wcex.hCursor = LoadCursor( NULL, IDC_ARROW );\n	wcex.hbrBackground = ( HBRUSH )( COLOR_WINDOW + 1 );\n	wcex.lpszMenuName = NULL;\n	wcex.lpszClassName = L&quot;TutorialWindowClass&quot;;\n	wcex.hIconSm = LoadIcon( wcex.hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	if( !RegisterClassEx( &amp;wcex ) )\n		return E_FAIL;\n\n	// Create window\n	g_hInst = hInstance;\n	RECT rc = { 0, 0, w, h };\n	AdjustWindowRect( &amp;rc, WS_OVERLAPPEDWINDOW, FALSE );\n	g_hWnd = CreateWindow( L&quot;TutorialWindowClass&quot;, L&quot;Direct3D 11 Tutorial 3: Shaders&quot;,\n		WS_OVERLAPPEDWINDOW,\n		CW_USEDEFAULT, CW_USEDEFAULT, rc.right - rc.left, rc.bottom - rc.top, NULL, NULL, hInstance,\n		NULL );\n	if( !g_hWnd )\n		return E_FAIL;\n\n	ShowWindow( g_hWnd, nCmdShow );\n\n	return S_OK;\n}\n\n\n\n//--------------------------------------------------------------------------------------\n// Create Direct3D device and swap chain\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitDevice()\n{\n	HRESULT hr = S_OK;\n\n	RECT rc;\n	GetClientRect( g_hWnd, &amp;rc );\n	width = rc.right - rc.left;\n	height = rc.bottom - rc.top;\n\n	UINT createDeviceFlags = 0;\n#ifdef _DEBUG\n	createDeviceFlags |= D3D11_CREATE_DEVICE_DEBUG;\n#endif\n\n	D3D_DRIVER_TYPE driverTypes[] =\n	{\n		D3D_DRIVER_TYPE_HARDWARE,\n		D3D_DRIVER_TYPE_WARP,\n		D3D_DRIVER_TYPE_REFERENCE,\n	};\n	UINT numDriverTypes = ARRAYSIZE( driverTypes );\n\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n\n	//交换链定义\n	DXGI_SWAP_CHAIN_DESC sd;\n	ZeroMemory( &amp;sd, sizeof( sd ) );\n	sd.BufferCount = 1;\n	sd.BufferDesc.Width = width;\n	sd.BufferDesc.Height = height;\n	sd.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n	sd.BufferDesc.RefreshRate.Numerator = 60;\n	sd.BufferDesc.RefreshRate.Denominator = 1;\n	sd.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n	sd.OutputWindow = g_hWnd;\n	sd.SampleDesc.Count = 1;\n	sd.SampleDesc.Quality = 0;\n	sd.Windowed = TRUE;\n\n	for( UINT driverTypeIndex = 0; driverTypeIndex &lt; numDriverTypes; driverTypeIndex++ )\n	{\n		g_driverType = driverTypes[driverTypeIndex];\n		hr = D3D11CreateDeviceAndSwapChain( NULL, g_driverType, NULL, createDeviceFlags, featureLevels, numFeatureLevels,\n			D3D11_SDK_VERSION, &amp;sd, &amp;g_pSwapChain, &amp;g_pd3dDevice, &amp;g_featureLevel, &amp;g_pImmediateContext );\n		if( SUCCEEDED( hr ) )\n			break;\n	}\n	if( FAILED( hr ) )\n		return hr;\n\n	// 创建渲染目标视图\n	ID3D11Texture2D* pBackBuffer = NULL;\n	hr = g_pSwapChain-&gt;GetBuffer( 0, __uuidof( ID3D11Texture2D ), ( LPVOID* )&amp;pBackBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	hr = g_pd3dDevice-&gt;CreateRenderTargetView( pBackBuffer, NULL, &amp;g_pRenderTargetView );\n	pBackBuffer-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n	//定义深度缓冲\n	D3D11_TEXTURE2D_DESC descDepth;\n	ZeroMemory( &amp;descDepth, sizeof(descDepth) );\n	descDepth.Width = width;\n	descDepth.Height = height;\n	descDepth.MipLevels = 1;\n	descDepth.ArraySize = 1;\n	descDepth.Format = DXGI_FORMAT_D24_UNORM_S8_UINT;\n	descDepth.SampleDesc.Count = 1;\n	descDepth.SampleDesc.Quality = 0;\n	descDepth.Usage = D3D11_USAGE_DEFAULT;\n	descDepth.BindFlags = D3D11_BIND_DEPTH_STENCIL;\n	descDepth.CPUAccessFlags = 0;\n	descDepth.MiscFlags = 0;\n	hr = g_pd3dDevice-&gt;CreateTexture2D( &amp;descDepth, NULL, &amp;g_pDepthStencil );\n	if( FAILED( hr ) )\n		return hr;\n\n	//创建深度缓冲视图\n	D3D11_DEPTH_STENCIL_VIEW_DESC descDSV;\n	ZeroMemory( &amp;descDSV, sizeof(descDSV) );\n	descDSV.Format = descDepth.Format;\n	descDSV.ViewDimension = D3D11_DSV_DIMENSION_TEXTURE2D;\n	descDSV.Texture2D.MipSlice = 0;\n	hr = g_pd3dDevice-&gt;CreateDepthStencilView( g_pDepthStencil, &amp;descDSV, &amp;g_pDepthStencilView );\n	if( FAILED( hr ) )\n		return hr;\n\n	g_pImmediateContext-&gt;OMSetRenderTargets( 1, &amp;g_pRenderTargetView, g_pDepthStencilView );\n\n	//设置视口\n	D3D11_VIEWPORT vp;\n	vp.Width = (FLOAT)width;\n	vp.Height = (FLOAT)height;\n	vp.MinDepth = 0.0f;\n	vp.MaxDepth = 1.0f;\n	vp.TopLeftX = 0;\n	vp.TopLeftY = 0;\n	g_pImmediateContext-&gt;RSSetViewports( 1, &amp;vp );\n\n	return S_OK;\n}\nHRESULT D3DBase::PS_Shader()\n{\n	// Compile the pixel shader\n	HRESULT hr=S_OK;\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;PS&quot;, &quot;ps_4_0&quot;, &amp;pPSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the pixel shader\n	hr = g_pd3dDevice-&gt;CreatePixelShader( pPSBlob-&gt;GetBufferPointer(), pPSBlob-&gt;GetBufferSize(), NULL, &amp;g_pPixelShader );\n	pPSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n}\nHRESULT D3DBase::InputLayout()\n{\n	HRESULT hr = S_OK;\n	// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;COLOR&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};\n	UINT numElements = ARRAYSIZE( layout );\n\n	// Create the input layout\n	hr = g_pd3dDevice-&gt;CreateInputLayout( layout, numElements, pVSBlob-&gt;GetBufferPointer(),\n		pVSBlob-&gt;GetBufferSize(), &amp;g_pVertexLayout );\n	pVSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set the input layout\n	g_pImmediateContext-&gt;IASetInputLayout( g_pVertexLayout );\n\n}\nHRESULT D3DBase::VS_Shader()\n{\n	HRESULT hr = S_OK;\n	// Compile the vertex shader\n	\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;VS&quot;, &quot;vs_4_0&quot;, &amp;pVSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the vertex shader\n	hr = g_pd3dDevice-&gt;CreateVertexShader( pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), NULL, &amp;g_pVertexShader );\n	if( FAILED( hr ) )\n	{	\n		pVSBlob-&gt;Release();\n		return hr;\n	}\n	return S_OK;\n}\n//摄像机\nvoid D3DBase::setCamera()\n{\n	//按键事件\n	//如果A,S,D,W,Q,E,Z,X,C键按下，移动摄像机\n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)	//前\n		vZ+=0.001f;\n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)	//后\n		vZ-=0.001f;\n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)  //左\n		vX-=0.001f; \n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)   //右\n		vX+=0.001f; \n	if(GetAsyncKeyState(&#39;Q&#39;) &amp; 0x8000)    //上\n		vY+=0.001f;\n	if(GetAsyncKeyState(&#39;E&#39;) &amp; 0x8000)    //下\n		vY-=0.001f;\n	//旋转\n	if(GetAsyncKeyState(&#39;Z&#39;) &amp; 0x8000)    //x轴\n		rX+=0.001f;\n	if(GetAsyncKeyState(&#39;X&#39;) &amp; 0x8000)    //y轴\n		rY+=0.001f;\n	if(GetAsyncKeyState(&#39;C&#39;) &amp; 0x8000)    //z轴\n		rZ+=0.001f;\n	// 世界矩阵\n	g_World = XMMatrixIdentity();\n\n	// 观察矩阵\n	XMVECTOR Eye = XMVectorSet( 0.0f+vX, 1.0f+vY, -5.0f+vZ, 0.0f );\n	XMVECTOR At = XMVectorSet( 0.0f+vX, 1.0f+vY, 0.0f, 0.0f );\n	XMVECTOR Up = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	g_View = XMMatrixLookAtLH( Eye, At, Up );\n	g_View*=XMMatrixRotationX(rX)*XMMatrixRotationY(rY)*XMMatrixRotationZ(rZ); \n	// 投影矩阵\n	g_Projection = XMMatrixPerspectiveFovLH( XM_PIDIV2, width / (FLOAT)height, 0.01f, 100.0f );\n	// Update our time\n	static float t = 0.0f;\n	if( g_driverType == D3D_DRIVER_TYPE_REFERENCE )\n	{\n		t += ( float )XM_PI * 0.0125f;\n	}\n	else\n	{\n		static DWORD dwTimeStart = 0;\n		DWORD dwTimeCur = GetTickCount();\n		if( dwTimeStart == 0 )\n			dwTimeStart = dwTimeCur;\n		t = ( dwTimeCur - dwTimeStart ) / 1000.0f;\n	}\n\n	//\n	// Animate the cube\n	//\n	g_World = XMMatrixRotationY( t );\n\n}\n//--------------------------------------------------------------------------------------\n// Helper for compiling shaders with D3DX11\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut )\n{\n	HRESULT hr = S_OK;\n\n	DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;\n#if defined( DEBUG ) || defined( _DEBUG )\n	// Set the D3DCOMPILE_DEBUG flag to embed debug information in the shaders.\n	// Setting this flag improves the shader debugging experience, but still allows \n	// the shaders to be optimized and to run exactly the way they will run in \n	// the release configuration of this program.\n	dwShaderFlags |= D3DCOMPILE_DEBUG;\n#endif\n\n	ID3DBlob* pErrorBlob;\n	hr = D3DX11CompileFromFile( szFileName, NULL, NULL, szEntryPoint, szShaderModel, \n		dwShaderFlags, 0, NULL, ppBlobOut, &amp;pErrorBlob, NULL );\n	if( FAILED(hr) )\n	{\n		if( pErrorBlob != NULL )\n			OutputDebugStringA( (char*)pErrorBlob-&gt;GetBufferPointer() );\n		if( pErrorBlob ) pErrorBlob-&gt;Release();\n		return hr;\n	}\n	if( pErrorBlob ) pErrorBlob-&gt;Release();\n\n	return S_OK;\n}\n\n\n\n\n//--------------------------------------------------------------------------------------\n// Clean up the objects we&#39;ve created\n//--------------------------------------------------------------------------------------\nvoid D3DBase::CleanupDevice()\n{\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;ClearState();\n	if( g_pVertexLayout ) g_pVertexLayout-&gt;Release();\n	if( g_pVertexShader ) g_pVertexShader-&gt;Release();\n	if( g_pPixelShader ) g_pPixelShader-&gt;Release();\n	if( g_pRenderTargetView ) g_pRenderTargetView-&gt;Release();\n	if( g_pSwapChain ) g_pSwapChain-&gt;Release();\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;Release();\n	if( g_pd3dDevice ) g_pd3dDevice-&gt;Release();\n	if( g_pConstantBuffer ) g_pConstantBuffer-&gt;Release();\n}\n\n\n//--------------------------------------------------------------------------------------\n// Called every time the application receives a message\n//--------------------------------------------------------------------------------------\nLRESULT CALLBACK WndProc( HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam )\n{\n	PAINTSTRUCT ps;\n	HDC hdc;\n\n	switch( message )\n	{\n	case WM_PAINT:\n		hdc = BeginPaint( hWnd, &amp;ps );\n		EndPaint( hWnd, &amp;ps );\n		break;\n\n	case WM_DESTROY:\n		PostQuitMessage( 0 );\n		break;\n\n	default:\n		return DefWindowProc( hWnd, message, wParam, lParam );\n	}\n\n	return 0;\n}\n\nint D3DBase::BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow)\n{\n	UNREFERENCED_PARAMETER( hPrevInstance );\n	UNREFERENCED_PARAMETER( lpCmdLine );\n\n	//初始化window窗口\n	if( FAILED( d3d.InitWindow( hInstance, nCmdShow ,640,480) ) )\n		return 0;\n	//初始化设备\n	if( FAILED( d3d.InitDevice() ) )\n	{\n		d3d.CleanupDevice();\n		return 0;\n	}\n	//初始化\n	d3d.VS_Shader();  //顶点着色器\n	d3d.InputLayout();//顶点结构\n	d3d.PS_Shader();  //像素着色器\n	d3d.InitModel(); //构造顶点模型数据\n	//消息循环\n	MSG msg = {0};\n	while( WM_QUIT != msg.message )\n	{\n		if( PeekMessage( &amp;msg, NULL, 0, 0, PM_REMOVE ) )\n		{\n			TranslateMessage( &amp;msg );\n			DispatchMessage( &amp;msg );\n		}\n		else\n		{\n			//开始渲染\n			d3d.Render();\n		}\n	}\n	d3d.CleanupDevice();\n	return ( int )msg.wParam;\n}</pre><br>\r\n效果：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141002220828191?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>这个效果学习的最初列子来自博客http://www.cnblogs.com/mikewolf2002/archive/2012/03/18/2404564.html</p>\r\n',1,'directx,c++,directx11',0,0,'2015-02-02 00:45:43','2015-02-02 00:45:43','2015-02-02 00:45:43'),(36,1,7,'DirectX11 学习笔记2 - 添加按键事件 实现视角平移 旋转','408c56ed37a59316cd7b0e41f27e6ab2',0,'\r\n\r\n<p>在上一个程序的基础上。在基类D3DBase添加一个摄像机函数</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//摄像机\nvoid D3DBase::setCamera()\n{\n	//按键事件\n	//如果A,S,D,W,','\r\n\r\n<p>在上一个程序的基础上。在基类D3DBase添加一个摄像机函数</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//摄像机\nvoid D3DBase::setCamera()\n{\n	//按键事件\n	//如果A,S,D,W,Q,E,Z,X,C键按下，移动摄像机\n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)	//前\n		vZ+=0.001f;\n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)	//后\n		vZ-=0.001f;\n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)  //左\n		vX-=0.001f; \n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)   //右\n		vX+=0.001f; \n	if(GetAsyncKeyState(&#39;Q&#39;) &amp; 0x8000)    //上\n		vY+=0.001f;\n	if(GetAsyncKeyState(&#39;E&#39;) &amp; 0x8000)    //下\n		vY-=0.001f;\n	//旋转\n	if(GetAsyncKeyState(&#39;Z&#39;) &amp; 0x8000)    //x轴\n		rX+=0.001f;\n	if(GetAsyncKeyState(&#39;X&#39;) &amp; 0x8000)    //y轴\n		rY+=0.001f;\n	if(GetAsyncKeyState(&#39;C&#39;) &amp; 0x8000)    //z轴\n		rZ+=0.001f;\n	// 世界矩阵\n	g_World = XMMatrixIdentity();\n\n	// 观察矩阵\n	XMVECTOR Eye = XMVectorSet( 0.0f+vX, 1.0f+vY, -5.0f+vZ, 0.0f );\n	XMVECTOR At = XMVectorSet( 0.0f+vX, 1.0f+vY, 0.0f, 0.0f );\n	XMVECTOR Up = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	g_View = XMMatrixLookAtLH( Eye, At, Up );\n	g_View*=XMMatrixRotationX(rX)*XMMatrixRotationY(rY)*XMMatrixRotationZ(rZ); \n	// 投影矩阵\n	g_Projection = XMMatrixPerspectiveFovLH( XM_PIDIV2, width / (FLOAT)height, 0.01f, 100.0f );\n\n}</pre>以下写在类声明里面public:<br>\r\n<pre name=\"code\" class=\"cpp\">D3DBase():vX(0),vY(0),vZ(0),rX(0),rY(0),rZ(0){};//初始化\nfloat vX,vY,vZ;// 观察矩阵 Eye的坐标\n	float rX,rY,rZ;// 旋转的角度</pre><br>\r\n然后直接在渲染函数调用即可\r\n<p></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//渲染\nvoid D3DProgam::Render()\n{\n	\n	setCamera();//这里\n	// Update our time\n	static float t = 0.0f;\n	if( g_driverType == D3D_DRIVER_TYPE_REFERENCE )\n	{\n		t += ( float )XM_PI * 0.0125f;\n	}</pre><img src=\"http://img.blog.csdn.net/20141002105515524?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n<br>\r\n<p></p>\r\n','\r\n\r\n<p>在上一个程序的基础上。在基类D3DBase添加一个摄像机函数</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//摄像机\nvoid D3DBase::setCamera()\n{\n	//按键事件\n	//如果A,S,D,W,Q,E,Z,X,C键按下，移动摄像机\n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)	//前\n		vZ+=0.001f;\n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)	//后\n		vZ-=0.001f;\n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)  //左\n		vX-=0.001f; \n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)   //右\n		vX+=0.001f; \n	if(GetAsyncKeyState(&#39;Q&#39;) &amp; 0x8000)    //上\n		vY+=0.001f;\n	if(GetAsyncKeyState(&#39;E&#39;) &amp; 0x8000)    //下\n		vY-=0.001f;\n	//旋转\n	if(GetAsyncKeyState(&#39;Z&#39;) &amp; 0x8000)    //x轴\n		rX+=0.001f;\n	if(GetAsyncKeyState(&#39;X&#39;) &amp; 0x8000)    //y轴\n		rY+=0.001f;\n	if(GetAsyncKeyState(&#39;C&#39;) &amp; 0x8000)    //z轴\n		rZ+=0.001f;\n	// 世界矩阵\n	g_World = XMMatrixIdentity();\n\n	// 观察矩阵\n	XMVECTOR Eye = XMVectorSet( 0.0f+vX, 1.0f+vY, -5.0f+vZ, 0.0f );\n	XMVECTOR At = XMVectorSet( 0.0f+vX, 1.0f+vY, 0.0f, 0.0f );\n	XMVECTOR Up = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	g_View = XMMatrixLookAtLH( Eye, At, Up );\n	g_View*=XMMatrixRotationX(rX)*XMMatrixRotationY(rY)*XMMatrixRotationZ(rZ); \n	// 投影矩阵\n	g_Projection = XMMatrixPerspectiveFovLH( XM_PIDIV2, width / (FLOAT)height, 0.01f, 100.0f );\n\n}</pre>以下写在类声明里面public:<br>\r\n<pre name=\"code\" class=\"cpp\">D3DBase():vX(0),vY(0),vZ(0),rX(0),rY(0),rZ(0){};//初始化\nfloat vX,vY,vZ;// 观察矩阵 Eye的坐标\n	float rX,rY,rZ;// 旋转的角度</pre><br>\r\n然后直接在渲染函数调用即可\r\n<p></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//渲染\nvoid D3DProgam::Render()\n{\n	\n	setCamera();//这里\n	// Update our time\n	static float t = 0.0f;\n	if( g_driverType == D3D_DRIVER_TYPE_REFERENCE )\n	{\n		t += ( float )XM_PI * 0.0125f;\n	}</pre><img src=\"http://img.blog.csdn.net/20141002105515524?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n<br>\r\n<p></p>\r\n',1,'directx11,c++,directx',0,0,'2015-02-02 00:45:44','2015-02-02 00:45:44','2015-02-02 00:45:44'),(37,1,7,'DirectX11 学习笔记1 - 第一个程序','9eb397714aaee74f26a7e4a28f51956e',0,'\r\n\r\n<p>为了加快学习速度，和使程序更加容易理解。 &nbsp;我把sampler tutorial里面的一个例子 的固定代码和经常改动的代码经过简单的类的封装了一下。</p>','\r\n\r\n<p>为了加快学习速度，和使程序更加容易理解。 &nbsp;我把sampler tutorial里面的一个例子 的固定代码和经常改动的代码经过简单的类的封装了一下。</p>\r\n<p>以后学习的时候就可以只在另一个文件写render渲染代码和fx着色器代码了</p>\r\n<p>D3DBase.h &nbsp;基本框架代码</p>\r\n<p><pre code_snippet_id=\"478504\" snippet_file_name=\"blog_20141001_1_78339\"  name=\"code\" class=\"cpp\">#include &lt;windows.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;xnamath.h&gt;\n#include &quot;resource.h&quot;\n\n//--------------------------------------------------------------------------------------\n// Global Variables\n//--------------------------------------------------------------------------------------\nHINSTANCE               g_hInst = NULL;\nHWND                    g_hWnd = NULL;\nD3D_DRIVER_TYPE         g_driverType = D3D_DRIVER_TYPE_NULL;\nD3D_FEATURE_LEVEL       g_featureLevel = D3D_FEATURE_LEVEL_11_0;\nID3D11Device*           g_pd3dDevice = NULL;\nID3D11DeviceContext*    g_pImmediateContext = NULL;\nIDXGISwapChain*         g_pSwapChain = NULL;\nID3D11RenderTargetView* g_pRenderTargetView = NULL;\nID3D11VertexShader*     g_pVertexShader = NULL;\nID3D11PixelShader*      g_pPixelShader = NULL;\nID3D11InputLayout*      g_pVertexLayout = NULL;\nID3D11Buffer*           g_pVertexBuffer = NULL;    //顶点缓冲\nID3D11Buffer*           g_pIndexBuffer = NULL;     //顶点索引\nID3D11Buffer*           g_pConstantBuffer = NULL;  //转换矩阵\n//转换矩阵\nXMMATRIX                g_World;\nXMMATRIX                g_View;\nXMMATRIX                g_Projection;\n\n//--------------------------------------------------------------------------------------\n// Structures\n//--------------------------------------------------------------------------------------\nstruct SimpleVertex\n{\n	XMFLOAT3 Pos;//位置\n	XMFLOAT4 Color;//颜色\n};\nstruct ConstantBuffer\n{\n	XMMATRIX mWorld;//世界矩阵\n	XMMATRIX mView;//观察矩阵\n	XMMATRIX mProjection;//投影矩阵\n};\nclass D3DBase\n{\npublic:\n	//--------------------------------------------------------------------------------------\n	// Forward declarations\n	//--------------------------------------------------------------------------------------\n	HRESULT InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h );\n	virtual HRESULT InitDevice();\n	virtual void Render()=0;\n	virtual HRESULT VertexIndex()=0;\n	virtual HRESULT VS_Shader();\n	virtual HRESULT InputLayout();\n	virtual HRESULT PS_Shader();\n	static int BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow);\n	virtual void CleanupDevice();\n	virtual HRESULT CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut );\npublic:\n	ID3DBlob* pVSBlob,*pPSBlob;\n	UINT width;\n	UINT height;\n};\nLRESULT CALLBACK   WndProc( HWND, UINT, WPARAM, LPARAM );\n\n//--------------------------------------------------------------------------------------\n// Register class and create window\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h )\n{\n	// Register class\n	WNDCLASSEX wcex;\n	wcex.cbSize = sizeof( WNDCLASSEX );\n	wcex.style = CS_HREDRAW | CS_VREDRAW;\n	wcex.lpfnWndProc = WndProc;\n	wcex.cbClsExtra = 0;\n	wcex.cbWndExtra = 0;\n	wcex.hInstance = hInstance;\n	wcex.hIcon = LoadIcon( hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	wcex.hCursor = LoadCursor( NULL, IDC_ARROW );\n	wcex.hbrBackground = ( HBRUSH )( COLOR_WINDOW + 1 );\n	wcex.lpszMenuName = NULL;\n	wcex.lpszClassName = L&quot;TutorialWindowClass&quot;;\n	wcex.hIconSm = LoadIcon( wcex.hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	if( !RegisterClassEx( &amp;wcex ) )\n		return E_FAIL;\n\n	// Create window\n	g_hInst = hInstance;\n	RECT rc = { 0, 0, w, h };\n	AdjustWindowRect( &amp;rc, WS_OVERLAPPEDWINDOW, FALSE );\n	g_hWnd = CreateWindow( L&quot;TutorialWindowClass&quot;, L&quot;Direct3D 11 Tutorial 3: Shaders&quot;,\n		WS_OVERLAPPEDWINDOW,\n		CW_USEDEFAULT, CW_USEDEFAULT, rc.right - rc.left, rc.bottom - rc.top, NULL, NULL, hInstance,\n		NULL );\n	if( !g_hWnd )\n		return E_FAIL;\n\n	ShowWindow( g_hWnd, nCmdShow );\n\n	return S_OK;\n}\n\n\n\n//--------------------------------------------------------------------------------------\n// Create Direct3D device and swap chain\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitDevice()\n{\n	HRESULT hr = S_OK;\n\n	RECT rc;\n	GetClientRect( g_hWnd, &amp;rc );\n	width = rc.right - rc.left;\n	height = rc.bottom - rc.top;\n\n	UINT createDeviceFlags = 0;\n#ifdef _DEBUG\n	createDeviceFlags |= D3D11_CREATE_DEVICE_DEBUG;\n#endif\n\n	D3D_DRIVER_TYPE driverTypes[] =\n	{\n		D3D_DRIVER_TYPE_HARDWARE,\n		D3D_DRIVER_TYPE_WARP,\n		D3D_DRIVER_TYPE_REFERENCE,\n	};\n	UINT numDriverTypes = ARRAYSIZE( driverTypes );\n\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n\n	DXGI_SWAP_CHAIN_DESC sd;\n	ZeroMemory( &amp;sd, sizeof( sd ) );\n	sd.BufferCount = 1;\n	sd.BufferDesc.Width = width;\n	sd.BufferDesc.Height = height;\n	sd.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n	sd.BufferDesc.RefreshRate.Numerator = 60;\n	sd.BufferDesc.RefreshRate.Denominator = 1;\n	sd.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n	sd.OutputWindow = g_hWnd;\n	sd.SampleDesc.Count = 1;\n	sd.SampleDesc.Quality = 0;\n	sd.Windowed = TRUE;\n\n	for( UINT driverTypeIndex = 0; driverTypeIndex &lt; numDriverTypes; driverTypeIndex++ )\n	{\n		g_driverType = driverTypes[driverTypeIndex];\n		hr = D3D11CreateDeviceAndSwapChain( NULL, g_driverType, NULL, createDeviceFlags, featureLevels, numFeatureLevels,\n			D3D11_SDK_VERSION, &amp;sd, &amp;g_pSwapChain, &amp;g_pd3dDevice, &amp;g_featureLevel, &amp;g_pImmediateContext );\n		if( SUCCEEDED( hr ) )\n			break;\n	}\n	if( FAILED( hr ) )\n		return hr;\n\n	// Create a render target view\n	ID3D11Texture2D* pBackBuffer = NULL;\n	hr = g_pSwapChain-&gt;GetBuffer( 0, __uuidof( ID3D11Texture2D ), ( LPVOID* )&amp;pBackBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	hr = g_pd3dDevice-&gt;CreateRenderTargetView( pBackBuffer, NULL, &amp;g_pRenderTargetView );\n	pBackBuffer-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	g_pImmediateContext-&gt;OMSetRenderTargets( 1, &amp;g_pRenderTargetView, NULL );\n\n	// Setup the viewport\n	D3D11_VIEWPORT vp;\n	vp.Width = (FLOAT)width;\n	vp.Height = (FLOAT)height;\n	vp.MinDepth = 0.0f;\n	vp.MaxDepth = 1.0f;\n	vp.TopLeftX = 0;\n	vp.TopLeftY = 0;\n	g_pImmediateContext-&gt;RSSetViewports( 1, &amp;vp );\n\n	return S_OK;\n}\nHRESULT D3DBase::PS_Shader()\n{\n	// Compile the pixel shader\n	HRESULT hr=S_OK;\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;PS&quot;, &quot;ps_4_0&quot;, &amp;pPSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the pixel shader\n	hr = g_pd3dDevice-&gt;CreatePixelShader( pPSBlob-&gt;GetBufferPointer(), pPSBlob-&gt;GetBufferSize(), NULL, &amp;g_pPixelShader );\n	pPSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n}\nHRESULT D3DBase::InputLayout()\n{\n	HRESULT hr = S_OK;\n	// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;COLOR&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};\n	UINT numElements = ARRAYSIZE( layout );\n\n	// Create the input layout\n	hr = g_pd3dDevice-&gt;CreateInputLayout( layout, numElements, pVSBlob-&gt;GetBufferPointer(),\n		pVSBlob-&gt;GetBufferSize(), &amp;g_pVertexLayout );\n	pVSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set the input layout\n	g_pImmediateContext-&gt;IASetInputLayout( g_pVertexLayout );\n\n}\nHRESULT D3DBase::VS_Shader()\n{\n	HRESULT hr = S_OK;\n	// Compile the vertex shader\n	\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;VS&quot;, &quot;vs_4_0&quot;, &amp;pVSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the vertex shader\n	hr = g_pd3dDevice-&gt;CreateVertexShader( pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), NULL, &amp;g_pVertexShader );\n	if( FAILED( hr ) )\n	{	\n		pVSBlob-&gt;Release();\n		return hr;\n	}\n	return S_OK;\n}\n//--------------------------------------------------------------------------------------\n// Helper for compiling shaders with D3DX11\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut )\n{\n	HRESULT hr = S_OK;\n\n	DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;\n#if defined( DEBUG ) || defined( _DEBUG )\n	// Set the D3DCOMPILE_DEBUG flag to embed debug information in the shaders.\n	// Setting this flag improves the shader debugging experience, but still allows \n	// the shaders to be optimized and to run exactly the way they will run in \n	// the release configuration of this program.\n	dwShaderFlags |= D3DCOMPILE_DEBUG;\n#endif\n\n	ID3DBlob* pErrorBlob;\n	hr = D3DX11CompileFromFile( szFileName, NULL, NULL, szEntryPoint, szShaderModel, \n		dwShaderFlags, 0, NULL, ppBlobOut, &amp;pErrorBlob, NULL );\n	if( FAILED(hr) )\n	{\n		if( pErrorBlob != NULL )\n			OutputDebugStringA( (char*)pErrorBlob-&gt;GetBufferPointer() );\n		if( pErrorBlob ) pErrorBlob-&gt;Release();\n		return hr;\n	}\n	if( pErrorBlob ) pErrorBlob-&gt;Release();\n\n	return S_OK;\n}\n\n\n\n\n//--------------------------------------------------------------------------------------\n// Clean up the objects we&#39;ve created\n//--------------------------------------------------------------------------------------\nvoid D3DBase::CleanupDevice()\n{\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;ClearState();\n\n	if( g_pVertexBuffer ) g_pVertexBuffer-&gt;Release();\n	if( g_pVertexLayout ) g_pVertexLayout-&gt;Release();\n	if( g_pVertexShader ) g_pVertexShader-&gt;Release();\n	if( g_pPixelShader ) g_pPixelShader-&gt;Release();\n	if( g_pRenderTargetView ) g_pRenderTargetView-&gt;Release();\n	if( g_pSwapChain ) g_pSwapChain-&gt;Release();\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;Release();\n	if( g_pd3dDevice ) g_pd3dDevice-&gt;Release();\n	if( g_pIndexBuffer ) g_pIndexBuffer-&gt;Release();\n	if( g_pConstantBuffer ) g_pConstantBuffer-&gt;Release();\n}\n\n\n//--------------------------------------------------------------------------------------\n// Called every time the application receives a message\n//--------------------------------------------------------------------------------------\nLRESULT CALLBACK WndProc( HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam )\n{\n	PAINTSTRUCT ps;\n	HDC hdc;\n\n	switch( message )\n	{\n	case WM_PAINT:\n		hdc = BeginPaint( hWnd, &amp;ps );\n		EndPaint( hWnd, &amp;ps );\n		break;\n\n	case WM_DESTROY:\n		PostQuitMessage( 0 );\n		break;\n\n	default:\n		return DefWindowProc( hWnd, message, wParam, lParam );\n	}\n\n	return 0;\n}\n\nint D3DBase::BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow)\n{\n	UNREFERENCED_PARAMETER( hPrevInstance );\n	UNREFERENCED_PARAMETER( lpCmdLine );\n\n	//初始化window窗口\n	if( FAILED( d3d.InitWindow( hInstance, nCmdShow ,640,480) ) )\n		return 0;\n	//初始化设备\n	if( FAILED( d3d.InitDevice() ) )\n	{\n		d3d.CleanupDevice();\n		return 0;\n	}\n	//初始化\n	d3d.VS_Shader();  //顶点着色器\n	d3d.InputLayout();//顶点结构\n	d3d.PS_Shader();  //像素着色器\n	d3d.VertexIndex(); //构造顶点模型数据\n	//消息循环\n	MSG msg = {0};\n	while( WM_QUIT != msg.message )\n	{\n		if( PeekMessage( &amp;msg, NULL, 0, 0, PM_REMOVE ) )\n		{\n			TranslateMessage( &amp;msg );\n			DispatchMessage( &amp;msg );\n		}\n		else\n		{\n			//开始渲染\n			d3d.Render();\n		}\n	}\n	d3d.CleanupDevice();\n	return ( int )msg.wParam;\n}</pre><br>\r\n上面这个程序基本上不用改动。 最多在InputLayout 改动下输入顶点模型的&#26684;式。可以重载比较方便</p>\r\n<p><br>\r\n</p>\r\n<p>下面就是测试一个正方体的代码</p>\r\n<p><pre code_snippet_id=\"478504\" snippet_file_name=\"blog_20141001_2_4124520\"  name=\"code\" class=\"cpp\">#include &quot;D3DBase.h&quot;\nclass D3DProgam:public D3DBase\n{\npublic:\n	virtual void Render();  //重载渲染\n	virtual HRESULT VertexIndex();//重载初始化顶点模型数据 \n};\n//实例化程序\nD3DProgam d3d;\nHRESULT D3DProgam::VertexIndex()\n{\n	HRESULT hr = S_OK;\n	// Create vertex buffer\n	SimpleVertex vertices[] =\n	{\n		{ XMFLOAT3( -1.0f, 1.0f, -1.0f ), XMFLOAT4( 0.0f, 0.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, 1.0f, -1.0f ), XMFLOAT4( 0.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, 1.0f, 1.0f ), XMFLOAT4( 0.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, 1.0f, 1.0f ), XMFLOAT4( 1.0f, 0.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 0.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, 1.0f ), XMFLOAT4( 1.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, 1.0f ), XMFLOAT4( 0.0f, 0.0f, 0.0f, 1.0f ) },\n	};\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( SimpleVertex ) * 8;\n	bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	D3D11_SUBRESOURCE_DATA InitData;\n	ZeroMemory( &amp;InitData, sizeof(InitData) );\n	InitData.pSysMem = vertices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pVertexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set vertex buffer\n	UINT stride = sizeof( SimpleVertex );\n	UINT offset = 0;\n	g_pImmediateContext-&gt;IASetVertexBuffers( 0, 1, &amp;g_pVertexBuffer, &amp;stride, &amp;offset );\n\n	// Create index buffer\n	WORD indices[] =\n	{\n		3,1,0,\n		2,1,3,\n\n		0,5,4,\n		1,5,0,\n\n		3,4,7,\n		0,4,3,\n\n		1,6,5,\n		2,6,1,\n\n		2,7,6,\n		3,7,2,\n\n		6,4,5,\n		7,4,6,\n	};\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( WORD ) * 36;        // 36 vertices needed for 12 triangles in a triangle list\n	bd.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	InitData.pSysMem = indices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pIndexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set index buffer\n	g_pImmediateContext-&gt;IASetIndexBuffer( g_pIndexBuffer, DXGI_FORMAT_R16_UINT, 0 );\n\n	// Set primitive topology\n	g_pImmediateContext-&gt;IASetPrimitiveTopology( D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST );\n\n	// Create the constant buffer\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, NULL, &amp;g_pConstantBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// Initialize the world matrix\n	g_World = XMMatrixIdentity();\n\n	// Initialize the view matrix\n	XMVECTOR Eye = XMVectorSet( 0.0f, 1.0f, -5.0f, 0.0f );\n	XMVECTOR At = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	XMVECTOR Up = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	g_View = XMMatrixLookAtLH( Eye, At, Up );\n\n	// Initialize the projection matrix\n	g_Projection = XMMatrixPerspectiveFovLH( XM_PIDIV2, width / (FLOAT)height, 0.01f, 100.0f );\n}\n\n//渲染\nvoid D3DProgam::Render()\n{\n	// Update our time\n	static float t = 0.0f;\n	if( g_driverType == D3D_DRIVER_TYPE_REFERENCE )\n	{\n		t += ( float )XM_PI * 0.0125f;\n	}\n	else\n	{\n		static DWORD dwTimeStart = 0;\n		DWORD dwTimeCur = GetTickCount();\n		if( dwTimeStart == 0 )\n			dwTimeStart = dwTimeCur;\n		t = ( dwTimeCur - dwTimeStart ) / 1000.0f;\n	}\n\n	//\n	// Animate the cube\n	//\n	g_World = XMMatrixRotationY( t );\n\n	//\n	// Clear the back buffer\n	//\n	float ClearColor[4] = { 0.0f, 0.125f, 0.3f, 1.0f }; // red,green,blue,alpha\n	g_pImmediateContext-&gt;ClearRenderTargetView( g_pRenderTargetView, ClearColor );\n\n	//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( g_World );\n	cb.mView = XMMatrixTranspose( g_View );\n	cb.mProjection = XMMatrixTranspose( g_Projection );\n	g_pImmediateContext-&gt;UpdateSubresource( g_pConstantBuffer, 0, NULL, &amp;cb, 0, 0 );\n\n	//\n	// Renders a triangle\n	//\n	g_pImmediateContext-&gt;VSSetShader( g_pVertexShader, NULL, 0 );\n	g_pImmediateContext-&gt;VSSetConstantBuffers( 0, 1, &amp;g_pConstantBuffer );\n	g_pImmediateContext-&gt;PSSetShader( g_pPixelShader, NULL, 0 );\n	g_pImmediateContext-&gt;DrawIndexed( 36, 0, 0 );        // 36 vertices needed for 12 triangles in a triangle list\n\n	//\n	// Present our back buffer to our front buffer\n	//\n	g_pSwapChain-&gt;Present( 0, 0 );\n}\n//程序开始\nint WINAPI wWinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow )\n{\n	return D3DBase::BeginD3D(d3d,hInstance,hPrevInstance,lpCmdLine,nCmdShow);\n}</pre></p>\r\n<p><br>\r\n</p>\r\nfx文件\r\n<p><pre code_snippet_id=\"478504\" snippet_file_name=\"blog_20141001_3_1965712\"  name=\"code\" class=\"html\">//--------------------------------------------------------------------------------------\n// \n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//--------------------------------------------------------------------------------------\n\n//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer : register( b0 )\n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n}\n\n//--------------------------------------------------------------------------------------\nstruct VS_OUTPUT\n{\n    float4 Pos : SV_POSITION;\n    float4 Color : COLOR0;\n};\n\n//--------------------------------------------------------------------------------------\n// Vertex Shader\n//--------------------------------------------------------------------------------------\nVS_OUTPUT VS( float4 Pos : POSITION, float4 Color : COLOR )\n{\n    VS_OUTPUT output = (VS_OUTPUT)0;\n    output.Pos = mul( Pos, World );\n    output.Pos = mul( output.Pos, View );\n    output.Pos = mul( output.Pos, Projection );\n    output.Color = Color;\n    return output;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Pixel Shader\n//--------------------------------------------------------------------------------------\nfloat4 PS( VS_OUTPUT input ) : SV_Target\n{\n    return input.Color;\n}\n</pre><br>\r\n<br>\r\n是不是很方便，不用在每次添加代码的时候苦&#36924;的找render函数了。 &nbsp;当然封装比较鸡肋。我只是方便自己学习，高手别笑就是了。</p>\r\n<p>fx文件就不贴了，sample都有的</p>\r\n<p>效果</p>\r\n<p>：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141001222040656?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n','\r\n\r\n<p>为了加快学习速度，和使程序更加容易理解。 &nbsp;我把sampler tutorial里面的一个例子 的固定代码和经常改动的代码经过简单的类的封装了一下。</p>\r\n<p>以后学习的时候就可以只在另一个文件写render渲染代码和fx着色器代码了</p>\r\n<p>D3DBase.h &nbsp;基本框架代码</p>\r\n<p><pre code_snippet_id=\"478504\" snippet_file_name=\"blog_20141001_1_78339\"  name=\"code\" class=\"cpp\">#include &lt;windows.h&gt;\n#include &lt;d3d11.h&gt;\n#include &lt;d3dx11.h&gt;\n#include &lt;d3dcompiler.h&gt;\n#include &lt;xnamath.h&gt;\n#include &quot;resource.h&quot;\n\n//--------------------------------------------------------------------------------------\n// Global Variables\n//--------------------------------------------------------------------------------------\nHINSTANCE               g_hInst = NULL;\nHWND                    g_hWnd = NULL;\nD3D_DRIVER_TYPE         g_driverType = D3D_DRIVER_TYPE_NULL;\nD3D_FEATURE_LEVEL       g_featureLevel = D3D_FEATURE_LEVEL_11_0;\nID3D11Device*           g_pd3dDevice = NULL;\nID3D11DeviceContext*    g_pImmediateContext = NULL;\nIDXGISwapChain*         g_pSwapChain = NULL;\nID3D11RenderTargetView* g_pRenderTargetView = NULL;\nID3D11VertexShader*     g_pVertexShader = NULL;\nID3D11PixelShader*      g_pPixelShader = NULL;\nID3D11InputLayout*      g_pVertexLayout = NULL;\nID3D11Buffer*           g_pVertexBuffer = NULL;    //顶点缓冲\nID3D11Buffer*           g_pIndexBuffer = NULL;     //顶点索引\nID3D11Buffer*           g_pConstantBuffer = NULL;  //转换矩阵\n//转换矩阵\nXMMATRIX                g_World;\nXMMATRIX                g_View;\nXMMATRIX                g_Projection;\n\n//--------------------------------------------------------------------------------------\n// Structures\n//--------------------------------------------------------------------------------------\nstruct SimpleVertex\n{\n	XMFLOAT3 Pos;//位置\n	XMFLOAT4 Color;//颜色\n};\nstruct ConstantBuffer\n{\n	XMMATRIX mWorld;//世界矩阵\n	XMMATRIX mView;//观察矩阵\n	XMMATRIX mProjection;//投影矩阵\n};\nclass D3DBase\n{\npublic:\n	//--------------------------------------------------------------------------------------\n	// Forward declarations\n	//--------------------------------------------------------------------------------------\n	HRESULT InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h );\n	virtual HRESULT InitDevice();\n	virtual void Render()=0;\n	virtual HRESULT VertexIndex()=0;\n	virtual HRESULT VS_Shader();\n	virtual HRESULT InputLayout();\n	virtual HRESULT PS_Shader();\n	static int BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow);\n	virtual void CleanupDevice();\n	virtual HRESULT CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut );\npublic:\n	ID3DBlob* pVSBlob,*pPSBlob;\n	UINT width;\n	UINT height;\n};\nLRESULT CALLBACK   WndProc( HWND, UINT, WPARAM, LPARAM );\n\n//--------------------------------------------------------------------------------------\n// Register class and create window\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitWindow( HINSTANCE hInstance, int nCmdShow,float w,float h )\n{\n	// Register class\n	WNDCLASSEX wcex;\n	wcex.cbSize = sizeof( WNDCLASSEX );\n	wcex.style = CS_HREDRAW | CS_VREDRAW;\n	wcex.lpfnWndProc = WndProc;\n	wcex.cbClsExtra = 0;\n	wcex.cbWndExtra = 0;\n	wcex.hInstance = hInstance;\n	wcex.hIcon = LoadIcon( hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	wcex.hCursor = LoadCursor( NULL, IDC_ARROW );\n	wcex.hbrBackground = ( HBRUSH )( COLOR_WINDOW + 1 );\n	wcex.lpszMenuName = NULL;\n	wcex.lpszClassName = L&quot;TutorialWindowClass&quot;;\n	wcex.hIconSm = LoadIcon( wcex.hInstance, ( LPCTSTR )IDI_TUTORIAL1 );\n	if( !RegisterClassEx( &amp;wcex ) )\n		return E_FAIL;\n\n	// Create window\n	g_hInst = hInstance;\n	RECT rc = { 0, 0, w, h };\n	AdjustWindowRect( &amp;rc, WS_OVERLAPPEDWINDOW, FALSE );\n	g_hWnd = CreateWindow( L&quot;TutorialWindowClass&quot;, L&quot;Direct3D 11 Tutorial 3: Shaders&quot;,\n		WS_OVERLAPPEDWINDOW,\n		CW_USEDEFAULT, CW_USEDEFAULT, rc.right - rc.left, rc.bottom - rc.top, NULL, NULL, hInstance,\n		NULL );\n	if( !g_hWnd )\n		return E_FAIL;\n\n	ShowWindow( g_hWnd, nCmdShow );\n\n	return S_OK;\n}\n\n\n\n//--------------------------------------------------------------------------------------\n// Create Direct3D device and swap chain\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::InitDevice()\n{\n	HRESULT hr = S_OK;\n\n	RECT rc;\n	GetClientRect( g_hWnd, &amp;rc );\n	width = rc.right - rc.left;\n	height = rc.bottom - rc.top;\n\n	UINT createDeviceFlags = 0;\n#ifdef _DEBUG\n	createDeviceFlags |= D3D11_CREATE_DEVICE_DEBUG;\n#endif\n\n	D3D_DRIVER_TYPE driverTypes[] =\n	{\n		D3D_DRIVER_TYPE_HARDWARE,\n		D3D_DRIVER_TYPE_WARP,\n		D3D_DRIVER_TYPE_REFERENCE,\n	};\n	UINT numDriverTypes = ARRAYSIZE( driverTypes );\n\n	D3D_FEATURE_LEVEL featureLevels[] =\n	{\n		D3D_FEATURE_LEVEL_11_0,\n		D3D_FEATURE_LEVEL_10_1,\n		D3D_FEATURE_LEVEL_10_0,\n	};\n	UINT numFeatureLevels = ARRAYSIZE( featureLevels );\n\n	DXGI_SWAP_CHAIN_DESC sd;\n	ZeroMemory( &amp;sd, sizeof( sd ) );\n	sd.BufferCount = 1;\n	sd.BufferDesc.Width = width;\n	sd.BufferDesc.Height = height;\n	sd.BufferDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;\n	sd.BufferDesc.RefreshRate.Numerator = 60;\n	sd.BufferDesc.RefreshRate.Denominator = 1;\n	sd.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n	sd.OutputWindow = g_hWnd;\n	sd.SampleDesc.Count = 1;\n	sd.SampleDesc.Quality = 0;\n	sd.Windowed = TRUE;\n\n	for( UINT driverTypeIndex = 0; driverTypeIndex &lt; numDriverTypes; driverTypeIndex++ )\n	{\n		g_driverType = driverTypes[driverTypeIndex];\n		hr = D3D11CreateDeviceAndSwapChain( NULL, g_driverType, NULL, createDeviceFlags, featureLevels, numFeatureLevels,\n			D3D11_SDK_VERSION, &amp;sd, &amp;g_pSwapChain, &amp;g_pd3dDevice, &amp;g_featureLevel, &amp;g_pImmediateContext );\n		if( SUCCEEDED( hr ) )\n			break;\n	}\n	if( FAILED( hr ) )\n		return hr;\n\n	// Create a render target view\n	ID3D11Texture2D* pBackBuffer = NULL;\n	hr = g_pSwapChain-&gt;GetBuffer( 0, __uuidof( ID3D11Texture2D ), ( LPVOID* )&amp;pBackBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	hr = g_pd3dDevice-&gt;CreateRenderTargetView( pBackBuffer, NULL, &amp;g_pRenderTargetView );\n	pBackBuffer-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	g_pImmediateContext-&gt;OMSetRenderTargets( 1, &amp;g_pRenderTargetView, NULL );\n\n	// Setup the viewport\n	D3D11_VIEWPORT vp;\n	vp.Width = (FLOAT)width;\n	vp.Height = (FLOAT)height;\n	vp.MinDepth = 0.0f;\n	vp.MaxDepth = 1.0f;\n	vp.TopLeftX = 0;\n	vp.TopLeftY = 0;\n	g_pImmediateContext-&gt;RSSetViewports( 1, &amp;vp );\n\n	return S_OK;\n}\nHRESULT D3DBase::PS_Shader()\n{\n	// Compile the pixel shader\n	HRESULT hr=S_OK;\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;PS&quot;, &quot;ps_4_0&quot;, &amp;pPSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the pixel shader\n	hr = g_pd3dDevice-&gt;CreatePixelShader( pPSBlob-&gt;GetBufferPointer(), pPSBlob-&gt;GetBufferSize(), NULL, &amp;g_pPixelShader );\n	pPSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n}\nHRESULT D3DBase::InputLayout()\n{\n	HRESULT hr = S_OK;\n	// Define the input layout\n	D3D11_INPUT_ELEMENT_DESC layout[] =\n	{\n		{ &quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n		{ &quot;COLOR&quot;, 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },\n	};\n	UINT numElements = ARRAYSIZE( layout );\n\n	// Create the input layout\n	hr = g_pd3dDevice-&gt;CreateInputLayout( layout, numElements, pVSBlob-&gt;GetBufferPointer(),\n		pVSBlob-&gt;GetBufferSize(), &amp;g_pVertexLayout );\n	pVSBlob-&gt;Release();\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set the input layout\n	g_pImmediateContext-&gt;IASetInputLayout( g_pVertexLayout );\n\n}\nHRESULT D3DBase::VS_Shader()\n{\n	HRESULT hr = S_OK;\n	// Compile the vertex shader\n	\n	hr = CompileShaderFromFile( L&quot;Tutorial.fx&quot;, &quot;VS&quot;, &quot;vs_4_0&quot;, &amp;pVSBlob );\n	if( FAILED( hr ) )\n	{\n		MessageBox( NULL,\n			L&quot;The FX file cannot be compiled.  Please run this executable from the directory that contains the FX file.&quot;, L&quot;Error&quot;, MB_OK );\n		return hr;\n	}\n\n	// Create the vertex shader\n	hr = g_pd3dDevice-&gt;CreateVertexShader( pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), NULL, &amp;g_pVertexShader );\n	if( FAILED( hr ) )\n	{	\n		pVSBlob-&gt;Release();\n		return hr;\n	}\n	return S_OK;\n}\n//--------------------------------------------------------------------------------------\n// Helper for compiling shaders with D3DX11\n//--------------------------------------------------------------------------------------\nHRESULT D3DBase::CompileShaderFromFile( WCHAR* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut )\n{\n	HRESULT hr = S_OK;\n\n	DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;\n#if defined( DEBUG ) || defined( _DEBUG )\n	// Set the D3DCOMPILE_DEBUG flag to embed debug information in the shaders.\n	// Setting this flag improves the shader debugging experience, but still allows \n	// the shaders to be optimized and to run exactly the way they will run in \n	// the release configuration of this program.\n	dwShaderFlags |= D3DCOMPILE_DEBUG;\n#endif\n\n	ID3DBlob* pErrorBlob;\n	hr = D3DX11CompileFromFile( szFileName, NULL, NULL, szEntryPoint, szShaderModel, \n		dwShaderFlags, 0, NULL, ppBlobOut, &amp;pErrorBlob, NULL );\n	if( FAILED(hr) )\n	{\n		if( pErrorBlob != NULL )\n			OutputDebugStringA( (char*)pErrorBlob-&gt;GetBufferPointer() );\n		if( pErrorBlob ) pErrorBlob-&gt;Release();\n		return hr;\n	}\n	if( pErrorBlob ) pErrorBlob-&gt;Release();\n\n	return S_OK;\n}\n\n\n\n\n//--------------------------------------------------------------------------------------\n// Clean up the objects we&#39;ve created\n//--------------------------------------------------------------------------------------\nvoid D3DBase::CleanupDevice()\n{\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;ClearState();\n\n	if( g_pVertexBuffer ) g_pVertexBuffer-&gt;Release();\n	if( g_pVertexLayout ) g_pVertexLayout-&gt;Release();\n	if( g_pVertexShader ) g_pVertexShader-&gt;Release();\n	if( g_pPixelShader ) g_pPixelShader-&gt;Release();\n	if( g_pRenderTargetView ) g_pRenderTargetView-&gt;Release();\n	if( g_pSwapChain ) g_pSwapChain-&gt;Release();\n	if( g_pImmediateContext ) g_pImmediateContext-&gt;Release();\n	if( g_pd3dDevice ) g_pd3dDevice-&gt;Release();\n	if( g_pIndexBuffer ) g_pIndexBuffer-&gt;Release();\n	if( g_pConstantBuffer ) g_pConstantBuffer-&gt;Release();\n}\n\n\n//--------------------------------------------------------------------------------------\n// Called every time the application receives a message\n//--------------------------------------------------------------------------------------\nLRESULT CALLBACK WndProc( HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam )\n{\n	PAINTSTRUCT ps;\n	HDC hdc;\n\n	switch( message )\n	{\n	case WM_PAINT:\n		hdc = BeginPaint( hWnd, &amp;ps );\n		EndPaint( hWnd, &amp;ps );\n		break;\n\n	case WM_DESTROY:\n		PostQuitMessage( 0 );\n		break;\n\n	default:\n		return DefWindowProc( hWnd, message, wParam, lParam );\n	}\n\n	return 0;\n}\n\nint D3DBase::BeginD3D(D3DBase &amp;d3d,HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow)\n{\n	UNREFERENCED_PARAMETER( hPrevInstance );\n	UNREFERENCED_PARAMETER( lpCmdLine );\n\n	//初始化window窗口\n	if( FAILED( d3d.InitWindow( hInstance, nCmdShow ,640,480) ) )\n		return 0;\n	//初始化设备\n	if( FAILED( d3d.InitDevice() ) )\n	{\n		d3d.CleanupDevice();\n		return 0;\n	}\n	//初始化\n	d3d.VS_Shader();  //顶点着色器\n	d3d.InputLayout();//顶点结构\n	d3d.PS_Shader();  //像素着色器\n	d3d.VertexIndex(); //构造顶点模型数据\n	//消息循环\n	MSG msg = {0};\n	while( WM_QUIT != msg.message )\n	{\n		if( PeekMessage( &amp;msg, NULL, 0, 0, PM_REMOVE ) )\n		{\n			TranslateMessage( &amp;msg );\n			DispatchMessage( &amp;msg );\n		}\n		else\n		{\n			//开始渲染\n			d3d.Render();\n		}\n	}\n	d3d.CleanupDevice();\n	return ( int )msg.wParam;\n}</pre><br>\r\n上面这个程序基本上不用改动。 最多在InputLayout 改动下输入顶点模型的&#26684;式。可以重载比较方便</p>\r\n<p><br>\r\n</p>\r\n<p>下面就是测试一个正方体的代码</p>\r\n<p><pre code_snippet_id=\"478504\" snippet_file_name=\"blog_20141001_2_4124520\"  name=\"code\" class=\"cpp\">#include &quot;D3DBase.h&quot;\nclass D3DProgam:public D3DBase\n{\npublic:\n	virtual void Render();  //重载渲染\n	virtual HRESULT VertexIndex();//重载初始化顶点模型数据 \n};\n//实例化程序\nD3DProgam d3d;\nHRESULT D3DProgam::VertexIndex()\n{\n	HRESULT hr = S_OK;\n	// Create vertex buffer\n	SimpleVertex vertices[] =\n	{\n		{ XMFLOAT3( -1.0f, 1.0f, -1.0f ), XMFLOAT4( 0.0f, 0.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, 1.0f, -1.0f ), XMFLOAT4( 0.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, 1.0f, 1.0f ), XMFLOAT4( 0.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, 1.0f, 1.0f ), XMFLOAT4( 1.0f, 0.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 0.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, -1.0f ), XMFLOAT4( 1.0f, 1.0f, 0.0f, 1.0f ) },\n		{ XMFLOAT3( 1.0f, -1.0f, 1.0f ), XMFLOAT4( 1.0f, 1.0f, 1.0f, 1.0f ) },\n		{ XMFLOAT3( -1.0f, -1.0f, 1.0f ), XMFLOAT4( 0.0f, 0.0f, 0.0f, 1.0f ) },\n	};\n	D3D11_BUFFER_DESC bd;\n	ZeroMemory( &amp;bd, sizeof(bd) );\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( SimpleVertex ) * 8;\n	bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	D3D11_SUBRESOURCE_DATA InitData;\n	ZeroMemory( &amp;InitData, sizeof(InitData) );\n	InitData.pSysMem = vertices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pVertexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set vertex buffer\n	UINT stride = sizeof( SimpleVertex );\n	UINT offset = 0;\n	g_pImmediateContext-&gt;IASetVertexBuffers( 0, 1, &amp;g_pVertexBuffer, &amp;stride, &amp;offset );\n\n	// Create index buffer\n	WORD indices[] =\n	{\n		3,1,0,\n		2,1,3,\n\n		0,5,4,\n		1,5,0,\n\n		3,4,7,\n		0,4,3,\n\n		1,6,5,\n		2,6,1,\n\n		2,7,6,\n		3,7,2,\n\n		6,4,5,\n		7,4,6,\n	};\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof( WORD ) * 36;        // 36 vertices needed for 12 triangles in a triangle list\n	bd.BindFlags = D3D11_BIND_INDEX_BUFFER;\n	bd.CPUAccessFlags = 0;\n	InitData.pSysMem = indices;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, &amp;InitData, &amp;g_pIndexBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// Set index buffer\n	g_pImmediateContext-&gt;IASetIndexBuffer( g_pIndexBuffer, DXGI_FORMAT_R16_UINT, 0 );\n\n	// Set primitive topology\n	g_pImmediateContext-&gt;IASetPrimitiveTopology( D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST );\n\n	// Create the constant buffer\n	bd.Usage = D3D11_USAGE_DEFAULT;\n	bd.ByteWidth = sizeof(ConstantBuffer);\n	bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;\n	bd.CPUAccessFlags = 0;\n	hr = g_pd3dDevice-&gt;CreateBuffer( &amp;bd, NULL, &amp;g_pConstantBuffer );\n	if( FAILED( hr ) )\n		return hr;\n\n	// Initialize the world matrix\n	g_World = XMMatrixIdentity();\n\n	// Initialize the view matrix\n	XMVECTOR Eye = XMVectorSet( 0.0f, 1.0f, -5.0f, 0.0f );\n	XMVECTOR At = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	XMVECTOR Up = XMVectorSet( 0.0f, 1.0f, 0.0f, 0.0f );\n	g_View = XMMatrixLookAtLH( Eye, At, Up );\n\n	// Initialize the projection matrix\n	g_Projection = XMMatrixPerspectiveFovLH( XM_PIDIV2, width / (FLOAT)height, 0.01f, 100.0f );\n}\n\n//渲染\nvoid D3DProgam::Render()\n{\n	// Update our time\n	static float t = 0.0f;\n	if( g_driverType == D3D_DRIVER_TYPE_REFERENCE )\n	{\n		t += ( float )XM_PI * 0.0125f;\n	}\n	else\n	{\n		static DWORD dwTimeStart = 0;\n		DWORD dwTimeCur = GetTickCount();\n		if( dwTimeStart == 0 )\n			dwTimeStart = dwTimeCur;\n		t = ( dwTimeCur - dwTimeStart ) / 1000.0f;\n	}\n\n	//\n	// Animate the cube\n	//\n	g_World = XMMatrixRotationY( t );\n\n	//\n	// Clear the back buffer\n	//\n	float ClearColor[4] = { 0.0f, 0.125f, 0.3f, 1.0f }; // red,green,blue,alpha\n	g_pImmediateContext-&gt;ClearRenderTargetView( g_pRenderTargetView, ClearColor );\n\n	//\n	// Update variables\n	//\n	ConstantBuffer cb;\n	cb.mWorld = XMMatrixTranspose( g_World );\n	cb.mView = XMMatrixTranspose( g_View );\n	cb.mProjection = XMMatrixTranspose( g_Projection );\n	g_pImmediateContext-&gt;UpdateSubresource( g_pConstantBuffer, 0, NULL, &amp;cb, 0, 0 );\n\n	//\n	// Renders a triangle\n	//\n	g_pImmediateContext-&gt;VSSetShader( g_pVertexShader, NULL, 0 );\n	g_pImmediateContext-&gt;VSSetConstantBuffers( 0, 1, &amp;g_pConstantBuffer );\n	g_pImmediateContext-&gt;PSSetShader( g_pPixelShader, NULL, 0 );\n	g_pImmediateContext-&gt;DrawIndexed( 36, 0, 0 );        // 36 vertices needed for 12 triangles in a triangle list\n\n	//\n	// Present our back buffer to our front buffer\n	//\n	g_pSwapChain-&gt;Present( 0, 0 );\n}\n//程序开始\nint WINAPI wWinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow )\n{\n	return D3DBase::BeginD3D(d3d,hInstance,hPrevInstance,lpCmdLine,nCmdShow);\n}</pre></p>\r\n<p><br>\r\n</p>\r\nfx文件\r\n<p><pre code_snippet_id=\"478504\" snippet_file_name=\"blog_20141001_3_1965712\"  name=\"code\" class=\"html\">//--------------------------------------------------------------------------------------\n// \n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//--------------------------------------------------------------------------------------\n\n//--------------------------------------------------------------------------------------\n// Constant Buffer Variables\n//--------------------------------------------------------------------------------------\ncbuffer ConstantBuffer : register( b0 )\n{\n	matrix World;\n	matrix View;\n	matrix Projection;\n}\n\n//--------------------------------------------------------------------------------------\nstruct VS_OUTPUT\n{\n    float4 Pos : SV_POSITION;\n    float4 Color : COLOR0;\n};\n\n//--------------------------------------------------------------------------------------\n// Vertex Shader\n//--------------------------------------------------------------------------------------\nVS_OUTPUT VS( float4 Pos : POSITION, float4 Color : COLOR )\n{\n    VS_OUTPUT output = (VS_OUTPUT)0;\n    output.Pos = mul( Pos, World );\n    output.Pos = mul( output.Pos, View );\n    output.Pos = mul( output.Pos, Projection );\n    output.Color = Color;\n    return output;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Pixel Shader\n//--------------------------------------------------------------------------------------\nfloat4 PS( VS_OUTPUT input ) : SV_Target\n{\n    return input.Color;\n}\n</pre><br>\r\n<br>\r\n是不是很方便，不用在每次添加代码的时候苦&#36924;的找render函数了。 &nbsp;当然封装比较鸡肋。我只是方便自己学习，高手别笑就是了。</p>\r\n<p>fx文件就不贴了，sample都有的</p>\r\n<p>效果</p>\r\n<p>：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141001222040656?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n',3,'directx,c++',0,0,'2015-02-02 00:45:45','2015-02-02 00:45:45','2015-02-02 00:45:45'),(38,1,7,'Directx9.0 学习教程5 光照','0386c8f767caf1b68a65638f377760ac',0,'\r\n\r\n<p align=\"center\">光照</p>\r\n<p>&nbsp;</p>\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先需要定义这样的顶点结构</p>\r\n<p>&nbsp;</p>\r\n<pre><pre name=\"code\" class=\"cpp\">struct CUSTOMVER','\r\n\r\n<p align=\"center\">光照</p>\r\n<p>&nbsp;</p>\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先需要定义这样的顶点结构</p>\r\n<p>&nbsp;</p>\r\n<pre><pre name=\"code\" class=\"cpp\">struct CUSTOMVERTEX\n{\n    D3DXVECTOR3position; // 顶点\n    D3DXVECTOR3normal;   // 法向量\n};\n// Custom flexible vertex format (FVF).\n#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ|D3DFVF_NORMAL)</pre><br><br></pre>\r\n<p align=\"left\">&nbsp;</p>\r\n<p align=\"left\">2.&nbsp;然后创建一个圆柱体顶点模型</p>\r\n<p align=\"left\">&nbsp;</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">// Create the vertex buffer.\n   if( FAILED(g_pd3dDevice-&gt;CreateVertexBuffer(50 * 2 * sizeof( CUSTOMVERTEX),\n                                                 0, D3DFVF_CUSTOMVERTEX,\n                                                 D3DPOOL_DEFAULT, &amp;g_pVB, NULL ) ))\n   {\n       return E_FAIL;\n    }\n \n   // Fill the vertex buffer. We arealgorithmically generating a cylinder\n   // here, including the normals, which are usedfor lighting.\n   CUSTOMVERTEX* pVertices;\n   if( FAILED(g_pVB-&gt;Lock(0, 0, ( void** )&amp;pVertices,0 ) ) )\n       return E_FAIL;\n   for( DWORDi = 0; i&lt; 50; i++ )\n   {\n       FLOAT theta= ( 2 * D3DX_PI * i) / ( 50 - 1 );\n       pVertices[2 * i + 0].position = D3DXVECTOR3( sinf(theta ), -1.0f, cosf(theta ) );\n       pVertices[2 * i + 0].normal = D3DXVECTOR3( sinf(theta ), 0.0f, cosf(theta ) );\n       pVertices[2 * i + 1].position = D3DXVECTOR3( sinf(theta ), 1.0f, cosf(theta ) );\n       pVertices[2 * i + 1].normal = D3DXVECTOR3( sinf(theta ), 0.0f, cosf(theta ) );\n   }\n   g_pVB-&gt;Unlock();\n </pre><br>\r\n<br>\r\n</p>\r\n<p>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建灯光</p>\r\n<p align=\"left\">&nbsp;<pre name=\"code\" class=\"cpp\">// Set up a material. The material here just has thediffuse and ambient\n   // colors set to yellow. Note that only onematerial can be used at a time.\n   D3DMATERIAL9 mtrl;  //因为有光照，所以需要创建一个材质来接受\n   ZeroMemory( &amp;mtrl, sizeof( D3DMATERIAL9 ) );\n   mtrl.Diffuse.r = mtrl.Ambient.r =1.0f;\n   mtrl.Diffuse.g = mtrl.Ambient.g =1.0f;\n   mtrl.Diffuse.b = mtrl.Ambient.b =0.0f;\n   mtrl.Diffuse.a = mtrl.Ambient.a =1.0f;\n   g_pd3dDevice-&gt;SetMaterial( &amp;mtrl);\n \n   // Set up a white, directional light, with anoscillating direction.\n   // Note that many lights may be active at atime (but each one slows down\n   // the rendering of our scene). However, herewe are just using one. Also,\n   // we need to set the D3DRS_LIGHTINGrenderstate to enable lighting\n   D3DXVECTOR3 vecDir;\n   D3DLIGHT9 light;//创建灯光\n   ZeroMemory( &amp;light, sizeof( D3DLIGHT9 ) );\n   light.Type= D3DLIGHT_DIRECTIONAL; //设置为平行光\n   light.Diffuse.r = 1.0f;\n   light.Diffuse.g = 1.0f;\n   light.Diffuse.b = 1.0f;\n   vecDir = D3DXVECTOR3(cosf( timeGetTime()/ 350.0f ), //方向随时间变化\n                          1.0f,\n                          sinf( timeGetTime()/ 350.0f ) );\n   D3DXVec3Normalize( ( D3DXVECTOR3* )&amp;light.Direction, &amp;vecDir); //单位化方向\n   light.Range= 1000.0f;//方向光这个参数无效\n   g_pd3dDevice-&gt;SetLight( 0, &amp;light);\n   g_pd3dDevice-&gt;LightEnable( 0, TRUE);\n   g_pd3dDevice-&gt;SetRenderState( D3DRS_LIGHTING,TRUE ); //开启光照\n \n   // Finally, turn on some ambient light.\n   g_pd3dDevice-&gt;SetRenderState( D3DRS_AMBIENT,0x00202020 ); //设置环境光</pre><br>\r\n</p>\r\n<p align=\"left\">比较简单，</p>\r\n<p align=\"left\">效果：<img src=\"http://img.blog.csdn.net/20140929184510100?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p align=\"left\"><br>\r\n</p>\r\n<p align=\"left\">全部代码:</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">//-----------------------------------------------------------------------------\n// File: Lights.cpp\n//\n// Desc: Rendering 3D geometry is much more interesting when dynamic lighting\n//       is added to the scene. To use lighting in D3D, you must create one or\n//       lights, setup a material, and make sure your geometry contains surface\n//       normals. Lights may have a position, a color, and be of a certain type\n//       such as directional (light comes from one direction), point (light\n//       comes from a specific x,y,z coordinate and radiates in all directions)\n//       or spotlight. Materials describe the surface of your geometry,\n//       specifically, how it gets lit (diffuse color, ambient color, etc.).\n//       Surface normals are part of a vertex, and are needed for the D3D&#39;s\n//       internal lighting calculations.\n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//-----------------------------------------------------------------------------\n#include &lt;Windows.h&gt;\n#include &lt;mmsystem.h&gt;\n#include &lt;d3dx9.h&gt;\n#pragma warning( disable : 4996 ) // disable deprecated warning \n#include &lt;strsafe.h&gt;\n#pragma warning( default : 4996 )\n\n\n\n\n//-----------------------------------------------------------------------------\n// Global variables\n//-----------------------------------------------------------------------------\nLPDIRECT3D9             g_pD3D = NULL; // Used to create the D3DDevice\nLPDIRECT3DDEVICE9       g_pd3dDevice = NULL; // Our rendering device\nLPDIRECT3DVERTEXBUFFER9 g_pVB = NULL; // Buffer to hold vertices\n\n// A structure for our custom vertex type. We added a normal, and omitted the\n// color (which is provided by the material)\nstruct CUSTOMVERTEX\n{\n    D3DXVECTOR3 position; // The 3D position for the vertex\n    D3DXVECTOR3 normal;   // The surface normal for the vertex\n};\n\n// Our custom FVF, which describes our custom vertex structure\n#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ|D3DFVF_NORMAL)\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: InitD3D()\n// Desc: Initializes Direct3D\n//-----------------------------------------------------------------------------\nHRESULT InitD3D( HWND hWnd )\n{\n    // Create the D3D object.\n    if( NULL == ( g_pD3D = Direct3DCreate9( D3D_SDK_VERSION ) ) )\n        return E_FAIL;\n\n    // Set up the structure used to create the D3DDevice. Since we are now\n    // using more complex geometry, we will create a device with a zbuffer.\n    D3DPRESENT_PARAMETERS d3dpp;\n    ZeroMemory( &amp;d3dpp, sizeof( d3dpp ) );\n    d3dpp.Windowed = TRUE;\n    d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;\n    d3dpp.BackBufferFormat = D3DFMT_UNKNOWN;\n    d3dpp.EnableAutoDepthStencil = TRUE;\n    d3dpp.AutoDepthStencilFormat = D3DFMT_D16;\n\n    // Create the D3DDevice\n    if( FAILED( g_pD3D-&gt;CreateDevice( D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, hWnd,\n                                      D3DCREATE_SOFTWARE_VERTEXPROCESSING,\n                                      &amp;d3dpp, &amp;g_pd3dDevice ) ) )\n    {\n        return E_FAIL;\n    }\n\n    // Turn off culling\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_CULLMODE, D3DCULL_NONE );\n\n    // Turn on the zbuffer\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_ZENABLE, TRUE );\n\n    return S_OK;\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: InitGeometry()\n// Desc: Creates the scene geometry\n//-----------------------------------------------------------------------------\nHRESULT InitGeometry()\n{\n    // Create the vertex buffer.\n    if( FAILED( g_pd3dDevice-&gt;CreateVertexBuffer( 50 * 2 * sizeof( CUSTOMVERTEX ),\n                                                  0, D3DFVF_CUSTOMVERTEX,\n                                                  D3DPOOL_DEFAULT, &amp;g_pVB, NULL ) ) )\n    {\n        return E_FAIL;\n    }\n\n    // Fill the vertex buffer. We are algorithmically generating a cylinder\n    // here, including the normals, which are used for lighting.\n    CUSTOMVERTEX* pVertices;\n    if( FAILED( g_pVB-&gt;Lock( 0, 0, ( void** )&amp;pVertices, 0 ) ) )\n        return E_FAIL;\n    for( DWORD i = 0; i &lt; 50; i++ )\n    {\n        FLOAT theta = ( 2 * D3DX_PI * i ) / ( 50 - 1 );\n        pVertices[2 * i + 0].position = D3DXVECTOR3( sinf( theta ), -1.0f, cosf( theta ) );\n        pVertices[2 * i + 0].normal = D3DXVECTOR3( sinf( theta ), 0.0f, cosf( theta ) );\n        pVertices[2 * i + 1].position = D3DXVECTOR3( sinf( theta ), 1.0f, cosf( theta ) );\n        pVertices[2 * i + 1].normal = D3DXVECTOR3( sinf( theta ), 0.0f, cosf( theta ) );\n    }\n    g_pVB-&gt;Unlock();\n\n    return S_OK;\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: Cleanup()\n// Desc: Releases all previously initialized objects\n//-----------------------------------------------------------------------------\nVOID Cleanup()\n{\n    if( g_pVB != NULL )\n        g_pVB-&gt;Release();\n\n    if( g_pd3dDevice != NULL )\n        g_pd3dDevice-&gt;Release();\n\n    if( g_pD3D != NULL )\n        g_pD3D-&gt;Release();\n}\n\n\n\n//-----------------------------------------------------------------------------\n// Name: SetupMatrices()\n// Desc: Sets up the world, view, and projection transform matrices.\n//-----------------------------------------------------------------------------\nVOID SetupMatrices()\n{\n    // Set up world matrix\n    D3DXMATRIXA16 matWorld;\n    D3DXMatrixIdentity( &amp;matWorld );\n    D3DXMatrixRotationX( &amp;matWorld, D3DX_PI/4);\n    g_pd3dDevice-&gt;SetTransform( D3DTS_WORLD, &amp;matWorld );\n\n    // Set up our view matrix. A view matrix can be defined given an eye point,\n    // a point to lookat, and a direction for which way is up. Here, we set the\n    // eye five units back along the z-axis and up three units, look at the\n    // origin, and define &quot;up&quot; to be in the y-direction.\n    D3DXVECTOR3 vEyePt( 0.0f, 3.0f,-5.0f );\n    D3DXVECTOR3 vLookatPt( 0.0f, 0.0f, 0.0f );\n    D3DXVECTOR3 vUpVec( 0.0f, 1.0f, 0.0f );\n    D3DXMATRIXA16 matView;\n    D3DXMatrixLookAtLH( &amp;matView, &amp;vEyePt, &amp;vLookatPt, &amp;vUpVec );\n    g_pd3dDevice-&gt;SetTransform( D3DTS_VIEW, &amp;matView );\n\n    // For the projection matrix, we set up a perspective transform (which\n    // transforms geometry from 3D view space to 2D viewport space, with\n    // a perspective divide making objects smaller in the distance). To build\n    // a perpsective transform, we need the field of view (1/4 pi is common),\n    // the aspect ratio, and the near and far clipping planes (which define at\n    // what distances geometry should be no longer be rendered).\n    D3DXMATRIXA16 matProj;\n    D3DXMatrixPerspectiveFovLH( &amp;matProj, D3DX_PI / 4, 1.0f, 1.0f, 100.0f );\n    g_pd3dDevice-&gt;SetTransform( D3DTS_PROJECTION, &amp;matProj );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: SetupLights()\n// Desc: Sets up the lights and materials for the scene.\n//-----------------------------------------------------------------------------\nVOID SetupLights()\n{\n    // Set up a material. The material here just has the diffuse and ambient\n    // colors set to yellow. Note that only one material can be used at a time.\n    D3DMATERIAL9 mtrl;\n    ZeroMemory( &amp;mtrl, sizeof( D3DMATERIAL9 ) );\n    mtrl.Diffuse.r = mtrl.Ambient.r = 1.0f;\n    mtrl.Diffuse.g = mtrl.Ambient.g = 1.0f;\n    mtrl.Diffuse.b = mtrl.Ambient.b = 0.0f;\n    mtrl.Diffuse.a = mtrl.Ambient.a = 1.0f;\n    g_pd3dDevice-&gt;SetMaterial( &amp;mtrl );\n\n    // Set up a white, directional light, with an oscillating direction.\n    // Note that many lights may be active at a time (but each one slows down\n    // the rendering of our scene). However, here we are just using one. Also,\n    // we need to set the D3DRS_LIGHTING renderstate to enable lighting\n    D3DXVECTOR3 vecDir;\n    D3DLIGHT9 light;\n    ZeroMemory( &amp;light, sizeof( D3DLIGHT9 ) );\n    light.Type = D3DLIGHT_DIRECTIONAL;\n    light.Diffuse.r = 1.0f;\n    light.Diffuse.g = 1.0f;\n    light.Diffuse.b = 1.0f;\n    vecDir = D3DXVECTOR3( cosf( timeGetTime() / 350.0f ),\n                          1.0f,\n                          sinf( timeGetTime() / 350.0f ) );\n    D3DXVec3Normalize( ( D3DXVECTOR3* )&amp;light.Direction, &amp;vecDir );\n    light.Range = 1000.0f;\n    g_pd3dDevice-&gt;SetLight( 0, &amp;light );\n    g_pd3dDevice-&gt;LightEnable( 0, TRUE );\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_LIGHTING, TRUE );\n\n    // Finally, turn on some ambient light.\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_AMBIENT, 0x00202020 );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: Render()\n// Desc: Draws the scene\n//-----------------------------------------------------------------------------\nVOID Render()\n{\n    // Clear the backbuffer and the zbuffer\n    g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER,\n                         D3DCOLOR_XRGB( 0, 0, 255 ), 1.0f, 0 );\n\n    // Begin the scene\n    if( SUCCEEDED( g_pd3dDevice-&gt;BeginScene() ) )\n    {\n        // Setup the lights and materials\n        SetupLights();\n\n        // Setup the world, view, and projection matrices\n        SetupMatrices();\n\n        // Render the vertex buffer contents\n        g_pd3dDevice-&gt;SetStreamSource( 0, g_pVB, 0, sizeof( CUSTOMVERTEX ) );\n        g_pd3dDevice-&gt;SetFVF( D3DFVF_CUSTOMVERTEX );\n        g_pd3dDevice-&gt;DrawPrimitive( D3DPT_TRIANGLESTRIP, 0, 2 * 50 - 2 );\n\n        // End the scene\n        g_pd3dDevice-&gt;EndScene();\n    }\n\n    // Present the backbuffer contents to the display\n    g_pd3dDevice-&gt;Present( NULL, NULL, NULL, NULL );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: MsgProc()\n// Desc: The window&#39;s message handler\n//-----------------------------------------------------------------------------\nLRESULT WINAPI MsgProc( HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam )\n{\n    switch( msg )\n    {\n        case WM_DESTROY:\n            Cleanup();\n            PostQuitMessage( 0 );\n            return 0;\n    }\n\n    return DefWindowProc( hWnd, msg, wParam, lParam );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: WinMain()\n// Desc: The application&#39;s entry point\n//-----------------------------------------------------------------------------\nINT WINAPI wWinMain( HINSTANCE hInst, HINSTANCE, LPWSTR, INT )\n{\n    UNREFERENCED_PARAMETER( hInst );\n\n    // Register the window class\n    WNDCLASSEX wc =\n    {\n        sizeof( WNDCLASSEX ), CS_CLASSDC, MsgProc, 0L, 0L,\n        GetModuleHandle( NULL ), NULL, NULL, NULL, NULL,\n        L&quot;D3D Tutorial&quot;, NULL\n    };\n    RegisterClassEx( &amp;wc );\n\n    // Create the application&#39;s window\n    HWND hWnd = CreateWindow( L&quot;D3D Tutorial&quot;, L&quot;D3D Tutorial 04: Lights&quot;,\n                              WS_OVERLAPPEDWINDOW, 100, 100, 300, 300,\n                              NULL, NULL, wc.hInstance, NULL );\n\n    // Initialize Direct3D\n    if( SUCCEEDED( InitD3D( hWnd ) ) )\n    {\n        // Create the geometry\n        if( SUCCEEDED( InitGeometry() ) )\n        {\n            // Show the window\n            ShowWindow( hWnd, SW_SHOWDEFAULT );\n            UpdateWindow( hWnd );\n\n            // Enter the message loop\n            MSG msg;\n            ZeroMemory( &amp;msg, sizeof( msg ) );\n            while( msg.message != WM_QUIT )\n            {\n                if( PeekMessage( &amp;msg, NULL, 0U, 0U, PM_REMOVE ) )\n                {\n                    TranslateMessage( &amp;msg );\n                    DispatchMessage( &amp;msg );\n                }\n                else\n                    Render();\n            }\n        }\n    }\n\n    UnregisterClass( L&quot;D3D Tutorial&quot;, wc.hInstance );\n    return 0;\n}\n\n\n</pre><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p align=\"center\">光照</p>\r\n<p>&nbsp;</p>\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先需要定义这样的顶点结构</p>\r\n<p>&nbsp;</p>\r\n<pre><pre name=\"code\" class=\"cpp\">struct CUSTOMVERTEX\n{\n    D3DXVECTOR3position; // 顶点\n    D3DXVECTOR3normal;   // 法向量\n};\n// Custom flexible vertex format (FVF).\n#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ|D3DFVF_NORMAL)</pre><br><br></pre>\r\n<p align=\"left\">&nbsp;</p>\r\n<p align=\"left\">2.&nbsp;然后创建一个圆柱体顶点模型</p>\r\n<p align=\"left\">&nbsp;</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">// Create the vertex buffer.\n   if( FAILED(g_pd3dDevice-&gt;CreateVertexBuffer(50 * 2 * sizeof( CUSTOMVERTEX),\n                                                 0, D3DFVF_CUSTOMVERTEX,\n                                                 D3DPOOL_DEFAULT, &amp;g_pVB, NULL ) ))\n   {\n       return E_FAIL;\n    }\n \n   // Fill the vertex buffer. We arealgorithmically generating a cylinder\n   // here, including the normals, which are usedfor lighting.\n   CUSTOMVERTEX* pVertices;\n   if( FAILED(g_pVB-&gt;Lock(0, 0, ( void** )&amp;pVertices,0 ) ) )\n       return E_FAIL;\n   for( DWORDi = 0; i&lt; 50; i++ )\n   {\n       FLOAT theta= ( 2 * D3DX_PI * i) / ( 50 - 1 );\n       pVertices[2 * i + 0].position = D3DXVECTOR3( sinf(theta ), -1.0f, cosf(theta ) );\n       pVertices[2 * i + 0].normal = D3DXVECTOR3( sinf(theta ), 0.0f, cosf(theta ) );\n       pVertices[2 * i + 1].position = D3DXVECTOR3( sinf(theta ), 1.0f, cosf(theta ) );\n       pVertices[2 * i + 1].normal = D3DXVECTOR3( sinf(theta ), 0.0f, cosf(theta ) );\n   }\n   g_pVB-&gt;Unlock();\n </pre><br>\r\n<br>\r\n</p>\r\n<p>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建灯光</p>\r\n<p align=\"left\">&nbsp;<pre name=\"code\" class=\"cpp\">// Set up a material. The material here just has thediffuse and ambient\n   // colors set to yellow. Note that only onematerial can be used at a time.\n   D3DMATERIAL9 mtrl;  //因为有光照，所以需要创建一个材质来接受\n   ZeroMemory( &amp;mtrl, sizeof( D3DMATERIAL9 ) );\n   mtrl.Diffuse.r = mtrl.Ambient.r =1.0f;\n   mtrl.Diffuse.g = mtrl.Ambient.g =1.0f;\n   mtrl.Diffuse.b = mtrl.Ambient.b =0.0f;\n   mtrl.Diffuse.a = mtrl.Ambient.a =1.0f;\n   g_pd3dDevice-&gt;SetMaterial( &amp;mtrl);\n \n   // Set up a white, directional light, with anoscillating direction.\n   // Note that many lights may be active at atime (but each one slows down\n   // the rendering of our scene). However, herewe are just using one. Also,\n   // we need to set the D3DRS_LIGHTINGrenderstate to enable lighting\n   D3DXVECTOR3 vecDir;\n   D3DLIGHT9 light;//创建灯光\n   ZeroMemory( &amp;light, sizeof( D3DLIGHT9 ) );\n   light.Type= D3DLIGHT_DIRECTIONAL; //设置为平行光\n   light.Diffuse.r = 1.0f;\n   light.Diffuse.g = 1.0f;\n   light.Diffuse.b = 1.0f;\n   vecDir = D3DXVECTOR3(cosf( timeGetTime()/ 350.0f ), //方向随时间变化\n                          1.0f,\n                          sinf( timeGetTime()/ 350.0f ) );\n   D3DXVec3Normalize( ( D3DXVECTOR3* )&amp;light.Direction, &amp;vecDir); //单位化方向\n   light.Range= 1000.0f;//方向光这个参数无效\n   g_pd3dDevice-&gt;SetLight( 0, &amp;light);\n   g_pd3dDevice-&gt;LightEnable( 0, TRUE);\n   g_pd3dDevice-&gt;SetRenderState( D3DRS_LIGHTING,TRUE ); //开启光照\n \n   // Finally, turn on some ambient light.\n   g_pd3dDevice-&gt;SetRenderState( D3DRS_AMBIENT,0x00202020 ); //设置环境光</pre><br>\r\n</p>\r\n<p align=\"left\">比较简单，</p>\r\n<p align=\"left\">效果：<img src=\"http://img.blog.csdn.net/20140929184510100?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p align=\"left\"><br>\r\n</p>\r\n<p align=\"left\">全部代码:</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">//-----------------------------------------------------------------------------\n// File: Lights.cpp\n//\n// Desc: Rendering 3D geometry is much more interesting when dynamic lighting\n//       is added to the scene. To use lighting in D3D, you must create one or\n//       lights, setup a material, and make sure your geometry contains surface\n//       normals. Lights may have a position, a color, and be of a certain type\n//       such as directional (light comes from one direction), point (light\n//       comes from a specific x,y,z coordinate and radiates in all directions)\n//       or spotlight. Materials describe the surface of your geometry,\n//       specifically, how it gets lit (diffuse color, ambient color, etc.).\n//       Surface normals are part of a vertex, and are needed for the D3D&#39;s\n//       internal lighting calculations.\n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//-----------------------------------------------------------------------------\n#include &lt;Windows.h&gt;\n#include &lt;mmsystem.h&gt;\n#include &lt;d3dx9.h&gt;\n#pragma warning( disable : 4996 ) // disable deprecated warning \n#include &lt;strsafe.h&gt;\n#pragma warning( default : 4996 )\n\n\n\n\n//-----------------------------------------------------------------------------\n// Global variables\n//-----------------------------------------------------------------------------\nLPDIRECT3D9             g_pD3D = NULL; // Used to create the D3DDevice\nLPDIRECT3DDEVICE9       g_pd3dDevice = NULL; // Our rendering device\nLPDIRECT3DVERTEXBUFFER9 g_pVB = NULL; // Buffer to hold vertices\n\n// A structure for our custom vertex type. We added a normal, and omitted the\n// color (which is provided by the material)\nstruct CUSTOMVERTEX\n{\n    D3DXVECTOR3 position; // The 3D position for the vertex\n    D3DXVECTOR3 normal;   // The surface normal for the vertex\n};\n\n// Our custom FVF, which describes our custom vertex structure\n#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ|D3DFVF_NORMAL)\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: InitD3D()\n// Desc: Initializes Direct3D\n//-----------------------------------------------------------------------------\nHRESULT InitD3D( HWND hWnd )\n{\n    // Create the D3D object.\n    if( NULL == ( g_pD3D = Direct3DCreate9( D3D_SDK_VERSION ) ) )\n        return E_FAIL;\n\n    // Set up the structure used to create the D3DDevice. Since we are now\n    // using more complex geometry, we will create a device with a zbuffer.\n    D3DPRESENT_PARAMETERS d3dpp;\n    ZeroMemory( &amp;d3dpp, sizeof( d3dpp ) );\n    d3dpp.Windowed = TRUE;\n    d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;\n    d3dpp.BackBufferFormat = D3DFMT_UNKNOWN;\n    d3dpp.EnableAutoDepthStencil = TRUE;\n    d3dpp.AutoDepthStencilFormat = D3DFMT_D16;\n\n    // Create the D3DDevice\n    if( FAILED( g_pD3D-&gt;CreateDevice( D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, hWnd,\n                                      D3DCREATE_SOFTWARE_VERTEXPROCESSING,\n                                      &amp;d3dpp, &amp;g_pd3dDevice ) ) )\n    {\n        return E_FAIL;\n    }\n\n    // Turn off culling\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_CULLMODE, D3DCULL_NONE );\n\n    // Turn on the zbuffer\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_ZENABLE, TRUE );\n\n    return S_OK;\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: InitGeometry()\n// Desc: Creates the scene geometry\n//-----------------------------------------------------------------------------\nHRESULT InitGeometry()\n{\n    // Create the vertex buffer.\n    if( FAILED( g_pd3dDevice-&gt;CreateVertexBuffer( 50 * 2 * sizeof( CUSTOMVERTEX ),\n                                                  0, D3DFVF_CUSTOMVERTEX,\n                                                  D3DPOOL_DEFAULT, &amp;g_pVB, NULL ) ) )\n    {\n        return E_FAIL;\n    }\n\n    // Fill the vertex buffer. We are algorithmically generating a cylinder\n    // here, including the normals, which are used for lighting.\n    CUSTOMVERTEX* pVertices;\n    if( FAILED( g_pVB-&gt;Lock( 0, 0, ( void** )&amp;pVertices, 0 ) ) )\n        return E_FAIL;\n    for( DWORD i = 0; i &lt; 50; i++ )\n    {\n        FLOAT theta = ( 2 * D3DX_PI * i ) / ( 50 - 1 );\n        pVertices[2 * i + 0].position = D3DXVECTOR3( sinf( theta ), -1.0f, cosf( theta ) );\n        pVertices[2 * i + 0].normal = D3DXVECTOR3( sinf( theta ), 0.0f, cosf( theta ) );\n        pVertices[2 * i + 1].position = D3DXVECTOR3( sinf( theta ), 1.0f, cosf( theta ) );\n        pVertices[2 * i + 1].normal = D3DXVECTOR3( sinf( theta ), 0.0f, cosf( theta ) );\n    }\n    g_pVB-&gt;Unlock();\n\n    return S_OK;\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: Cleanup()\n// Desc: Releases all previously initialized objects\n//-----------------------------------------------------------------------------\nVOID Cleanup()\n{\n    if( g_pVB != NULL )\n        g_pVB-&gt;Release();\n\n    if( g_pd3dDevice != NULL )\n        g_pd3dDevice-&gt;Release();\n\n    if( g_pD3D != NULL )\n        g_pD3D-&gt;Release();\n}\n\n\n\n//-----------------------------------------------------------------------------\n// Name: SetupMatrices()\n// Desc: Sets up the world, view, and projection transform matrices.\n//-----------------------------------------------------------------------------\nVOID SetupMatrices()\n{\n    // Set up world matrix\n    D3DXMATRIXA16 matWorld;\n    D3DXMatrixIdentity( &amp;matWorld );\n    D3DXMatrixRotationX( &amp;matWorld, D3DX_PI/4);\n    g_pd3dDevice-&gt;SetTransform( D3DTS_WORLD, &amp;matWorld );\n\n    // Set up our view matrix. A view matrix can be defined given an eye point,\n    // a point to lookat, and a direction for which way is up. Here, we set the\n    // eye five units back along the z-axis and up three units, look at the\n    // origin, and define &quot;up&quot; to be in the y-direction.\n    D3DXVECTOR3 vEyePt( 0.0f, 3.0f,-5.0f );\n    D3DXVECTOR3 vLookatPt( 0.0f, 0.0f, 0.0f );\n    D3DXVECTOR3 vUpVec( 0.0f, 1.0f, 0.0f );\n    D3DXMATRIXA16 matView;\n    D3DXMatrixLookAtLH( &amp;matView, &amp;vEyePt, &amp;vLookatPt, &amp;vUpVec );\n    g_pd3dDevice-&gt;SetTransform( D3DTS_VIEW, &amp;matView );\n\n    // For the projection matrix, we set up a perspective transform (which\n    // transforms geometry from 3D view space to 2D viewport space, with\n    // a perspective divide making objects smaller in the distance). To build\n    // a perpsective transform, we need the field of view (1/4 pi is common),\n    // the aspect ratio, and the near and far clipping planes (which define at\n    // what distances geometry should be no longer be rendered).\n    D3DXMATRIXA16 matProj;\n    D3DXMatrixPerspectiveFovLH( &amp;matProj, D3DX_PI / 4, 1.0f, 1.0f, 100.0f );\n    g_pd3dDevice-&gt;SetTransform( D3DTS_PROJECTION, &amp;matProj );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: SetupLights()\n// Desc: Sets up the lights and materials for the scene.\n//-----------------------------------------------------------------------------\nVOID SetupLights()\n{\n    // Set up a material. The material here just has the diffuse and ambient\n    // colors set to yellow. Note that only one material can be used at a time.\n    D3DMATERIAL9 mtrl;\n    ZeroMemory( &amp;mtrl, sizeof( D3DMATERIAL9 ) );\n    mtrl.Diffuse.r = mtrl.Ambient.r = 1.0f;\n    mtrl.Diffuse.g = mtrl.Ambient.g = 1.0f;\n    mtrl.Diffuse.b = mtrl.Ambient.b = 0.0f;\n    mtrl.Diffuse.a = mtrl.Ambient.a = 1.0f;\n    g_pd3dDevice-&gt;SetMaterial( &amp;mtrl );\n\n    // Set up a white, directional light, with an oscillating direction.\n    // Note that many lights may be active at a time (but each one slows down\n    // the rendering of our scene). However, here we are just using one. Also,\n    // we need to set the D3DRS_LIGHTING renderstate to enable lighting\n    D3DXVECTOR3 vecDir;\n    D3DLIGHT9 light;\n    ZeroMemory( &amp;light, sizeof( D3DLIGHT9 ) );\n    light.Type = D3DLIGHT_DIRECTIONAL;\n    light.Diffuse.r = 1.0f;\n    light.Diffuse.g = 1.0f;\n    light.Diffuse.b = 1.0f;\n    vecDir = D3DXVECTOR3( cosf( timeGetTime() / 350.0f ),\n                          1.0f,\n                          sinf( timeGetTime() / 350.0f ) );\n    D3DXVec3Normalize( ( D3DXVECTOR3* )&amp;light.Direction, &amp;vecDir );\n    light.Range = 1000.0f;\n    g_pd3dDevice-&gt;SetLight( 0, &amp;light );\n    g_pd3dDevice-&gt;LightEnable( 0, TRUE );\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_LIGHTING, TRUE );\n\n    // Finally, turn on some ambient light.\n    g_pd3dDevice-&gt;SetRenderState( D3DRS_AMBIENT, 0x00202020 );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: Render()\n// Desc: Draws the scene\n//-----------------------------------------------------------------------------\nVOID Render()\n{\n    // Clear the backbuffer and the zbuffer\n    g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER,\n                         D3DCOLOR_XRGB( 0, 0, 255 ), 1.0f, 0 );\n\n    // Begin the scene\n    if( SUCCEEDED( g_pd3dDevice-&gt;BeginScene() ) )\n    {\n        // Setup the lights and materials\n        SetupLights();\n\n        // Setup the world, view, and projection matrices\n        SetupMatrices();\n\n        // Render the vertex buffer contents\n        g_pd3dDevice-&gt;SetStreamSource( 0, g_pVB, 0, sizeof( CUSTOMVERTEX ) );\n        g_pd3dDevice-&gt;SetFVF( D3DFVF_CUSTOMVERTEX );\n        g_pd3dDevice-&gt;DrawPrimitive( D3DPT_TRIANGLESTRIP, 0, 2 * 50 - 2 );\n\n        // End the scene\n        g_pd3dDevice-&gt;EndScene();\n    }\n\n    // Present the backbuffer contents to the display\n    g_pd3dDevice-&gt;Present( NULL, NULL, NULL, NULL );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: MsgProc()\n// Desc: The window&#39;s message handler\n//-----------------------------------------------------------------------------\nLRESULT WINAPI MsgProc( HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam )\n{\n    switch( msg )\n    {\n        case WM_DESTROY:\n            Cleanup();\n            PostQuitMessage( 0 );\n            return 0;\n    }\n\n    return DefWindowProc( hWnd, msg, wParam, lParam );\n}\n\n\n\n\n//-----------------------------------------------------------------------------\n// Name: WinMain()\n// Desc: The application&#39;s entry point\n//-----------------------------------------------------------------------------\nINT WINAPI wWinMain( HINSTANCE hInst, HINSTANCE, LPWSTR, INT )\n{\n    UNREFERENCED_PARAMETER( hInst );\n\n    // Register the window class\n    WNDCLASSEX wc =\n    {\n        sizeof( WNDCLASSEX ), CS_CLASSDC, MsgProc, 0L, 0L,\n        GetModuleHandle( NULL ), NULL, NULL, NULL, NULL,\n        L&quot;D3D Tutorial&quot;, NULL\n    };\n    RegisterClassEx( &amp;wc );\n\n    // Create the application&#39;s window\n    HWND hWnd = CreateWindow( L&quot;D3D Tutorial&quot;, L&quot;D3D Tutorial 04: Lights&quot;,\n                              WS_OVERLAPPEDWINDOW, 100, 100, 300, 300,\n                              NULL, NULL, wc.hInstance, NULL );\n\n    // Initialize Direct3D\n    if( SUCCEEDED( InitD3D( hWnd ) ) )\n    {\n        // Create the geometry\n        if( SUCCEEDED( InitGeometry() ) )\n        {\n            // Show the window\n            ShowWindow( hWnd, SW_SHOWDEFAULT );\n            UpdateWindow( hWnd );\n\n            // Enter the message loop\n            MSG msg;\n            ZeroMemory( &amp;msg, sizeof( msg ) );\n            while( msg.message != WM_QUIT )\n            {\n                if( PeekMessage( &amp;msg, NULL, 0U, 0U, PM_REMOVE ) )\n                {\n                    TranslateMessage( &amp;msg );\n                    DispatchMessage( &amp;msg );\n                }\n                else\n                    Render();\n            }\n        }\n    }\n\n    UnregisterClass( L&quot;D3D Tutorial&quot;, wc.hInstance );\n    return 0;\n}\n\n\n</pre><br>\r\n<br>\r\n</p>\r\n',1,'directx,c++',0,0,'2015-02-02 00:45:48','2015-02-02 00:45:48','2015-02-02 00:45:48'),(39,1,7,'Directx9.0 学习教程4 - 坐标系以及变换知识小记','456edac11a117c53a8914b507a1cd9db',0,'\r\n\r\n<h2>坐标系</h2>\r\n<p></p>\r\n<p>&nbsp;<img src=\"http://img.blog.csdn.net/20140929103010750?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=','\r\n\r\n<h2>坐标系</h2>\r\n<p></p>\r\n<p>&nbsp;<img src=\"http://img.blog.csdn.net/20140929103010750?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p>左图是左手坐标系&nbsp;&nbsp;&nbsp; 右图是右手坐标系</p>\r\n<p>&nbsp;</p>\r\n<p>Direct3d用的是左手坐标系</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<h2>顶点和法向</h2>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<p>&nbsp;<img src=\"http://img.blog.csdn.net/20140929103044359?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<h2>光栅化</h2>\r\n<h2>变换</h2>\r\n<p>1世界变换</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140929103246565?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p>2观察变换</p>\r\n<p align=\"left\">D3DXMATRIX out;</p>\r\n<p align=\"left\">D3DXVECTOR3 eye(2,3,3);</p>\r\n<p align=\"left\">D3DXVECTOR3 at(0,0,0);</p>\r\n<p align=\"left\">D3DXVECTOR3 up(0,1,0);</p>\r\n<p align=\"left\">D3DXMatrixLookAtLH(&amp;out,&amp;eye, &amp;at, &amp;up);</p>\r\n<p>&nbsp;</p>\r\n<p>3.投影矩阵</p>\r\n<p>&nbsp;</p>\r\n<p>他们的作用是</p>\r\n<p><span style=\"background:yellow\">世界矩阵把</span><span style=\"background:yellow\"> local</span><span style=\"background:yellow\">坐标变为世界坐标</span></p>\r\n<p><span style=\"background:yellow\">观察矩阵把世界坐标变为摄像机坐标</span></p>\r\n<p><span style=\"background:yellow\">投影矩阵把摄像机坐标变为屏幕坐标</span></p>\r\n','\r\n\r\n<h2>坐标系</h2>\r\n<p></p>\r\n<p>&nbsp;<img src=\"http://img.blog.csdn.net/20140929103010750?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p>左图是左手坐标系&nbsp;&nbsp;&nbsp; 右图是右手坐标系</p>\r\n<p>&nbsp;</p>\r\n<p>Direct3d用的是左手坐标系</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<h2>顶点和法向</h2>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<p>&nbsp;<img src=\"http://img.blog.csdn.net/20140929103044359?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<h2>光栅化</h2>\r\n<h2>变换</h2>\r\n<p>1世界变换</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140929103246565?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p>2观察变换</p>\r\n<p align=\"left\">D3DXMATRIX out;</p>\r\n<p align=\"left\">D3DXVECTOR3 eye(2,3,3);</p>\r\n<p align=\"left\">D3DXVECTOR3 at(0,0,0);</p>\r\n<p align=\"left\">D3DXVECTOR3 up(0,1,0);</p>\r\n<p align=\"left\">D3DXMatrixLookAtLH(&amp;out,&amp;eye, &amp;at, &amp;up);</p>\r\n<p>&nbsp;</p>\r\n<p>3.投影矩阵</p>\r\n<p>&nbsp;</p>\r\n<p>他们的作用是</p>\r\n<p><span style=\"background:yellow\">世界矩阵把</span><span style=\"background:yellow\"> local</span><span style=\"background:yellow\">坐标变为世界坐标</span></p>\r\n<p><span style=\"background:yellow\">观察矩阵把世界坐标变为摄像机坐标</span></p>\r\n<p><span style=\"background:yellow\">投影矩阵把摄像机坐标变为屏幕坐标</span></p>\r\n',1,'directx,c++,图形',0,0,'2015-02-02 00:45:51','2015-02-02 00:45:51','2015-02-02 00:45:51'),(40,1,7,'Directx9.0 学习教程3 -图形学之创建点 线 三角形 等','38c99adcfe76b8e49539b510d7f90c6b',0,'\r\n\r\n<h2>1、首先 介绍点的表示方法</h2>\r\n<p><pre name=\"code\" class=\"cpp\">struct CUSTOMVERTEX\n{\n	float x,y,z;\n};\n\nCUSTOMVERTEX Vertices[] = \n{\n	{-5.0, -5.0, 0.0},\n	{ 0.0,  5.0, 0.0},\n	{ 5.0, -','\r\n\r\n<h2>1、首先 介绍点的表示方法</h2>\r\n<p><pre name=\"code\" class=\"cpp\">struct CUSTOMVERTEX\n{\n	float x,y,z;\n};\n\nCUSTOMVERTEX Vertices[] = \n{\n	{-5.0, -5.0, 0.0},\n	{ 0.0,  5.0, 0.0},\n	{ 5.0, -5.0, 0.0},\n	{10.0,  5.0, 0.0},\n	{15.0, -5.0, 0.0},\n	{20.0,  5.0, 0.0}\n};\n</pre><br>\r\n点的渲染方法--D3DPT_POINTLIST 主要是这个。点列表</p>\r\n<p><pre name=\"code\" class=\"cpp\">//\n// It is assumed that d3dDevice is a valid\n// pointer to a IDirect3DDevice9 interface.\n//\nd3dDevice-&gt;DrawPrimitive( D3DPT_POINTLIST, 0, 6 );//表示从0个顶点开始、一共6个\n</pre><br>\r\n效果</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140928150815945?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p>点比较小、。看不清楚</p>\r\n<p>具体代码可以自己添加在 sdk自带的samples的tutorials 里面。</p>\r\n<h2>2、线的表示</h2>\r\n<div>把上面的代码改一下即可</div>\r\n<div><pre name=\"code\" class=\"cpp\">d3dDevice-&gt;DrawPrimitive( D3DPT_LINELIST, 0, 3 );\n</pre>效果：</div>\r\n<div><img src=\"http://img.blog.csdn.net/20140928151019187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></div>\r\n<div><br>\r\n</div>\r\n<div>还有一种是连线</div>\r\n<div>\r\n<pre><code>d3dDevice-&gt;DrawPrimitive( D3DPT_LINESTRIP, 0, 5 );\n</code></pre>\r\n具体效果自己尝试。会发现3个点能组成2条线</div>\r\n<div><br>\r\n</div>\r\n<div>\r\n<h2>3、三角形的表示</h2>\r\n三角形有3种 常用的是list和strip</div>\r\n<div>下面是strip的效果<img src=\"http://img.blog.csdn.net/20140928152840423?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></div>\r\n<div><br>\r\n</div>\r\n<div><br>\r\n</div>\r\n<div><img src=\"http://img.blog.csdn.net/20140928152909751?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</div>\r\n<div><br>\r\n</div>\r\n','\r\n\r\n<h2>1、首先 介绍点的表示方法</h2>\r\n<p><pre name=\"code\" class=\"cpp\">struct CUSTOMVERTEX\n{\n	float x,y,z;\n};\n\nCUSTOMVERTEX Vertices[] = \n{\n	{-5.0, -5.0, 0.0},\n	{ 0.0,  5.0, 0.0},\n	{ 5.0, -5.0, 0.0},\n	{10.0,  5.0, 0.0},\n	{15.0, -5.0, 0.0},\n	{20.0,  5.0, 0.0}\n};\n</pre><br>\r\n点的渲染方法--D3DPT_POINTLIST 主要是这个。点列表</p>\r\n<p><pre name=\"code\" class=\"cpp\">//\n// It is assumed that d3dDevice is a valid\n// pointer to a IDirect3DDevice9 interface.\n//\nd3dDevice-&gt;DrawPrimitive( D3DPT_POINTLIST, 0, 6 );//表示从0个顶点开始、一共6个\n</pre><br>\r\n效果</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140928150815945?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p>点比较小、。看不清楚</p>\r\n<p>具体代码可以自己添加在 sdk自带的samples的tutorials 里面。</p>\r\n<h2>2、线的表示</h2>\r\n<div>把上面的代码改一下即可</div>\r\n<div><pre name=\"code\" class=\"cpp\">d3dDevice-&gt;DrawPrimitive( D3DPT_LINELIST, 0, 3 );\n</pre>效果：</div>\r\n<div><img src=\"http://img.blog.csdn.net/20140928151019187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></div>\r\n<div><br>\r\n</div>\r\n<div>还有一种是连线</div>\r\n<div>\r\n<pre><code>d3dDevice-&gt;DrawPrimitive( D3DPT_LINESTRIP, 0, 5 );\n</code></pre>\r\n具体效果自己尝试。会发现3个点能组成2条线</div>\r\n<div><br>\r\n</div>\r\n<div>\r\n<h2>3、三角形的表示</h2>\r\n三角形有3种 常用的是list和strip</div>\r\n<div>下面是strip的效果<img src=\"http://img.blog.csdn.net/20140928152840423?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></div>\r\n<div><br>\r\n</div>\r\n<div><br>\r\n</div>\r\n<div><img src=\"http://img.blog.csdn.net/20140928152909751?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</div>\r\n<div><br>\r\n</div>\r\n',1,'directx,图形',0,0,'2015-02-02 00:45:54','2015-02-02 00:45:54','2015-02-02 00:45:54'),(41,1,7,'Directx9.0 学习教程2 - 使用DXUT框架','f4f09e9eb80748c17d2314aa9ec68434',0,'\r\n\r\n<p>DXUT框架是 samples例子的一个公共框架。非常方便的把很多本来需要复杂、而且重复的操作，都封装了起来。</p>\r\n<p>使用步骤非常简单</p>\r\n<p>C:\\Program','\r\n\r\n<p>DXUT框架是 samples例子的一个公共框架。非常方便的把很多本来需要复杂、而且重复的操作，都封装了起来。</p>\r\n<p>使用步骤非常简单</p>\r\n<p>C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Samples\\SampleBrowser<br>\r\n</p>\r\n<p>在SDK安装目录下面 &nbsp;有一个SampleBrowser文件。打开</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140927203320406?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>然后根据自己的版本，选择如上， EmptyProject工程</p>\r\n<p>然后 InstallProject&nbsp;</p>\r\n<p>自动安装完成后。打开工程。Clean一下工程 ，防止缓存出错</p>\r\n<p>然后最好重新打开一下工程。 F5运行。</p>\r\n<p>就是一个基本的窗口啦。</p>\r\n<p><pre name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// File: EmptyProject.cpp\n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//--------------------------------------------------------------------------------------\n#include &quot;DXUT.h&quot;\n#include &quot;resource.h&quot;\n\n\n//--------------------------------------------------------------------------------------\n// Rejects any D3D9 devices that aren&#39;t acceptable to the app by returning false\n//--------------------------------------------------------------------------------------\nbool CALLBACK IsD3D9DeviceAcceptable( D3DCAPS9* pCaps, D3DFORMAT AdapterFormat, D3DFORMAT BackBufferFormat,\n                                      bool bWindowed, void* pUserContext )\n{\n    // Typically want to skip back buffer formats that don&#39;t support alpha blending\n    IDirect3D9* pD3D = DXUTGetD3D9Object();\n    if( FAILED( pD3D-&gt;CheckDeviceFormat( pCaps-&gt;AdapterOrdinal, pCaps-&gt;DeviceType,\n                                         AdapterFormat, D3DUSAGE_QUERY_POSTPIXELSHADER_BLENDING,\n                                         D3DRTYPE_TEXTURE, BackBufferFormat ) ) )\n        return false;\n\n    return true;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Before a device is created, modify the device settings as needed\n//--------------------------------------------------------------------------------------\nbool CALLBACK ModifyDeviceSettings( DXUTDeviceSettings* pDeviceSettings, void* pUserContext )\n{\n    return true;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Create any D3D9 resources that will live through a device reset (D3DPOOL_MANAGED)\n// and aren&#39;t tied to the back buffer size\n//--------------------------------------------------------------------------------------\nHRESULT CALLBACK OnD3D9CreateDevice( IDirect3DDevice9* pd3dDevice, const D3DSURFACE_DESC* pBackBufferSurfaceDesc,\n                                     void* pUserContext )\n{\n    return S_OK;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Create any D3D9 resources that won&#39;t live through a device reset (D3DPOOL_DEFAULT) \n// or that are tied to the back buffer size \n//--------------------------------------------------------------------------------------\nHRESULT CALLBACK OnD3D9ResetDevice( IDirect3DDevice9* pd3dDevice, const D3DSURFACE_DESC* pBackBufferSurfaceDesc,\n                                    void* pUserContext )\n{\n    return S_OK;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Handle updates to the scene.  This is called regardless of which D3D API is used\n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnFrameMove( double fTime, float fElapsedTime, void* pUserContext )\n{\n}\n\n\n//--------------------------------------------------------------------------------------\n// Render the scene using the D3D9 device\n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnD3D9FrameRender( IDirect3DDevice9* pd3dDevice, double fTime, float fElapsedTime, void* pUserContext )\n{\n    HRESULT hr;\n\n    // Clear the render target and the zbuffer \n    V( pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, D3DCOLOR_ARGB( 0, 45, 50, 170 ), 1.0f, 0 ) );\n\n    // Render the scene\n    if( SUCCEEDED( pd3dDevice-&gt;BeginScene() ) )\n    {\n        V( pd3dDevice-&gt;EndScene() );\n    }\n}\n\n\n//--------------------------------------------------------------------------------------\n// Handle messages to the application \n//--------------------------------------------------------------------------------------\nLRESULT CALLBACK MsgProc( HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam,\n                          bool* pbNoFurtherProcessing, void* pUserContext )\n{\n    return 0;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Release D3D9 resources created in the OnD3D9ResetDevice callback \n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnD3D9LostDevice( void* pUserContext )\n{\n}\n\n\n//--------------------------------------------------------------------------------------\n// Release D3D9 resources created in the OnD3D9CreateDevice callback \n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnD3D9DestroyDevice( void* pUserContext )\n{\n}\n\n\n//--------------------------------------------------------------------------------------\n// Initialize everything and go into a render loop\n//--------------------------------------------------------------------------------------\nINT WINAPI wWinMain( HINSTANCE, HINSTANCE, LPWSTR, int )\n{\n    // Enable run-time memory check for debug builds.\n#if defined(DEBUG) | defined(_DEBUG)\n    _CrtSetDbgFlag( _CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF );\n#endif\n\n    // Set the callback functions\n    DXUTSetCallbackD3D9DeviceAcceptable( IsD3D9DeviceAcceptable );\n    DXUTSetCallbackD3D9DeviceCreated( OnD3D9CreateDevice );\n    DXUTSetCallbackD3D9DeviceReset( OnD3D9ResetDevice );\n    DXUTSetCallbackD3D9FrameRender( OnD3D9FrameRender );\n    DXUTSetCallbackD3D9DeviceLost( OnD3D9LostDevice );\n    DXUTSetCallbackD3D9DeviceDestroyed( OnD3D9DestroyDevice );\n    DXUTSetCallbackDeviceChanging( ModifyDeviceSettings );\n    DXUTSetCallbackMsgProc( MsgProc );\n    DXUTSetCallbackFrameMove( OnFrameMove );\n\n    // TODO: Perform any application-level initialization here\n\n    // Initialize DXUT and create the desired Win32 window and Direct3D device for the application\n    DXUTInit( true, true ); // Parse the command line and show msgboxes\n    DXUTSetHotkeyHandling( true, true, true );  // handle the default hotkeys\n    DXUTSetCursorSettings( true, true ); // Show the cursor and clip it when in full screen\n    DXUTCreateWindow( L&quot;EmptyProject&quot; );\n    DXUTCreateDevice( true, 640, 480 );\n\n    // Start the render loop\n    DXUTMainLoop();\n\n    // TODO: Perform any application-level cleanup here\n\n    return DXUTGetExitCode();\n}\n\n</pre><br>\r\n上面就是框架代码。就像MFC一样，自动生成的，不用太理解细节了。只需要知道函数名以及哪个函数下面该写什么代码就行。</p>\r\n','\r\n\r\n<p>DXUT框架是 samples例子的一个公共框架。非常方便的把很多本来需要复杂、而且重复的操作，都封装了起来。</p>\r\n<p>使用步骤非常简单</p>\r\n<p>C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Samples\\SampleBrowser<br>\r\n</p>\r\n<p>在SDK安装目录下面 &nbsp;有一个SampleBrowser文件。打开</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140927203320406?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>然后根据自己的版本，选择如上， EmptyProject工程</p>\r\n<p>然后 InstallProject&nbsp;</p>\r\n<p>自动安装完成后。打开工程。Clean一下工程 ，防止缓存出错</p>\r\n<p>然后最好重新打开一下工程。 F5运行。</p>\r\n<p>就是一个基本的窗口啦。</p>\r\n<p><pre name=\"code\" class=\"cpp\">//--------------------------------------------------------------------------------------\n// File: EmptyProject.cpp\n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n//--------------------------------------------------------------------------------------\n#include &quot;DXUT.h&quot;\n#include &quot;resource.h&quot;\n\n\n//--------------------------------------------------------------------------------------\n// Rejects any D3D9 devices that aren&#39;t acceptable to the app by returning false\n//--------------------------------------------------------------------------------------\nbool CALLBACK IsD3D9DeviceAcceptable( D3DCAPS9* pCaps, D3DFORMAT AdapterFormat, D3DFORMAT BackBufferFormat,\n                                      bool bWindowed, void* pUserContext )\n{\n    // Typically want to skip back buffer formats that don&#39;t support alpha blending\n    IDirect3D9* pD3D = DXUTGetD3D9Object();\n    if( FAILED( pD3D-&gt;CheckDeviceFormat( pCaps-&gt;AdapterOrdinal, pCaps-&gt;DeviceType,\n                                         AdapterFormat, D3DUSAGE_QUERY_POSTPIXELSHADER_BLENDING,\n                                         D3DRTYPE_TEXTURE, BackBufferFormat ) ) )\n        return false;\n\n    return true;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Before a device is created, modify the device settings as needed\n//--------------------------------------------------------------------------------------\nbool CALLBACK ModifyDeviceSettings( DXUTDeviceSettings* pDeviceSettings, void* pUserContext )\n{\n    return true;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Create any D3D9 resources that will live through a device reset (D3DPOOL_MANAGED)\n// and aren&#39;t tied to the back buffer size\n//--------------------------------------------------------------------------------------\nHRESULT CALLBACK OnD3D9CreateDevice( IDirect3DDevice9* pd3dDevice, const D3DSURFACE_DESC* pBackBufferSurfaceDesc,\n                                     void* pUserContext )\n{\n    return S_OK;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Create any D3D9 resources that won&#39;t live through a device reset (D3DPOOL_DEFAULT) \n// or that are tied to the back buffer size \n//--------------------------------------------------------------------------------------\nHRESULT CALLBACK OnD3D9ResetDevice( IDirect3DDevice9* pd3dDevice, const D3DSURFACE_DESC* pBackBufferSurfaceDesc,\n                                    void* pUserContext )\n{\n    return S_OK;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Handle updates to the scene.  This is called regardless of which D3D API is used\n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnFrameMove( double fTime, float fElapsedTime, void* pUserContext )\n{\n}\n\n\n//--------------------------------------------------------------------------------------\n// Render the scene using the D3D9 device\n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnD3D9FrameRender( IDirect3DDevice9* pd3dDevice, double fTime, float fElapsedTime, void* pUserContext )\n{\n    HRESULT hr;\n\n    // Clear the render target and the zbuffer \n    V( pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, D3DCOLOR_ARGB( 0, 45, 50, 170 ), 1.0f, 0 ) );\n\n    // Render the scene\n    if( SUCCEEDED( pd3dDevice-&gt;BeginScene() ) )\n    {\n        V( pd3dDevice-&gt;EndScene() );\n    }\n}\n\n\n//--------------------------------------------------------------------------------------\n// Handle messages to the application \n//--------------------------------------------------------------------------------------\nLRESULT CALLBACK MsgProc( HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam,\n                          bool* pbNoFurtherProcessing, void* pUserContext )\n{\n    return 0;\n}\n\n\n//--------------------------------------------------------------------------------------\n// Release D3D9 resources created in the OnD3D9ResetDevice callback \n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnD3D9LostDevice( void* pUserContext )\n{\n}\n\n\n//--------------------------------------------------------------------------------------\n// Release D3D9 resources created in the OnD3D9CreateDevice callback \n//--------------------------------------------------------------------------------------\nvoid CALLBACK OnD3D9DestroyDevice( void* pUserContext )\n{\n}\n\n\n//--------------------------------------------------------------------------------------\n// Initialize everything and go into a render loop\n//--------------------------------------------------------------------------------------\nINT WINAPI wWinMain( HINSTANCE, HINSTANCE, LPWSTR, int )\n{\n    // Enable run-time memory check for debug builds.\n#if defined(DEBUG) | defined(_DEBUG)\n    _CrtSetDbgFlag( _CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF );\n#endif\n\n    // Set the callback functions\n    DXUTSetCallbackD3D9DeviceAcceptable( IsD3D9DeviceAcceptable );\n    DXUTSetCallbackD3D9DeviceCreated( OnD3D9CreateDevice );\n    DXUTSetCallbackD3D9DeviceReset( OnD3D9ResetDevice );\n    DXUTSetCallbackD3D9FrameRender( OnD3D9FrameRender );\n    DXUTSetCallbackD3D9DeviceLost( OnD3D9LostDevice );\n    DXUTSetCallbackD3D9DeviceDestroyed( OnD3D9DestroyDevice );\n    DXUTSetCallbackDeviceChanging( ModifyDeviceSettings );\n    DXUTSetCallbackMsgProc( MsgProc );\n    DXUTSetCallbackFrameMove( OnFrameMove );\n\n    // TODO: Perform any application-level initialization here\n\n    // Initialize DXUT and create the desired Win32 window and Direct3D device for the application\n    DXUTInit( true, true ); // Parse the command line and show msgboxes\n    DXUTSetHotkeyHandling( true, true, true );  // handle the default hotkeys\n    DXUTSetCursorSettings( true, true ); // Show the cursor and clip it when in full screen\n    DXUTCreateWindow( L&quot;EmptyProject&quot; );\n    DXUTCreateDevice( true, 640, 480 );\n\n    // Start the render loop\n    DXUTMainLoop();\n\n    // TODO: Perform any application-level cleanup here\n\n    return DXUTGetExitCode();\n}\n\n</pre><br>\r\n上面就是框架代码。就像MFC一样，自动生成的，不用太理解细节了。只需要知道函数名以及哪个函数下面该写什么代码就行。</p>\r\n',1,'directx,visual studio 2008',0,0,'2015-02-02 00:45:55','2015-02-02 00:45:55','2015-02-02 00:45:55'),(42,1,7,'Directx9.0 学习教程1 - 第一个程序','8b0390eb1911c14a68c3453012448544',0,'\r\n\r\n<p>在图书馆选了N本书，还是觉得直接讲代码的书更适合我，一个完整的列子加上些许注释，比那些一上来就是一大段一大段的文字阐述的教程容易懂','\r\n\r\n<p>在图书馆选了N本书，还是觉得直接讲代码的书更适合我，一个完整的列子加上些许注释，比那些一上来就是一大段一大段的文字阐述的教程容易懂的多。&nbsp;</p>\r\n<p>因此我的笔记也开始用这种方式记录。</p>\r\n<p>写在开头： &nbsp;dx(我对directx简称) dx的版本主要有9 和11这两种系列。 API和功能差异还是笔记大的。 但是手头dx9的书笔记齐全。 就开始看dx9 了。而且学习从来都是学习他的思想，尽管可能换版本要换配置环境，或者换api ，但是大概思想是不变的。学了总有好处。</p>\r\n<p>下面是学习这本书的第一个列子。</p>\r\n<p>说白了就是个vc&#43;&#43;的小框架。然后有一点dx的代码。 但是这个小框架以后可以自己慢慢丰富。 可能对MFC抵触的童鞋觉得里面的win32 api晦涩难懂，但是完全没必要注意哪些细节，这个小框架只是为了显示一个窗口展示dx ，还有消息处理。所以会用就行了。</p>\r\n<p>转自http://blog.csdn.net/cq361106306/article/details/39549091</p>\r\n<p>先介绍下win32下dx主要工作流程:</p>\r\n<p><br>\r\n</p>\r\n<p>1.winMain 函数</p>\r\n<p>这个是整个工程的入口函数，看代码也是从这里开始看</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//先定义窗口类\nWNDCLASSEX wc={...} //细节不用管，你也记不住\n\n//注册窗口类\nRegisterClassEx(&amp;wc);\n\n//然后就是创建窗口类\nHWND hwnd=CreateWindow(....)//里面的参数主要是窗口大小和标题，可以自己改改\n\n//---------以上是win32窗口的东西\n//---------以下就开始d3d的初始化了\n\n//源代码里有很多if这些只看流程我就省略了\n\n//首先把窗口传给D3D。\nInitD3D(hwnd); //这个函数里面的东西在后面讲。先记住大概流程就行了\n\n//然后装载模型\nInitGeometry();//这个也后面讲\n\n//初始化完了。当然就是显示咯\nShowWindow(hwnd,...);\nUpdateWindow(hwnd);\n\n//消息循环--这个是vc++的程序必须要弄的。反正就是一个循环不断的执行一些能改变窗口啊，变量啊之类的循环\n\nwhile(msg.messge!=WM_QUIT)\n{\n	//执行系统消息\n	..\n	//执行D3D的渲染\n	Render();//以后的列子都只需要在Render里面加东西了。所以其他函数都是框架的一部分啦。看不懂就算了。\n}</pre><br>\r\n<br>\r\n<p></p>\r\n<p>上面就是整体流程了，是不是发现其实还是挺简单的。就是一堆初始化，然后就开始循环更新。</p>\r\n<p>下面讲初始化的函数</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//-----------------------------------------------------------------------------\n// 函数：InitD3D()\n// 功能：初始化 D3D 和 3D 设备\n// 参数：初始化了两个全局变量 g_pD3D g_pd3dDevice\n//-----------------------------------------------------------------------------\nHRESULT InitD3D( HWND hWnd )\n  {\n    // 创建 3D 对象.\n    if( NULL == ( g_pD3D = Direct3DCreate9( D3D_SDK_VERSION ) ) )       return E_FAIL;\n    // 告诉系统设置需要创建的参数，就是填充 D3DPRESENT_PARAMETERS 的参数\n    D3DPRESENT_PARAMETERS d3dpp; \n    ZeroMemory( &amp;d3dpp, sizeof( d3dpp ));\n    d3dpp.Windowed = TRUE;\n    d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;\n    d3dpp.BackBufferFormat = D3DFMT_UNKNOWN;\n    d3dpp.EnableAutoDepthStencil = TRUE;\n    d3dpp.AutoDepthStencilFormat = D3DFMT_D16;\n    d3dpp.PresentationInterval = D3DPRESENT_INTERVAL_IMMEDIATE;\n    // 创建设备\n    if( FAILED( g_pD3D-&gt;CreateDevice( D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, hWnd,\n      D3DCREATE_SOFTWARE_VERTEXPROCESSING, &amp;d3dpp, &amp;g_pd3dDevice ) ) )  return E_FAIL;\n    return S_OK;\n  }\n\n//以上代码看着是不是很蛋疼，对啊非常蛋碎，反正就是一系列参数。先放着吧。</pre><br>\r\n下面就是InitGeometry函数 主要就是设置效果文件 .fx后缀那个。\r\n<p></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//-----------------------------------------------------------------------------\n// 函数：InitGeometry()\n// 功能：设置目录、装入模型、纹理、效果文件、传递效果参数到HLSL\n// 参数：初始化了其他三个全局变量 g_pMesh g_pEffect g_pMeshTextures\n//-----------------------------------------------------------------------------\nHRESULT InitGeometry()\n  {\n    HRESULT hr;\n    // 设置目录\n    TCHAR szAppPath[ MAX_PATH ];\n    TCHAR szRcPath[ MAX_PATH ];\n    GetCurrentDirectory( MAX_PATH, szAppPath );\n    // \n    lstrcpy( szRcPath , szAppPath );\n    lstrcat( szRcPath ,L&quot;\\\\ResFile_1_Model&quot; );\n    SetCurrentDirectory( szRcPath );\n        // 装入效果文件\n    LPD3DXBUFFER pCode = NULL;\n    if( FAILED( hr = D3DXCreateEffectFromFile( g_pd3dDevice, L&quot;FileFX.fx&quot;, \n      NULL, NULL, 0, NULL, &amp;g_pEffect, &amp;pCode )))\n      {\n        LPVOID pBufErr = pCode-&gt;GetBufferPointer();\n        char* ErrInfo = ( char* ) pBufErr;\n        pCode-&gt;Release( );\n        return hr;\n      }\n    if( FAILED( hr = g_pEffect-&gt;SetTechnique( &quot;DefaultTech&quot; ))) return hr ;\n    //上面效果文件装载成功后，就要设置顶点结构的模型了 InitVB();\n    if( FAILED( hr = InitVB())) return hr;\n    // 可以正确返回了\n    return S_OK;\n  }</pre><br>\r\n以上代码其实基本都固定不变的。因为每个列子都要用的。真正需要随时改的那就是模型和渲染逻辑了\r\n<p></p>\r\n<p>回顾一下以上已经完成的是，窗口定义，窗口显示，初始化D3D，初始化.fx效果文件，初始化模型, 消息循环.</p>\r\n<p>下面就是讲真正要做的东西。 显示一个三角形</p>\r\n<p>顶点模型创建</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">// 函数：InitVB\n// 功能：初始化 g_pVB\n// 参数：无\n//-----------------------------------------------------------------------------\nHRESULT InitVB()\n  {\n    HRESULT hr;\n    CUSTOMVERTEX vertices[] =\n      {\n        {  5.0f ,  0.0f , 0.0f , 1.0f , 0xffff0000  }, // x, y, z, rhw, color 红色\n        {  0.0f  , 5.0f , 0.0f , 1.0f , 0xff00ff00  }, // 绿色\n        { -5.0f ,  0.0f , 0.0f , 1.0f , 0xff0000ff  }, // 蓝色\n        \n      };\n    if( FAILED( hr = g_pd3dDevice-&gt;CreateVertexBuffer( 3 * sizeof( CUSTOMVERTEX ),\n       0 , D3DFVF_CUSTOMVERTEX , D3DPOOL_DEFAULT , &amp;g_pVB, NULL ))) return hr;\n    VOID* pVertices;\n    if( FAILED( hr = g_pVB-&gt;Lock( 0, sizeof( vertices ), ( void** )&amp;pVertices, 0 )))    return hr;\n    memcpy( pVertices, vertices, sizeof( vertices ));\n    g_pVB-&gt;Unlock( );\n\n    return S_OK;\n  }</pre><br>\r\n一切准备工作就完成了。然后就是渲染啦\r\n<p></p>\r\n<p>主要是Render() 函数</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">VOID Render()\n  {\n    HRESULT hr;\n    // 清除背景缓冲区的深度缓冲区\n    hr = g_pd3dDevice-&gt;Clear( 0 , NULL , D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER , \n      D3DXCOLOR( 0.0f , 0.25f , 0.25f , 0.55f ) , 1.0f , 0 );\n    hr = g_pd3dDevice-&gt;SetStreamSource( 0, g_pVB, 0, sizeof( CUSTOMVERTEX ));\n    hr = g_pd3dDevice-&gt;SetFVF( D3DFVF_CUSTOMVERTEX );\n    if( SUCCEEDED( g_pd3dDevice-&gt;BeginScene( )))\n      {\n        // 设置变换，实际上是设置实际矩阵绕 Y 轴旋转\n        SetupMatrices( );\n        // 按效果文件的设置渲染\n        UINT iPass, cPasses;\n        hr = g_pEffect-&gt;Begin( &amp;cPasses, 0 );\n        for ( iPass = 0; iPass &lt; cPasses; iPass++ )\n          {\n            hr = g_pEffect-&gt;BeginPass( iPass );\n            hr = g_pd3dDevice-&gt;DrawPrimitive( D3DPT_TRIANGLELIST , 0 , 1 );\n            hr = g_pEffect-&gt;EndPass();\n          }\n        hr = g_pEffect-&gt;End();\n        hr = g_pd3dDevice-&gt;EndScene();\n      }\n    // 将渲染的结果切换到前景缓冲区\n    hr = g_pd3dDevice-&gt;Present( NULL, NULL, NULL, NULL );\n  }\n//-----------------------------------------------------------------------------\n// 函数：SetupMatrices()\n// 功能：将 4 个变量传递给效果文件，由效果文件来计算\n// 参数：无，本模块涉及全局变量：效果文件接口\n//-----------------------------------------------------------------------------\nVOID SetupMatrices()\n  {\n    HRESULT hr;\n    D3DXMATRIXA16 matWorld;\n    float fTime = timeGetTime() / 1000.0f ;\n    D3DXMatrixRotationY( &amp;matWorld , fTime );\n    //D3DXMatrixIdentity( &amp;matWorld );\n    hr = g_pEffect-&gt;SetFloat( &quot;g_fTime&quot; , fTime );\n    // 世界矩阵\n    hr = g_pEffect-&gt;SetMatrix( &quot;g_matWorld&quot; , &amp;matWorld );\n    // 观察矩阵\n    D3DXVECTOR3 vEyePt( 15.0f , 3.0f , 0.0f );\n    D3DXVECTOR3 vLookatPt( 0.0f, 3.0f, 0.0f );\n    D3DXVECTOR3 vUpVec( 0.0f, 1.0f, 0.0f );\n    D3DXMATRIXA16 matView;\n    D3DXMatrixLookAtLH( &amp;matView, &amp;vEyePt, &amp;vLookatPt, &amp;vUpVec );\n    hr = g_pEffect-&gt;SetMatrix( &quot;g_matView&quot; , &amp;matView );\n    // 投影矩阵\n    D3DXMATRIXA16 matProj;\n    D3DXMatrixPerspectiveFovLH( &amp;matProj , D3DX_PI/4 , 64.0 / 41.0f , 1.0 , 100.0f );\n    hr = g_pEffect-&gt;SetMatrix( &quot;g_matProject&quot; , &amp;matProj );\n  }</pre><br>\r\n效果就是一个三角形不停的转啊转。\r\n<p></p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925130119457?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>工程源码链接: http://pan.baidu.com/s/1sjI131j 密码: 8l7s</p>\r\n','\r\n\r\n<p>在图书馆选了N本书，还是觉得直接讲代码的书更适合我，一个完整的列子加上些许注释，比那些一上来就是一大段一大段的文字阐述的教程容易懂的多。&nbsp;</p>\r\n<p>因此我的笔记也开始用这种方式记录。</p>\r\n<p>写在开头： &nbsp;dx(我对directx简称) dx的版本主要有9 和11这两种系列。 API和功能差异还是笔记大的。 但是手头dx9的书笔记齐全。 就开始看dx9 了。而且学习从来都是学习他的思想，尽管可能换版本要换配置环境，或者换api ，但是大概思想是不变的。学了总有好处。</p>\r\n<p>下面是学习这本书的第一个列子。</p>\r\n<p>说白了就是个vc&#43;&#43;的小框架。然后有一点dx的代码。 但是这个小框架以后可以自己慢慢丰富。 可能对MFC抵触的童鞋觉得里面的win32 api晦涩难懂，但是完全没必要注意哪些细节，这个小框架只是为了显示一个窗口展示dx ，还有消息处理。所以会用就行了。</p>\r\n<p>转自http://blog.csdn.net/cq361106306/article/details/39549091</p>\r\n<p>先介绍下win32下dx主要工作流程:</p>\r\n<p><br>\r\n</p>\r\n<p>1.winMain 函数</p>\r\n<p>这个是整个工程的入口函数，看代码也是从这里开始看</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//先定义窗口类\nWNDCLASSEX wc={...} //细节不用管，你也记不住\n\n//注册窗口类\nRegisterClassEx(&amp;wc);\n\n//然后就是创建窗口类\nHWND hwnd=CreateWindow(....)//里面的参数主要是窗口大小和标题，可以自己改改\n\n//---------以上是win32窗口的东西\n//---------以下就开始d3d的初始化了\n\n//源代码里有很多if这些只看流程我就省略了\n\n//首先把窗口传给D3D。\nInitD3D(hwnd); //这个函数里面的东西在后面讲。先记住大概流程就行了\n\n//然后装载模型\nInitGeometry();//这个也后面讲\n\n//初始化完了。当然就是显示咯\nShowWindow(hwnd,...);\nUpdateWindow(hwnd);\n\n//消息循环--这个是vc++的程序必须要弄的。反正就是一个循环不断的执行一些能改变窗口啊，变量啊之类的循环\n\nwhile(msg.messge!=WM_QUIT)\n{\n	//执行系统消息\n	..\n	//执行D3D的渲染\n	Render();//以后的列子都只需要在Render里面加东西了。所以其他函数都是框架的一部分啦。看不懂就算了。\n}</pre><br>\r\n<br>\r\n<p></p>\r\n<p>上面就是整体流程了，是不是发现其实还是挺简单的。就是一堆初始化，然后就开始循环更新。</p>\r\n<p>下面讲初始化的函数</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//-----------------------------------------------------------------------------\n// 函数：InitD3D()\n// 功能：初始化 D3D 和 3D 设备\n// 参数：初始化了两个全局变量 g_pD3D g_pd3dDevice\n//-----------------------------------------------------------------------------\nHRESULT InitD3D( HWND hWnd )\n  {\n    // 创建 3D 对象.\n    if( NULL == ( g_pD3D = Direct3DCreate9( D3D_SDK_VERSION ) ) )       return E_FAIL;\n    // 告诉系统设置需要创建的参数，就是填充 D3DPRESENT_PARAMETERS 的参数\n    D3DPRESENT_PARAMETERS d3dpp; \n    ZeroMemory( &amp;d3dpp, sizeof( d3dpp ));\n    d3dpp.Windowed = TRUE;\n    d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;\n    d3dpp.BackBufferFormat = D3DFMT_UNKNOWN;\n    d3dpp.EnableAutoDepthStencil = TRUE;\n    d3dpp.AutoDepthStencilFormat = D3DFMT_D16;\n    d3dpp.PresentationInterval = D3DPRESENT_INTERVAL_IMMEDIATE;\n    // 创建设备\n    if( FAILED( g_pD3D-&gt;CreateDevice( D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, hWnd,\n      D3DCREATE_SOFTWARE_VERTEXPROCESSING, &amp;d3dpp, &amp;g_pd3dDevice ) ) )  return E_FAIL;\n    return S_OK;\n  }\n\n//以上代码看着是不是很蛋疼，对啊非常蛋碎，反正就是一系列参数。先放着吧。</pre><br>\r\n下面就是InitGeometry函数 主要就是设置效果文件 .fx后缀那个。\r\n<p></p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">//-----------------------------------------------------------------------------\n// 函数：InitGeometry()\n// 功能：设置目录、装入模型、纹理、效果文件、传递效果参数到HLSL\n// 参数：初始化了其他三个全局变量 g_pMesh g_pEffect g_pMeshTextures\n//-----------------------------------------------------------------------------\nHRESULT InitGeometry()\n  {\n    HRESULT hr;\n    // 设置目录\n    TCHAR szAppPath[ MAX_PATH ];\n    TCHAR szRcPath[ MAX_PATH ];\n    GetCurrentDirectory( MAX_PATH, szAppPath );\n    // \n    lstrcpy( szRcPath , szAppPath );\n    lstrcat( szRcPath ,L&quot;\\\\ResFile_1_Model&quot; );\n    SetCurrentDirectory( szRcPath );\n        // 装入效果文件\n    LPD3DXBUFFER pCode = NULL;\n    if( FAILED( hr = D3DXCreateEffectFromFile( g_pd3dDevice, L&quot;FileFX.fx&quot;, \n      NULL, NULL, 0, NULL, &amp;g_pEffect, &amp;pCode )))\n      {\n        LPVOID pBufErr = pCode-&gt;GetBufferPointer();\n        char* ErrInfo = ( char* ) pBufErr;\n        pCode-&gt;Release( );\n        return hr;\n      }\n    if( FAILED( hr = g_pEffect-&gt;SetTechnique( &quot;DefaultTech&quot; ))) return hr ;\n    //上面效果文件装载成功后，就要设置顶点结构的模型了 InitVB();\n    if( FAILED( hr = InitVB())) return hr;\n    // 可以正确返回了\n    return S_OK;\n  }</pre><br>\r\n以上代码其实基本都固定不变的。因为每个列子都要用的。真正需要随时改的那就是模型和渲染逻辑了\r\n<p></p>\r\n<p>回顾一下以上已经完成的是，窗口定义，窗口显示，初始化D3D，初始化.fx效果文件，初始化模型, 消息循环.</p>\r\n<p>下面就是讲真正要做的东西。 显示一个三角形</p>\r\n<p>顶点模型创建</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">// 函数：InitVB\n// 功能：初始化 g_pVB\n// 参数：无\n//-----------------------------------------------------------------------------\nHRESULT InitVB()\n  {\n    HRESULT hr;\n    CUSTOMVERTEX vertices[] =\n      {\n        {  5.0f ,  0.0f , 0.0f , 1.0f , 0xffff0000  }, // x, y, z, rhw, color 红色\n        {  0.0f  , 5.0f , 0.0f , 1.0f , 0xff00ff00  }, // 绿色\n        { -5.0f ,  0.0f , 0.0f , 1.0f , 0xff0000ff  }, // 蓝色\n        \n      };\n    if( FAILED( hr = g_pd3dDevice-&gt;CreateVertexBuffer( 3 * sizeof( CUSTOMVERTEX ),\n       0 , D3DFVF_CUSTOMVERTEX , D3DPOOL_DEFAULT , &amp;g_pVB, NULL ))) return hr;\n    VOID* pVertices;\n    if( FAILED( hr = g_pVB-&gt;Lock( 0, sizeof( vertices ), ( void** )&amp;pVertices, 0 )))    return hr;\n    memcpy( pVertices, vertices, sizeof( vertices ));\n    g_pVB-&gt;Unlock( );\n\n    return S_OK;\n  }</pre><br>\r\n一切准备工作就完成了。然后就是渲染啦\r\n<p></p>\r\n<p>主要是Render() 函数</p>\r\n<p></p>\r\n<pre name=\"code\" class=\"cpp\">VOID Render()\n  {\n    HRESULT hr;\n    // 清除背景缓冲区的深度缓冲区\n    hr = g_pd3dDevice-&gt;Clear( 0 , NULL , D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER , \n      D3DXCOLOR( 0.0f , 0.25f , 0.25f , 0.55f ) , 1.0f , 0 );\n    hr = g_pd3dDevice-&gt;SetStreamSource( 0, g_pVB, 0, sizeof( CUSTOMVERTEX ));\n    hr = g_pd3dDevice-&gt;SetFVF( D3DFVF_CUSTOMVERTEX );\n    if( SUCCEEDED( g_pd3dDevice-&gt;BeginScene( )))\n      {\n        // 设置变换，实际上是设置实际矩阵绕 Y 轴旋转\n        SetupMatrices( );\n        // 按效果文件的设置渲染\n        UINT iPass, cPasses;\n        hr = g_pEffect-&gt;Begin( &amp;cPasses, 0 );\n        for ( iPass = 0; iPass &lt; cPasses; iPass++ )\n          {\n            hr = g_pEffect-&gt;BeginPass( iPass );\n            hr = g_pd3dDevice-&gt;DrawPrimitive( D3DPT_TRIANGLELIST , 0 , 1 );\n            hr = g_pEffect-&gt;EndPass();\n          }\n        hr = g_pEffect-&gt;End();\n        hr = g_pd3dDevice-&gt;EndScene();\n      }\n    // 将渲染的结果切换到前景缓冲区\n    hr = g_pd3dDevice-&gt;Present( NULL, NULL, NULL, NULL );\n  }\n//-----------------------------------------------------------------------------\n// 函数：SetupMatrices()\n// 功能：将 4 个变量传递给效果文件，由效果文件来计算\n// 参数：无，本模块涉及全局变量：效果文件接口\n//-----------------------------------------------------------------------------\nVOID SetupMatrices()\n  {\n    HRESULT hr;\n    D3DXMATRIXA16 matWorld;\n    float fTime = timeGetTime() / 1000.0f ;\n    D3DXMatrixRotationY( &amp;matWorld , fTime );\n    //D3DXMatrixIdentity( &amp;matWorld );\n    hr = g_pEffect-&gt;SetFloat( &quot;g_fTime&quot; , fTime );\n    // 世界矩阵\n    hr = g_pEffect-&gt;SetMatrix( &quot;g_matWorld&quot; , &amp;matWorld );\n    // 观察矩阵\n    D3DXVECTOR3 vEyePt( 15.0f , 3.0f , 0.0f );\n    D3DXVECTOR3 vLookatPt( 0.0f, 3.0f, 0.0f );\n    D3DXVECTOR3 vUpVec( 0.0f, 1.0f, 0.0f );\n    D3DXMATRIXA16 matView;\n    D3DXMatrixLookAtLH( &amp;matView, &amp;vEyePt, &amp;vLookatPt, &amp;vUpVec );\n    hr = g_pEffect-&gt;SetMatrix( &quot;g_matView&quot; , &amp;matView );\n    // 投影矩阵\n    D3DXMATRIXA16 matProj;\n    D3DXMatrixPerspectiveFovLH( &amp;matProj , D3DX_PI/4 , 64.0 / 41.0f , 1.0 , 100.0f );\n    hr = g_pEffect-&gt;SetMatrix( &quot;g_matProject&quot; , &amp;matProj );\n  }</pre><br>\r\n效果就是一个三角形不停的转啊转。\r\n<p></p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925130119457?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>工程源码链接: http://pan.baidu.com/s/1sjI131j 密码: 8l7s</p>\r\n',1,'directx,vc++',0,0,'2015-02-02 00:45:57','2015-02-02 00:45:57','2015-02-02 00:45:57'),(43,1,7,'Directx 9.0/9.0c 在vs2008 里面的环境配置','445a59b457b70ac9e3fabb87b4e32df1',0,'\r\n\r\n<p>PS: 之前vs2010配置编译各种莫名其妙的问题，估计是版本太低了的缘故，因此怒换vs2008.</p>\r\n<p>其实vs2008很不错的，非常的快，一点都不卡。下面进','\r\n\r\n<p>PS: 之前vs2010配置编译各种莫名其妙的问题，估计是版本太低了的缘故，因此怒换vs2008.</p>\r\n<p>其实vs2008很不错的，非常的快，一点都不卡。下面进入正题。</p>\r\n<p>转载注明:http://blog.csdn.net/cq361106306/article/details/39536179</p>\r\n<p>1. 所需软件</p>\r\n<p><span style=\"color:#ff0000\">Microsoft DirectX SDK (June 2010) </span>&nbsp; 这个版本其实也支持dx9 dx10 dx11 挺方便的。是最后一次更新的独立版本。之后的sdk直接整合到了vs2012<br>\r\n</p>\r\n<p><span style=\"color:#ff0000\">vs 2008 express &nbsp; &nbsp;</span>这个版本是express 免费的版本，而且体积小速度快，完全够用了。下载了安装直接点vc&#43;&#43;那个选项安装就OK了。还能在已经安装了vs2010情况下共存。</p>\r\n<p>2. 安装sdk 一直默认就行了，最好c盘吧。方便一点。</p>\r\n<p>3.安装vs2008 一直默认好了。无脑安装模式</p>\r\n<p><br>\r\n</p>\r\n<p>4. 最重点的配置啦。</p>\r\n<p>首先创建一个win32 application</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010500103?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>然后选择empty 空工程:（要选中哈，图我忘了选中）</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010423406?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p>然后就是找到2个目录</p>\r\n<p>第一个叫include目录 ：&nbsp;C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Include</p>\r\n<p>第二个叫lib/x86目录：&nbsp;C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Lib\\x86</p>\r\n<p><br>\r\n</p>\r\n<p>然后点击菜单栏的 “Tools” &nbsp;- &nbsp; &quot;option&quot;</p>\r\n<p>配置成我的样子:</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010923103?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010748187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>最后一步:</p>\r\n<p>菜单栏上面的 “Project” &nbsp;- &quot;Propertitries&quot; &nbsp; &nbsp; 在下图填入</p>\r\n<p>d3d9.lib d3dx10d.lib d3dx9d.lib dxerr.lib dxguid.lib winmm.lib comctl32.lib&nbsp;<br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925011147544?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>现在配置完成了。是不是没有文件测试？？</p>\r\n<p>别急</p>\r\n<p>点开这个目录：</p>\r\n<p>C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Samples\\C&#43;&#43;\\Direct3D\\Tutorials\\Tut01_CreateDevice<br>\r\n</p>\r\n<p>把里面的cpp复制到</p>\r\n<p>C:\\Users\\Administrator.PC-20120925AIMC\\Documents\\Visual Studio 2008\\Projects\\<br>\r\n</p>\r\n<p>这个工程里面的 刚你建的那个工程里面</p>\r\n<p><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925011544087?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>然后f5运行试试<img src=\"http://img.blog.csdn.net/20140925011647657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></p>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n','\r\n\r\n<p>PS: 之前vs2010配置编译各种莫名其妙的问题，估计是版本太低了的缘故，因此怒换vs2008.</p>\r\n<p>其实vs2008很不错的，非常的快，一点都不卡。下面进入正题。</p>\r\n<p>转载注明:http://blog.csdn.net/cq361106306/article/details/39536179</p>\r\n<p>1. 所需软件</p>\r\n<p><span style=\"color:#ff0000\">Microsoft DirectX SDK (June 2010) </span>&nbsp; 这个版本其实也支持dx9 dx10 dx11 挺方便的。是最后一次更新的独立版本。之后的sdk直接整合到了vs2012<br>\r\n</p>\r\n<p><span style=\"color:#ff0000\">vs 2008 express &nbsp; &nbsp;</span>这个版本是express 免费的版本，而且体积小速度快，完全够用了。下载了安装直接点vc&#43;&#43;那个选项安装就OK了。还能在已经安装了vs2010情况下共存。</p>\r\n<p>2. 安装sdk 一直默认就行了，最好c盘吧。方便一点。</p>\r\n<p>3.安装vs2008 一直默认好了。无脑安装模式</p>\r\n<p><br>\r\n</p>\r\n<p>4. 最重点的配置啦。</p>\r\n<p>首先创建一个win32 application</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010500103?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>然后选择empty 空工程:（要选中哈，图我忘了选中）</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010423406?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p>然后就是找到2个目录</p>\r\n<p>第一个叫include目录 ：&nbsp;C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Include</p>\r\n<p>第二个叫lib/x86目录：&nbsp;C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Lib\\x86</p>\r\n<p><br>\r\n</p>\r\n<p>然后点击菜单栏的 “Tools” &nbsp;- &nbsp; &quot;option&quot;</p>\r\n<p>配置成我的样子:</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010923103?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925010748187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>最后一步:</p>\r\n<p>菜单栏上面的 “Project” &nbsp;- &quot;Propertitries&quot; &nbsp; &nbsp; 在下图填入</p>\r\n<p>d3d9.lib d3dx10d.lib d3dx9d.lib dxerr.lib dxguid.lib winmm.lib comctl32.lib&nbsp;<br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925011147544?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>现在配置完成了。是不是没有文件测试？？</p>\r\n<p>别急</p>\r\n<p>点开这个目录：</p>\r\n<p>C:\\Program Files\\Microsoft DirectX SDK (June 2010)\\Samples\\C&#43;&#43;\\Direct3D\\Tutorials\\Tut01_CreateDevice<br>\r\n</p>\r\n<p>把里面的cpp复制到</p>\r\n<p>C:\\Users\\Administrator.PC-20120925AIMC\\Documents\\Visual Studio 2008\\Projects\\<br>\r\n</p>\r\n<p>这个工程里面的 刚你建的那个工程里面</p>\r\n<p><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20140925011544087?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p>然后f5运行试试<img src=\"http://img.blog.csdn.net/20140925011647657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></p>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>\r\n',2,'visual studio 2008,directx',0,0,'2015-02-02 00:46:03','2015-02-02 00:46:03','2015-02-02 00:46:03'),(44,1,7,'Directx :一些学习网站 和 博客','6011900693c1629671a4d3d75116d8b1',0,'\r\n\r\n<p>1：&nbsp;http://www.cnblogs.com/mikewolf2002/category/351011.html &nbsp;这个是关于dx11的教程 很棒 每个实例都有源码</p>\r\n<p>2: &nbsp;http://shiba.hpe.sh.cn/jiaoyanzu/wuli/soft','\r\n\r\n<p>1：&nbsp;http://www.cnblogs.com/mikewolf2002/category/351011.html &nbsp;这个是关于dx11的教程 很棒 每个实例都有源码</p>\r\n<p>2: &nbsp;http://shiba.hpe.sh.cn/jiaoyanzu/wuli/soft/NotXNA.aspx?classId=4 &nbsp;这个相当棒 讲的很清楚</p>\r\n<p><br>\r\n</p>\r\n<p></p>\r\n<pre id=\"best-content-1465554011\" class=\"best-text mb-10\" style=\"margin-top:0px; margin-bottom:10px; padding:0px; font-family:arial,\'courier new\',courier,宋体,monospace; white-space:pre-wrap; word-wrap:break-word; color:rgb(51,51,51); font-size:14px; line-height:24px; background-color:rgb(241,254,221)\">学习DirectX有一段时间了\n走了不少弯路但同时也渐渐摸索出了比较好的学习方法\nPost by Windowss Live Writer @ Windows Vista RC 1 5600\n===========================================\n首先打开帮助文档，一般建议在MSDN内打开而不是单独打开chm。\n你会看到有以下组成部分：\nDirectX Software Development Kit\nDirectX Graphics\nDirectX Input\nDirectX Audio\nDirectX SDK Technical ArticlesGlossary分别来看看这些：\nDirectX Graphics,Input,Audio分别详细介绍图形，输入，音频等信息。\nDirectX SDK Techniacl Articles里面是这个版本SDK发行前一些比较好的技术文章的精选。\nGlossary则是整个SDK的术语表，你可以查到所有出现过的术语。\n对于我们来说，最关心的就是DirectX Graphics了，下面来详细介绍下这个部分：\n由于Vista还未正式发布，所以目前最新的DirectX版本还算9，毕竟10还没正式发布。而且能支持10的显卡也寥寥无几。\nConverting to Direct3D 9\nProgramming Guide\n这里给出了几个方向：入门，DXUT 框架，HLSL ，Effects，高级话题，编成技巧。\n入门里介绍了D3d的结构，D3d设备，D3d资源，坐标系。。。都是些看&#20284;基础却非常重要的概念，强烈建议大家仔细阅读。\nDXUT里详细的介绍了DXUT这个框架，几乎所有的SDK的sample都用这个框架写的。所以如果你要学习sample这个非常重要！！！！\nHLSL你想做这个的话，别愁没资料，这就是最好的资料\nEffects特效也是个大方向，先从了解开始吧，一步一步走。\nAdvanced Topics等你有了一定基础再来看吧，否则就是天书\nProgramming Tips等你完成上述步骤，你应该也可以看看这个\nGraphics Tools\n介绍了编译和调试Shader的工具\n重要程度我就不再强调了，这些全部搞定，你肯定可以做游戏了。Tutorials相比Samples简单的多，大家觉得基础不好就从这里开始看。然后等有了DXUT基础再开始看Samples。每个Samples都有比较详细的文档介绍，不过更重要的是放到VS里去调试去修改！！！动手才是学习编程的唯一王道Reference这里就好比一门编程语言的语法，所有细节你都可以在这里查阅。同样这里分D3D，D3DX，HLSL，Asm，Effect，DXUT，X files你在学习上述部分有任何问题都可以到这里来查。非常详细的参考大全。远比市面上的书要详细权</pre>\r\n<br>\r\n<p></p>\r\n','\r\n\r\n<p>1：&nbsp;http://www.cnblogs.com/mikewolf2002/category/351011.html &nbsp;这个是关于dx11的教程 很棒 每个实例都有源码</p>\r\n<p>2: &nbsp;http://shiba.hpe.sh.cn/jiaoyanzu/wuli/soft/NotXNA.aspx?classId=4 &nbsp;这个相当棒 讲的很清楚</p>\r\n<p><br>\r\n</p>\r\n<p></p>\r\n<pre id=\"best-content-1465554011\" class=\"best-text mb-10\" style=\"margin-top:0px; margin-bottom:10px; padding:0px; font-family:arial,\'courier new\',courier,宋体,monospace; white-space:pre-wrap; word-wrap:break-word; color:rgb(51,51,51); font-size:14px; line-height:24px; background-color:rgb(241,254,221)\">学习DirectX有一段时间了\n走了不少弯路但同时也渐渐摸索出了比较好的学习方法\nPost by Windowss Live Writer @ Windows Vista RC 1 5600\n===========================================\n首先打开帮助文档，一般建议在MSDN内打开而不是单独打开chm。\n你会看到有以下组成部分：\nDirectX Software Development Kit\nDirectX Graphics\nDirectX Input\nDirectX Audio\nDirectX SDK Technical ArticlesGlossary分别来看看这些：\nDirectX Graphics,Input,Audio分别详细介绍图形，输入，音频等信息。\nDirectX SDK Techniacl Articles里面是这个版本SDK发行前一些比较好的技术文章的精选。\nGlossary则是整个SDK的术语表，你可以查到所有出现过的术语。\n对于我们来说，最关心的就是DirectX Graphics了，下面来详细介绍下这个部分：\n由于Vista还未正式发布，所以目前最新的DirectX版本还算9，毕竟10还没正式发布。而且能支持10的显卡也寥寥无几。\nConverting to Direct3D 9\nProgramming Guide\n这里给出了几个方向：入门，DXUT 框架，HLSL ，Effects，高级话题，编成技巧。\n入门里介绍了D3d的结构，D3d设备，D3d资源，坐标系。。。都是些看&#20284;基础却非常重要的概念，强烈建议大家仔细阅读。\nDXUT里详细的介绍了DXUT这个框架，几乎所有的SDK的sample都用这个框架写的。所以如果你要学习sample这个非常重要！！！！\nHLSL你想做这个的话，别愁没资料，这就是最好的资料\nEffects特效也是个大方向，先从了解开始吧，一步一步走。\nAdvanced Topics等你有了一定基础再来看吧，否则就是天书\nProgramming Tips等你完成上述步骤，你应该也可以看看这个\nGraphics Tools\n介绍了编译和调试Shader的工具\n重要程度我就不再强调了，这些全部搞定，你肯定可以做游戏了。Tutorials相比Samples简单的多，大家觉得基础不好就从这里开始看。然后等有了DXUT基础再开始看Samples。每个Samples都有比较详细的文档介绍，不过更重要的是放到VS里去调试去修改！！！动手才是学习编程的唯一王道Reference这里就好比一门编程语言的语法，所有细节你都可以在这里查阅。同样这里分D3D，D3DX，HLSL，Asm，Effect，DXUT，X files你在学习上述部分有任何问题都可以到这里来查。非常详细的参考大全。远比市面上的书要详细权</pre>\r\n<br>\r\n<p></p>\r\n',1,'实例,博客,directx',0,0,'2015-02-02 00:46:06','2015-02-02 00:46:06','2015-02-02 00:46:06'),(45,1,7,'Directx10 龙书笔记- 第7章课后题 实现火焰动画','cd2c07d73c937253c73d2d624bc2ebfd',0,'\r\n\r\n<p>火焰的图片我是没找到，找到了几张雷电的，就在d3dcoder.net 的directx10那本书代码下载的<a target=\"_blank\" href=\"http://d3dcoder.net/Data/Book3/BoltAnim.zip\" style=\"f','\r\n\r\n<p>火焰的图片我是没找到，找到了几张雷电的，就在d3dcoder.net 的directx10那本书代码下载的<a target=\"_blank\" href=\"http://d3dcoder.net/Data/Book3/BoltAnim.zip\" style=\"font-family:Simsun; font-size:14px\">Bolt Animations for Chapter 9</a><span style=\"font-family:Simsun; font-size:14px\">&nbsp; 里面</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"><br>\r\n</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">里面很多张图片，由于c&#43;&#43;也是初学，一时来不及弄字符串拼接的函数。 只能定义很多个帧bmp 然后一个一个载入了</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">具体代码是建立在那个&quot;crate&quot; 例子工程， 就是那个木箱子的代码基础上。</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">添加的代码如下:</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"></span><pre name=\"code\" class=\"html\">ID3D10ShaderResourceView* mDiffusePic[9];</pre>我定义了一个能装9张图片的shaderview</p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">然后开始从文件载入</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"></span><pre name=\"code\" class=\"cpp\">HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n			L&quot;BoltAnim/Bolt001.bmp&quot;, 0, 0, &amp;mDiffusePic[0], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt002.bmp&quot;, 0, 0, &amp;mDiffusePic[1], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt003.bmp&quot;, 0, 0, &amp;mDiffusePic[2], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt004.bmp&quot;, 0, 0, &amp;mDiffusePic[3], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt005.bmp&quot;, 0, 0, &amp;mDiffusePic[4], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt006.bmp&quot;, 0, 0, &amp;mDiffusePic[5], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt007.bmp&quot;, 0, 0, &amp;mDiffusePic[6], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt008.bmp&quot;, 0, 0, &amp;mDiffusePic[7], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt009.bmp&quot;, 0, 0, &amp;mDiffusePic[8], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt001.bmp&quot;, 0, 0, &amp;mDiffuseMapRV, 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;WoodCrate01.dds&quot;, 0, 0, &amp;mDiffuseMapRV1, 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;defaultspec.dds&quot;, 0, 0, &amp;mSpecMapRV, 0 ));</pre><br>\r\n如果你知道如果将BoltAnim/Bolt00&#43;i&#43;.bmp这种拼接成函数的参数请告诉我，因为这样就可以调用那几十张图片了，没必要我这样麻烦的复制9次。</p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">当所有东西存好在mDiffusePic里面过后，就是开始绘制了。</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">最开始那个木箱盒子是绘制的固定的一个纹理贴图 mDiffuseMapRV</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">这里我们改用刚定义的mDiffusePic. 而且是在drawScene函数里面 每隔一定的时间换一张图片</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">这样快速的就形成了帧动画了。</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"></span><pre name=\"code\" class=\"cpp\">// Every quarter second, generate a random wave.\n	static float t_base = 0.0f;\n	static int flag=0;\n	if( (mTimer.getGameTime() - t_base) &gt;= 0.15f )\n	{\n		t_base += 0.15f;\n		mfxDiffuseMapVar-&gt;SetResource(mDiffusePic[(flag++)%9]);\n	}</pre><br>\r\n主要就是以上这个函数了。</p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">由于是我的读书笔记，所以没有全部工程的源码给出。只是方便同在学习这本书的童鞋查缺补漏。 以上都是核心的需要注意的代码了。<img src=\"http://img.blog.csdn.net/20140922002013036?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></span></p>\r\n','\r\n\r\n<p>火焰的图片我是没找到，找到了几张雷电的，就在d3dcoder.net 的directx10那本书代码下载的<a target=\"_blank\" href=\"http://d3dcoder.net/Data/Book3/BoltAnim.zip\" style=\"font-family:Simsun; font-size:14px\">Bolt Animations for Chapter 9</a><span style=\"font-family:Simsun; font-size:14px\">&nbsp; 里面</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"><br>\r\n</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">里面很多张图片，由于c&#43;&#43;也是初学，一时来不及弄字符串拼接的函数。 只能定义很多个帧bmp 然后一个一个载入了</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">具体代码是建立在那个&quot;crate&quot; 例子工程， 就是那个木箱子的代码基础上。</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">添加的代码如下:</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"></span><pre name=\"code\" class=\"html\">ID3D10ShaderResourceView* mDiffusePic[9];</pre>我定义了一个能装9张图片的shaderview</p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">然后开始从文件载入</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"></span><pre name=\"code\" class=\"cpp\">HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n			L&quot;BoltAnim/Bolt001.bmp&quot;, 0, 0, &amp;mDiffusePic[0], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt002.bmp&quot;, 0, 0, &amp;mDiffusePic[1], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt003.bmp&quot;, 0, 0, &amp;mDiffusePic[2], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt004.bmp&quot;, 0, 0, &amp;mDiffusePic[3], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt005.bmp&quot;, 0, 0, &amp;mDiffusePic[4], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt006.bmp&quot;, 0, 0, &amp;mDiffusePic[5], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt007.bmp&quot;, 0, 0, &amp;mDiffusePic[6], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt008.bmp&quot;, 0, 0, &amp;mDiffusePic[7], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt009.bmp&quot;, 0, 0, &amp;mDiffusePic[8], 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;BoltAnim/Bolt001.bmp&quot;, 0, 0, &amp;mDiffuseMapRV, 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;WoodCrate01.dds&quot;, 0, 0, &amp;mDiffuseMapRV1, 0 ));\n	HR(D3DX10CreateShaderResourceViewFromFile(md3dDevice, \n		L&quot;defaultspec.dds&quot;, 0, 0, &amp;mSpecMapRV, 0 ));</pre><br>\r\n如果你知道如果将BoltAnim/Bolt00&#43;i&#43;.bmp这种拼接成函数的参数请告诉我，因为这样就可以调用那几十张图片了，没必要我这样麻烦的复制9次。</p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">当所有东西存好在mDiffusePic里面过后，就是开始绘制了。</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">最开始那个木箱盒子是绘制的固定的一个纹理贴图 mDiffuseMapRV</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">这里我们改用刚定义的mDiffusePic. 而且是在drawScene函数里面 每隔一定的时间换一张图片</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">这样快速的就形成了帧动画了。</span></p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\"></span><pre name=\"code\" class=\"cpp\">// Every quarter second, generate a random wave.\n	static float t_base = 0.0f;\n	static int flag=0;\n	if( (mTimer.getGameTime() - t_base) &gt;= 0.15f )\n	{\n		t_base += 0.15f;\n		mfxDiffuseMapVar-&gt;SetResource(mDiffusePic[(flag++)%9]);\n	}</pre><br>\r\n主要就是以上这个函数了。</p>\r\n<p><span style=\"font-family:Simsun; font-size:14px\">由于是我的读书笔记，所以没有全部工程的源码给出。只是方便同在学习这本书的童鞋查缺补漏。 以上都是核心的需要注意的代码了。<img src=\"http://img.blog.csdn.net/20140922002013036?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></span></p>\r\n',1,'读书笔记,directx,game',0,0,'2015-02-02 00:46:07','2015-02-02 00:46:07','2015-02-02 00:46:07'),(46,1,7,'Directx10 龙书笔记- 雾效的实现','d4005b04f23a461be5437aa6e1d1a15c',0,'\r\n\r\n<p>雾 ： 说白了就是一层有颜色的(一般是白色，灰色) 蒙蒙的感觉 混在光线里面。 不管是白天还是黑天。</p>\r\n<p>龙书里面是这样实现的：</p>\r\n<p>1. &nb','\r\n\r\n<p>雾 ： 说白了就是一层有颜色的(一般是白色，灰色) 蒙蒙的感觉 混在光线里面。 不管是白天还是黑天。</p>\r\n<p>龙书里面是这样实现的：</p>\r\n<p>1. &nbsp;给雾定义一个颜色 float3 gFogColor={0.7f,0.7f,0.7f};</p>\r\n<p>2. 然后呢在顶点着色器里面计算出 顶点级别的雾化需要的颜色加成比例</p>\r\n<p>加成比例： 意思是当距离摄像机，就是你的&#30524;睛越远，雾的浓度越大，就是颜色越深。 根据这个得出一个(0,1)的和距离有关的比例系数</p>\r\n<p>vout.fogLerp = saturate((d-gFogStart)/gFogRange) ; 其中 gFogStart是可见范围，没有雾的范围，gFogRange是不可见范围，超出这个范围就全是雾</p>\r\n<p>saturate是强制为(0,1)这个区间。</p>\r\n<p>3. 在像素着色器像素级别的融合 纹理颜色和雾的颜色</p>\r\n<p>float3 floggedColor = lerp(litColor,gFogColor,pIn.fogLerp);</p>\r\n<p><br>\r\n</p>\r\n<p>具体fx代码为:</p>\r\n<p></p>\r\n<pre code_snippet_id=\"472521\" snippet_file_name=\"blog_20140921_1_5171997\"  name=\"code\" class=\"html\">//=============================================================================\n// fog.fx by Frank Luna (C) 2008 All Rights Reserved.\n//\n// Same as clip.fx, but adds fog in the vertex shader.\n// Note that we could do fog in the pixel shader, but if the scene\n// has sufficient triangle density, not much is gained. \n//=============================================================================\n\n\n#include &quot;lighthelper.fx&quot;\n \ncbuffer cbPerFrame\n{\n	Light gLight;\n	float3 gEyePosW;\n};\n\ncbuffer cbPerObject\n{\n	float4x4 gWorld;\n	float4x4 gWVP; \n	float4x4 gTexMtx;\n};\n\ncbuffer cbFixed\n{\n	// For this demo, we hardcode the fog values.  However, in a real\n	// application, the program may want to change the fog settings\n	// at runtime; for example, to fade the fog in and out based on \n	// the time of day or the location of the game player.\n 	\n	float  gFogStart = 5.0f;\n	float  gFogRange = 140.0f;\n	float3 gFogColor = {0.7f, 0.7f, 0.7f};\n};\n\n// Nonnumeric values cannot be added to a cbuffer.\nTexture2D gDiffuseMap;\nTexture2D gSpecMap;\n\nSamplerState gTriLinearSam\n{\n	Filter = MIN_MAG_MIP_LINEAR;\n	AddressU = Wrap;\n	AddressV = Wrap;\n};\n\nstruct VS_IN\n{\n	float3 posL    : POSITION;\n	float3 normalL : NORMAL;\n	float2 texC    : TEXCOORD;\n};\n\nstruct VS_OUT\n{\n	float4 posH    : SV_POSITION;\n    float3 posW    : POSITION;\n    float3 normalW : NORMAL;\n    float2 texC0   : TEXCOORD0;\n    float2 texC1   : TEXCOORD1;\n    float  fogLerp : FOG;\n};\n \nVS_OUT VS(VS_IN vIn)\n{\n	VS_OUT vOut;\n	\n	// Transform to world space space.\n	vOut.posW    = mul(float4(vIn.posL, 1.0f), gWorld);\n	vOut.normalW = mul(float4(vIn.normalL, 0.0f), gWorld);\n		\n	// Transform to homogeneous clip space.\n	vOut.posH = mul(float4(vIn.posL, 1.0f), gWVP);\n	\n	// Output vertex attributes for interpolation across triangle.\n	vOut.texC0  = vIn.texC;\n	vOut.texC1  = mul(float4(vIn.texC, 0.0f, 1.0f), gTexMtx);\n	\n	float d      = distance(vOut.posW, gEyePosW);\n	vOut.fogLerp = saturate( (d - gFogStart) / gFogRange ); \n	\n	return vOut;\n}\n\nfloat4 PS(VS_OUT pIn) : SV_Target\n{\n	// Get materials from texture maps.\n	float alpha    = gDiffuseMap.Sample( gTriLinearSam, pIn.texC0 ).a;\n	\n	// Discard pixel if texture alpha &lt; 0.1.  Note that we do this\n	// test as soon as possible so that we can potentially exit the shader \n	// early, thereby skipping the rest of the shader code.\n	clip(alpha - 0.1f);\n	\n	float4 diffuse = gDiffuseMap.Sample( gTriLinearSam, pIn.texC1 );\n	float4 spec    = gSpecMap.Sample( gTriLinearSam, pIn.texC1 );\n	\n	// Map [0,1] --&gt; [0,256]\n	spec.a *= 256.0f;\n	\n	// Interpolating normal can make it not be of unit length so normalize it.\n    float3 normalW = normalize(pIn.normalW);\n    \n	// Compute the lit color for this pixel.\n    SurfaceInfo v = {pIn.posW, normalW, diffuse, spec};\n	float3 litColor = ParallelLight(v, gLight, gEyePosW);\n	\n	// Blend the fog color and the lit color.\n	float3 foggedColor = lerp(litColor, gFogColor, pIn.fogLerp);\n	\n    return float4(foggedColor, alpha);\n}\n\ntechnique10 FogTech\n{\n    pass P0\n    {\n        SetVertexShader( CompileShader( vs_4_0, VS() ) );\n        SetGeometryShader( NULL );\n        SetPixelShader( CompileShader( ps_4_0, PS() ) );\n    }\n}\n</pre><br>\r\n因为这是笔记，详细代码就不贴了，龙书网站有\r\n<p></p>\r\n<p>给个实现效果吧：<img src=\"http://img.blog.csdn.net/20140921174104248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p><br>\r\n</p>\r\n','\r\n\r\n<p>雾 ： 说白了就是一层有颜色的(一般是白色，灰色) 蒙蒙的感觉 混在光线里面。 不管是白天还是黑天。</p>\r\n<p>龙书里面是这样实现的：</p>\r\n<p>1. &nbsp;给雾定义一个颜色 float3 gFogColor={0.7f,0.7f,0.7f};</p>\r\n<p>2. 然后呢在顶点着色器里面计算出 顶点级别的雾化需要的颜色加成比例</p>\r\n<p>加成比例： 意思是当距离摄像机，就是你的&#30524;睛越远，雾的浓度越大，就是颜色越深。 根据这个得出一个(0,1)的和距离有关的比例系数</p>\r\n<p>vout.fogLerp = saturate((d-gFogStart)/gFogRange) ; 其中 gFogStart是可见范围，没有雾的范围，gFogRange是不可见范围，超出这个范围就全是雾</p>\r\n<p>saturate是强制为(0,1)这个区间。</p>\r\n<p>3. 在像素着色器像素级别的融合 纹理颜色和雾的颜色</p>\r\n<p>float3 floggedColor = lerp(litColor,gFogColor,pIn.fogLerp);</p>\r\n<p><br>\r\n</p>\r\n<p>具体fx代码为:</p>\r\n<p></p>\r\n<pre code_snippet_id=\"472521\" snippet_file_name=\"blog_20140921_1_5171997\"  name=\"code\" class=\"html\">//=============================================================================\n// fog.fx by Frank Luna (C) 2008 All Rights Reserved.\n//\n// Same as clip.fx, but adds fog in the vertex shader.\n// Note that we could do fog in the pixel shader, but if the scene\n// has sufficient triangle density, not much is gained. \n//=============================================================================\n\n\n#include &quot;lighthelper.fx&quot;\n \ncbuffer cbPerFrame\n{\n	Light gLight;\n	float3 gEyePosW;\n};\n\ncbuffer cbPerObject\n{\n	float4x4 gWorld;\n	float4x4 gWVP; \n	float4x4 gTexMtx;\n};\n\ncbuffer cbFixed\n{\n	// For this demo, we hardcode the fog values.  However, in a real\n	// application, the program may want to change the fog settings\n	// at runtime; for example, to fade the fog in and out based on \n	// the time of day or the location of the game player.\n 	\n	float  gFogStart = 5.0f;\n	float  gFogRange = 140.0f;\n	float3 gFogColor = {0.7f, 0.7f, 0.7f};\n};\n\n// Nonnumeric values cannot be added to a cbuffer.\nTexture2D gDiffuseMap;\nTexture2D gSpecMap;\n\nSamplerState gTriLinearSam\n{\n	Filter = MIN_MAG_MIP_LINEAR;\n	AddressU = Wrap;\n	AddressV = Wrap;\n};\n\nstruct VS_IN\n{\n	float3 posL    : POSITION;\n	float3 normalL : NORMAL;\n	float2 texC    : TEXCOORD;\n};\n\nstruct VS_OUT\n{\n	float4 posH    : SV_POSITION;\n    float3 posW    : POSITION;\n    float3 normalW : NORMAL;\n    float2 texC0   : TEXCOORD0;\n    float2 texC1   : TEXCOORD1;\n    float  fogLerp : FOG;\n};\n \nVS_OUT VS(VS_IN vIn)\n{\n	VS_OUT vOut;\n	\n	// Transform to world space space.\n	vOut.posW    = mul(float4(vIn.posL, 1.0f), gWorld);\n	vOut.normalW = mul(float4(vIn.normalL, 0.0f), gWorld);\n		\n	// Transform to homogeneous clip space.\n	vOut.posH = mul(float4(vIn.posL, 1.0f), gWVP);\n	\n	// Output vertex attributes for interpolation across triangle.\n	vOut.texC0  = vIn.texC;\n	vOut.texC1  = mul(float4(vIn.texC, 0.0f, 1.0f), gTexMtx);\n	\n	float d      = distance(vOut.posW, gEyePosW);\n	vOut.fogLerp = saturate( (d - gFogStart) / gFogRange ); \n	\n	return vOut;\n}\n\nfloat4 PS(VS_OUT pIn) : SV_Target\n{\n	// Get materials from texture maps.\n	float alpha    = gDiffuseMap.Sample( gTriLinearSam, pIn.texC0 ).a;\n	\n	// Discard pixel if texture alpha &lt; 0.1.  Note that we do this\n	// test as soon as possible so that we can potentially exit the shader \n	// early, thereby skipping the rest of the shader code.\n	clip(alpha - 0.1f);\n	\n	float4 diffuse = gDiffuseMap.Sample( gTriLinearSam, pIn.texC1 );\n	float4 spec    = gSpecMap.Sample( gTriLinearSam, pIn.texC1 );\n	\n	// Map [0,1] --&gt; [0,256]\n	spec.a *= 256.0f;\n	\n	// Interpolating normal can make it not be of unit length so normalize it.\n    float3 normalW = normalize(pIn.normalW);\n    \n	// Compute the lit color for this pixel.\n    SurfaceInfo v = {pIn.posW, normalW, diffuse, spec};\n	float3 litColor = ParallelLight(v, gLight, gEyePosW);\n	\n	// Blend the fog color and the lit color.\n	float3 foggedColor = lerp(litColor, gFogColor, pIn.fogLerp);\n	\n    return float4(foggedColor, alpha);\n}\n\ntechnique10 FogTech\n{\n    pass P0\n    {\n        SetVertexShader( CompileShader( vs_4_0, VS() ) );\n        SetGeometryShader( NULL );\n        SetPixelShader( CompileShader( ps_4_0, PS() ) );\n    }\n}\n</pre><br>\r\n因为这是笔记，详细代码就不贴了，龙书网站有\r\n<p></p>\r\n<p>给个实现效果吧：<img src=\"http://img.blog.csdn.net/20140921174104248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p><br>\r\n</p>\r\n',2,'directx,gpu,game,c++',0,0,'2015-02-02 00:46:10','2015-02-02 00:46:10','2015-02-02 00:46:10'),(47,1,7,'Directx 中HLSL高级着色器语言 脑补一下吧','213d0b457f9b1f3ce0c3b7b8afc6523e',0,'\r\n\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><strong><span style=\"font-family:Times New Roman\">HLSL</span>初级教程</strong></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><strong>作者','\r\n\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><strong><span style=\"font-family:Times New Roman\">HLSL</span>初级教程</strong></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><strong>作者：<span style=\"font-family:Times New Roman\">trcj</span></strong></p>\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t0\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">目录</span></h6>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">前言</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.HLSL</span>入门</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.1</span>什么是着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.2</span>什么是<span style=\"font-family:Times New Roman\">HLSL</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.3</span>怎么写<span style=\"font-family:Times New Roman\">HLSL</span>着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.4</span>怎么用<span style=\"font-family:Times New Roman\">HLSL</span>着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.1</span>可编程数据流模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.2</span>顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.3</span>用顶点着色器实现渐变动画</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.1</span>多纹理化</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.2</span>多纹理效果的像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.3</span>应用程序</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.HLSL Effect</span>（效果框架）</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.1Effect</span>代码结构</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.2</span>用<span style=\"font-family:Times New Roman\">Effect</span>实现多纹理化效果</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">结语</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">参考资料</span></p>\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t1\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133402\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133137\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">前言</span></a></h6>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>本教程针对<span style=\"font-family:Times New Roman\">HLSL</span>（<span style=\"font-family:Times New Roman\">High Level Shading Language</span>）<span style=\"font-size:14px\">初学者，从应用的角度对<span style=\"font-family:Times New Roman\">HLSL</span>、顶点着色器、像素着色器和<span style=\"font-family:Times New Roman\">Effect</span>效果框架进行了介绍，教程中去掉了对<span style=\"font-family:Times New Roman\">HLSL</span>语法等一些细节内容的讨论，力求帮助读者尽可能快地理解<span style=\"font-family:Times New Roman\">HLSL</span>编程的概念，掌握<span style=\"font-family:Times New Roman\">HLSL</span>编程的方法。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>教程中部分阐述直接引用了其他文档，这是因为这些文档表述之精要，已经达到了不能更改的地步，这里表示感谢。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>本文档版权为作者所有，非商业用途可免费使用，转载请注明出处。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t2\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133138\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">1.HLSL</span></a><span style=\"font-size:14px\">入门</span></h6>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133404\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133139\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>1.1</strong></span></a><strong><span style=\"font-size:14px\">什么是着色器</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\">DirectX使用管道技术（pipeline）进行图形渲染，其构架如下：</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_BlockDiag_Graphics.gif\" alt=\"\"></p>\r\n<span style=\"color:rgb(51,51,51)\"></span>\r\n<p align=\"center\">图<span style=\"font-family:Times New Roman\">1.1 Direct3D Graphics Pipeline</span></p>\r\n<p>之前我们使用管道的步骤如下：</p>\r\n<p><span style=\"font-family:Times New Roman\">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>设定顶点、图元、纹理等数据信息；</p>\r\n<p><span style=\"font-family:Times New Roman\">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>设定管道状态信息；</p>\r\n<p>²&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;渲染状态</p>\r\n<p>通过<span style=\"font-family:Times New Roman\">SetRenderState</span>方法设定渲染状态；</p>\r\n<p>另外，使用以下方法设置变换、材质和光照：</p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetTransform</span></p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetMaterial</span></p>\r\n<p><span style=\"font-family:Times New Roman\">SetLight</span></p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LightEnable</span></p>\r\n<p>²&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;取样器状态</p>\r\n<p>通过<span style=\"font-family:Times New Roman\">SetSamplerState</span>方法设定取样器状态；</p>\r\n<p>²&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;纹理层状态</p>\r\n<p>通过<span style=\"font-family:Times New Roman\">SetTextureStageState</span>设定纹理层状态；</p>\r\n<p><span style=\"font-family:Times New Roman\">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>渲染；</p>\r\n<p>这部分交由<span style=\"font-family:Times New Roman\">D3D</span>管道按照之前的设定自行完成，这部分操作是<span style=\"font-family:Times New Roman\">D3D</span>预先固定的，所以这种管道技术被称为固定功能管道<span style=\"font-family:Times New Roman\">(fixed function pipeline)</span>；</p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;</span></p>\r\n<p>固定功能管道给我们编程提供了一定的灵活性，但是仍有很多效果难以通过这种方式实现，比如：</p>\r\n<p><span style=\"font-family:Times New Roman\">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>在渲染过程中，我们要求<span style=\"font-family:Times New Roman\">y</span>坐标&#20540;大于<span style=\"font-family:Times New Roman\">10</span>的顶点要被绘制到坐标&#20540;（<span style=\"font-family:Times New Roman\">0</span>，<span style=\"font-family:Times New Roman\">0</span>，<span style=\"font-family:Times New Roman\">0</span>）的地方，在之前的固定功能管道中，顶点被绘制的位置是在第<span style=\"font-family:Times New Roman\">1</span>步即被设定好的，不可能在渲染过程中进行改变，所以是不可行的；</p>\r\n<p><span style=\"font-family:Times New Roman\">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>谋顶点在纹理贴图<span style=\"font-family:Times New Roman\">1</span>上映射为点<span style=\"font-family:Times New Roman\">A</span>，在纹理贴图<span style=\"font-family:Times New Roman\">2</span>上映射为点<span style=\"font-family:Times New Roman\">B</span>，我们要求该顶点颜色由<span style=\"font-family:Times New Roman\">A</span>、<span style=\"font-family:Times New Roman\">B</span>共同决定，即：</p>\r\n<p>定点颜色<span style=\"font-family:Times New Roman\">&nbsp;= A</span>点色彩&#20540;<span style=\"font-family:Times New Roman\">*0.7 &#43; B</span>点色彩&#20540;<span style=\"font-family:Times New Roman\">*0.3</span></p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;</span>这在固定管道编程中也是不可行的。</p>\r\n<p>以上两个问题都可以由可编程管道（<span style=\"font-family:Times New Roman\">pragrammable pipeline</span>）来解决。</p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>可编程管线允许用户自定义一段可以在<span style=\"font-family:Times New Roman\">GPU</span>上执行的程序，代替固定管道技术中的<span style=\"font-family:Times New Roman\">Vertex Processing</span>和<span style=\"font-family:Times New Roman\">Pixel\r\n Processing</span>阶段（参照图<span style=\"font-family:Times New Roman\">1.1</span>），从而在使我们在编程中达到更大的灵活性。其中替换<span style=\"font-family:Times New Roman\">Vertex Processing</span>的部分叫做<span style=\"font-family:Times New Roman\">Vertex Shader</span>（顶点着色器），替换<span style=\"font-family:Times New Roman\">Pixel\r\n Proccessing</span>的部分叫做<span style=\"font-family:Times New Roman\">Pixel Shader</span>（像素着色器），这就是我们所说的着色器<span style=\"font-family:Times New Roman\">Shader</span>。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133140\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>1.2</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">什么是</span></strong></span><span style=\"font-family:Times New Roman\">HLSL</span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Direct8.x</span>中，着色器是通过低级着色汇编语言来编写的，这样的程序更像是汇编式的指令集合，由于其效率低、可读性差、版本限制等缺点，迫切要求出现一门更高级的着色语言。到了<span style=\"font-family:Times New Roman\">Direct3D9</span>，<span style=\"font-family:Times New Roman\">HLSL</span>（<span style=\"font-family:Times New Roman\">High\r\n Level Shading Language</span>，高级渲染语言）应运而生了。</p>\r\n<span style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">HLSL</span></span><span style=\"color:rgb(51,51,51)\">的语法非常类&#20284;于</span><span style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">C</span></span><span style=\"color:rgb(51,51,51)\">和</span><span style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">C&#43;&#43;</span></span><span style=\"color:rgb(51,51,51)\">，学习起来是很方便的。<br>\r\n<br>\r\n</span><a target=\"_blank\" name=\"_Toc159133141\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman\"><strong>1.3</strong></span></a><span style=\"color:rgb(51,51,51)\">怎么写<span style=\"font-family:Times New Roman\">HLSL</span>着色器</span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们可以直接把<span style=\"font-family:Times New Roman\">HLSL</span>着色器代码作为一长串字符串编写进我们的应用程序源文件中，但是，更加方便和模块化的方法是把着色器的代码从应用程序代码中分离出来。因此，我们将着色器代码单独保存为文本&#26684;式，然后在应用程序中使用特定函数将其加载进来。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">下面是一个完整的<span style=\"font-family:Times New Roman\">HLSL</span>着色器程序代码，我们把它保存在<span style=\"font-family:Times New Roman\">BasicHLSL.txt</span>中。该着色器完成顶点的世界变换、观察变换和投影变幻，并将顶点颜色设定为指定的颜色。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// BasicHLSL.txt</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// Global variable</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// Structures</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector color : COLOR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// Functions</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">VS_OUTPUT SetColor(VS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(input.position, WVPMatrix);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.color = color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\">下面就针对上述代码讲解一下<span style=\"font-family:Times New Roman\">HLSL</span>着色器程序的编写：</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133407\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133142\" style=\"color:rgb(51,102,153)\"></a>1.3.1全局变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>代码中声明了两个全局变量：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>是一个矩阵类型，它包含了世界、观察、投影的合矩阵，用于对顶点进行坐标变换；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>变量<span style=\"font-family:Times New Roman\">color</span>是一个向量类型，它用于设定顶点颜色；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>代码中并没有对全局变量进行初始化，这是因为我们对全局变量的初始化过程将在应用程序中进行，全局变量在应用程序中赋&#20540;而在着色器程序中使用，这是应用程序和着色器通信的关键所在。具体赋&#20540;过程将在后续部分讲述。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133408\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133143\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.3.2输入输出</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">输入输出结构</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">程序中定义了两个输入输出结构<span style=\"font-family:Times New Roman\">VS_INPUT</span>和<span style=\"font-family:Times New Roman\">VS_OUTPUT</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector color : COLOR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">自定义的结构可以采用任意名称，结构不过是一种组织数据的方式，并不是强制的，你也可以不使用，而将本程序的输入改为：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">标志符</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">用于输入输出的变量采用用一种特殊的声明方式：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Type VariableName : Semantic</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>这个特殊的冒号语法表示一个语义，冒号后面的标志符用来指定变量的用途，如</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>其中，<span style=\"font-family:Times New Roman\">POSITION</span>标志符表明该变量表示顶点位置，另外还有诸如<span style=\"font-family:Times New Roman\">COLOR</span>、<span style=\"font-family:Times New Roman\">NORMAL</span>等很多表示其他意义的标志符。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">本节所说的输入输出其实是指着色器代码和编译器、<span style=\"font-family:Times New Roman\">GPU</span>之间的通信，和应用程序是无关的，所以这些变量不需要在应用程序中进行赋&#20540;，标志符告诉编译器各个输入输出变量的用途（顶点位置、法线、颜色等），这是着色器代码和编译器、<span style=\"font-family:Times New Roman\">GPU</span>之间通信的关键。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133409\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133144\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.3.3入口函数</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中还定义了一个函数<span style=\"font-family:Times New Roman\">SetColor</span>：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">OUTPUT SetColor(INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(input.position, WVPMatrix);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.color = color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">该函数以<span style=\"font-family:Times New Roman\">input</span>和<span style=\"font-family:Times New Roman\">output</span>类型作为输入输出；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">使全局变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>和<span style=\"font-family:Times New Roman\">input.position</span>相乘，以完成顶点的世界、观察、投影变换，并把结果赋&#20540;到<span style=\"font-family:Times New Roman\">output.position</span>；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">output.position = mul(input.position, WVPMatrix);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">将全局变量<span style=\"font-family:Times New Roman\">color</span>的&#20540;赋给<span style=\"font-family:Times New Roman\">output.color</span>；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">output.color = color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">在同一个着色器代码文件中，可以有多个用户自定义函数，因此在应用程序中需要指定一个入口函数，相当于<span style=\"font-family:Times New Roman\">windows</span>程序的<span style=\"font-family:Times New Roman\">WinMain</span>函数，本程序只包含<span style=\"font-family:Times New Roman\">SetColor</span>一个函数而且它将被做为入口函数使用。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133410\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133145\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.3.4总结</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>至此，一个<span style=\"font-family:Times New Roman\">HLSL</span>着色器编写完毕，渲染过程中，当一个顶点被送到着色器时：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">全局变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>、<span style=\"font-family:Times New Roman\">color</span>将在应用程序中被赋&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">入口函数<span style=\"font-family:Times New Roman\">SetColor</span>被调用编译器根据标志符将顶点信息填充到<span style=\"font-family:Times New Roman\">VS_INPUT</span>中的各个字段；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">SetColor</span><span style=\"font-size:14px\">函数中，首先定义一个<span style=\"font-family:Times New Roman\">VS_OUTPUT</span>信息，之后根据<span style=\"font-family:Times New Roman\">WVPMatrix</span>和<span style=\"font-family:Times New Roman\">color</span>变量完成顶点的坐标变换和颜色设定操作，最后函数返回<span style=\"font-family:Times New Roman\">VS_OUTPUT</span>结构；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">编译器将会再次根据标志符把返回的<span style=\"font-family:Times New Roman\">VS_OUTPUT</span>结构中的各字段映射为顶点相应的信息。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">5.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">顶点被送往下一个流程接受进一步处理。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">上述过程中，全局变量在应用程序中赋&#20540;而在着色器程序中使用，这是应用程序和着色器通信的关键所在；标志符告诉编译器各个输入输出变量的用途（顶点位置、法线、颜色等），这是着色器代码和编译器、<span style=\"font-family:Times New Roman\">GPU</span>之间通信的关键。个人认为这是着色器中最为精义的地方<span style=\"font-family:Times New Roman\">:)</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133146\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>1.4</strong></span></a><strong><span style=\"font-size:14px\">怎么用<span style=\"font-family:Times New Roman\">HLSL</span>着色器</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">应用程序中对<span style=\"font-family:Times New Roman\">HLSL</span>着色器的使用分为以下步骤：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">加载（称为编译更为妥当）着色器代码；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">创建（顶点<span style=\"font-family:Times New Roman\">/</span>像素）着色器；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">对着色器中的变量进行赋&#20540;，完成应用程序和着色器之间的通信。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">把着色器设定到渲染管道中；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">本例使用的着色器是一个顶点着色器，因此我们将通过顶点着色器的使用来讲解着色器的使用过程，像素着色器的使用过程与此大同小异，二者之间仅有些微差别。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133412\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133147\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.1声明全局变量</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexShader9* BasicShader = 0; //</span>顶点着色器指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXConstantTable* BasicConstTable = 0; //</span>常量表指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ColorHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXMesh* Teapot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0; //</span>指向程序中<span style=\"font-family:Times New Roman\">D3D</span>茶壶模型的指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133413\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133148\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.2编译着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">通过<span style=\"font-family:Times New Roman\">D3DXCompileShaderFromFile</span>函数从应用程序外部的文本文件<span style=\"font-family:Times New Roman\">BasicHLSL.txt</span>中编译一个着色器：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>编译后的着色器代码将被放在一个<span style=\"font-family:Times New Roman\">buffer</span>中，可以通过<span style=\"font-family:Times New Roman\">ID3DXBuffer</span>接口对其进行访问，之后的着色器将从这里创建</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID3DXBuffer* shaderBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>用于接受错误信息</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID3DXBuffer* errorBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>编译着色器代码</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXCompileShaderFromFile(&quot;BasicHLSL.txt&quot;, //</span>着色器代码文件名</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;SetColor&quot;, //</span>入口函数名称</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;vs_1_1&quot;, //</span>顶点着色器版本号</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,// Debug</span>模式编译<span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;shaderBuffer, //</span>指向编译后的着色器代码的指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;BasicConstTable); //</span>常量表指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133414\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133149\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.3创建着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>应用程序通过<span style=\"font-family:Times New Roman\">CreateVertexShader</span>创建一个顶点着色器，注意使用了上一步得到的<span style=\"font-family:Times New Roman\">shaderBuffer</span>：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;CreateVertexShader((DWORD*)shaderBuffer-&gt;GetBufferPointer(), &amp;BasicShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.4.3</span>对着色器中的变量进行赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.3.4</span>节说到着色器的全局变量在应用程序中赋&#20540;而在着色器程序中使用，这是应用程序和着色器通信的关键所在，这里就具体说明赋&#20540;过程。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">着色器中的全局变量在编译后都被放在一个叫常量表的结构中，我们可以使用<span style=\"font-family:Times New Roman\">ID3DXConstantTable</span>接口对其进行访问，参照<span style=\"font-family:Times New Roman\">1.4.1</span>中编译着色器函数<span style=\"font-family:Times New Roman\">D3DXCompileShaderFromFile</span>的最后一个参数，该参数即返回了指向常量表的指针。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">对一个着色器中变量进行赋&#20540;的步骤如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">通过变量名称得到指向着色器变量的句柄；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">还记得在<span style=\"font-family:Times New Roman\">BasicHLSL.x</span>着色器文件中我们声明的两个全局变量吗：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>我们在应用程序中相应的声明两个句柄：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ColorHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>然后通过变量名得到分别得到对应的两个句柄：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WVPMatrixHandle = BasicConstTable-&gt;GetConstantByName(0, &quot;WVPMatrix&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ColorHandle = BasicConstTable-&gt;GetConstantByName(0, &quot;color&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">通过句柄对着色器变量进行赋&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们可以先设置各变量为默认&#20540;：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BasicConstTable-&gt;SetDefaults(g_pd3dDevice);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">之后<span style=\"font-family:Times New Roman\">,</span>可以使用<span style=\"font-family:Times New Roman\">ID3DXConstantTable::SetXXX</span>函数对各个变量进行赋&#20540;：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">HRESULT SetXXX(</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;LPDIRECT3DDEVICE9 pDevice,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;D3DXHANDLE hConstant,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;XXX value</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">其中<span style=\"font-family:Times New Roman\">XXX</span>代表变量类型，例如<span style=\"font-family:Times New Roman\">Matrix</span>类型的变量就要使用<span style=\"font-family:Times New Roman\">SetMatrix</span>函数赋&#20540;，而<span style=\"font-family:Times New Roman\">Vector</span>类型的则要使用<span style=\"font-family:Times New Roman\">SetVector</span>来赋&#20540;。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133415\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133150\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.4把着色器设定到渲染管道中</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>这里我们使用<span style=\"font-family:Times New Roman\">SetVertexShader</span>方法把顶点着色器设定到渲染管道中：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexShader(BasicShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133416\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133151\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.5整个渲染过程如下</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">在渲染过程中，我们设定顶点的变换坐标和颜色&#20540;，渲染代码如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>开始渲染</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>得到世界矩阵、观察矩阵和投影矩阵</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;D3DXMATRIX matWorld, matView, matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;GetTransform(D3DTS_WORLD, &amp;matWorld);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;GetTransform(D3DTS_VIEW, &amp;matView);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;GetTransform(D3DTS_PROJECTION, &amp;matProj);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;D3DXMATRIX matWVP = matWorld * matView * matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>通过句柄对着色器中的<span style=\"font-family:Times New Roman\">WVPMatrix</span>变量进行赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;BasicConstTable-&gt;SetMatrix(g_pd3dDevice, WVPMatrixHandle, &amp;matWVP);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR4 color(1.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>通过句柄对着色器中的<span style=\"font-family:Times New Roman\">color</span>变量进行赋&#20540;，这里我们赋&#20540;为黄色</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;BasicConstTable-&gt;SetVector(g_pd3dDevice, ColorHandle, &amp;color);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>把顶点着色器设定到渲染管道中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexShader(BasicShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>绘制模型子集</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Teapot-&gt;DrawSubset(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>渲染完毕</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;Present(NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，运行效果如图<span style=\"font-family:Times New Roman\">1.2</span>所示，这里我们将顶点颜色设置为黄色，如果读者在渲染过程中不断变换对着色器变量<span style=\"font-family:Times New Roman\">color</span>的赋&#20540;，你将会得到一个色彩不断变幻的<span style=\"font-family:Times New Roman\">D3D</span>茶壶。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXVECTOR4 color(1.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f); //</span>读者可以尝试改变颜色&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">BasicConstTable-&gt;SetVector(g_pd3dDevice, ColorHandle, &amp;color);</span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img width=\"427\" height=\"320\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_teapot.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">1.2&nbsp;</span>着色器效果</span></p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t3\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133152\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">2.</span></a><span style=\"font-size:14px\">顶点着色器</span></h6>\r\n<p style=\"color:rgb(51,51,51)\">顶点着色器（vertex shader）是一个在显卡的GPU上执行的程序，它替换了固定功能管道（fixed function pipeline）中的变换（transformation）和光照（lighting）阶段（这不是百分之百的正确，因为顶点着色器可以被Direct3D运行时（Direct3D runtime）以软件模拟，如果硬件不支持顶点着色器的话）。图2.1说明了管线中顶点着色器替换的部件。&nbsp;</p>\r\n<p style=\"color:rgb(51,51,51)\">&nbsp;<img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_vertex%20shader.JPG\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">2.1</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">由于顶点着色器是我们（在<span style=\"font-family:Times New Roman\">HLSL</span>中）写的一个自定义程序，因此我们在图形效果方面获得了极大的自由性。我们不再受限于<span style=\"font-family:Times New Roman\">Direct3D</span>的固定光照算法。此外，应用程序操纵顶点位置的能力也有了多样性，例如：布料仿真，粒子系统的点大小操纵，还有顶点混合<span style=\"font-family:Times New Roman\">/</span>变形。此外，我们的顶点数据结构更自由了，并且可以在可编程管线中包含比在固定功能管线中多的多的数据。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">正如作者所在群的公告所说，“拍照不在于你对相机使用的熟练程度<span style=\"font-family:Times New Roman\">,</span>而是在于你对艺术的把握。”之前的介绍使读者对着色器的编写和使用都有了一定的了解，下面我们将把重心从介绍如何使用着色器转到如何实现更高级的渲染效果上来。</span></p>\r\n<p style=\"color:rgb(51,51,51)\">&nbsp;<a target=\"_blank\" name=\"_Toc159133153\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>2.1</strong></span></a><strong><span style=\"font-size:14px\">可编程数据流模型</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">DirectX 8.0</span>引入了数据流的概念，可以这样理解数据流（图<span style=\"font-family:Times New Roman\">2.2</span>）：</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_multi%20stream.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">2.2</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">一个顶点由<span style=\"font-family:Times New Roman\">n</span>个数据流组成。</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">一个数据流由<span style=\"font-family:Times New Roman\">m</span>个元素组成。</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">一个元素是<span style=\"font-family:Times New Roman\">[</span>位置、颜色、法向、纹理坐标<span style=\"font-family:Times New Roman\">]。</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span>程序中使用IDirect3DDevice9::SetStreamSource方法把一个顶点缓存绑定到一个设备数据流。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133154\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>2.2</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">顶点声明</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">该小节对顶点声明的描述绝大多数都取自翁云兵的《着色器和效果》，该文对顶点声明的描述是我所见到最详尽最透彻的，这里向作者表示敬意<span style=\"font-family:Times New Roman\">:)</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">到现在为止，我们已经使用自由顶点&#26684;式（<span style=\"font-family:Times New Roman\">flexible vertex format</span>，<span style=\"font-family:Times New Roman\">FVF</span>）来描述顶点结构中的各分量。但是，在可编程管线中，我们的顶点数据可以包含比用<span style=\"font-family:Times New Roman\">FVF</span>所能表达的多的多的数据。因此，我们通常使用更具表达性的并且更强有力的顶点声明（<span style=\"font-family:Times New Roman\">vertex\r\n declaration</span>）。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">注意：我们仍然可以在可编程管线中使用<span style=\"font-family:Times New Roman\">FVF</span>——如果我们的顶点&#26684;式可以这样描述。不管怎样，这只是为了方便，因为<span style=\"font-family:Times New Roman\">FVF</span>会在内部被转换为一个顶点声明。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133420\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133155\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.2.1&nbsp;描述顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们将一个顶点声明描述为一个<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>结构的数组。<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>数组中的每个元素描述了一个顶点的分量。所以，如果你的顶点结构有三个分量（例如：位置、法线、颜色），那么其相应的顶点声明将会被一个含<span style=\"font-family:Times New Roman\">3</span>个元素的<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>结构数组描述。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9</span>结构定义如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">typedef struct _D3DVERTEXELEMENT9 {</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Stream;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Offset;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Type;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Method;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Usage;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE UsageIndex;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">} D3DVERTEXELEMENT9;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Stream</span>——指定关联到顶点分量的流；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Offset</span>——偏移，按字节，相对于顶点结构成员的顶点分量的开始。例如，如果顶点结构是：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct Vertex</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR3 pos;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR3 normal;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">……<span style=\"font-family:Times New Roman\">pos</span>分量的偏移是<span style=\"font-family:Times New Roman\">0</span>，因为它是第一个分量；<span style=\"font-family:Times New Roman\">normal</span>分量的偏移是<span style=\"font-family:Times New Roman\">12</span>，因为<span style=\"font-family:Times New Roman\">sizeof(pos)\r\n == 12</span>。换句话说，<span style=\"font-family:Times New Roman\">normal</span>分量以<span style=\"font-family:Times New Roman\">Vertex</span>的第<span style=\"font-family:Times New Roman\">12</span>个字节为开始。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Type</span>——指定数据类型。它可以是<span style=\"font-family:Times New Roman\">D3DDECLTYPE</span>枚举类型的任意成员；完整列表请参见文档。常用类型如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT1</span>——浮点数&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT2</span>——<span style=\"font-family:Times New Roman\">2D</span>浮点向量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT3</span>——<span style=\"font-family:Times New Roman\">3D</span>浮点向量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT4</span>——<span style=\"font-family:Times New Roman\">4D</span>浮点向量</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"752\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"IDX-296\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_D3DCOLOR—D3DCOLOR</span>类型，它扩展为<span style=\"font-family:Times New Roman\">RGBA</span>浮点颜色向量<span style=\"font-family:Times New Roman\">(r,\r\n g, b, a)</span>，其每一分量都是归一化到区间<span style=\"font-family:Times New Roman\">[0, 1]</span>了的。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Method</span>——指定网&#26684;化方法。我们认为这个参数是高级的，因此我们使用默认&#20540;，标识为<span style=\"font-family:Times New Roman\">D3DDECLMETHOD_DEFAULT</span>。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Usage</span>——指定已计划的对顶点分量的使用。例如，它是否准备用于一个位置向量、法线向量、纹理坐标等<span style=\"font-family:Times New Roman\">,</span>有效的用途标识符（<span style=\"font-family:Times New Roman\">usage\r\n identifier</span>）是<span style=\"font-family:Times New Roman\">D3DDECLUSAGE</span>枚举类型的：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">typedef enum _D3DDECLUSAGE {</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_POSITION&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0,&nbsp;&nbsp;// Position.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_BLENDWEIGHTS = 1,&nbsp;&nbsp;// Blending weights.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_BLENDINDICES = 2,&nbsp;&nbsp;// Blending indices.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_NORMAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 3,&nbsp;&nbsp;//&nbsp;Normal&nbsp;vector.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_PSIZE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 4,&nbsp;&nbsp;// Vertex point size.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_TEXCOORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 5,&nbsp;&nbsp;// Texture coordinates.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_TANGENT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 6,&nbsp;&nbsp;// Tangent vector.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_BINORMAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 7,&nbsp;&nbsp;// Binormal vector.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_TESSFACTOR&nbsp;&nbsp;&nbsp;= 8,&nbsp;&nbsp;// Tessellation factor.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_POSITIONT&nbsp;&nbsp;&nbsp;&nbsp;= 9,&nbsp;&nbsp;// Transformed position.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_COLOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 10, // Color.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_FOG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 11, // Fog blend value.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_DEPTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 12, // Depth value.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_SAMPLE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 13&nbsp;&nbsp;// Sampler data.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">} D3DDECLUSAGE;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">其中，<span style=\"font-family:Times New Roman\">D3DDECLUSAGE_PSIZE</span>类型用于指定一个顶点的点的大小。它用于点精灵，因此我们可以基于每个顶点控制其大小。一个<span style=\"font-family:Times New Roman\">D3DDECLUSAGE_POSITION</span>成员的顶点声明意味着这个顶点已经被变换，它通知图形卡不要把这个顶点送到顶点处理阶段（变形和光照）。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">UsageIndex</span>——用于标识多个相同用途的顶点分量。这个用途索引是位于区间<span style=\"font-family:Times New Roman\">[0, 15]</span>间的一个整数。例如，假设我们有三个用途为<span style=\"font-family:Times New Roman\">D3DDECLUSAGE_NORMAL</span>的顶点分量。我们可以为第一个指定用途索引为<span style=\"font-family:Times New Roman\">0</span>，为第二个指定用途索引为<span style=\"font-family:Times New Roman\">1</span>，并且为第三个指定用途索引为<span style=\"font-family:Times New Roman\">2</span>。按这种方式，我们可以通过其用途索引标识每个特定的法线。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">例：假设我们想要描述的顶点&#26684;式由两个数据流组成，第一个数据流包含位置、法线、纹理坐标<span style=\"font-family:Times New Roman\">3</span>个分量，第二个数据流包含位置和纹理坐标<span style=\"font-family:Times New Roman\">2</span>个分量，顶点声明可以指定如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9 decl[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>第一个数据流，包含分量位置、法线、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT,D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">TEXCOORD, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>第一个数据流，包含分量位置、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECL_END()</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECL_END</span>宏用于初始化<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>数组的最后一个顶点元素。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133421\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133156\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.2.2创建顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">CreateVertexDeclaration</span>函数用于创建顶点声明，<span style=\"font-family:Times New Roman\">decl</span>为指向上一小节定义的<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>数组的指针，函数返回<span style=\"font-family:Times New Roman\">IDirect3DVertexDeclaration9</span>指针<span style=\"font-family:Times New Roman\">g_Decl</span>；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexDeclaration9&nbsp;&nbsp;&nbsp;*g_Decl = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexDeclaration(decl ,&amp;g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133422\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133157\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.2.3设置顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexDeclaration(g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>至此，可编程数据流模型、顶点声明介绍完毕，在下面的例子中读者将会有更连贯的理解。</p>\r\n<span style=\"color:rgb(51,51,51)\">&nbsp;</span><br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133158\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>2.3</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">用顶点着色器实现渐变动画</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133424\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133159\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.1渐变动画（Morphing）</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Morphing</span>渐变是<span style=\"font-family:Times New Roman\">20</span>世纪<span style=\"font-family:Times New Roman\">90</span>年代出现的一种革命性的计算机图形技术，该技术使得动画序列平滑且易于处理，即使在低档配置的计算机系统上也能正常运行。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>渐变是指随时间的变化把一个形状改变为另一个形状。对我们而言，这些形状就是<span style=\"font-family:Times New Roman\">Mesh</span>网&#26684;模型。渐变网&#26684;模型的处理就是以时间轴为基准，逐渐地改变网&#26684;模型顶点的坐标，从一个网&#26684;模型的形状渐变到另外一个。请看图<span style=\"font-family:Times New Roman\">2.3</span>：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_morphing.bmp\" alt=\"\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<span style=\"color:rgb(51,51,51)\">&nbsp;</span>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">2.3</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>我们在程序中使用两个网&#26684;模型——源网&#26684;模型和目标网&#26684;模型，设源网&#26684;模型中顶点<span style=\"font-family:Times New Roman\">1</span>的坐标为<span style=\"font-family:Times New Roman\">A</span>（<span style=\"font-family:Times New Roman\">A<sub>x</sub></span>，<span style=\"font-family:Times New Roman\">A<sub>y</sub></span>，<span style=\"font-family:Times New Roman\">A<sub>z</sub></span>），目标网&#26684;模型中对应顶点<span style=\"font-family:Times New Roman\">1</span>的坐标为<span style=\"font-family:Times New Roman\">B</span>（<span style=\"font-family:Times New Roman\">B<sub>x</sub></span>，<span style=\"font-family:Times New Roman\">B<sub>y</sub></span>，<span style=\"font-family:Times New Roman\">B<sub>z</sub></span>），要计算渐变过程中时间点<span style=\"font-family:Times New Roman\">t</span>所对应的顶点<span style=\"font-family:Times New Roman\">1</span>的坐标<span style=\"font-family:Times New Roman\">C</span>（<span style=\"font-family:Times New Roman\">C<sub>x</sub></span>，<span style=\"font-family:Times New Roman\">C<sub>y</sub></span>，<span style=\"font-family:Times New Roman\">C<sub>z</sub></span>），我们使用如下方法：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T</span>为源网&#26684;模型到目标网&#26684;模型渐变所花费的全部时间，得到时间点<span style=\"font-family:Times New Roman\">t</span>占整个过程<span style=\"font-family:Times New Roman\">T</span>的比例为：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S = t / T</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">那么顶点<span style=\"font-family:Times New Roman\">1</span>在<span style=\"font-family:Times New Roman\">t</span>时刻对应的坐标<span style=\"font-family:Times New Roman\">C</span>为：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C = A * (1-S</span>）<span style=\"font-family:Times New Roman\">&#43; B * S</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>这样，在渲染过程中我们根据时间不断调整<span style=\"font-family:Times New Roman\">S</span>的&#20540;，就得到了从源网&#26684;模型（形状一）到目标网&#26684;模型（形状二）的平滑过渡。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>接下来将在程序里使用顶点着色器实现我们的渐变动画。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133425\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133160\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.2渐变动画中的顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中，我们设定一个顶点对应两个数据流，这两个数据流分别包含了源网&#26684;模型的数据和目标网&#26684;模型的数据。渲染过程中，我们在着色器里根据两个数据流中的顶点数据以及时间&#20540;确定最终的顶点信息。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">个数据流包含分量如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">源网&#26684;模型数据流：顶点位置、顶点法线、纹理坐标；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">目标网&#26684;模型数据流：顶点位置、顶点法线；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">注意目标网&#26684;模型数据流没有包含纹理坐标，因为纹理对于两个网&#26684;模型都是一样的，所以仅使用源网&#26684;模型的纹理就可以了。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">顶点声明指定如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9 decl[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>源网&#26684;模型数据流，包含分量位置、法线、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT,D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">TEXCOORD, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>目标网&#26684;模型数据流，包含分量位置、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECL_END()</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133426\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133161\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.3渐变动画中的顶点着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">下面给出顶点着色器源码，代码存储于<span style=\"font-family:Times New Roman\">vs.txt</span>中，该顶点着色器根据源网&#26684;模型数据流和目标网&#26684;模型数据流中的信息以及时间标尺&#20540;计算出顶点最终位置信息，并对顶点做了坐标变换和光照处理。代码中给出了详细的注释，帮助读者理解。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>全局变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>世界矩阵、观察矩阵、投影矩阵的合矩阵，用于顶点的坐标变换</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>光照方向</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector LightDirection;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>存储<span style=\"font-family:Times New Roman\">2.3.1</span>小节提到的公式<span style=\"font-family:Times New Roman\">S = t / T</span>中的时间标尺<span style=\"font-family:Times New Roman\">S</span>&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>注意到<span style=\"font-family:Times New Roman\">Scalar</span>是一个<span style=\"font-family:Times New Roman\">vector</span>类型，我们在<span style=\"font-family:Times New Roman\">Scalar.x</span>中存储了<span style=\"font-family:Times New Roman\">S</span>&#20540;，<span style=\"font-family:Times New Roman\">Scalar.y</span>中存储的则是（<span style=\"font-family:Times New Roman\">1-S</span>）&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector Scalar;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输入</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>对应源网&#26684;模型数据流中的顶点分量：位置、法线、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector normal&nbsp;&nbsp;&nbsp;: NORMAL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">float2 uvCoords : TEXCOORD;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>对应目标网&#26684;模型数据流中的顶点分量：位置、法线</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position1 : POSITION1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector normal1&nbsp;&nbsp;&nbsp;: NORMAL1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输出</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector diffuse&nbsp;&nbsp;: COLOR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords : TEXCOORD;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>入口函数</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">VS_OUTPUT Main(VS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>顶点最终位置<span style=\"font-family:Times New Roman\">output.position</span>取决于源网&#26684;模型数据流中位置信息<span style=\"font-family:Times New Roman\">input.position</span>和目标网&#26684;模型数据流中位置信息<span style=\"font-family:Times New Roman\">input.position1</span>以及时间标尺<span style=\"font-family:Times New Roman\">Scalar</span>的&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>对应<span style=\"font-family:Times New Roman\">2.3.1</span>小节中的公式<span style=\"font-family:Times New Roman\">C = A * (1-S</span>）<span style=\"font-family:Times New Roman\">&#43;\r\n B * S</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.position = input.position*Scalar.x &#43; input.position1*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>顶点坐标变换操作</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(output.position, WVPMatrix);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>计算顶点最终法线&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector normal = input.normal*Scalar.x &#43; input.normal1*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>逆光方向与法线的点积，获得漫射色彩</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.diffuse = dot((-LightDirection), normal);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>存储纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.uvCoords = input.uvCoords;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>以上是本例用到的顶点着色器，在接下来的应用程序中，我们将给三个着色器全局变量赋&#20540;：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">世界矩阵、观察矩阵、投影矩阵的合矩阵，用于顶点的坐标变换；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">LightDirection</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">光照方向；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Scalar</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">存储<span style=\"font-family:Times New Roman\">2.3.1</span>小节提到的公式<span style=\"font-family:Times New Roman\">S = t / T</span>中的时间标尺<span style=\"font-family:Times New Roman\">S</span>&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">注意到<span style=\"font-family:Times New Roman\">Scalar</span>是一个<span style=\"font-family:Times New Roman\">vector</span>类型，我们在<span style=\"font-family:Times New Roman\">Scalar.x</span>中存储了<span style=\"font-family:Times New Roman\">S</span>&#20540;，<span style=\"font-family:Times New Roman\">Scalar.y</span>中存储的则是（<span style=\"font-family:Times New Roman\">1-S</span>）&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133427\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133162\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.4应用程序</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们在应用程序中执行以下操作：</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">加载两个两个<span style=\"font-family:Times New Roman\">Mesh</span>模型：源网&#26684;模型，目标网&#26684;模型；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">创建、设置顶点声明；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">创建、设置顶点着色器；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">为着色器全局赋&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">把两个<span style=\"font-family:Times New Roman\">Mesh</span>模型数据分别绑定到两个数据流中；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">渲染<span style=\"font-family:Times New Roman\">Mesh</span>模型；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">下面是应用程序代码：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>声明变量<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>两个指向<span style=\"font-family:Times New Roman\">LPD3DXMESH</span>的指针，分别用于存储源网&#26684;模型和目标网&#26684;模型；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPD3DXMESH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_SourceMesh;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPD3DXMESH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_TargetMesh;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点声明指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexDeclaration9&nbsp;&nbsp;&nbsp;*g_Decl = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexShader9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*g_VS&nbsp;&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量表</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXConstantTable* ConstTable = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ScalarHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE LightDirHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/***************</span>程序初始化<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>加载源、目标网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Load_Meshes();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9 MorphMeshDecl[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//1st stream is for source mesh - position, normal, texcoord</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0,&nbsp;&nbsp;0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL,&nbsp;&nbsp;&nbsp;0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//2nd stream is for target mesh - position, normal</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 1,&nbsp;&nbsp;0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 1, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL,&nbsp;&nbsp;&nbsp;1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECL_END()</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* shader&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* errorBuffer&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCompileShaderFromFile(&quot;vs.txt&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Main&quot;, // entry point function name</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;vs_1_1&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;shader,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;ConstTable);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(errorBuffer)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::MessageBox(0, (char*)errorBuffer-&gt;GetBufferPointer(), 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexShader((DWORD*)shader-&gt;GetBufferPointer(), &amp;g_VS);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexDeclaration(MorphMeshDecl ,&amp;g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到各常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">WVPMatrixHandle = ConstTable-&gt;GetConstantByName(0, &quot;WVPMatrix&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ScalarHandle = ConstTable-&gt;GetConstantByName(0, &quot;Scalar&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LightDirHandle = ConstTable-&gt;GetConstantByName(0, &quot;LightDirection&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">LightDirection</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetVector(g_pd3dDevice, LightDirHandle, &amp;D3DXVECTOR4(0.0f,&nbsp;-1.0f,&nbsp;0.0f,&nbsp;0.0f));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置各着色器变量为默认&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetDefaults(g_pd3dDevice);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*******************</span>渲染<span style=\"font-family:Times New Roman\">*******************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWorld, matView, matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_WORLD, &amp;matWorld);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_VIEW, &amp;matView);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_PROJECTION, &amp;matProj);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWVP;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matWVP = matWorld * matView * matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetMatrix(g_pd3dDevice, WVPMatrixHandle, &amp;matWVP);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">Scalar</span>赋&#20540;，注意程序中获取时间标尺&#20540;<span style=\"font-family:Times New Roman\">Scalar</span>的方法</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">float DolphinTimeFactor = (float)(timeGetTime() % 501) /&nbsp;250.0f;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">float Scalar =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">(DolphinTimeFactor&lt;=1.0f)?DolphinTimeFactor:(2.0f-DolphinTimeFactor);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetVector(g_pd3dDevice,ScalarHandle,&amp;D3DXVECTOR4(1.0f-Scalar, Scalar,&nbsp;0.0f,&nbsp;0.0f));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置顶点着色器和顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetVertexShader(g_VS);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetVertexDeclaration(g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绑定目标网&#26684;模型的定点缓存到第二个数据流中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexBuffer9 *pVB = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_TargetMesh-&gt;GetVertexBuffer(&amp;pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(1, pVB, 0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXGetFVFVertexSize(g_TargetMesh-&gt;GetFVF()));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绑定源网&#26684;模型的顶点缓存到第一个数据流中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_SourceMesh-&gt;GetVertexBuffer(&amp;pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(0, pVB, 0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXGetFVFVertexSize(g_TargetMesh-&gt;GetFVF()));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绘制<span style=\"font-family:Times New Roman\">Mesh</span>网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">DrawMesh(g_SourceMesh, g_pMeshTextures0, g_VS, g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Present( NULL, NULL, NULL, NULL );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133428\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133163\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.5对应用程序的一点说明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">程序中我们使用<span style=\"font-family:Times New Roman\">SetStreamSource</span>方法把源网&#26684;模型和目标网&#26684;模型中的顶点缓存分别绑定到两个设备数据流，但是<span style=\"font-family:Times New Roman\">Direct3D</span>对数据流中的数据的真正引用只有在调用诸如<span style=\"font-family:Times New Roman\">DrawPrimitive</span>、<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>之类的绘制方法时才发生，因此在绘制<span style=\"font-family:Times New Roman\">Mesh</span>网&#26684;模型时我们不能再使用传统的<span style=\"font-family:Times New Roman\">DrawSubmit</span>方法，而是使用了<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>，下面就如何调用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>绘制<span style=\"font-family:Times New Roman\">Mesh</span>模型进行说明，该部分内容和<span style=\"font-family:Times New Roman\">HLSL</span>着色器关系不大，在这里列出仅仅是为了大家理解程序的完整性，读者完全可以跳过本节不看。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>使用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>绘制<span style=\"font-family:Times New Roman\">Mesh</span>模型的步骤如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;</span>加载网&#26684;模型后使用<span style=\"font-family:Times New Roman\">OptimizeInPlace</span>方法对<span style=\"font-family:Times New Roman\">Mesh</span>进行优化；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;</span>一旦优化了网&#26684;模型，你就可以查询<span style=\"font-family:Times New Roman\">ID3DXMesh</span>对象，得到一个<span style=\"font-family:Times New Roman\">D3DXATTRIBUTERANGE</span>数据类型的数组，我们称之为属性列表，该数据类型被定义如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typedef struct_D3DXATTRIBUTERANGE{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD AttribId; //</span>子集编号</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD FaceStart; //</span>这两个变量用于圈定本子集中的多边形</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD FaceCount;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD VertexStart; //</span>这两个变量用于圈定本子集中的顶点</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD VertexCount;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} D3DXATTRIBUTERANGE;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>我们属性列表中的每一项都代表一个被优化后<span style=\"font-family:Times New Roman\">Mesh</span>的一个子集，<span style=\"font-family:Times New Roman\">D3DXATTRIBUTERANGE</span>结构的各字段描述了该子集的信息。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">得到属性数据后，我们就调用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>方法可以精美地渲染子集了。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>下面是绘制<span style=\"font-family:Times New Roman\">Mesh</span>模型的程序代码：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>在<span style=\"font-family:Times New Roman\">Load_Meshes()</span>函数的最后，我们使用<span style=\"font-family:Times New Roman\">OptimizeInPlace</span>方法对源网&#26684;模型和目标网&#26684;模型进行优化，其他加载材质和纹理的操作和之前一样，相信大家能够理解：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>优化源网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_SourceMesh-&gt;OptimizeInplace(D3DXMESHOPT_ATTRSORT, NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>优化目标网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_TargetMesh-&gt;OptimizeInplace(D3DXMESHOPT_ATTRSORT, NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>在<span style=\"font-family:Times New Roman\">Draw_Mesh()</span>函数中，渲染模型，注意程序是如何配合属性表调用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>方法进行绘制的：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>分别得到指向<span style=\"font-family:Times New Roman\">Mesh</span>模型顶点缓存区和索引缓存区的指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IDirect3DVertexBuffer9 *pVB = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IDirect3DIndexBuffer9 *pIB&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetVertexBuffer(&amp;pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetIndexBuffer(&amp;pIB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>得到<span style=\"font-family:Times New Roman\">Mesh</span>模型的属性列表</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD NumAttributes;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXATTRIBUTERANGE *pAttributes = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetAttributeTable(NULL, &amp;NumAttributes);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes = new D3DXATTRIBUTERANGE[NumAttributes];</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetAttributeTable(pAttributes, &amp;NumAttributes);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>设置顶点着色器和顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexShader(pShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexDeclaration(pDecl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>设置数据流</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetStreamSource(0, pVB, 0, D3DXGetFVFVertexSize(pMesh-&gt;GetFVF()));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetIndices(pIB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>遍历属性列表并配合其中的信息调用<span style=\"font-family:Times New Roman\">DrawIndexPrimitive</span>绘制各个子集</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(DWORD i=0;i&lt;NumAttributes;i&#43;&#43;)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(pAttributes[i].FaceCount)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Get material number</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD MatNum = pAttributes[i].AttribId;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Set texture</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetTexture(0, pTextures[MatNum]);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Draw the mesh subset</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].VertexStart,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].VertexCount,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].FaceStart * 3,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].FaceCount);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Free resources</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(pIB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete [] pAttributes;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，效果如图<span style=\"font-family:Times New Roman\">2.4</span>所示，你将看到屏幕上白色的海豚上下翻腾，同时感受到顶点着色器为渲染效果所带来的巨大改善。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"><img width=\"427\" height=\"320\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_Dolphin1.bmp\" alt=\"\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"><img width=\"427\" height=\"320\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_Dolphin3.bmp\" alt=\"\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图2.4</span></p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t4\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133164\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">3.</span></a><span style=\"font-size:14px\">像素着色器</span></h6>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器是在对每个像素进行光栅化处理期间在图形卡的<span style=\"font-family:Times New Roman\">GPU</span>上执行的程序。（不像顶点着色器，<span style=\"font-family:Times New Roman\">Direct3D</span>不会以软件模拟像素着色器的功能。）它实际上替换了固定功能管线的多纹理化阶段（<span style=\"font-family:Times New Roman\">the\r\n multitexturing stage</span>），并赋予我们直接操纵单独的像素和访问每个像素的纹理坐标的能力。这种对像素和纹理坐标的直接访问使我们可以达成各种特效，例如：多纹理化（<span style=\"font-family:Times New Roman\">multitexturing</span>）、每像素光照（<span style=\"font-family:Times New Roman\">per pixel lighting</span>）、景深（<span style=\"font-family:Times New Roman\">depth\r\n of field</span>）、云状物模拟（<span style=\"font-family:Times New Roman\">cloud simulation</span>）、焰火模拟（<span style=\"font-family:Times New Roman\">fire simulation</span>）、混杂阴影化技巧（<span style=\"font-family:Times New Roman\">sophisticated shadowing technique</span>）。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器的编写、使用和顶点着色器大同小异，有了之前的基础，不用太过于详细的介绍相信读者也能理解，下面使用像素着色器实现多纹理化。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133165\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>3.1</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">多纹理化</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>简单的说，多纹理化就是使用多个纹理贴图混合后进行渲染，如图<span style=\"font-family:Times New Roman\">3.1</span>，渲染过程中，从纹理<span style=\"font-family:Times New Roman\">1</span>和纹理<span style=\"font-family:Times New Roman\">2</span>中分别采样，得到的颜色&#20540;依据一定规则进行组合得到纹理<span style=\"font-family:Times New Roman\">3</span>，这就是多纹理化。</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img width=\"273\" height=\"207\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_multi%20texture.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">3.1</span></span></p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133166\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>3.2</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">多纹理效果的像素着色器</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>下面是像素着色器的代码，该代码存储于<span style=\"font-family:Times New Roman\">ps.txt</span>中，该像素着色器根据输入的两套纹理坐标对对应的纹理贴图进行采样，根据一定比例<span style=\"font-family:Times New Roman\">Scalar</span>混合后输出像素颜色。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>全局变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>存储颜色混合的比例&#20540;<span style=\"font-family:Times New Roman\">s</span>，其中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//Scalar.x = s</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//Scalar.y = 1-s</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector Scalar;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>纹理采样器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp0 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex0&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp1 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex1&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输入两套纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输出像素颜色</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float4 Color : COLOR0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>入口函数</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">PS_OUTPUT PS_Main(PS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS_OUTPUT output = (PS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>分别对两个纹理进行采样按照比例混合后输出颜色&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.Color = tex2D(Samp0, input.uvCoords0)*Scalar.x &#43; tex2D(Samp1, input.uvCoords1)*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>整个程序很容易理解，程序中涉及到着色器的纹理和采样，是我们第一次接触的内容，下面给于说明。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133432\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133167\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">3.2.1HLSL采样器和纹理</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>和<span style=\"font-family:Times New Roman\">vector</span>、<span style=\"font-family:Times New Roman\">matrix</span>一样，采样器<span style=\"font-family:Times New Roman\">sample</span>和纹理<span style=\"font-family:Times New Roman\">texture</span>也是<span style=\"font-family:Times New Roman\">HLSL</span>语言的一种类型，<span style=\"font-family:Times New Roman\">HLSL</span>着色器使用采样器对指定纹理进行采样，得到采样后的颜色&#20540;以供处理。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>它们的用法如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>声明一个纹理变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texture g_texture;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>定义采样器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sampler g_samp =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>关联到纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;g_texture&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>设置采样器状态</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>调用<span style=\"font-family:Times New Roman\">HLSL</span>内置函数<span style=\"font-family:Times New Roman\">tex2D</span>取得颜色&#20540;，参数一为采样器，参数二为纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector Color = tex2D(g_samp, uvCoords);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>更多<span style=\"font-family:Times New Roman\">HLSL</span>采样器和纹理的内容请参见<span style=\"font-family:Times New Roman\">DirectX</span>文档。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>以上是本例用到的像素着色器，在接下来的应用程序中，我们将给三个着色器全局变量赋&#20540;：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Scalar</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>存储颜色混合的比例&#20540;<span style=\"font-family:Times New Roman\">s</span>，其中<span style=\"font-family:Times New Roman\">Scalar.x = s, Scalar.y = 1-s;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Samp0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>第一层纹理采样器；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Samp1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>第二层纹理采样器；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器的输入结构中我们设定了一个顶点对应两套纹理坐标，读者可以留意一下应用程序中对应的顶点&#26684;式的定义。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<br style=\"color:rgb(51,51,51)\">\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133168\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>3.3</strong></span></a><strong><span style=\"font-size:14px\">应用程序</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中我们首先创建一个四边形，然后使用像素着色器进行纹理混合后对其进行渲染。下面是应用程序代码：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>顶点&#26684;式定义<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct CUSTOMVERTEX</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>定点位置坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float x,y,z;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>两套纹理坐标；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu0, tv0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu1, tv1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ | D3DFVF_TEX2)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>声明变量<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DPIXELSHADER9 pixelShader&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量表</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXConstantTable* pixelConstTable&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ScalarHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Samp0Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Samp1Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量描述结构</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCONSTANT_DESC Samp0Desc;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCONSTANT_DESC Samp1Desc;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>四边形顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DVERTEXBUFFER9 quadVB&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>两个纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture0 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture1 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>初始化应用程序<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建四边形顶点模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">CUSTOMVERTEX quad[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;tu0&nbsp;&nbsp;&nbsp;tv0&nbsp;&nbsp;&nbsp;tu1&nbsp;&nbsp;&nbsp;tv1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{{-3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;-3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f}};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">void *ptr = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexBuffer(sizeof(quad),</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DUSAGE_WRITEONLY,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DPOOL_MANAGED,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;quadVB,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Lock(0, 0, (void**)&amp;ptr, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">memcpy((void*)ptr, (void*)quad, sizeof(quad));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Unlock();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;porpcart.jpg&quot;, &amp;quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;luoqi.jpg&quot;, &amp;quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>检测系统是否支持像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCAPS9 caps;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetDeviceCaps(&amp;caps);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(caps.PixelShaderVersion &lt; D3DPS_VERSION(1, 1))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;NotSupport Pixel Shader - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* codeBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* errorBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">HRESULT hr = D3DXCompileShaderFromFile(&quot;ps.txt&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;PS_Main&quot;, // entry point function name</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ps_1_1&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;codeBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;pixelConstTable);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// output any error messages</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(errorBuffer)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, (char*)errorBuffer-&gt;GetBufferPointer(), 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(FAILED(hr))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;D3DXCompileShaderFromFile() - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">hr = g_pd3dDevice-&gt;CreatePixelShader((DWORD*)codeBuffer-&gt;GetBufferPointer(), &amp;pixelShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(FAILED(hr))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;CreatePixelShader - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(codeBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到各常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ScalarHandle = pixelConstTable-&gt;GetConstantByName(0, &quot;Scalar&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Samp0Handle = pixelConstTable-&gt;GetConstantByName(0, &quot;Samp0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Samp1Handle = pixelConstTable-&gt;GetConstantByName(0, &quot;Samp1&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到对着色器变量<span style=\"font-family:Times New Roman\">Samp0</span>、<span style=\"font-family:Times New Roman\">Samp0</span>的描述</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">UINT count;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;GetConstantDesc(Samp0Handle, &amp; Samp0Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;GetConstantDesc(Samp1Handle, &amp; Samp1Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设定各着色器变量为初始&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;SetDefaults(g_pd3dDevice);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>渲染<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">Scalar</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXVECTOR4 scalar(0.5f,&nbsp;0.5f,&nbsp;0.0f,&nbsp;1.0f);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;SetVector(g_pd3dDevice, ScalarHandle, &amp;scalar);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetPixelShader(pixelShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置定点&#26684;式、绑定数据流</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetFVF(D3DFVF_CUSTOMVERTEX);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(0, quadVB, 0, sizeof(CUSTOMVERTEX));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置第一、二层纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetTexture(Samp0Desc.RegisterIndex, quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetTexture(Samp1Desc.RegisterIndex, quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绘制图形</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Present(NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中像素着色器的使用和之前顶点着色器的使用无二，只是设置着色器中纹理采样器变量<span style=\"font-family:Times New Roman\">Samp0</span>、<span style=\"font-family:Times New Roman\">Samp1</span>和设定着色器其他变量稍有不同：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;</span>首先通过变量名称得到变量句柄：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tex0Handle = pixelConstTable-&gt;GetConstantByName(0, &quot; Samp0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tex1Handle = pixelConstTable-&gt;GetConstantByName(0, &quot; Samp1&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;</span>然后通过句柄得到对变量的描述：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UINT count;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelConstTable-&gt;GetConstantDesc(Samp0Handle, &amp; Samp0Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelConstTable-&gt;GetConstantDesc(Samp1Handle, &amp; Samp1Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;3.</span>最后通过<span style=\"font-family:Times New Roman\">SetTexture</span>配合所得到的描述信息设置纹理：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetTexture(Samp0Desc.RegisterIndex, quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetTexture(Samp1Desc.RegisterIndex, quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，运行效果如图<span style=\"font-family:Times New Roman\">3.2</span>，这里我们将颜色混合比例设置为<span style=\"font-family:Times New Roman\">0.5</span>，如果读者在渲染过程中不断变换对着色器变量<span style=\"font-family:Times New Roman\">Scalar</span>的赋&#20540;，你将会得到一个混合度不断变换的多纹理效果。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR4 scalar(0.5f,&nbsp;0.5f,&nbsp;0.0f,&nbsp;1.0f); //</span>读者可以尝试改变混合采用的比例&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelConstTable-&gt;SetVector(g_pd3dDevice, ScalarHandle, &amp;scalar);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\"><strong><img width=\"120\" height=\"120\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_porpcart.jpg\" alt=\"\"></strong></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理一</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_luoqi.jpg\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理二</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_ps.bmp\" alt=\"\"></p>\r\n<span style=\"color:rgb(51,51,51)\"></span>\r\n<p align=\"center\">混合后纹理三</p>\r\n<p align=\"center\">图<span style=\"font-family:Times New Roman\">3.2</span></p>\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t5\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">4.HLSL Effect（效果框架）</span></h6>\r\n<span style=\"color:rgb(51,51,51)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color:rgb(51,51,51)\">进行到这里，读者可能会觉得使用着色器多少有些繁琐，</span><span style=\"color:rgb(51,51,51)\">Effect</span><span style=\"color:rgb(51,51,51)\">（效果框架）被提出以解决这些问题。作为一种方法，</span><span style=\"color:rgb(51,51,51)\">Effect</span><span style=\"color:rgb(51,51,51)\">简化了使用着色器的操作；作为一个框架，</span><span style=\"color:rgb(51,51,51)\">Effect</span><span style=\"color:rgb(51,51,51)\">把顶点着色器和像素着色器有机地组织了起来。</span><span style=\"color:rgb(51,51,51)\">&nbsp;</span><br style=\"color:rgb(51,51,51)\">\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133170\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>4.1Effect</strong></span></a><strong><span style=\"font-size:14px\">代码结构</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>一个<span style=\"font-family:Times New Roman\">Effect</span>效果代码的结构如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//effect</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;technique T0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;technique T1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;technique Tn</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>首先理解三个术语<span style=\"font-family:Times New Roman\">effect</span>（效果）、<span style=\"font-family:Times New Roman\">technique</span>（技术）、<span style=\"font-family:Times New Roman\">pass</span>（过程），所幸这三个术语从字面意思上就能得到很好的诠释。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>要实现一种效果<span style=\"font-family:Times New Roman\">effect</span>，可以使用多种技术<span style=\"font-family:Times New Roman\">technique</span>，而每种技术中可能使用多个过程<span style=\"font-family:Times New Roman\">pass</span>进行渲染，这样就构成了上述<span style=\"font-family:Times New Roman\">effect</span>包含多个<span style=\"font-family:Times New Roman\">technique</span>，<span style=\"font-family:Times New Roman\">technique</span>又包含多个<span style=\"font-family:Times New Roman\">pass</span>的代码结构。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>理解了代码结构，<span style=\"font-family:Times New Roman\">effect</span>知识就已经掌握了大半，下面我们直接使用一个程序实例对<span style=\"font-family:Times New Roman\">effect</span>进行介绍。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133171\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>4.2</strong></span></a><strong><span style=\"font-size:14px\">用<span style=\"font-family:Times New Roman\">Effect</span>实现多纹理化效果</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>前面我们介绍了一个使用像素着色器实现的多纹理化，这里用<span style=\"font-family:Times New Roman\">Effect</span>框架重新给于实现，读者可以比较两者之间的异同，体会<span style=\"font-family:Times New Roman\">Effect</span>框架给我们带来了哪些方面的改善。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133437\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133172\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">4.2.1着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>下面是着色器代码，该代码存储于<span style=\"font-family:Times New Roman\">Effect.txt</span>中，代码中包含了一个顶点着色器和一个像素着色器和一个<span style=\"font-family:Times New Roman\">Effect</span>效果框架。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">VS_OUTPUT VS_Main(VS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(input.position, WVPMatrix);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.uvCoords0 = input.uvCoords0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.uvCoords1 = input.uvCoords1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector Scalar;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp0 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex0&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp1 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex1&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float4 Color : COLOR0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">PS_OUTPUT PS_Main(PS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS_OUTPUT output = (PS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.Color = tex2D(Samp0, input.uvCoords0)*Scalar.x &#43; tex2D(Samp1, input.uvCoords1)*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>效果框架</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">technique T0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vertexShader = compile vs_1_1 VS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelShader = compile ps_1_1 PS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>注意程序中是如何使用效果框架将顶点着色器和像素着色器组织起来的：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>着色器类型<span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>版本号<span style=\"font-family:Times New Roman\">&nbsp;</span>入口函数名称</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vertexShader = compile vs_1_1 VS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelShader = compile ps_1_1 PS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>也可以直接将着色代码写在<span style=\"font-family:Times New Roman\">pass</span>过程中，相关用法请读者参看<span style=\"font-family:Times New Roman\">DirectX</span>文档：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>这里书写着色器代码</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>有了之前的基础，着色器代码读者应该很容易理解，下面具体介绍如何在应用程序中使用<span style=\"font-family:Times New Roman\">Effect</span>。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133438\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133173\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">4.2.2应用程序</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>顶点&#26684;式定义<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct CUSTOMVERTEX</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>定点位置坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float x,y,z;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>两套纹理坐标；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu0, tv0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu1, tv1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ | D3DFVF_TEX2)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>声明变量<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//Effect</span>效果指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXEffect *g_pEffect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ScalarHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Tex0Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Tex1Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE TechHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>四边形顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DVERTEXBUFFER9 quadVB&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>两个纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture0 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture1 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>初始化应用程序<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>定义四边顶点模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">CUSTOMVERTEX quad[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;tu0&nbsp;&nbsp;&nbsp;tv0&nbsp;&nbsp;&nbsp;tu1&nbsp;&nbsp;&nbsp;tv1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{{-3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;-3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f}};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">void *ptr = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexBuffer(sizeof(quad),</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DUSAGE_WRITEONLY,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DPOOL_MANAGED,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;quadVB,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Lock(0, 0, (void**)&amp;ptr, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">memcpy((void*)ptr, (void*)quad, sizeof(quad));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Unlock();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;chopper.bmp&quot;, &amp;quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;Bleach.jpg&quot;, &amp;quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>检测像素着色器是否被支持</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCAPS9 caps;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetDeviceCaps(&amp;caps);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(caps.PixelShaderVersion &lt; D3DPS_VERSION(1, 1))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;NotSupport Pixel Shader - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建<span style=\"font-family:Times New Roman\">Effect</span>效果</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* errorBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">HRESULT hr = D3DXCreateEffectFromFile(g_pd3dDevice,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Effect.txt&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;g_pEffect,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// output any error messages</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(errorBuffer)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, (char*)errorBuffer-&gt;GetBufferPointer(), 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(FAILED(hr))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;D3DXCreateEffectFromFile() - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到各常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">WVPMatrixHandle = g_pEffect-&gt;GetParameterByName(0, &quot;WVPMatrix&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ScalarHandle = g_pEffect-&gt;GetParameterByName(0, &quot;Scalar&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Tex0Handle = g_pEffect-&gt;GetParameterByName(0, &quot;Tex0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Tex1Handle = g_pEffect-&gt;GetParameterByName(0, &quot;Tex1&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到技术<span style=\"font-family:Times New Roman\">technique T0</span>的句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">TechHandle = g_pEffect-&gt;GetTechniqueByName(&quot;T0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置纹理，注意这里设置纹理的方式比之前像素着色器简便很多</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetTexture(Tex0Handle, quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetTexture(Tex1Handle, quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>渲染<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWorld, matView, matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_WORLD, &amp;matWorld);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_VIEW, &amp;matView);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_PROJECTION, &amp;matProj);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWVP = matWorld * matView * matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetMatrix(WVPMatrixHandle, &amp;matWVP);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">Scalar</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXVECTOR4 scalar(0.5f,&nbsp;0.5f,&nbsp;0.0f,&nbsp;1.0f);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetVector(ScalarHandle, &amp;scalar);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置定点&#26684;式、绑定数据流</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetFVF(D3DFVF_CUSTOMVERTEX);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(0, quadVB, 0, sizeof(CUSTOMVERTEX));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>注意下面使用<span style=\"font-family:Times New Roman\">effect</span>框架进行渲染的方法</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置要使用的技术</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetTechnique(TechHandle);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>遍历技术中包含的所有过程进行多次渲染</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">UINT numPasses = 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;Begin(&amp;numPasses, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">for(UINT i = 0; i&lt;numPasses; &#43;&#43;i)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>开始过程</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pEffect-&gt;BeginPass(i);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>绘制图形</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>结束过程</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pEffect-&gt;EndPass();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>结束使用技术</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;End();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Present(NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>以上是应用程序中使用<span style=\"font-family:Times New Roman\">Effect</span>框架的代码，可以看到<span style=\"font-family:Times New Roman\">Effect</span>在着色器加载、着色器变量赋&#20540;、顶点着色器和像素着色器配合使用等方面做出了简化，这里只是个简单的例子，当读者深入学习<span style=\"font-family:Times New Roman\">Effect</span>的时候，会了解到更多<span style=\"font-family:Times New Roman\">Effect</span>框架为着色器编程提供的方便。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，运行效果如图<span style=\"font-family:Times New Roman\">4.1</span>所示，这和第三章使用像素着色器实现的多纹理化效果是一样的。</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">&nbsp;<img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_Bleach.jpg\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理一</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_chopper.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理二</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_effect.bmp\" alt=\"\"></p>\r\n<span style=\"color:rgb(51,51,51)\"></span>\r\n<p align=\"center\">混合后纹理三</p>\r\n<p align=\"center\">图<span style=\"font-family:Times New Roman\">4.1</span></p>\r\n','\r\n\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><strong><span style=\"font-family:Times New Roman\">HLSL</span>初级教程</strong></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><strong>作者：<span style=\"font-family:Times New Roman\">trcj</span></strong></p>\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t0\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">目录</span></h6>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">前言</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.HLSL</span>入门</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.1</span>什么是着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.2</span>什么是<span style=\"font-family:Times New Roman\">HLSL</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.3</span>怎么写<span style=\"font-family:Times New Roman\">HLSL</span>着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.4</span>怎么用<span style=\"font-family:Times New Roman\">HLSL</span>着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.1</span>可编程数据流模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.2</span>顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.3</span>用顶点着色器实现渐变动画</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.1</span>多纹理化</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.2</span>多纹理效果的像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.3</span>应用程序</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.HLSL Effect</span>（效果框架）</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.1Effect</span>代码结构</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.2</span>用<span style=\"font-family:Times New Roman\">Effect</span>实现多纹理化效果</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">结语</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">参考资料</span></p>\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t1\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133402\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133137\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">前言</span></a></h6>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>本教程针对<span style=\"font-family:Times New Roman\">HLSL</span>（<span style=\"font-family:Times New Roman\">High Level Shading Language</span>）<span style=\"font-size:14px\">初学者，从应用的角度对<span style=\"font-family:Times New Roman\">HLSL</span>、顶点着色器、像素着色器和<span style=\"font-family:Times New Roman\">Effect</span>效果框架进行了介绍，教程中去掉了对<span style=\"font-family:Times New Roman\">HLSL</span>语法等一些细节内容的讨论，力求帮助读者尽可能快地理解<span style=\"font-family:Times New Roman\">HLSL</span>编程的概念，掌握<span style=\"font-family:Times New Roman\">HLSL</span>编程的方法。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>教程中部分阐述直接引用了其他文档，这是因为这些文档表述之精要，已经达到了不能更改的地步，这里表示感谢。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>本文档版权为作者所有，非商业用途可免费使用，转载请注明出处。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t2\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133138\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">1.HLSL</span></a><span style=\"font-size:14px\">入门</span></h6>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133404\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133139\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>1.1</strong></span></a><strong><span style=\"font-size:14px\">什么是着色器</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\">DirectX使用管道技术（pipeline）进行图形渲染，其构架如下：</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_BlockDiag_Graphics.gif\" alt=\"\"></p>\r\n<span style=\"color:rgb(51,51,51)\"></span>\r\n<p align=\"center\">图<span style=\"font-family:Times New Roman\">1.1 Direct3D Graphics Pipeline</span></p>\r\n<p>之前我们使用管道的步骤如下：</p>\r\n<p><span style=\"font-family:Times New Roman\">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>设定顶点、图元、纹理等数据信息；</p>\r\n<p><span style=\"font-family:Times New Roman\">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>设定管道状态信息；</p>\r\n<p>²&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;渲染状态</p>\r\n<p>通过<span style=\"font-family:Times New Roman\">SetRenderState</span>方法设定渲染状态；</p>\r\n<p>另外，使用以下方法设置变换、材质和光照：</p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetTransform</span></p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetMaterial</span></p>\r\n<p><span style=\"font-family:Times New Roman\">SetLight</span></p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LightEnable</span></p>\r\n<p>²&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;取样器状态</p>\r\n<p>通过<span style=\"font-family:Times New Roman\">SetSamplerState</span>方法设定取样器状态；</p>\r\n<p>²&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;纹理层状态</p>\r\n<p>通过<span style=\"font-family:Times New Roman\">SetTextureStageState</span>设定纹理层状态；</p>\r\n<p><span style=\"font-family:Times New Roman\">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>渲染；</p>\r\n<p>这部分交由<span style=\"font-family:Times New Roman\">D3D</span>管道按照之前的设定自行完成，这部分操作是<span style=\"font-family:Times New Roman\">D3D</span>预先固定的，所以这种管道技术被称为固定功能管道<span style=\"font-family:Times New Roman\">(fixed function pipeline)</span>；</p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;</span></p>\r\n<p>固定功能管道给我们编程提供了一定的灵活性，但是仍有很多效果难以通过这种方式实现，比如：</p>\r\n<p><span style=\"font-family:Times New Roman\">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>在渲染过程中，我们要求<span style=\"font-family:Times New Roman\">y</span>坐标&#20540;大于<span style=\"font-family:Times New Roman\">10</span>的顶点要被绘制到坐标&#20540;（<span style=\"font-family:Times New Roman\">0</span>，<span style=\"font-family:Times New Roman\">0</span>，<span style=\"font-family:Times New Roman\">0</span>）的地方，在之前的固定功能管道中，顶点被绘制的位置是在第<span style=\"font-family:Times New Roman\">1</span>步即被设定好的，不可能在渲染过程中进行改变，所以是不可行的；</p>\r\n<p><span style=\"font-family:Times New Roman\">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>谋顶点在纹理贴图<span style=\"font-family:Times New Roman\">1</span>上映射为点<span style=\"font-family:Times New Roman\">A</span>，在纹理贴图<span style=\"font-family:Times New Roman\">2</span>上映射为点<span style=\"font-family:Times New Roman\">B</span>，我们要求该顶点颜色由<span style=\"font-family:Times New Roman\">A</span>、<span style=\"font-family:Times New Roman\">B</span>共同决定，即：</p>\r\n<p>定点颜色<span style=\"font-family:Times New Roman\">&nbsp;= A</span>点色彩&#20540;<span style=\"font-family:Times New Roman\">*0.7 &#43; B</span>点色彩&#20540;<span style=\"font-family:Times New Roman\">*0.3</span></p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;</span>这在固定管道编程中也是不可行的。</p>\r\n<p>以上两个问题都可以由可编程管道（<span style=\"font-family:Times New Roman\">pragrammable pipeline</span>）来解决。</p>\r\n<p><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>可编程管线允许用户自定义一段可以在<span style=\"font-family:Times New Roman\">GPU</span>上执行的程序，代替固定管道技术中的<span style=\"font-family:Times New Roman\">Vertex Processing</span>和<span style=\"font-family:Times New Roman\">Pixel\r\n Processing</span>阶段（参照图<span style=\"font-family:Times New Roman\">1.1</span>），从而在使我们在编程中达到更大的灵活性。其中替换<span style=\"font-family:Times New Roman\">Vertex Processing</span>的部分叫做<span style=\"font-family:Times New Roman\">Vertex Shader</span>（顶点着色器），替换<span style=\"font-family:Times New Roman\">Pixel\r\n Proccessing</span>的部分叫做<span style=\"font-family:Times New Roman\">Pixel Shader</span>（像素着色器），这就是我们所说的着色器<span style=\"font-family:Times New Roman\">Shader</span>。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133140\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>1.2</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">什么是</span></strong></span><span style=\"font-family:Times New Roman\">HLSL</span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Direct8.x</span>中，着色器是通过低级着色汇编语言来编写的，这样的程序更像是汇编式的指令集合，由于其效率低、可读性差、版本限制等缺点，迫切要求出现一门更高级的着色语言。到了<span style=\"font-family:Times New Roman\">Direct3D9</span>，<span style=\"font-family:Times New Roman\">HLSL</span>（<span style=\"font-family:Times New Roman\">High\r\n Level Shading Language</span>，高级渲染语言）应运而生了。</p>\r\n<span style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">HLSL</span></span><span style=\"color:rgb(51,51,51)\">的语法非常类&#20284;于</span><span style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">C</span></span><span style=\"color:rgb(51,51,51)\">和</span><span style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">C&#43;&#43;</span></span><span style=\"color:rgb(51,51,51)\">，学习起来是很方便的。<br>\r\n<br>\r\n</span><a target=\"_blank\" name=\"_Toc159133141\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman\"><strong>1.3</strong></span></a><span style=\"color:rgb(51,51,51)\">怎么写<span style=\"font-family:Times New Roman\">HLSL</span>着色器</span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们可以直接把<span style=\"font-family:Times New Roman\">HLSL</span>着色器代码作为一长串字符串编写进我们的应用程序源文件中，但是，更加方便和模块化的方法是把着色器的代码从应用程序代码中分离出来。因此，我们将着色器代码单独保存为文本&#26684;式，然后在应用程序中使用特定函数将其加载进来。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">下面是一个完整的<span style=\"font-family:Times New Roman\">HLSL</span>着色器程序代码，我们把它保存在<span style=\"font-family:Times New Roman\">BasicHLSL.txt</span>中。该着色器完成顶点的世界变换、观察变换和投影变幻，并将顶点颜色设定为指定的颜色。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// BasicHLSL.txt</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// Global variable</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// Structures</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector color : COLOR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// Functions</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">VS_OUTPUT SetColor(VS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(input.position, WVPMatrix);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.color = color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\">下面就针对上述代码讲解一下<span style=\"font-family:Times New Roman\">HLSL</span>着色器程序的编写：</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133407\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133142\" style=\"color:rgb(51,102,153)\"></a>1.3.1全局变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>代码中声明了两个全局变量：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>是一个矩阵类型，它包含了世界、观察、投影的合矩阵，用于对顶点进行坐标变换；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>变量<span style=\"font-family:Times New Roman\">color</span>是一个向量类型，它用于设定顶点颜色；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>代码中并没有对全局变量进行初始化，这是因为我们对全局变量的初始化过程将在应用程序中进行，全局变量在应用程序中赋&#20540;而在着色器程序中使用，这是应用程序和着色器通信的关键所在。具体赋&#20540;过程将在后续部分讲述。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133408\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133143\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.3.2输入输出</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">输入输出结构</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">程序中定义了两个输入输出结构<span style=\"font-family:Times New Roman\">VS_INPUT</span>和<span style=\"font-family:Times New Roman\">VS_OUTPUT</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector color : COLOR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">自定义的结构可以采用任意名称，结构不过是一种组织数据的方式，并不是强制的，你也可以不使用，而将本程序的输入改为：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">标志符</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">用于输入输出的变量采用用一种特殊的声明方式：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Type VariableName : Semantic</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>这个特殊的冒号语法表示一个语义，冒号后面的标志符用来指定变量的用途，如</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>其中，<span style=\"font-family:Times New Roman\">POSITION</span>标志符表明该变量表示顶点位置，另外还有诸如<span style=\"font-family:Times New Roman\">COLOR</span>、<span style=\"font-family:Times New Roman\">NORMAL</span>等很多表示其他意义的标志符。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">本节所说的输入输出其实是指着色器代码和编译器、<span style=\"font-family:Times New Roman\">GPU</span>之间的通信，和应用程序是无关的，所以这些变量不需要在应用程序中进行赋&#20540;，标志符告诉编译器各个输入输出变量的用途（顶点位置、法线、颜色等），这是着色器代码和编译器、<span style=\"font-family:Times New Roman\">GPU</span>之间通信的关键。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133409\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133144\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.3.3入口函数</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中还定义了一个函数<span style=\"font-family:Times New Roman\">SetColor</span>：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">OUTPUT SetColor(INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(input.position, WVPMatrix);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.color = color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">该函数以<span style=\"font-family:Times New Roman\">input</span>和<span style=\"font-family:Times New Roman\">output</span>类型作为输入输出；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">使全局变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>和<span style=\"font-family:Times New Roman\">input.position</span>相乘，以完成顶点的世界、观察、投影变换，并把结果赋&#20540;到<span style=\"font-family:Times New Roman\">output.position</span>；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">output.position = mul(input.position, WVPMatrix);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">将全局变量<span style=\"font-family:Times New Roman\">color</span>的&#20540;赋给<span style=\"font-family:Times New Roman\">output.color</span>；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">output.color = color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">在同一个着色器代码文件中，可以有多个用户自定义函数，因此在应用程序中需要指定一个入口函数，相当于<span style=\"font-family:Times New Roman\">windows</span>程序的<span style=\"font-family:Times New Roman\">WinMain</span>函数，本程序只包含<span style=\"font-family:Times New Roman\">SetColor</span>一个函数而且它将被做为入口函数使用。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133410\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133145\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.3.4总结</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>至此，一个<span style=\"font-family:Times New Roman\">HLSL</span>着色器编写完毕，渲染过程中，当一个顶点被送到着色器时：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">全局变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>、<span style=\"font-family:Times New Roman\">color</span>将在应用程序中被赋&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">入口函数<span style=\"font-family:Times New Roman\">SetColor</span>被调用编译器根据标志符将顶点信息填充到<span style=\"font-family:Times New Roman\">VS_INPUT</span>中的各个字段；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">SetColor</span><span style=\"font-size:14px\">函数中，首先定义一个<span style=\"font-family:Times New Roman\">VS_OUTPUT</span>信息，之后根据<span style=\"font-family:Times New Roman\">WVPMatrix</span>和<span style=\"font-family:Times New Roman\">color</span>变量完成顶点的坐标变换和颜色设定操作，最后函数返回<span style=\"font-family:Times New Roman\">VS_OUTPUT</span>结构；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">编译器将会再次根据标志符把返回的<span style=\"font-family:Times New Roman\">VS_OUTPUT</span>结构中的各字段映射为顶点相应的信息。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">5.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">顶点被送往下一个流程接受进一步处理。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">上述过程中，全局变量在应用程序中赋&#20540;而在着色器程序中使用，这是应用程序和着色器通信的关键所在；标志符告诉编译器各个输入输出变量的用途（顶点位置、法线、颜色等），这是着色器代码和编译器、<span style=\"font-family:Times New Roman\">GPU</span>之间通信的关键。个人认为这是着色器中最为精义的地方<span style=\"font-family:Times New Roman\">:)</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133146\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>1.4</strong></span></a><strong><span style=\"font-size:14px\">怎么用<span style=\"font-family:Times New Roman\">HLSL</span>着色器</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">应用程序中对<span style=\"font-family:Times New Roman\">HLSL</span>着色器的使用分为以下步骤：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">加载（称为编译更为妥当）着色器代码；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">创建（顶点<span style=\"font-family:Times New Roman\">/</span>像素）着色器；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">3.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">对着色器中的变量进行赋&#20540;，完成应用程序和着色器之间的通信。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">4.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">把着色器设定到渲染管道中；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">本例使用的着色器是一个顶点着色器，因此我们将通过顶点着色器的使用来讲解着色器的使用过程，像素着色器的使用过程与此大同小异，二者之间仅有些微差别。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133412\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133147\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.1声明全局变量</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexShader9* BasicShader = 0; //</span>顶点着色器指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXConstantTable* BasicConstTable = 0; //</span>常量表指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ColorHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXMesh* Teapot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0; //</span>指向程序中<span style=\"font-family:Times New Roman\">D3D</span>茶壶模型的指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133413\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133148\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.2编译着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">通过<span style=\"font-family:Times New Roman\">D3DXCompileShaderFromFile</span>函数从应用程序外部的文本文件<span style=\"font-family:Times New Roman\">BasicHLSL.txt</span>中编译一个着色器：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>编译后的着色器代码将被放在一个<span style=\"font-family:Times New Roman\">buffer</span>中，可以通过<span style=\"font-family:Times New Roman\">ID3DXBuffer</span>接口对其进行访问，之后的着色器将从这里创建</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID3DXBuffer* shaderBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>用于接受错误信息</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID3DXBuffer* errorBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>编译着色器代码</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXCompileShaderFromFile(&quot;BasicHLSL.txt&quot;, //</span>着色器代码文件名</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;SetColor&quot;, //</span>入口函数名称</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;vs_1_1&quot;, //</span>顶点着色器版本号</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,// Debug</span>模式编译<span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;shaderBuffer, //</span>指向编译后的着色器代码的指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;BasicConstTable); //</span>常量表指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133414\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133149\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.3创建着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>应用程序通过<span style=\"font-family:Times New Roman\">CreateVertexShader</span>创建一个顶点着色器，注意使用了上一步得到的<span style=\"font-family:Times New Roman\">shaderBuffer</span>：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;CreateVertexShader((DWORD*)shaderBuffer-&gt;GetBufferPointer(), &amp;BasicShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.4.3</span>对着色器中的变量进行赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.3.4</span>节说到着色器的全局变量在应用程序中赋&#20540;而在着色器程序中使用，这是应用程序和着色器通信的关键所在，这里就具体说明赋&#20540;过程。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">着色器中的全局变量在编译后都被放在一个叫常量表的结构中，我们可以使用<span style=\"font-family:Times New Roman\">ID3DXConstantTable</span>接口对其进行访问，参照<span style=\"font-family:Times New Roman\">1.4.1</span>中编译着色器函数<span style=\"font-family:Times New Roman\">D3DXCompileShaderFromFile</span>的最后一个参数，该参数即返回了指向常量表的指针。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">对一个着色器中变量进行赋&#20540;的步骤如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">通过变量名称得到指向着色器变量的句柄；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">还记得在<span style=\"font-family:Times New Roman\">BasicHLSL.x</span>着色器文件中我们声明的两个全局变量吗：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector color;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>我们在应用程序中相应的声明两个句柄：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ColorHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>然后通过变量名得到分别得到对应的两个句柄：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WVPMatrixHandle = BasicConstTable-&gt;GetConstantByName(0, &quot;WVPMatrix&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ColorHandle = BasicConstTable-&gt;GetConstantByName(0, &quot;color&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">2.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">通过句柄对着色器变量进行赋&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们可以先设置各变量为默认&#20540;：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BasicConstTable-&gt;SetDefaults(g_pd3dDevice);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">之后<span style=\"font-family:Times New Roman\">,</span>可以使用<span style=\"font-family:Times New Roman\">ID3DXConstantTable::SetXXX</span>函数对各个变量进行赋&#20540;：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">HRESULT SetXXX(</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;LPDIRECT3DDEVICE9 pDevice,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;D3DXHANDLE hConstant,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;XXX value</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">其中<span style=\"font-family:Times New Roman\">XXX</span>代表变量类型，例如<span style=\"font-family:Times New Roman\">Matrix</span>类型的变量就要使用<span style=\"font-family:Times New Roman\">SetMatrix</span>函数赋&#20540;，而<span style=\"font-family:Times New Roman\">Vector</span>类型的则要使用<span style=\"font-family:Times New Roman\">SetVector</span>来赋&#20540;。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133415\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133150\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.4把着色器设定到渲染管道中</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>这里我们使用<span style=\"font-family:Times New Roman\">SetVertexShader</span>方法把顶点着色器设定到渲染管道中：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexShader(BasicShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133416\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133151\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">1.4.5整个渲染过程如下</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">在渲染过程中，我们设定顶点的变换坐标和颜色&#20540;，渲染代码如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>开始渲染</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>得到世界矩阵、观察矩阵和投影矩阵</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;D3DXMATRIX matWorld, matView, matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;GetTransform(D3DTS_WORLD, &amp;matWorld);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;GetTransform(D3DTS_VIEW, &amp;matView);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;GetTransform(D3DTS_PROJECTION, &amp;matProj);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;D3DXMATRIX matWVP = matWorld * matView * matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>通过句柄对着色器中的<span style=\"font-family:Times New Roman\">WVPMatrix</span>变量进行赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;BasicConstTable-&gt;SetMatrix(g_pd3dDevice, WVPMatrixHandle, &amp;matWVP);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR4 color(1.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>通过句柄对着色器中的<span style=\"font-family:Times New Roman\">color</span>变量进行赋&#20540;，这里我们赋&#20540;为黄色</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;BasicConstTable-&gt;SetVector(g_pd3dDevice, ColorHandle, &amp;color);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>把顶点着色器设定到渲染管道中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexShader(BasicShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>绘制模型子集</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Teapot-&gt;DrawSubset(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;//</span>渲染完毕</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;Present(NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，运行效果如图<span style=\"font-family:Times New Roman\">1.2</span>所示，这里我们将顶点颜色设置为黄色，如果读者在渲染过程中不断变换对着色器变量<span style=\"font-family:Times New Roman\">color</span>的赋&#20540;，你将会得到一个色彩不断变幻的<span style=\"font-family:Times New Roman\">D3D</span>茶壶。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXVECTOR4 color(1.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f); //</span>读者可以尝试改变颜色&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">BasicConstTable-&gt;SetVector(g_pd3dDevice, ColorHandle, &amp;color);</span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img width=\"427\" height=\"320\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_teapot.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">1.2&nbsp;</span>着色器效果</span></p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t3\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133152\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">2.</span></a><span style=\"font-size:14px\">顶点着色器</span></h6>\r\n<p style=\"color:rgb(51,51,51)\">顶点着色器（vertex shader）是一个在显卡的GPU上执行的程序，它替换了固定功能管道（fixed function pipeline）中的变换（transformation）和光照（lighting）阶段（这不是百分之百的正确，因为顶点着色器可以被Direct3D运行时（Direct3D runtime）以软件模拟，如果硬件不支持顶点着色器的话）。图2.1说明了管线中顶点着色器替换的部件。&nbsp;</p>\r\n<p style=\"color:rgb(51,51,51)\">&nbsp;<img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_vertex%20shader.JPG\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">2.1</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">由于顶点着色器是我们（在<span style=\"font-family:Times New Roman\">HLSL</span>中）写的一个自定义程序，因此我们在图形效果方面获得了极大的自由性。我们不再受限于<span style=\"font-family:Times New Roman\">Direct3D</span>的固定光照算法。此外，应用程序操纵顶点位置的能力也有了多样性，例如：布料仿真，粒子系统的点大小操纵，还有顶点混合<span style=\"font-family:Times New Roman\">/</span>变形。此外，我们的顶点数据结构更自由了，并且可以在可编程管线中包含比在固定功能管线中多的多的数据。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">正如作者所在群的公告所说，“拍照不在于你对相机使用的熟练程度<span style=\"font-family:Times New Roman\">,</span>而是在于你对艺术的把握。”之前的介绍使读者对着色器的编写和使用都有了一定的了解，下面我们将把重心从介绍如何使用着色器转到如何实现更高级的渲染效果上来。</span></p>\r\n<p style=\"color:rgb(51,51,51)\">&nbsp;<a target=\"_blank\" name=\"_Toc159133153\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>2.1</strong></span></a><strong><span style=\"font-size:14px\">可编程数据流模型</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">DirectX 8.0</span>引入了数据流的概念，可以这样理解数据流（图<span style=\"font-family:Times New Roman\">2.2</span>）：</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_multi%20stream.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">2.2</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">一个顶点由<span style=\"font-family:Times New Roman\">n</span>个数据流组成。</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">一个数据流由<span style=\"font-family:Times New Roman\">m</span>个元素组成。</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">一个元素是<span style=\"font-family:Times New Roman\">[</span>位置、颜色、法向、纹理坐标<span style=\"font-family:Times New Roman\">]。</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span>程序中使用IDirect3DDevice9::SetStreamSource方法把一个顶点缓存绑定到一个设备数据流。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133154\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>2.2</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">顶点声明</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">该小节对顶点声明的描述绝大多数都取自翁云兵的《着色器和效果》，该文对顶点声明的描述是我所见到最详尽最透彻的，这里向作者表示敬意<span style=\"font-family:Times New Roman\">:)</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">到现在为止，我们已经使用自由顶点&#26684;式（<span style=\"font-family:Times New Roman\">flexible vertex format</span>，<span style=\"font-family:Times New Roman\">FVF</span>）来描述顶点结构中的各分量。但是，在可编程管线中，我们的顶点数据可以包含比用<span style=\"font-family:Times New Roman\">FVF</span>所能表达的多的多的数据。因此，我们通常使用更具表达性的并且更强有力的顶点声明（<span style=\"font-family:Times New Roman\">vertex\r\n declaration</span>）。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">注意：我们仍然可以在可编程管线中使用<span style=\"font-family:Times New Roman\">FVF</span>——如果我们的顶点&#26684;式可以这样描述。不管怎样，这只是为了方便，因为<span style=\"font-family:Times New Roman\">FVF</span>会在内部被转换为一个顶点声明。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133420\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133155\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.2.1&nbsp;描述顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们将一个顶点声明描述为一个<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>结构的数组。<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>数组中的每个元素描述了一个顶点的分量。所以，如果你的顶点结构有三个分量（例如：位置、法线、颜色），那么其相应的顶点声明将会被一个含<span style=\"font-family:Times New Roman\">3</span>个元素的<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>结构数组描述。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9</span>结构定义如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">typedef struct _D3DVERTEXELEMENT9 {</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Stream;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Offset;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Type;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Method;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE Usage;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BYTE UsageIndex;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">} D3DVERTEXELEMENT9;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Stream</span>——指定关联到顶点分量的流；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Offset</span>——偏移，按字节，相对于顶点结构成员的顶点分量的开始。例如，如果顶点结构是：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct Vertex</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR3 pos;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR3 normal;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">……<span style=\"font-family:Times New Roman\">pos</span>分量的偏移是<span style=\"font-family:Times New Roman\">0</span>，因为它是第一个分量；<span style=\"font-family:Times New Roman\">normal</span>分量的偏移是<span style=\"font-family:Times New Roman\">12</span>，因为<span style=\"font-family:Times New Roman\">sizeof(pos)\r\n == 12</span>。换句话说，<span style=\"font-family:Times New Roman\">normal</span>分量以<span style=\"font-family:Times New Roman\">Vertex</span>的第<span style=\"font-family:Times New Roman\">12</span>个字节为开始。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Type</span>——指定数据类型。它可以是<span style=\"font-family:Times New Roman\">D3DDECLTYPE</span>枚举类型的任意成员；完整列表请参见文档。常用类型如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT1</span>——浮点数&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT2</span>——<span style=\"font-family:Times New Roman\">2D</span>浮点向量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT3</span>——<span style=\"font-family:Times New Roman\">3D</span>浮点向量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_FLOAT4</span>——<span style=\"font-family:Times New Roman\">4D</span>浮点向量</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"752\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"IDX-296\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECLTYPE_D3DCOLOR—D3DCOLOR</span>类型，它扩展为<span style=\"font-family:Times New Roman\">RGBA</span>浮点颜色向量<span style=\"font-family:Times New Roman\">(r,\r\n g, b, a)</span>，其每一分量都是归一化到区间<span style=\"font-family:Times New Roman\">[0, 1]</span>了的。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Method</span>——指定网&#26684;化方法。我们认为这个参数是高级的，因此我们使用默认&#20540;，标识为<span style=\"font-family:Times New Roman\">D3DDECLMETHOD_DEFAULT</span>。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Usage</span>——指定已计划的对顶点分量的使用。例如，它是否准备用于一个位置向量、法线向量、纹理坐标等<span style=\"font-family:Times New Roman\">,</span>有效的用途标识符（<span style=\"font-family:Times New Roman\">usage\r\n identifier</span>）是<span style=\"font-family:Times New Roman\">D3DDECLUSAGE</span>枚举类型的：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">typedef enum _D3DDECLUSAGE {</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_POSITION&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0,&nbsp;&nbsp;// Position.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_BLENDWEIGHTS = 1,&nbsp;&nbsp;// Blending weights.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_BLENDINDICES = 2,&nbsp;&nbsp;// Blending indices.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_NORMAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 3,&nbsp;&nbsp;//&nbsp;Normal&nbsp;vector.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_PSIZE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 4,&nbsp;&nbsp;// Vertex point size.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_TEXCOORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 5,&nbsp;&nbsp;// Texture coordinates.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_TANGENT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 6,&nbsp;&nbsp;// Tangent vector.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_BINORMAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 7,&nbsp;&nbsp;// Binormal vector.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_TESSFACTOR&nbsp;&nbsp;&nbsp;= 8,&nbsp;&nbsp;// Tessellation factor.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_POSITIONT&nbsp;&nbsp;&nbsp;&nbsp;= 9,&nbsp;&nbsp;// Transformed position.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_COLOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 10, // Color.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_FOG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 11, // Fog blend value.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_DEPTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 12, // Depth value.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECLUSAGE_SAMPLE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 13&nbsp;&nbsp;// Sampler data.</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">} D3DDECLUSAGE;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">其中，<span style=\"font-family:Times New Roman\">D3DDECLUSAGE_PSIZE</span>类型用于指定一个顶点的点的大小。它用于点精灵，因此我们可以基于每个顶点控制其大小。一个<span style=\"font-family:Times New Roman\">D3DDECLUSAGE_POSITION</span>成员的顶点声明意味着这个顶点已经被变换，它通知图形卡不要把这个顶点送到顶点处理阶段（变形和光照）。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">UsageIndex</span>——用于标识多个相同用途的顶点分量。这个用途索引是位于区间<span style=\"font-family:Times New Roman\">[0, 15]</span>间的一个整数。例如，假设我们有三个用途为<span style=\"font-family:Times New Roman\">D3DDECLUSAGE_NORMAL</span>的顶点分量。我们可以为第一个指定用途索引为<span style=\"font-family:Times New Roman\">0</span>，为第二个指定用途索引为<span style=\"font-family:Times New Roman\">1</span>，并且为第三个指定用途索引为<span style=\"font-family:Times New Roman\">2</span>。按这种方式，我们可以通过其用途索引标识每个特定的法线。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">例：假设我们想要描述的顶点&#26684;式由两个数据流组成，第一个数据流包含位置、法线、纹理坐标<span style=\"font-family:Times New Roman\">3</span>个分量，第二个数据流包含位置和纹理坐标<span style=\"font-family:Times New Roman\">2</span>个分量，顶点声明可以指定如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9 decl[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>第一个数据流，包含分量位置、法线、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT,D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">TEXCOORD, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>第一个数据流，包含分量位置、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECL_END()</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECL_END</span>宏用于初始化<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>数组的最后一个顶点元素。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133421\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133156\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.2.2创建顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">CreateVertexDeclaration</span>函数用于创建顶点声明，<span style=\"font-family:Times New Roman\">decl</span>为指向上一小节定义的<span style=\"font-family:Times New Roman\">D3DVERTEXELEMENT9</span>数组的指针，函数返回<span style=\"font-family:Times New Roman\">IDirect3DVertexDeclaration9</span>指针<span style=\"font-family:Times New Roman\">g_Decl</span>；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexDeclaration9&nbsp;&nbsp;&nbsp;*g_Decl = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexDeclaration(decl ,&amp;g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133422\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133157\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.2.3设置顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexDeclaration(g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>至此，可编程数据流模型、顶点声明介绍完毕，在下面的例子中读者将会有更连贯的理解。</p>\r\n<span style=\"color:rgb(51,51,51)\">&nbsp;</span><br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133158\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>2.3</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">用顶点着色器实现渐变动画</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133424\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133159\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.1渐变动画（Morphing）</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Morphing</span>渐变是<span style=\"font-family:Times New Roman\">20</span>世纪<span style=\"font-family:Times New Roman\">90</span>年代出现的一种革命性的计算机图形技术，该技术使得动画序列平滑且易于处理，即使在低档配置的计算机系统上也能正常运行。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>渐变是指随时间的变化把一个形状改变为另一个形状。对我们而言，这些形状就是<span style=\"font-family:Times New Roman\">Mesh</span>网&#26684;模型。渐变网&#26684;模型的处理就是以时间轴为基准，逐渐地改变网&#26684;模型顶点的坐标，从一个网&#26684;模型的形状渐变到另外一个。请看图<span style=\"font-family:Times New Roman\">2.3</span>：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_morphing.bmp\" alt=\"\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<span style=\"color:rgb(51,51,51)\">&nbsp;</span>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">2.3</span></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>我们在程序中使用两个网&#26684;模型——源网&#26684;模型和目标网&#26684;模型，设源网&#26684;模型中顶点<span style=\"font-family:Times New Roman\">1</span>的坐标为<span style=\"font-family:Times New Roman\">A</span>（<span style=\"font-family:Times New Roman\">A<sub>x</sub></span>，<span style=\"font-family:Times New Roman\">A<sub>y</sub></span>，<span style=\"font-family:Times New Roman\">A<sub>z</sub></span>），目标网&#26684;模型中对应顶点<span style=\"font-family:Times New Roman\">1</span>的坐标为<span style=\"font-family:Times New Roman\">B</span>（<span style=\"font-family:Times New Roman\">B<sub>x</sub></span>，<span style=\"font-family:Times New Roman\">B<sub>y</sub></span>，<span style=\"font-family:Times New Roman\">B<sub>z</sub></span>），要计算渐变过程中时间点<span style=\"font-family:Times New Roman\">t</span>所对应的顶点<span style=\"font-family:Times New Roman\">1</span>的坐标<span style=\"font-family:Times New Roman\">C</span>（<span style=\"font-family:Times New Roman\">C<sub>x</sub></span>，<span style=\"font-family:Times New Roman\">C<sub>y</sub></span>，<span style=\"font-family:Times New Roman\">C<sub>z</sub></span>），我们使用如下方法：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T</span>为源网&#26684;模型到目标网&#26684;模型渐变所花费的全部时间，得到时间点<span style=\"font-family:Times New Roman\">t</span>占整个过程<span style=\"font-family:Times New Roman\">T</span>的比例为：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S = t / T</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">那么顶点<span style=\"font-family:Times New Roman\">1</span>在<span style=\"font-family:Times New Roman\">t</span>时刻对应的坐标<span style=\"font-family:Times New Roman\">C</span>为：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C = A * (1-S</span>）<span style=\"font-family:Times New Roman\">&#43; B * S</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>这样，在渲染过程中我们根据时间不断调整<span style=\"font-family:Times New Roman\">S</span>的&#20540;，就得到了从源网&#26684;模型（形状一）到目标网&#26684;模型（形状二）的平滑过渡。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>接下来将在程序里使用顶点着色器实现我们的渐变动画。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133425\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133160\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.2渐变动画中的顶点声明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中，我们设定一个顶点对应两个数据流，这两个数据流分别包含了源网&#26684;模型的数据和目标网&#26684;模型的数据。渲染过程中，我们在着色器里根据两个数据流中的顶点数据以及时间&#20540;确定最终的顶点信息。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">个数据流包含分量如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">源网&#26684;模型数据流：顶点位置、顶点法线、纹理坐标；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">目标网&#26684;模型数据流：顶点位置、顶点法线；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">注意目标网&#26684;模型数据流没有包含纹理坐标，因为纹理对于两个网&#26684;模型都是一样的，所以仅使用源网&#26684;模型的纹理就可以了。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">顶点声明指定如下：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9 decl[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>源网&#26684;模型数据流，包含分量位置、法线、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT,D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">TEXCOORD, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>目标网&#26684;模型数据流，包含分量位置、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">POSITION, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{ 1, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">NORMAL, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DDECL_END()</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133426\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133161\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.3渐变动画中的顶点着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">下面给出顶点着色器源码，代码存储于<span style=\"font-family:Times New Roman\">vs.txt</span>中，该顶点着色器根据源网&#26684;模型数据流和目标网&#26684;模型数据流中的信息以及时间标尺&#20540;计算出顶点最终位置信息，并对顶点做了坐标变换和光照处理。代码中给出了详细的注释，帮助读者理解。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>全局变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>世界矩阵、观察矩阵、投影矩阵的合矩阵，用于顶点的坐标变换</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>光照方向</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector LightDirection;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>存储<span style=\"font-family:Times New Roman\">2.3.1</span>小节提到的公式<span style=\"font-family:Times New Roman\">S = t / T</span>中的时间标尺<span style=\"font-family:Times New Roman\">S</span>&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>注意到<span style=\"font-family:Times New Roman\">Scalar</span>是一个<span style=\"font-family:Times New Roman\">vector</span>类型，我们在<span style=\"font-family:Times New Roman\">Scalar.x</span>中存储了<span style=\"font-family:Times New Roman\">S</span>&#20540;，<span style=\"font-family:Times New Roman\">Scalar.y</span>中存储的则是（<span style=\"font-family:Times New Roman\">1-S</span>）&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector Scalar;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输入</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>对应源网&#26684;模型数据流中的顶点分量：位置、法线、纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector normal&nbsp;&nbsp;&nbsp;: NORMAL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">float2 uvCoords : TEXCOORD;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>对应目标网&#26684;模型数据流中的顶点分量：位置、法线</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position1 : POSITION1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector normal1&nbsp;&nbsp;&nbsp;: NORMAL1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输出</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector diffuse&nbsp;&nbsp;: COLOR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords : TEXCOORD;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>入口函数</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">VS_OUTPUT Main(VS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>顶点最终位置<span style=\"font-family:Times New Roman\">output.position</span>取决于源网&#26684;模型数据流中位置信息<span style=\"font-family:Times New Roman\">input.position</span>和目标网&#26684;模型数据流中位置信息<span style=\"font-family:Times New Roman\">input.position1</span>以及时间标尺<span style=\"font-family:Times New Roman\">Scalar</span>的&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>对应<span style=\"font-family:Times New Roman\">2.3.1</span>小节中的公式<span style=\"font-family:Times New Roman\">C = A * (1-S</span>）<span style=\"font-family:Times New Roman\">&#43;\r\n B * S</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.position = input.position*Scalar.x &#43; input.position1*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>顶点坐标变换操作</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(output.position, WVPMatrix);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>计算顶点最终法线&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector normal = input.normal*Scalar.x &#43; input.normal1*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>逆光方向与法线的点积，获得漫射色彩</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.diffuse = dot((-LightDirection), normal);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>存储纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;output.uvCoords = input.uvCoords;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>以上是本例用到的顶点着色器，在接下来的应用程序中，我们将给三个着色器全局变量赋&#20540;：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">世界矩阵、观察矩阵、投影矩阵的合矩阵，用于顶点的坐标变换；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">LightDirection</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">光照方向；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Scalar</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">存储<span style=\"font-family:Times New Roman\">2.3.1</span>小节提到的公式<span style=\"font-family:Times New Roman\">S = t / T</span>中的时间标尺<span style=\"font-family:Times New Roman\">S</span>&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">注意到<span style=\"font-family:Times New Roman\">Scalar</span>是一个<span style=\"font-family:Times New Roman\">vector</span>类型，我们在<span style=\"font-family:Times New Roman\">Scalar.x</span>中存储了<span style=\"font-family:Times New Roman\">S</span>&#20540;，<span style=\"font-family:Times New Roman\">Scalar.y</span>中存储的则是（<span style=\"font-family:Times New Roman\">1-S</span>）&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133427\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133162\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.4应用程序</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">我们在应用程序中执行以下操作：</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">加载两个两个<span style=\"font-family:Times New Roman\">Mesh</span>模型：源网&#26684;模型，目标网&#26684;模型；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">创建、设置顶点声明；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">创建、设置顶点着色器；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">为着色器全局赋&#20540;；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">把两个<span style=\"font-family:Times New Roman\">Mesh</span>模型数据分别绑定到两个数据流中；</span></p>\r\n<p style=\"color:rgb(51,51,51)\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">渲染<span style=\"font-family:Times New Roman\">Mesh</span>模型；</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">下面是应用程序代码：</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>声明变量<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>两个指向<span style=\"font-family:Times New Roman\">LPD3DXMESH</span>的指针，分别用于存储源网&#26684;模型和目标网&#26684;模型；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPD3DXMESH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_SourceMesh;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPD3DXMESH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_TargetMesh;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点声明指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexDeclaration9&nbsp;&nbsp;&nbsp;*g_Decl = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexShader9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*g_VS&nbsp;&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量表</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXConstantTable* ConstTable = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ScalarHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE LightDirHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/***************</span>程序初始化<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>加载源、目标网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Load_Meshes();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DVERTEXELEMENT9 MorphMeshDecl[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//1st stream is for source mesh - position, normal, texcoord</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0,&nbsp;&nbsp;0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL,&nbsp;&nbsp;&nbsp;0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 0, 24, D3DDECLTYPE_FLOAT2, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_TEXCOORD, 0 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//2nd stream is for target mesh - position, normal</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 1,&nbsp;&nbsp;0, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_POSITION, 1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 1, 12, D3DDECLTYPE_FLOAT3, D3DDECLMETHOD_DEFAULT, D3DDECLUSAGE_NORMAL,&nbsp;&nbsp;&nbsp;1 },</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DDECL_END()</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* shader&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* errorBuffer&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCompileShaderFromFile(&quot;vs.txt&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Main&quot;, // entry point function name</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;vs_1_1&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;shader,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;ConstTable);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(errorBuffer)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::MessageBox(0, (char*)errorBuffer-&gt;GetBufferPointer(), 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexShader((DWORD*)shader-&gt;GetBufferPointer(), &amp;g_VS);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexDeclaration(MorphMeshDecl ,&amp;g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到各常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">WVPMatrixHandle = ConstTable-&gt;GetConstantByName(0, &quot;WVPMatrix&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ScalarHandle = ConstTable-&gt;GetConstantByName(0, &quot;Scalar&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LightDirHandle = ConstTable-&gt;GetConstantByName(0, &quot;LightDirection&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">LightDirection</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetVector(g_pd3dDevice, LightDirHandle, &amp;D3DXVECTOR4(0.0f,&nbsp;-1.0f,&nbsp;0.0f,&nbsp;0.0f));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置各着色器变量为默认&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetDefaults(g_pd3dDevice);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*******************</span>渲染<span style=\"font-family:Times New Roman\">*******************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWorld, matView, matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_WORLD, &amp;matWorld);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_VIEW, &amp;matView);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_PROJECTION, &amp;matProj);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWVP;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matWVP = matWorld * matView * matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetMatrix(g_pd3dDevice, WVPMatrixHandle, &amp;matWVP);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">Scalar</span>赋&#20540;，注意程序中获取时间标尺&#20540;<span style=\"font-family:Times New Roman\">Scalar</span>的方法</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">float DolphinTimeFactor = (float)(timeGetTime() % 501) /&nbsp;250.0f;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">float Scalar =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">(DolphinTimeFactor&lt;=1.0f)?DolphinTimeFactor:(2.0f-DolphinTimeFactor);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ConstTable-&gt;SetVector(g_pd3dDevice,ScalarHandle,&amp;D3DXVECTOR4(1.0f-Scalar, Scalar,&nbsp;0.0f,&nbsp;0.0f));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置顶点着色器和顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetVertexShader(g_VS);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetVertexDeclaration(g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绑定目标网&#26684;模型的定点缓存到第二个数据流中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">IDirect3DVertexBuffer9 *pVB = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_TargetMesh-&gt;GetVertexBuffer(&amp;pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(1, pVB, 0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXGetFVFVertexSize(g_TargetMesh-&gt;GetFVF()));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绑定源网&#26684;模型的顶点缓存到第一个数据流中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_SourceMesh-&gt;GetVertexBuffer(&amp;pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(0, pVB, 0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXGetFVFVertexSize(g_TargetMesh-&gt;GetFVF()));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绘制<span style=\"font-family:Times New Roman\">Mesh</span>网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">DrawMesh(g_SourceMesh, g_pMeshTextures0, g_VS, g_Decl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Present( NULL, NULL, NULL, NULL );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133428\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133163\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">2.3.5对应用程序的一点说明</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">程序中我们使用<span style=\"font-family:Times New Roman\">SetStreamSource</span>方法把源网&#26684;模型和目标网&#26684;模型中的顶点缓存分别绑定到两个设备数据流，但是<span style=\"font-family:Times New Roman\">Direct3D</span>对数据流中的数据的真正引用只有在调用诸如<span style=\"font-family:Times New Roman\">DrawPrimitive</span>、<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>之类的绘制方法时才发生，因此在绘制<span style=\"font-family:Times New Roman\">Mesh</span>网&#26684;模型时我们不能再使用传统的<span style=\"font-family:Times New Roman\">DrawSubmit</span>方法，而是使用了<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>，下面就如何调用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>绘制<span style=\"font-family:Times New Roman\">Mesh</span>模型进行说明，该部分内容和<span style=\"font-family:Times New Roman\">HLSL</span>着色器关系不大，在这里列出仅仅是为了大家理解程序的完整性，读者完全可以跳过本节不看。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>使用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>绘制<span style=\"font-family:Times New Roman\">Mesh</span>模型的步骤如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;</span>加载网&#26684;模型后使用<span style=\"font-family:Times New Roman\">OptimizeInPlace</span>方法对<span style=\"font-family:Times New Roman\">Mesh</span>进行优化；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;</span>一旦优化了网&#26684;模型，你就可以查询<span style=\"font-family:Times New Roman\">ID3DXMesh</span>对象，得到一个<span style=\"font-family:Times New Roman\">D3DXATTRIBUTERANGE</span>数据类型的数组，我们称之为属性列表，该数据类型被定义如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typedef struct_D3DXATTRIBUTERANGE{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD AttribId; //</span>子集编号</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD FaceStart; //</span>这两个变量用于圈定本子集中的多边形</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD FaceCount;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD VertexStart; //</span>这两个变量用于圈定本子集中的顶点</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD VertexCount;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} D3DXATTRIBUTERANGE;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>我们属性列表中的每一项都代表一个被优化后<span style=\"font-family:Times New Roman\">Mesh</span>的一个子集，<span style=\"font-family:Times New Roman\">D3DXATTRIBUTERANGE</span>结构的各字段描述了该子集的信息。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">1.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:14px\">得到属性数据后，我们就调用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>方法可以精美地渲染子集了。</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>下面是绘制<span style=\"font-family:Times New Roman\">Mesh</span>模型的程序代码：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>在<span style=\"font-family:Times New Roman\">Load_Meshes()</span>函数的最后，我们使用<span style=\"font-family:Times New Roman\">OptimizeInPlace</span>方法对源网&#26684;模型和目标网&#26684;模型进行优化，其他加载材质和纹理的操作和之前一样，相信大家能够理解：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>优化源网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_SourceMesh-&gt;OptimizeInplace(D3DXMESHOPT_ATTRSORT, NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>优化目标网&#26684;模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_TargetMesh-&gt;OptimizeInplace(D3DXMESHOPT_ATTRSORT, NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>在<span style=\"font-family:Times New Roman\">Draw_Mesh()</span>函数中，渲染模型，注意程序是如何配合属性表调用<span style=\"font-family:Times New Roman\">DrawIndexedPrimitive</span>方法进行绘制的：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>分别得到指向<span style=\"font-family:Times New Roman\">Mesh</span>模型顶点缓存区和索引缓存区的指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IDirect3DVertexBuffer9 *pVB = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IDirect3DIndexBuffer9 *pIB&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetVertexBuffer(&amp;pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetIndexBuffer(&amp;pIB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>得到<span style=\"font-family:Times New Roman\">Mesh</span>模型的属性列表</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD NumAttributes;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXATTRIBUTERANGE *pAttributes = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetAttributeTable(NULL, &amp;NumAttributes);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes = new D3DXATTRIBUTERANGE[NumAttributes];</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pMesh-&gt;GetAttributeTable(pAttributes, &amp;NumAttributes);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>设置顶点着色器和顶点声明</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexShader(pShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetVertexDeclaration(pDecl);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>设置数据流</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetStreamSource(0, pVB, 0, D3DXGetFVFVertexSize(pMesh-&gt;GetFVF()));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetIndices(pIB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>遍历属性列表并配合其中的信息调用<span style=\"font-family:Times New Roman\">DrawIndexPrimitive</span>绘制各个子集</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(DWORD i=0;i&lt;NumAttributes;i&#43;&#43;)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(pAttributes[i].FaceCount)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Get material number</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD MatNum = pAttributes[i].AttribId;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Set texture</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetTexture(0, pTextures[MatNum]);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Draw the mesh subset</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].VertexStart,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].VertexCount,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].FaceStart * 3,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pAttributes[i].FaceCount);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Free resources</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(pVB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(pIB);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete [] pAttributes;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，效果如图<span style=\"font-family:Times New Roman\">2.4</span>所示，你将看到屏幕上白色的海豚上下翻腾，同时感受到顶点着色器为渲染效果所带来的巨大改善。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"><img width=\"427\" height=\"320\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_Dolphin1.bmp\" alt=\"\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"><img width=\"427\" height=\"320\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/o_Dolphin3.bmp\" alt=\"\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图2.4</span></p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t4\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133164\" style=\"color:rgb(51,102,153)\"><span style=\"font-size:14px\">3.</span></a><span style=\"font-size:14px\">像素着色器</span></h6>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器是在对每个像素进行光栅化处理期间在图形卡的<span style=\"font-family:Times New Roman\">GPU</span>上执行的程序。（不像顶点着色器，<span style=\"font-family:Times New Roman\">Direct3D</span>不会以软件模拟像素着色器的功能。）它实际上替换了固定功能管线的多纹理化阶段（<span style=\"font-family:Times New Roman\">the\r\n multitexturing stage</span>），并赋予我们直接操纵单独的像素和访问每个像素的纹理坐标的能力。这种对像素和纹理坐标的直接访问使我们可以达成各种特效，例如：多纹理化（<span style=\"font-family:Times New Roman\">multitexturing</span>）、每像素光照（<span style=\"font-family:Times New Roman\">per pixel lighting</span>）、景深（<span style=\"font-family:Times New Roman\">depth\r\n of field</span>）、云状物模拟（<span style=\"font-family:Times New Roman\">cloud simulation</span>）、焰火模拟（<span style=\"font-family:Times New Roman\">fire simulation</span>）、混杂阴影化技巧（<span style=\"font-family:Times New Roman\">sophisticated shadowing technique</span>）。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器的编写、使用和顶点着色器大同小异，有了之前的基础，不用太过于详细的介绍相信读者也能理解，下面使用像素着色器实现多纹理化。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133165\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>3.1</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">多纹理化</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>简单的说，多纹理化就是使用多个纹理贴图混合后进行渲染，如图<span style=\"font-family:Times New Roman\">3.1</span>，渲染过程中，从纹理<span style=\"font-family:Times New Roman\">1</span>和纹理<span style=\"font-family:Times New Roman\">2</span>中分别采样，得到的颜色&#20540;依据一定规则进行组合得到纹理<span style=\"font-family:Times New Roman\">3</span>，这就是多纹理化。</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img width=\"273\" height=\"207\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_multi%20texture.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">图<span style=\"font-family:Times New Roman\">3.1</span></span></p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<br style=\"color:rgb(51,51,51)\">\r\n<a target=\"_blank\" name=\"_Toc159133166\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>3.2</strong></span></a><span style=\"color:rgb(51,51,51)\"><strong><span style=\"font-size:14px\">多纹理效果的像素着色器</span></strong></span>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>下面是像素着色器的代码，该代码存储于<span style=\"font-family:Times New Roman\">ps.txt</span>中，该像素着色器根据输入的两套纹理坐标对对应的纹理贴图进行采样，根据一定比例<span style=\"font-family:Times New Roman\">Scalar</span>混合后输出像素颜色。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>全局变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>存储颜色混合的比例&#20540;<span style=\"font-family:Times New Roman\">s</span>，其中</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//Scalar.x = s</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//Scalar.y = 1-s</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector Scalar;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>纹理采样器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp0 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex0&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp1 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex1&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输入两套纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>输出像素颜色</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float4 Color : COLOR0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>入口函数</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">PS_OUTPUT PS_Main(PS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS_OUTPUT output = (PS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>分别对两个纹理进行采样按照比例混合后输出颜色&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.Color = tex2D(Samp0, input.uvCoords0)*Scalar.x &#43; tex2D(Samp1, input.uvCoords1)*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>整个程序很容易理解，程序中涉及到着色器的纹理和采样，是我们第一次接触的内容，下面给于说明。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133432\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133167\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">3.2.1HLSL采样器和纹理</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>和<span style=\"font-family:Times New Roman\">vector</span>、<span style=\"font-family:Times New Roman\">matrix</span>一样，采样器<span style=\"font-family:Times New Roman\">sample</span>和纹理<span style=\"font-family:Times New Roman\">texture</span>也是<span style=\"font-family:Times New Roman\">HLSL</span>语言的一种类型，<span style=\"font-family:Times New Roman\">HLSL</span>着色器使用采样器对指定纹理进行采样，得到采样后的颜色&#20540;以供处理。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>它们的用法如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>声明一个纹理变量</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texture g_texture;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>定义采样器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sampler g_samp =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>关联到纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;g_texture&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>设置采样器状态</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>调用<span style=\"font-family:Times New Roman\">HLSL</span>内置函数<span style=\"font-family:Times New Roman\">tex2D</span>取得颜色&#20540;，参数一为采样器，参数二为纹理坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector Color = tex2D(g_samp, uvCoords);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>更多<span style=\"font-family:Times New Roman\">HLSL</span>采样器和纹理的内容请参见<span style=\"font-family:Times New Roman\">DirectX</span>文档。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>以上是本例用到的像素着色器，在接下来的应用程序中，我们将给三个着色器全局变量赋&#20540;：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Scalar</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>存储颜色混合的比例&#20540;<span style=\"font-family:Times New Roman\">s</span>，其中<span style=\"font-family:Times New Roman\">Scalar.x = s, Scalar.y = 1-s;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Samp0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>第一层纹理采样器；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\">²</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\">Samp1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>第二层纹理采样器；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器的输入结构中我们设定了一个顶点对应两套纹理坐标，读者可以留意一下应用程序中对应的顶点&#26684;式的定义。</p>\r\n<br style=\"color:rgb(51,51,51)\">\r\n<br style=\"color:rgb(51,51,51)\">\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133168\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>3.3</strong></span></a><strong><span style=\"font-size:14px\">应用程序</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中我们首先创建一个四边形，然后使用像素着色器进行纹理混合后对其进行渲染。下面是应用程序代码：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>顶点&#26684;式定义<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct CUSTOMVERTEX</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>定点位置坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float x,y,z;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>两套纹理坐标；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu0, tv0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu1, tv1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ | D3DFVF_TEX2)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>声明变量<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DPIXELSHADER9 pixelShader&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量表</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXConstantTable* pixelConstTable&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ScalarHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Samp0Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Samp1Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量描述结构</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCONSTANT_DESC Samp0Desc;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCONSTANT_DESC Samp1Desc;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>四边形顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DVERTEXBUFFER9 quadVB&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>两个纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture0 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture1 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>初始化应用程序<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建四边形顶点模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">CUSTOMVERTEX quad[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;tu0&nbsp;&nbsp;&nbsp;tv0&nbsp;&nbsp;&nbsp;tu1&nbsp;&nbsp;&nbsp;tv1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{{-3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;-3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f}};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">void *ptr = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexBuffer(sizeof(quad),</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DUSAGE_WRITEONLY,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DPOOL_MANAGED,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;quadVB,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Lock(0, 0, (void**)&amp;ptr, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">memcpy((void*)ptr, (void*)quad, sizeof(quad));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Unlock();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;porpcart.jpg&quot;, &amp;quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;luoqi.jpg&quot;, &amp;quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>检测系统是否支持像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCAPS9 caps;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetDeviceCaps(&amp;caps);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(caps.PixelShaderVersion &lt; D3DPS_VERSION(1, 1))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;NotSupport Pixel Shader - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* codeBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* errorBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">HRESULT hr = D3DXCompileShaderFromFile(&quot;ps.txt&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;PS_Main&quot;, // entry point function name</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ps_1_1&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;codeBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;pixelConstTable);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// output any error messages</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(errorBuffer)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, (char*)errorBuffer-&gt;GetBufferPointer(), 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(FAILED(hr))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;D3DXCompileShaderFromFile() - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">hr = g_pd3dDevice-&gt;CreatePixelShader((DWORD*)codeBuffer-&gt;GetBufferPointer(), &amp;pixelShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(FAILED(hr))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;CreatePixelShader - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(codeBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到各常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ScalarHandle = pixelConstTable-&gt;GetConstantByName(0, &quot;Scalar&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Samp0Handle = pixelConstTable-&gt;GetConstantByName(0, &quot;Samp0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Samp1Handle = pixelConstTable-&gt;GetConstantByName(0, &quot;Samp1&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到对着色器变量<span style=\"font-family:Times New Roman\">Samp0</span>、<span style=\"font-family:Times New Roman\">Samp0</span>的描述</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">UINT count;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;GetConstantDesc(Samp0Handle, &amp; Samp0Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;GetConstantDesc(Samp1Handle, &amp; Samp1Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设定各着色器变量为初始&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;SetDefaults(g_pd3dDevice);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>渲染<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">Scalar</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXVECTOR4 scalar(0.5f,&nbsp;0.5f,&nbsp;0.0f,&nbsp;1.0f);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">pixelConstTable-&gt;SetVector(g_pd3dDevice, ScalarHandle, &amp;scalar);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetPixelShader(pixelShader);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置定点&#26684;式、绑定数据流</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetFVF(D3DFVF_CUSTOMVERTEX);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(0, quadVB, 0, sizeof(CUSTOMVERTEX));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置第一、二层纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetTexture(Samp0Desc.RegisterIndex, quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetTexture(Samp1Desc.RegisterIndex, quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>绘制图形</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Present(NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>程序中像素着色器的使用和之前顶点着色器的使用无二，只是设置着色器中纹理采样器变量<span style=\"font-family:Times New Roman\">Samp0</span>、<span style=\"font-family:Times New Roman\">Samp1</span>和设定着色器其他变量稍有不同：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;</span>首先通过变量名称得到变量句柄：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tex0Handle = pixelConstTable-&gt;GetConstantByName(0, &quot; Samp0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tex1Handle = pixelConstTable-&gt;GetConstantByName(0, &quot; Samp1&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;</span>然后通过句柄得到对变量的描述：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UINT count;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelConstTable-&gt;GetConstantDesc(Samp0Handle, &amp; Samp0Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelConstTable-&gt;GetConstantDesc(Samp1Handle, &amp; Samp1Desc, &amp;count);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;3.</span>最后通过<span style=\"font-family:Times New Roman\">SetTexture</span>配合所得到的描述信息设置纹理：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetTexture(Samp0Desc.RegisterIndex, quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;SetTexture(Samp1Desc.RegisterIndex, quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，运行效果如图<span style=\"font-family:Times New Roman\">3.2</span>，这里我们将颜色混合比例设置为<span style=\"font-family:Times New Roman\">0.5</span>，如果读者在渲染过程中不断变换对着色器变量<span style=\"font-family:Times New Roman\">Scalar</span>的赋&#20540;，你将会得到一个混合度不断变换的多纹理效果。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXVECTOR4 scalar(0.5f,&nbsp;0.5f,&nbsp;0.0f,&nbsp;1.0f); //</span>读者可以尝试改变混合采用的比例&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelConstTable-&gt;SetVector(g_pd3dDevice, ScalarHandle, &amp;scalar);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">&nbsp;<span style=\"font-family:Times New Roman; font-size:14px\"><strong><img width=\"120\" height=\"120\" src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_porpcart.jpg\" alt=\"\"></strong></span></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理一</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_luoqi.jpg\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理二</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_ps.bmp\" alt=\"\"></p>\r\n<span style=\"color:rgb(51,51,51)\"></span>\r\n<p align=\"center\">混合后纹理三</p>\r\n<p align=\"center\">图<span style=\"font-family:Times New Roman\">3.2</span></p>\r\n<h6 style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"t5\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">4.HLSL Effect（效果框架）</span></h6>\r\n<span style=\"color:rgb(51,51,51)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color:rgb(51,51,51)\">进行到这里，读者可能会觉得使用着色器多少有些繁琐，</span><span style=\"color:rgb(51,51,51)\">Effect</span><span style=\"color:rgb(51,51,51)\">（效果框架）被提出以解决这些问题。作为一种方法，</span><span style=\"color:rgb(51,51,51)\">Effect</span><span style=\"color:rgb(51,51,51)\">简化了使用着色器的操作；作为一个框架，</span><span style=\"color:rgb(51,51,51)\">Effect</span><span style=\"color:rgb(51,51,51)\">把顶点着色器和像素着色器有机地组织了起来。</span><span style=\"color:rgb(51,51,51)\">&nbsp;</span><br style=\"color:rgb(51,51,51)\">\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133170\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>4.1Effect</strong></span></a><strong><span style=\"font-size:14px\">代码结构</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>一个<span style=\"font-family:Times New Roman\">Effect</span>效果代码的结构如下：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//effect</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;technique T0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;technique T1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;technique Tn</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>首先理解三个术语<span style=\"font-family:Times New Roman\">effect</span>（效果）、<span style=\"font-family:Times New Roman\">technique</span>（技术）、<span style=\"font-family:Times New Roman\">pass</span>（过程），所幸这三个术语从字面意思上就能得到很好的诠释。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>要实现一种效果<span style=\"font-family:Times New Roman\">effect</span>，可以使用多种技术<span style=\"font-family:Times New Roman\">technique</span>，而每种技术中可能使用多个过程<span style=\"font-family:Times New Roman\">pass</span>进行渲染，这样就构成了上述<span style=\"font-family:Times New Roman\">effect</span>包含多个<span style=\"font-family:Times New Roman\">technique</span>，<span style=\"font-family:Times New Roman\">technique</span>又包含多个<span style=\"font-family:Times New Roman\">pass</span>的代码结构。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>理解了代码结构，<span style=\"font-family:Times New Roman\">effect</span>知识就已经掌握了大半，下面我们直接使用一个程序实例对<span style=\"font-family:Times New Roman\">effect</span>进行介绍。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-size:14px\"></span></p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133171\" style=\"color:rgb(51,102,153)\"><span style=\"font-family:Times New Roman; font-size:14px\"><strong>4.2</strong></span></a><strong><span style=\"font-size:14px\">用<span style=\"font-family:Times New Roman\">Effect</span>实现多纹理化效果</span></strong></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>前面我们介绍了一个使用像素着色器实现的多纹理化，这里用<span style=\"font-family:Times New Roman\">Effect</span>框架重新给于实现，读者可以比较两者之间的异同，体会<span style=\"font-family:Times New Roman\">Effect</span>框架给我们带来了哪些方面的改善。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133437\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133172\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">4.2.1着色器</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>下面是着色器代码，该代码存储于<span style=\"font-family:Times New Roman\">Effect.txt</span>中，代码中包含了一个顶点着色器和一个像素着色器和一个<span style=\"font-family:Times New Roman\">Effect</span>效果框架。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>顶点着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">matrix WVPMatrix;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct VS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;vector position : POSITION;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">VS_OUTPUT VS_Main(VS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS_OUTPUT output = (VS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.position = mul(input.position, WVPMatrix);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.uvCoords0 = input.uvCoords0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.uvCoords1 = input.uvCoords1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>像素着色器</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">vector Scalar;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">texture Tex1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp0 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex0&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler Samp1 =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">sampler_state</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;Texture = &lt;Tex1&gt;;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MipFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MinFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;MagFilter = LINEAR;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_INPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords0 : TEXCOORD0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float2 uvCoords1 : TEXCOORD1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct PS_OUTPUT</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float4 Color : COLOR0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">PS_OUTPUT PS_Main(PS_INPUT input)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS_OUTPUT output = (PS_OUTPUT)0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.Color = tex2D(Samp0, input.uvCoords0)*Scalar.x &#43; tex2D(Samp1, input.uvCoords1)*Scalar.y;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return output;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>效果框架</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//---------------------------------------------</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">technique T0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vertexShader = compile vs_1_1 VS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelShader = compile ps_1_1 PS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>注意程序中是如何使用效果框架将顶点着色器和像素着色器组织起来的：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>着色器类型<span style=\"font-family:Times New Roman\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>版本号<span style=\"font-family:Times New Roman\">&nbsp;</span>入口函数名称</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vertexShader = compile vs_1_1 VS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelShader = compile ps_1_1 PS_Main();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>也可以直接将着色代码写在<span style=\"font-family:Times New Roman\">pass</span>过程中，相关用法请读者参看<span style=\"font-family:Times New Roman\">DirectX</span>文档：</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass P0</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>这里书写着色器代码</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>有了之前的基础，着色器代码读者应该很容易理解，下面具体介绍如何在应用程序中使用<span style=\"font-family:Times New Roman\">Effect</span>。</p>\r\n<p style=\"color:rgb(51,51,51)\"><a target=\"_blank\" name=\"_Toc159133438\" style=\"color:rgb(51,102,153)\"></a><a target=\"_blank\" name=\"_Toc159133173\" style=\"color:rgb(51,102,153)\"></a><span style=\"font-size:14px\">4.2.2应用程序</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>顶点&#26684;式定义<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">struct CUSTOMVERTEX</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>定点位置坐标</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float x,y,z;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>两套纹理坐标；</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu0, tv0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float tu1, tv1;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">#define D3DFVF_CUSTOMVERTEX (D3DFVF_XYZ | D3DFVF_TEX2)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/*********************</span>声明变量<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//Effect</span>效果指针</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXEffect *g_pEffect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE WVPMatrixHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE ScalarHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Tex0Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE Tex1Handle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXHANDLE TechHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>四边形顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DVERTEXBUFFER9 quadVB&nbsp;&nbsp;= NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>两个纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture0 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">LPDIRECT3DTEXTURE9 quadTexture1 = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>初始化应用程序<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>定义四边顶点模型</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">CUSTOMVERTEX quad[] =</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;tu0&nbsp;&nbsp;&nbsp;tv0&nbsp;&nbsp;&nbsp;tu1&nbsp;&nbsp;&nbsp;tv1</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{{-3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;-3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f,&nbsp;0.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;-3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f,&nbsp;1.0f},</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{&nbsp;&nbsp;3.0f,&nbsp;&nbsp;3.0f,&nbsp;10.0f,&nbsp;1.0f,&nbsp;0.0f,&nbsp;1.0f,&nbsp;0.0f}};</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置顶点缓存</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">void *ptr = NULL;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;CreateVertexBuffer(sizeof(quad),</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DUSAGE_WRITEONLY,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DPOOL_MANAGED,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;quadVB,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Lock(0, 0, (void**)&amp;ptr, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">memcpy((void*)ptr, (void*)quad, sizeof(quad));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">quadVB-&gt;Unlock();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建纹理</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;chopper.bmp&quot;, &amp;quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXCreateTextureFromFile(g_pd3dDevice, &quot;Bleach.jpg&quot;, &amp;quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>检测像素着色器是否被支持</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DCAPS9 caps;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetDeviceCaps(&amp;caps);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(caps.PixelShaderVersion &lt; D3DPS_VERSION(1, 1))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;NotSupport Pixel Shader - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>创建<span style=\"font-family:Times New Roman\">Effect</span>效果</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ID3DXBuffer* errorBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">HRESULT hr = D3DXCreateEffectFromFile(g_pd3dDevice,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Effect.txt&quot;,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D3DXSHADER_DEBUG,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;g_pEffect,</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">// output any error messages</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(errorBuffer)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, (char*)errorBuffer-&gt;GetBufferPointer(), 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCOM(errorBuffer);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">if(FAILED(hr))</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(0, &quot;D3DXCreateEffectFromFile() - FAILED&quot;, 0, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到各常量句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">WVPMatrixHandle = g_pEffect-&gt;GetParameterByName(0, &quot;WVPMatrix&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">ScalarHandle = g_pEffect-&gt;GetParameterByName(0, &quot;Scalar&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Tex0Handle = g_pEffect-&gt;GetParameterByName(0, &quot;Tex0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">Tex1Handle = g_pEffect-&gt;GetParameterByName(0, &quot;Tex1&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>得到技术<span style=\"font-family:Times New Roman\">technique T0</span>的句柄</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">TechHandle = g_pEffect-&gt;GetTechniqueByName(&quot;T0&quot;);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置纹理，注意这里设置纹理的方式比之前像素着色器简便很多</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetTexture(Tex0Handle, quadTexture0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetTexture(Tex1Handle, quadTexture1);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">/********************</span>渲染<span style=\"font-family:Times New Roman\">*****************/</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Clear( 0, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, D3DCOLOR_XRGB(153,153,153),&nbsp;1.0f, 0 );</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;BeginScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器变量<span style=\"font-family:Times New Roman\">WVPMatrix</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWorld, matView, matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_WORLD, &amp;matWorld);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_VIEW, &amp;matView);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;GetTransform(D3DTS_PROJECTION, &amp;matProj);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXMATRIX matWVP = matWorld * matView * matProj;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetMatrix(WVPMatrixHandle, &amp;matWVP);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>为着色器全局变量<span style=\"font-family:Times New Roman\">Scalar</span>赋&#20540;</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">D3DXVECTOR4 scalar(0.5f,&nbsp;0.5f,&nbsp;0.0f,&nbsp;1.0f);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetVector(ScalarHandle, &amp;scalar);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置定点&#26684;式、绑定数据流</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetFVF(D3DFVF_CUSTOMVERTEX);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;SetStreamSource(0, quadVB, 0, sizeof(CUSTOMVERTEX));</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>注意下面使用<span style=\"font-family:Times New Roman\">effect</span>框架进行渲染的方法</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>设置要使用的技术</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;SetTechnique(TechHandle);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>遍历技术中包含的所有过程进行多次渲染</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">UINT numPasses = 0;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;Begin(&amp;numPasses, 0);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">for(UINT i = 0; i&lt;numPasses; &#43;&#43;i)</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">{</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>开始过程</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pEffect-&gt;BeginPass(i);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>绘制图形</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pd3dDevice-&gt;DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>结束过程</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_pEffect-&gt;EndPass();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">}</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">//</span>结束使用技术</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pEffect-&gt;End();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;EndScene();</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">g_pd3dDevice-&gt;Present(NULL, NULL, NULL, NULL);</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">…</span></p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>以上是应用程序中使用<span style=\"font-family:Times New Roman\">Effect</span>框架的代码，可以看到<span style=\"font-family:Times New Roman\">Effect</span>在着色器加载、着色器变量赋&#20540;、顶点着色器和像素着色器配合使用等方面做出了简化，这里只是个简单的例子，当读者深入学习<span style=\"font-family:Times New Roman\">Effect</span>的时候，会了解到更多<span style=\"font-family:Times New Roman\">Effect</span>框架为着色器编程提供的方便。</p>\r\n<p style=\"color:rgb(51,51,51)\"><span style=\"font-family:Times New Roman; font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>编译运行程序，运行效果如图<span style=\"font-family:Times New Roman\">4.1</span>所示，这和第三章使用像素着色器实现的多纹理化效果是一样的。</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">&nbsp;<img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_Bleach.jpg\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理一</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_chopper.bmp\" alt=\"\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\">纹理二</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51)\"><img src=\"http://p.blog.csdn.net/images/p_blog_csdn_net/trcj1/278886/t_effect.bmp\" alt=\"\"></p>\r\n<span style=\"color:rgb(51,51,51)\"></span>\r\n<p align=\"center\">混合后纹理三</p>\r\n<p align=\"center\">图<span style=\"font-family:Times New Roman\">4.1</span></p>\r\n',1,'',0,0,'2015-02-02 00:46:14','2015-02-02 00:46:14','2015-02-02 00:46:14'),(48,1,7,'DirectX10 龙书笔记- 一个颜色立方体程序','7bbe25c6a087bdeb561fa6dfa8ca059e',0,'\r\n\r\n<p>这篇是作为学习笔记之用，详细代码在Introduction to 3D Game Programming with Directx10里面的扉页，有个网址 <a target=\"_blank\" href=\"http://www.d3dcoder.net/\">\r\nwww.d3dc','\r\n\r\n<p>这篇是作为学习笔记之用，详细代码在Introduction to 3D Game Programming with Directx10里面的扉页，有个网址 <a target=\"_blank\" href=\"http://www.d3dcoder.net/\">\r\nwww.d3dcoder.net</a> 里面可以下载</p>\r\n<p>&nbsp;</p>\r\n<p>这个程序的效果是:<img src=\"http://img.blog.csdn.net/20140914111925212?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p>&nbsp;</p>\r\n<p>这个demo展示了基本的directx基本的渲染流程.</p>\r\n<p>&nbsp;</p>\r\n<p>首先是渲染管线: 它的作用是根据虚拟摄像机视角生成2D图像的基本步骤.</p>\r\n<p>&nbsp;</p>\r\n<p align=\"left\">主要是类为<span style=\"color:blue\">ColoredCubeApp</span></p>\r\n<p align=\"left\"><span style=\"color:blue\"></span><pre name=\"code\" class=\"cpp\">class ColoredCubeApp : public D3DApp\n{\npublic:\n	ColoredCubeApp(HINSTANCE hInstance);\n	~ColoredCubeApp();\n\n	void initApp();  //初始化\n	void onResize(); //窗口大小变化时候调用\n	void updateScene(float dt); //每一帧调用,负责更新参数\n	void drawScene(); //每一帧调用,负责绘制\n\nprivate:\n	void buildFX(); //着色器\n	void buildVertexLayouts(); //输入汇编器，构建图元\n \nprivate:\n	\n	Box mBox;\n\n	ID3D10Effect* mFX;\n	ID3D10EffectTechnique* mTech;\n	ID3D10InputLayout* mVertexLayout;\n	ID3D10EffectMatrixVariable* mfxWVPVar;\n\n	D3DXMATRIX mView;\n	D3DXMATRIX mProj;\n	D3DXMATRIX mWVP;\n\n	float mTheta;\n	float mPhi;\n};\n</pre></p>\r\n<p align=\"left\"><span style=\"color:blue\"><br>\r\n</span></p>\r\n<p align=\"left\">这个类中的initAPP()为初始化渲染做准备</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">void ColoredCubeApp::initApp()\n{\n	D3DApp::initApp();\n	mBox.init(md3dDevice, 0.3f);  //这个是所要创建立方体的初始化。 提供了顶点缓冲区，和索引缓冲区\n	buildFX(); //这个是顶点着色器、几何着色器、像素着色器的配置\n	buildVertexLayouts();//根据以上信息构建图元\n}\n</pre><br>\r\n<br>\r\n</p>\r\n<pre name=\"code\" class=\"cpp\">下面看具体mBox.init是怎么初始化立方体的\nvoid Box::init(ID3D10Device* device, float scale)\n{\n	md3dDevice = device;\n \n	mNumVertices = 8;\n	mNumFaces    = 12; // 2 per quad\n\n	// Create vertex buffer\n    Vertex vertices[] =\n    {\n		{D3DXVECTOR3(-1.0f, -1.0f, -1.0f), WHITE},\n		{D3DXVECTOR3(-1.0f, +1.0f, -1.0f), BLACK},\n		{D3DXVECTOR3(+1.0f, +1.0f, -1.0f), RED},\n		{D3DXVECTOR3(+1.0f, -1.0f, -1.0f), GREEN},\n		{D3DXVECTOR3(-1.0f, -1.0f, +1.0f), BLUE},\n		{D3DXVECTOR3(-1.0f, +1.0f, +1.0f), YELLOW},\n		{D3DXVECTOR3(+1.0f, +1.0f, +1.0f), CYAN},\n		{D3DXVECTOR3(+1.0f, -1.0f, +1.0f), MAGENTA},\n    };\n\n	// Scale the box.\n	for(DWORD i = 0; i &lt; mNumVertices; ++i)\n		vertices[i].pos *= scale;\n\n	//顶点缓冲区\n    D3D10_BUFFER_DESC vbd;\n    vbd.Usage = D3D10_USAGE_IMMUTABLE;\n    vbd.ByteWidth = sizeof(Vertex) * mNumVertices;\n    vbd.BindFlags = D3D10_BIND_VERTEX_BUFFER;\n    vbd.CPUAccessFlags = 0;\n    vbd.MiscFlags = 0;\n    D3D10_SUBRESOURCE_DATA vinitData;\n    vinitData.pSysMem = vertices;\n    HR(md3dDevice-&gt;CreateBuffer(&amp;vbd, &amp;vinitData, &amp;mVB));\n\n\n	// Create the index buffer \n    //索引缓冲区\n	DWORD indices[] = {\n		// front face\n		0, 1, 2,\n		0, 2, 3,\n\n		// back face\n		4, 6, 5,\n		4, 7, 6,\n\n		// left face\n		4, 5, 1,\n		4, 1, 0,\n\n		// right face\n		3, 2, 6,\n		3, 6, 7,\n\n		// top face\n		1, 5, 6,\n		1, 6, 2,\n\n		// bottom face\n		4, 0, 3, \n		4, 3, 7\n	};\n\n	D3D10_BUFFER_DESC ibd;\n    ibd.Usage = D3D10_USAGE_IMMUTABLE;\n    ibd.ByteWidth = sizeof(DWORD) * mNumFaces*3;\n    ibd.BindFlags = D3D10_BIND_INDEX_BUFFER;\n    ibd.CPUAccessFlags = 0;\n    ibd.MiscFlags = 0;\n    D3D10_SUBRESOURCE_DATA iinitData;\n    iinitData.pSysMem = indices;\n    HR(md3dDevice-&gt;CreateBuffer(&amp;ibd, &amp;iinitData, &amp;mIB));\n}\n</pre><br>\r\n<p>从以上可知，主要作用就是先构建所需要的不重复的点，然后构建一个立方体索引点(索引是为了节约资源，不必再重复构建点)。</p>\r\n<p>&nbsp;</p>\r\n<p>下面看buildFX() 里面的内容</p>\r\n<p align=\"left\"><span style=\"color:navy\">hr</span> = <span style=\"color:#880000\">\r\nD3DX10CreateEffectFromFile</span>(L<span style=\"color:#A31515\">&quot;color.fx&quot;</span>, 0, 0,\r\n</p>\r\n<p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#A31515\">&quot;fx_4_0&quot;</span>,<span style=\"color:navy\">shaderFlags</span>, 0,\r\n<span style=\"color:navy\">md3dDevice</span>,0, 0, &amp;<span style=\"color:navy\">mFX</span>, &amp;<span style=\"color:navy\">compilationErrors</span>,0);</p>\r\n<p>主要为这一句。</p>\r\n<p>其中color.fx 是一个文本文件</p>\r\n<pre name=\"code\" class=\"html\">//=============================================================================\n// color.fx by Frank Luna (C) 2008 All Rights Reserved.\n//\n// Transforms and colors geometry.\n//=============================================================================\n\ncbuffer cbPerObject\n{\n	float4x4 gWVP; \n};\n\nvoid VS(float3 iPosL  : POSITION,\n        float4 iColor : COLOR,\n        out float4 oPosH  : SV_POSITION,\n        out float4 oColor : COLOR)\n{\n	// Transform to homogeneous clip space.\n	oPosH = mul(float4(iPosL, 1.0f), gWVP);\n	\n	// Just pass vertex color into the pixel shader.\n    oColor = iColor;\n}\n\nfloat4 PS(float4 posH  : SV_POSITION,\n          float4 color : COLOR) : SV_Target\n{\n    return color;\n}\n\ntechnique10 ColorTech\n{\n    pass P0\n    {\n        SetVertexShader( CompileShader( vs_4_0, VS() ) );\n        SetGeometryShader( NULL );\n        SetPixelShader( CompileShader( ps_4_0, PS() ) );\n    }\n}\n</pre><br>\r\n<br>\r\n<pre name=\"code\" class=\"cpp\">以上可以看成类c++的文件，就是定义一组操作。\n然后通过\nvoid ColoredCubeApp::buildVertexLayouts()\n{\n	// Create the vertex input layout.\n	D3D10_INPUT_ELEMENT_DESC vertexDesc[] =\n	{\n		{&quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D10_INPUT_PER_VERTEX_DATA, 0},\n		{&quot;COLOR&quot;,    0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D10_INPUT_PER_VERTEX_DATA, 0}\n	};\n\n	// Create the input layout\n    D3D10_PASS_DESC PassDesc;\n    mTech-&gt;GetPassByIndex(0)-&gt;GetDesc(&amp;PassDesc);\n    HR(md3dDevice-&gt;CreateInputLayout(vertexDesc, 2, PassDesc.pIAInputSignature,\n		PassDesc.IAInputSignatureSize, &amp;mVertexLayout));\n}\n</pre><br>\r\n<p>上面这个函数调用color.fx里面相应的操作函数实现图元的构建。</p>\r\n<p>准备工作完成了。现在就是绘制过程了</p>\r\n<p>&nbsp;</p>\r\n<pre name=\"code\" class=\"cpp\">void ColoredCubeApp::drawScene()\n{\n	D3DApp::drawScene();\n\n	// Restore default states, input layout and primitive topology \n	// because mFont-&gt;DrawText changes them.  Note that we can \n	// restore the default states by passing null.\n	//md3dDevice-&gt;OMSetDepthStencilState(0, 0);\n	float blendFactors[] = {0.0f, 0.0f, 0.0f, 0.0f};\n	//md3dDevice-&gt;OMSetBlendState(0, blendFactors, 0xffffffff);\n    md3dDevice-&gt;IASetInputLayout(mVertexLayout);\n	//图&#170;?元a列&#162;D表&#192;&#168;&#170;-三&#168;y角?形?\n    md3dDevice-&gt;IASetPrimitiveTopology(D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP);\n\n   \n	// set constants\n	mWVP = mView*mProj;\n	mfxWVPVar-&gt;SetMatrix((float*)&amp;mWVP);\n\n    D3D10_TECHNIQUE_DESC techDesc;\n    mTech-&gt;GetDesc( &amp;techDesc );\n    for(UINT p = 0; p &lt; techDesc.Passes; ++p)\n    {\n        mTech-&gt;GetPassByIndex( p )-&gt;Apply(0);//更&#168;&#185;新?GPU 常&#161;&#234;量&#162;?缓o冲?区?，&#234;?将?着&#193;?色&#166;?器&#161;&#194;绑&#227;&#168;&#174;定&#161;&#167;到&#204;?管&#168;&#185;线?，&#234;?启?动&#161;&#165;pass\n        \n		mBox.draw();\n    }\n\n	\n	mSwapChain-&gt;Present(0, 0);\n}\n\nvoid ColoredCubeApp::updateScene(float dt)\n{\n	D3DApp::updateScene(dt);\n\n	// Update angles based on input to orbit camera around box.\n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)	mTheta -= 2.0f*dt;\n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)	mTheta += 2.0f*dt;\n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)	mPhi -= 2.0f*dt;\n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)	mPhi += 2.0f*dt;\n\n	// Restrict the angle mPhi.\n	if( mPhi &lt; 0.1f )	mPhi = 0.1f;\n	if( mPhi &gt; PI-0.1f)	mPhi = PI-0.1f;\n\n	// Convert Spherical to Cartesian coordinates: mPhi measured from +y\n	// and mTheta measured counterclockwise from -z.\n	float x =  5.0f*sinf(mPhi)*sinf(mTheta);\n	float z = -5.0f*sinf(mPhi)*cosf(mTheta);\n	float y =  5.0f*cosf(mPhi);\n\n	// Build the view matrix.   观?察&#168;&#172;者?到&#204;?世&#186;&#168;&#164;界?的&#204;?矩?阵&#168;&#174;\n	D3DXVECTOR3 pos(x, y, z);\n	D3DXVECTOR3 target(0.0f, 0.0f, 0.0f);\n	D3DXVECTOR3 up(0.0f, 1.0f, 0.0f);\n	D3DXMatrixLookAtLH(&amp;mView, &amp;pos, &amp;target, &amp;up);\n}\n</pre><br>\r\n<p>目前还只是第一个比较完整的demo 细节代码很多还没有理解透彻。我们能了解个大概流程就可以啦。后面会越学越懂的</p>\r\n<br>\r\n','\r\n\r\n<p>这篇是作为学习笔记之用，详细代码在Introduction to 3D Game Programming with Directx10里面的扉页，有个网址 <a target=\"_blank\" href=\"http://www.d3dcoder.net/\">\r\nwww.d3dcoder.net</a> 里面可以下载</p>\r\n<p>&nbsp;</p>\r\n<p>这个程序的效果是:<img src=\"http://img.blog.csdn.net/20140914111925212?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\r\n<p>&nbsp;</p>\r\n<p>这个demo展示了基本的directx基本的渲染流程.</p>\r\n<p>&nbsp;</p>\r\n<p>首先是渲染管线: 它的作用是根据虚拟摄像机视角生成2D图像的基本步骤.</p>\r\n<p>&nbsp;</p>\r\n<p align=\"left\">主要是类为<span style=\"color:blue\">ColoredCubeApp</span></p>\r\n<p align=\"left\"><span style=\"color:blue\"></span><pre name=\"code\" class=\"cpp\">class ColoredCubeApp : public D3DApp\n{\npublic:\n	ColoredCubeApp(HINSTANCE hInstance);\n	~ColoredCubeApp();\n\n	void initApp();  //初始化\n	void onResize(); //窗口大小变化时候调用\n	void updateScene(float dt); //每一帧调用,负责更新参数\n	void drawScene(); //每一帧调用,负责绘制\n\nprivate:\n	void buildFX(); //着色器\n	void buildVertexLayouts(); //输入汇编器，构建图元\n \nprivate:\n	\n	Box mBox;\n\n	ID3D10Effect* mFX;\n	ID3D10EffectTechnique* mTech;\n	ID3D10InputLayout* mVertexLayout;\n	ID3D10EffectMatrixVariable* mfxWVPVar;\n\n	D3DXMATRIX mView;\n	D3DXMATRIX mProj;\n	D3DXMATRIX mWVP;\n\n	float mTheta;\n	float mPhi;\n};\n</pre></p>\r\n<p align=\"left\"><span style=\"color:blue\"><br>\r\n</span></p>\r\n<p align=\"left\">这个类中的initAPP()为初始化渲染做准备</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">void ColoredCubeApp::initApp()\n{\n	D3DApp::initApp();\n	mBox.init(md3dDevice, 0.3f);  //这个是所要创建立方体的初始化。 提供了顶点缓冲区，和索引缓冲区\n	buildFX(); //这个是顶点着色器、几何着色器、像素着色器的配置\n	buildVertexLayouts();//根据以上信息构建图元\n}\n</pre><br>\r\n<br>\r\n</p>\r\n<pre name=\"code\" class=\"cpp\">下面看具体mBox.init是怎么初始化立方体的\nvoid Box::init(ID3D10Device* device, float scale)\n{\n	md3dDevice = device;\n \n	mNumVertices = 8;\n	mNumFaces    = 12; // 2 per quad\n\n	// Create vertex buffer\n    Vertex vertices[] =\n    {\n		{D3DXVECTOR3(-1.0f, -1.0f, -1.0f), WHITE},\n		{D3DXVECTOR3(-1.0f, +1.0f, -1.0f), BLACK},\n		{D3DXVECTOR3(+1.0f, +1.0f, -1.0f), RED},\n		{D3DXVECTOR3(+1.0f, -1.0f, -1.0f), GREEN},\n		{D3DXVECTOR3(-1.0f, -1.0f, +1.0f), BLUE},\n		{D3DXVECTOR3(-1.0f, +1.0f, +1.0f), YELLOW},\n		{D3DXVECTOR3(+1.0f, +1.0f, +1.0f), CYAN},\n		{D3DXVECTOR3(+1.0f, -1.0f, +1.0f), MAGENTA},\n    };\n\n	// Scale the box.\n	for(DWORD i = 0; i &lt; mNumVertices; ++i)\n		vertices[i].pos *= scale;\n\n	//顶点缓冲区\n    D3D10_BUFFER_DESC vbd;\n    vbd.Usage = D3D10_USAGE_IMMUTABLE;\n    vbd.ByteWidth = sizeof(Vertex) * mNumVertices;\n    vbd.BindFlags = D3D10_BIND_VERTEX_BUFFER;\n    vbd.CPUAccessFlags = 0;\n    vbd.MiscFlags = 0;\n    D3D10_SUBRESOURCE_DATA vinitData;\n    vinitData.pSysMem = vertices;\n    HR(md3dDevice-&gt;CreateBuffer(&amp;vbd, &amp;vinitData, &amp;mVB));\n\n\n	// Create the index buffer \n    //索引缓冲区\n	DWORD indices[] = {\n		// front face\n		0, 1, 2,\n		0, 2, 3,\n\n		// back face\n		4, 6, 5,\n		4, 7, 6,\n\n		// left face\n		4, 5, 1,\n		4, 1, 0,\n\n		// right face\n		3, 2, 6,\n		3, 6, 7,\n\n		// top face\n		1, 5, 6,\n		1, 6, 2,\n\n		// bottom face\n		4, 0, 3, \n		4, 3, 7\n	};\n\n	D3D10_BUFFER_DESC ibd;\n    ibd.Usage = D3D10_USAGE_IMMUTABLE;\n    ibd.ByteWidth = sizeof(DWORD) * mNumFaces*3;\n    ibd.BindFlags = D3D10_BIND_INDEX_BUFFER;\n    ibd.CPUAccessFlags = 0;\n    ibd.MiscFlags = 0;\n    D3D10_SUBRESOURCE_DATA iinitData;\n    iinitData.pSysMem = indices;\n    HR(md3dDevice-&gt;CreateBuffer(&amp;ibd, &amp;iinitData, &amp;mIB));\n}\n</pre><br>\r\n<p>从以上可知，主要作用就是先构建所需要的不重复的点，然后构建一个立方体索引点(索引是为了节约资源，不必再重复构建点)。</p>\r\n<p>&nbsp;</p>\r\n<p>下面看buildFX() 里面的内容</p>\r\n<p align=\"left\"><span style=\"color:navy\">hr</span> = <span style=\"color:#880000\">\r\nD3DX10CreateEffectFromFile</span>(L<span style=\"color:#A31515\">&quot;color.fx&quot;</span>, 0, 0,\r\n</p>\r\n<p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#A31515\">&quot;fx_4_0&quot;</span>,<span style=\"color:navy\">shaderFlags</span>, 0,\r\n<span style=\"color:navy\">md3dDevice</span>,0, 0, &amp;<span style=\"color:navy\">mFX</span>, &amp;<span style=\"color:navy\">compilationErrors</span>,0);</p>\r\n<p>主要为这一句。</p>\r\n<p>其中color.fx 是一个文本文件</p>\r\n<pre name=\"code\" class=\"html\">//=============================================================================\n// color.fx by Frank Luna (C) 2008 All Rights Reserved.\n//\n// Transforms and colors geometry.\n//=============================================================================\n\ncbuffer cbPerObject\n{\n	float4x4 gWVP; \n};\n\nvoid VS(float3 iPosL  : POSITION,\n        float4 iColor : COLOR,\n        out float4 oPosH  : SV_POSITION,\n        out float4 oColor : COLOR)\n{\n	// Transform to homogeneous clip space.\n	oPosH = mul(float4(iPosL, 1.0f), gWVP);\n	\n	// Just pass vertex color into the pixel shader.\n    oColor = iColor;\n}\n\nfloat4 PS(float4 posH  : SV_POSITION,\n          float4 color : COLOR) : SV_Target\n{\n    return color;\n}\n\ntechnique10 ColorTech\n{\n    pass P0\n    {\n        SetVertexShader( CompileShader( vs_4_0, VS() ) );\n        SetGeometryShader( NULL );\n        SetPixelShader( CompileShader( ps_4_0, PS() ) );\n    }\n}\n</pre><br>\r\n<br>\r\n<pre name=\"code\" class=\"cpp\">以上可以看成类c++的文件，就是定义一组操作。\n然后通过\nvoid ColoredCubeApp::buildVertexLayouts()\n{\n	// Create the vertex input layout.\n	D3D10_INPUT_ELEMENT_DESC vertexDesc[] =\n	{\n		{&quot;POSITION&quot;, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D10_INPUT_PER_VERTEX_DATA, 0},\n		{&quot;COLOR&quot;,    0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D10_INPUT_PER_VERTEX_DATA, 0}\n	};\n\n	// Create the input layout\n    D3D10_PASS_DESC PassDesc;\n    mTech-&gt;GetPassByIndex(0)-&gt;GetDesc(&amp;PassDesc);\n    HR(md3dDevice-&gt;CreateInputLayout(vertexDesc, 2, PassDesc.pIAInputSignature,\n		PassDesc.IAInputSignatureSize, &amp;mVertexLayout));\n}\n</pre><br>\r\n<p>上面这个函数调用color.fx里面相应的操作函数实现图元的构建。</p>\r\n<p>准备工作完成了。现在就是绘制过程了</p>\r\n<p>&nbsp;</p>\r\n<pre name=\"code\" class=\"cpp\">void ColoredCubeApp::drawScene()\n{\n	D3DApp::drawScene();\n\n	// Restore default states, input layout and primitive topology \n	// because mFont-&gt;DrawText changes them.  Note that we can \n	// restore the default states by passing null.\n	//md3dDevice-&gt;OMSetDepthStencilState(0, 0);\n	float blendFactors[] = {0.0f, 0.0f, 0.0f, 0.0f};\n	//md3dDevice-&gt;OMSetBlendState(0, blendFactors, 0xffffffff);\n    md3dDevice-&gt;IASetInputLayout(mVertexLayout);\n	//图&#170;?元a列&#162;D表&#192;&#168;&#170;-三&#168;y角?形?\n    md3dDevice-&gt;IASetPrimitiveTopology(D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP);\n\n   \n	// set constants\n	mWVP = mView*mProj;\n	mfxWVPVar-&gt;SetMatrix((float*)&amp;mWVP);\n\n    D3D10_TECHNIQUE_DESC techDesc;\n    mTech-&gt;GetDesc( &amp;techDesc );\n    for(UINT p = 0; p &lt; techDesc.Passes; ++p)\n    {\n        mTech-&gt;GetPassByIndex( p )-&gt;Apply(0);//更&#168;&#185;新?GPU 常&#161;&#234;量&#162;?缓o冲?区?，&#234;?将?着&#193;?色&#166;?器&#161;&#194;绑&#227;&#168;&#174;定&#161;&#167;到&#204;?管&#168;&#185;线?，&#234;?启?动&#161;&#165;pass\n        \n		mBox.draw();\n    }\n\n	\n	mSwapChain-&gt;Present(0, 0);\n}\n\nvoid ColoredCubeApp::updateScene(float dt)\n{\n	D3DApp::updateScene(dt);\n\n	// Update angles based on input to orbit camera around box.\n	if(GetAsyncKeyState(&#39;A&#39;) &amp; 0x8000)	mTheta -= 2.0f*dt;\n	if(GetAsyncKeyState(&#39;D&#39;) &amp; 0x8000)	mTheta += 2.0f*dt;\n	if(GetAsyncKeyState(&#39;W&#39;) &amp; 0x8000)	mPhi -= 2.0f*dt;\n	if(GetAsyncKeyState(&#39;S&#39;) &amp; 0x8000)	mPhi += 2.0f*dt;\n\n	// Restrict the angle mPhi.\n	if( mPhi &lt; 0.1f )	mPhi = 0.1f;\n	if( mPhi &gt; PI-0.1f)	mPhi = PI-0.1f;\n\n	// Convert Spherical to Cartesian coordinates: mPhi measured from +y\n	// and mTheta measured counterclockwise from -z.\n	float x =  5.0f*sinf(mPhi)*sinf(mTheta);\n	float z = -5.0f*sinf(mPhi)*cosf(mTheta);\n	float y =  5.0f*cosf(mPhi);\n\n	// Build the view matrix.   观?察&#168;&#172;者?到&#204;?世&#186;&#168;&#164;界?的&#204;?矩?阵&#168;&#174;\n	D3DXVECTOR3 pos(x, y, z);\n	D3DXVECTOR3 target(0.0f, 0.0f, 0.0f);\n	D3DXVECTOR3 up(0.0f, 1.0f, 0.0f);\n	D3DXMatrixLookAtLH(&amp;mView, &amp;pos, &amp;target, &amp;up);\n}\n</pre><br>\r\n<p>目前还只是第一个比较完整的demo 细节代码很多还没有理解透彻。我们能了解个大概流程就可以啦。后面会越学越懂的</p>\r\n<br>\r\n',1,'directx,gpu',0,0,'2015-02-02 00:46:16','2015-02-02 00:46:16','2015-02-02 00:46:16'),(49,1,7,'Directx  在Vs2010环境下配置教程','febc265b2223f43d694fb0e9f52e1d36',0,'\r\n\r\n<p>工具以及版本:</p>\r\n<p>Directx sdk june 2010</p>\r\n<p>Visual studio 2010</p>\r\n<p>配置方法:</p>\r\n<p>1、先安装directxsdk 安装完后，默认会生成一个环境变量<span style=\"c','\r\n\r\n<p>工具以及版本:</p>\r\n<p>Directx sdk june 2010</p>\r\n<p>Visual studio 2010</p>\r\n<p>配置方法:</p>\r\n<p>1、先安装directxsdk 安装完后，默认会生成一个环境变量<span style=\"color:rgb(68,68,68); font-family:Arial; font-size:14px; line-height:26px\">DXSDK_DIR</span>，不用管</p>\r\n<p>2、在vs2010中新建win32 application 空项目</p>\r\n<p>3、</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n“配置属性”<span style=\"font-family:Calibri\">-&gt;</span>“<span style=\"font-family:Calibri\">VC&#43;&#43;</span>目录”</p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<strong><span style=\"color:rgb(68,68,68)\">#.</span></strong><span style=\"color:rgb(68,68,68)\">添加</span><span style=\"color:rgb(68,68,68)\">“<strong>$(DXSDK_DIR)Utilities/Bin/x86</strong>”</span><span style=\"color:rgb(68,68,68)\">（不包括双引号）到</span><span style=\"color:rgb(68,68,68)\">&nbsp;“</span><strong><span style=\"color:rgb(68,68,68)\">可执行文件目录</span></strong><span style=\"color:rgb(68,68,68)\">”</span><span style=\"color:rgb(68,68,68)\">；</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<strong><span style=\"color:rgb(68,68,68)\">#.</span></strong><span style=\"color:rgb(68,68,68)\">添加</span><span style=\"color:rgb(68,68,68)\">“<strong>$(DXSDK_DIR)Include</strong>”</span><span style=\"color:rgb(68,68,68)\">（不包括双引号）到</span><span style=\"color:rgb(68,68,68)\">&nbsp;“</span><strong><span style=\"color:rgb(68,68,68)\">包含目录</span></strong><span style=\"color:rgb(68,68,68)\">”</span><span style=\"color:rgb(68,68,68)\">；</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<strong><span style=\"color:rgb(68,68,68)\">#.</span></strong><span style=\"color:rgb(68,68,68)\">添加</span><span style=\"color:rgb(68,68,68)\">“<strong>$(DXSDK_DIR)Lib/x86</strong>”</span><span style=\"color:rgb(68,68,68)\">（不包括双引号）到</span><span style=\"color:rgb(68,68,68)\">&nbsp;“</span><strong><span style=\"color:rgb(68,68,68)\">库目录</span></strong><span style=\"color:rgb(68,68,68)\">”</span><span style=\"color:rgb(68,68,68)\">；</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:rgb(68,68,68)\">4、有些教程只给了以上几步，我运行会报错，丢失lib文件</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:rgb(68,68,68)\">所以还需要加上一步.</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:#444444\">在&quot;配置属性&quot; 的linker-input 的第一项添加</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:#444444\">d3d10.lib<br>\r\nd3dx10d.lib<br>\r\nd3dx9d.lib<br>\r\ndxerr.lib<br>\r\ndxguid.lib<br>\r\nwinmm.lib<br>\r\ncomctl32.lib<br>\r\n</span></p>\r\n','\r\n\r\n<p>工具以及版本:</p>\r\n<p>Directx sdk june 2010</p>\r\n<p>Visual studio 2010</p>\r\n<p>配置方法:</p>\r\n<p>1、先安装directxsdk 安装完后，默认会生成一个环境变量<span style=\"color:rgb(68,68,68); font-family:Arial; font-size:14px; line-height:26px\">DXSDK_DIR</span>，不用管</p>\r\n<p>2、在vs2010中新建win32 application 空项目</p>\r\n<p>3、</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n“配置属性”<span style=\"font-family:Calibri\">-&gt;</span>“<span style=\"font-family:Calibri\">VC&#43;&#43;</span>目录”</p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<strong><span style=\"color:rgb(68,68,68)\">#.</span></strong><span style=\"color:rgb(68,68,68)\">添加</span><span style=\"color:rgb(68,68,68)\">“<strong>$(DXSDK_DIR)Utilities/Bin/x86</strong>”</span><span style=\"color:rgb(68,68,68)\">（不包括双引号）到</span><span style=\"color:rgb(68,68,68)\">&nbsp;“</span><strong><span style=\"color:rgb(68,68,68)\">可执行文件目录</span></strong><span style=\"color:rgb(68,68,68)\">”</span><span style=\"color:rgb(68,68,68)\">；</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<strong><span style=\"color:rgb(68,68,68)\">#.</span></strong><span style=\"color:rgb(68,68,68)\">添加</span><span style=\"color:rgb(68,68,68)\">“<strong>$(DXSDK_DIR)Include</strong>”</span><span style=\"color:rgb(68,68,68)\">（不包括双引号）到</span><span style=\"color:rgb(68,68,68)\">&nbsp;“</span><strong><span style=\"color:rgb(68,68,68)\">包含目录</span></strong><span style=\"color:rgb(68,68,68)\">”</span><span style=\"color:rgb(68,68,68)\">；</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<strong><span style=\"color:rgb(68,68,68)\">#.</span></strong><span style=\"color:rgb(68,68,68)\">添加</span><span style=\"color:rgb(68,68,68)\">“<strong>$(DXSDK_DIR)Lib/x86</strong>”</span><span style=\"color:rgb(68,68,68)\">（不包括双引号）到</span><span style=\"color:rgb(68,68,68)\">&nbsp;“</span><strong><span style=\"color:rgb(68,68,68)\">库目录</span></strong><span style=\"color:rgb(68,68,68)\">”</span><span style=\"color:rgb(68,68,68)\">；</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:rgb(68,68,68)\">4、有些教程只给了以上几步，我运行会报错，丢失lib文件</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:rgb(68,68,68)\">所以还需要加上一步.</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:#444444\">在&quot;配置属性&quot; 的linker-input 的第一项添加</span></p>\r\n<p align=\"left\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"color:#444444\">d3d10.lib<br>\r\nd3dx10d.lib<br>\r\nd3dx9d.lib<br>\r\ndxerr.lib<br>\r\ndxguid.lib<br>\r\nwinmm.lib<br>\r\ncomctl32.lib<br>\r\n</span></p>\r\n',1,'directx11,vs2010,visual studio 2010',0,0,'2015-02-02 00:46:17','2015-02-02 00:46:17','2015-02-02 00:46:17'),(50,1,8,'如何使用IEEE_cs_Latex写论文， 并加入中文','e76bc76fe3f0ba16bb32a6a8e6fbd22a',0,'\r\n\r\n<p>1. 下载ctex套装&nbsp;</p>\r\n<p>2. 安装ctex套装，然后打开里面的Winedit 即可开始写论文</p>\r\n<p>3. 下载IEEE_cs_Latex模板&nbsp;</p>\r\n<p>地址为:http://www.ieee.org/publi','\r\n\r\n<p>1. 下载ctex套装&nbsp;</p>\r\n<p>2. 安装ctex套装，然后打开里面的Winedit 即可开始写论文</p>\r\n<p>3. 下载IEEE_cs_Latex模板&nbsp;</p>\r\n<p>地址为:http://www.ieee.org/publications_standards/publications/authors/author_templates.html &nbsp; 在里面选择windows版本的</p>\r\n<p>下载后是一个IEEETran的文件夹。里面有一个readme 说明了文件清单:</p>\r\n<p><pre code_snippet_id=\"467481\" snippet_file_name=\"blog_20140912_1_5242634\"  name=\"code\" class=\"html\">README                 - This file.\n\nIEEEtran.cls           - The IEEEtran LaTeX class file.\n\nchangelog.txt          - The revision history.\n\nIEEEtran_HOWTO.pdf     - The IEEEtran LaTeX class user manual.\n\nbare_conf.tex          - A bare bones starter file for conference papers.\n\nbare_jrnl.tex          - A bare bones starter file for journal papers.\n\nbare_jrnl_compsoc.tex  - A bare bones starter file for Computer Society\n                         journal papers.\n\nbare_jrnl_transmag.tex - A bare bones starter file for IEEE Transactions\n                         on Magnetics journal papers.\n\nbare_adv.tex           - A bare bones starter file showing advanced\n                         techniques such as conditional compilation,\n                         hyperlinks, PDF thumbnails, etc. The illustrated\n                         format is for a Computer Society journal paper.</pre></p>\r\n<p><br>\r\n</p>\r\n我们需要的是自然科学， &nbsp;bare_jrnl_compsoc.tex 这个 ，其余的tex结尾的是另外的模板。\r\n<p>双击这个tex，就会打开在winedit里面。 最好先另存为:UTF-8 版本</p>\r\n<p>然后“垃圾桶”和&quot;B&quot;这个之间的按钮，选择xeLatex 然后再点击他一次，就会自动编译。 然后在同级目录查看生成的PDF文档，就是这个IEEE_cs_Latex的效果。</p>\r\n<p>也可以找那个“放大镜”的按钮，直接打开。</p>\r\n<p>4. 就是中文的问题。之前那个ctex套装最好下载FULL版本，避免不必要的下载麻烦</p>\r\n<p>在刚才那个winedit页面查找 begin{document} 在他上面加入usepackage{xecjk} setCJKmainfont等。 如下</p>\r\n<p><pre code_snippet_id=\"467481\" snippet_file_name=\"blog_20140912_2_2831873\"  name=\"code\" class=\"html\">\\usepackage{xeCJK}\n\\setCJKmainfont{SimSun}\n\\begin{document}</pre><br>\r\n具体其他效果 请百度<span style=\"color:rgb(106,168,79); font-family:simsun; font-size:14px; line-height:21px; background-color:rgb(226,226,226)\">xeCJK</span></p>\r\n<p><span style=\"font-family:simsun; color:#6aa84f\"><span style=\"font-size:14px; line-height:21px\">5. 还有更简单的中文配置，那就是直接把<span style=\"color:rgb(68,68,68); font-family:simsun; font-size:14px; line-height:22px; background-color:rgb(226,226,226)\">\\documentclass{article}改成<span style=\"color:rgb(68,68,68); font-family:simsun; font-size:14px; line-height:22px; background-color:rgb(226,226,226)\">\\documentclass{ctexart}</span></span></span></span></p>\r\n<p><span style=\"font-family:simsun\"><span style=\"font-size:14px\"><span style=\"font-family:simsun; font-size:14px; background-color:rgb(226,226,226)\"></span><span style=\"color:#444444\"><span style=\"line-height:22px\">但是在这里本来就是用的IEEE的模板<span style=\"color:rgb(68,68,68); font-family:simsun; font-size:14px; line-height:22px; background-color:rgb(226,226,226)\">\\documentclass{IEEEStran}</span><br>\r\n</span></span></span></span>所以只能用4的方法</p>\r\n','\r\n\r\n<p>1. 下载ctex套装&nbsp;</p>\r\n<p>2. 安装ctex套装，然后打开里面的Winedit 即可开始写论文</p>\r\n<p>3. 下载IEEE_cs_Latex模板&nbsp;</p>\r\n<p>地址为:http://www.ieee.org/publications_standards/publications/authors/author_templates.html &nbsp; 在里面选择windows版本的</p>\r\n<p>下载后是一个IEEETran的文件夹。里面有一个readme 说明了文件清单:</p>\r\n<p><pre code_snippet_id=\"467481\" snippet_file_name=\"blog_20140912_1_5242634\"  name=\"code\" class=\"html\">README                 - This file.\n\nIEEEtran.cls           - The IEEEtran LaTeX class file.\n\nchangelog.txt          - The revision history.\n\nIEEEtran_HOWTO.pdf     - The IEEEtran LaTeX class user manual.\n\nbare_conf.tex          - A bare bones starter file for conference papers.\n\nbare_jrnl.tex          - A bare bones starter file for journal papers.\n\nbare_jrnl_compsoc.tex  - A bare bones starter file for Computer Society\n                         journal papers.\n\nbare_jrnl_transmag.tex - A bare bones starter file for IEEE Transactions\n                         on Magnetics journal papers.\n\nbare_adv.tex           - A bare bones starter file showing advanced\n                         techniques such as conditional compilation,\n                         hyperlinks, PDF thumbnails, etc. The illustrated\n                         format is for a Computer Society journal paper.</pre></p>\r\n<p><br>\r\n</p>\r\n我们需要的是自然科学， &nbsp;bare_jrnl_compsoc.tex 这个 ，其余的tex结尾的是另外的模板。\r\n<p>双击这个tex，就会打开在winedit里面。 最好先另存为:UTF-8 版本</p>\r\n<p>然后“垃圾桶”和&quot;B&quot;这个之间的按钮，选择xeLatex 然后再点击他一次，就会自动编译。 然后在同级目录查看生成的PDF文档，就是这个IEEE_cs_Latex的效果。</p>\r\n<p>也可以找那个“放大镜”的按钮，直接打开。</p>\r\n<p>4. 就是中文的问题。之前那个ctex套装最好下载FULL版本，避免不必要的下载麻烦</p>\r\n<p>在刚才那个winedit页面查找 begin{document} 在他上面加入usepackage{xecjk} setCJKmainfont等。 如下</p>\r\n<p><pre code_snippet_id=\"467481\" snippet_file_name=\"blog_20140912_2_2831873\"  name=\"code\" class=\"html\">\\usepackage{xeCJK}\n\\setCJKmainfont{SimSun}\n\\begin{document}</pre><br>\r\n具体其他效果 请百度<span style=\"color:rgb(106,168,79); font-family:simsun; font-size:14px; line-height:21px; background-color:rgb(226,226,226)\">xeCJK</span></p>\r\n<p><span style=\"font-family:simsun; color:#6aa84f\"><span style=\"font-size:14px; line-height:21px\">5. 还有更简单的中文配置，那就是直接把<span style=\"color:rgb(68,68,68); font-family:simsun; font-size:14px; line-height:22px; background-color:rgb(226,226,226)\">\\documentclass{article}改成<span style=\"color:rgb(68,68,68); font-family:simsun; font-size:14px; line-height:22px; background-color:rgb(226,226,226)\">\\documentclass{ctexart}</span></span></span></span></p>\r\n<p><span style=\"font-family:simsun\"><span style=\"font-size:14px\"><span style=\"font-family:simsun; font-size:14px; background-color:rgb(226,226,226)\"></span><span style=\"color:#444444\"><span style=\"line-height:22px\">但是在这里本来就是用的IEEE的模板<span style=\"color:rgb(68,68,68); font-family:simsun; font-size:14px; line-height:22px; background-color:rgb(226,226,226)\">\\documentclass{IEEEStran}</span><br>\r\n</span></span></span></span>所以只能用4的方法</p>\r\n',1,'',0,0,'2015-02-02 00:47:03','2015-02-02 00:47:03','2015-02-02 00:47:03'),(51,1,9,'Opengl 导入3Dmax制作的.3ds模型 并显示出来','18490b6b56de804956d26c1ad5ecf5cc',0,'\r\n\r\n<p>由于opengl并没有原始支持这种模型，所以导入是件麻烦事，但是又有很多的模型是这个&#26684;式的，这次在做图形学大作业的时候，特别想用到。</','\r\n\r\n<p>由于opengl并没有原始支持这种模型，所以导入是件麻烦事，但是又有很多的模型是这个&#26684;式的，这次在做图形学大作业的时候，特别想用到。</p>\r\n<p>开始以为很简单，就几十行代码就能解决，但是翻了好多列子，都从解析文件&#26684;式，到分离顶点，纹理&#26684;式等等，非常复杂的工作，最后才能显示模型。</p>\r\n<p>因此我把网上的列子总结成了2个文件，一个头文件和一个CPP文件，文件在最后面贴出来</p>\r\n<p>叫做CLoad3DS.cpp &nbsp;&nbsp;CLoad3DS.h</p>\r\n<p>下面用nehe最简单的一个列子来展现如何导入，非常的简单 不需要管这个两个文件里面具体复杂的操作是啥，直接当成库吧。</p>\r\n<p>这个模型导入进去 我把模型的包围盒的代码踢出掉了，只能显示出来看，不能某个部分运动等更具体的操作。</p>\r\n<p>先看效果吧</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141211221129343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>1. 首先建一个win32程序</p>\r\n<p>这里直接拿nehe的第6课 &nbsp;就是那个立方体贴图的列子</p>\r\n<p>lesson6.cpp</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_1_4767781\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_1_4767781\" name=\"code\" class=\"cpp\">/*\n *		This Code Was Created By Jeff Molofee 2000\n *		A HUGE Thanks To Fredric Echols For Cleaning Up\n *		And Optimizing The Base Code, Making It More Flexible!\n *		If You&#39;ve Found This Code Useful, Please Let Me Know.\n *		Visit My Site At nehe.gamedev.net\n */\n\n#include &lt;windows.h&gt;		// Header File For Windows\n#include &lt;stdio.h&gt;			// Header File For Standard Input/Output\n#include &lt;gl\\gl.h&gt;			// Header File For The OpenGL32 Library\n#include &lt;gl\\glu.h&gt;			// Header File For The GLu32 Library\n#include &lt;gl\\glaux.h&gt;		// Header File For The Glaux Library\n#include &quot;CLoad3DS.h&quot;\nHDC			hDC=NULL;		// Private GDI Device Context\nHGLRC		hRC=NULL;		// Permanent Rendering Context\nHWND		hWnd=NULL;		// Holds Our Window Handle\nHINSTANCE	hInstance;		// Holds The Instance Of The Application\n\nbool	keys[256];			// Array Used For The Keyboard Routine\nbool	active=TRUE;		// Window Active Flag Set To TRUE By Default\nbool	fullscreen=TRUE;	// Fullscreen Flag Set To Fullscreen Mode By Default\n\nGLfloat	xrot;				// X Rotation ( NEW )\nGLfloat	yrot;				// Y Rotation ( NEW )\nGLfloat	zrot;				// Z Rotation ( NEW )\n\nGLuint	texture[1];			// Storage For One Texture ( NEW )\n\nCLoad3DS *gothicLoader=new(CLoad3DS);\nt3DModel gothicModel;\n//BoundingBox gothicBoundingBox;\nfloat gothicTrans[10] = { \n	0, 0 , -30 ,     //表示在世界矩阵的位置\n		0.2 , 0.2 , 0.2 ,      //表示xyz放大倍数\n		0 , 0 , 0 , 0  //表示旋转\n};\n\nLRESULT	CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);	// Declaration For WndProc\n\nAUX_RGBImageRec *LoadBMP(char *Filename)				// Loads A Bitmap Image\n{\n	FILE *File=NULL;									// File Handle\n\n	if (!Filename)										// Make Sure A Filename Was Given\n	{\n		return NULL;									// If Not Return NULL\n	}\n\n	File=fopen(Filename,&quot;r&quot;);							// Check To See If The File Exists\n\n	if (File)											// Does The File Exist?\n	{\n		fclose(File);									// Close The Handle\n		return auxDIBImageLoad(Filename);				// Load The Bitmap And Return A Pointer\n	}\n\n	return NULL;										// If Load Failed Return NULL\n}\n\nint LoadGLTextures()									// Load Bitmaps And Convert To Textures\n{\n	int Status=FALSE;									// Status Indicator\n\n	AUX_RGBImageRec *TextureImage[1];					// Create Storage Space For The Texture\n\n	memset(TextureImage,0,sizeof(void *)*1);           	// Set The Pointer To NULL\n\n	// Load The Bitmap, Check For Errors, If Bitmap&#39;s Not Found Quit\n	if (TextureImage[0]=LoadBMP(&quot;Data/NeHe.bmp&quot;))\n	{\n		Status=TRUE;									// Set The Status To TRUE\n\n		glGenTextures(1, &amp;texture[0]);					// Create The Texture\n\n		// Typical Texture Generation Using Data From The Bitmap\n		glBindTexture(GL_TEXTURE_2D, texture[0]);\n		glTexImage2D(GL_TEXTURE_2D, 0, 3, TextureImage[0]-&gt;sizeX, TextureImage[0]-&gt;sizeY, 0, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[0]-&gt;data);\n		glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR);\n		glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);\n	}\n\n	if (TextureImage[0])									// If Texture Exists\n	{\n		if (TextureImage[0]-&gt;data)							// If Texture Image Exists\n		{\n			free(TextureImage[0]-&gt;data);					// Free The Texture Image Memory\n		}\n\n		free(TextureImage[0]);								// Free The Image Structure\n	}\n\n	return Status;										// Return The Status\n}\n\nGLvoid ReSizeGLScene(GLsizei width, GLsizei height)		// Resize And Initialize The GL Window\n{\n	if (height==0)										// Prevent A Divide By Zero By\n	{\n		height=1;										// Making Height Equal One\n	}\n\n	glViewport(0,0,width,height);						// Reset The Current Viewport\n\n	glMatrixMode(GL_PROJECTION);						// Select The Projection Matrix\n	glLoadIdentity();									// Reset The Projection Matrix\n\n	// Calculate The Aspect Ratio Of The Window\n	gluPerspective(45.0f,(GLfloat)width/(GLfloat)height,0.1f,100.0f);\n\n	glMatrixMode(GL_MODELVIEW);							// Select The Modelview Matrix\n	glLoadIdentity();									// Reset The Modelview Matrix\n}\n\nint InitGL(GLvoid)										// All Setup For OpenGL Goes Here\n{\n	if (!LoadGLTextures())								// Jump To Texture Loading Routine ( NEW )\n	{\n		return FALSE;									// If Texture Didn&#39;t Load Return FALSE\n	}\n\n	glEnable(GL_TEXTURE_2D);							// Enable Texture Mapping ( NEW )\n	glShadeModel(GL_SMOOTH);							// Enable Smooth Shading\n	glClearColor(0.0f, 0.0f, 0.0f, 0.5f);				// Black Background\n	glClearDepth(1.0f);									// Depth Buffer Setup\n	glEnable(GL_DEPTH_TEST);							// Enables Depth Testing\n	glDepthFunc(GL_LEQUAL);								// The Type Of Depth Testing To Do\n	glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);	// Really Nice Perspective Calculations\n	\n	//导入模型 模型的文件夹尽量这样设置 \n	//然后模型贴图 装在Data/pic里面  一定要跟前面截图的文件夹名字一样，想改得去CLoad3DS文件里面改\n	gothicLoader-&gt;Import3DS(&amp;gothicModel, &quot;Data/3ds/GUTEMB_L.3DS&quot;); \n	\n	return TRUE;										// Initialization Went OK\n}\n\nint DrawGLScene(GLvoid)									// Here&#39;s Where We Do All The Drawing\n{\n	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	// Clear The Screen And The Depth Buffer\n	glLoadIdentity();									// Reset The View\n	changeObject( gothicTrans );\n	drawModel(gothicModel,true,false);\n	glFlush ();	\n	return TRUE;										// Keep Going\n}\n\nGLvoid KillGLWindow(GLvoid)								// Properly Kill The Window\n{\n	if (fullscreen)										// Are We In Fullscreen Mode?\n	{\n		ChangeDisplaySettings(NULL,0);					// If So Switch Back To The Desktop\n		ShowCursor(TRUE);								// Show Mouse Pointer\n	}\n\n	if (hRC)											// Do We Have A Rendering Context?\n	{\n		if (!wglMakeCurrent(NULL,NULL))					// Are We Able To Release The DC And RC Contexts?\n		{\n			MessageBox(NULL,&quot;Release Of DC And RC Failed.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		}\n\n		if (!wglDeleteContext(hRC))						// Are We Able To Delete The RC?\n		{\n			MessageBox(NULL,&quot;Release Rendering Context Failed.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		}\n		hRC=NULL;										// Set RC To NULL\n	}\n\n	if (hDC &amp;&amp; !ReleaseDC(hWnd,hDC))					// Are We Able To Release The DC\n	{\n		MessageBox(NULL,&quot;Release Device Context Failed.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		hDC=NULL;										// Set DC To NULL\n	}\n\n	if (hWnd &amp;&amp; !DestroyWindow(hWnd))					// Are We Able To Destroy The Window?\n	{\n		MessageBox(NULL,&quot;Could Not Release hWnd.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		hWnd=NULL;										// Set hWnd To NULL\n	}\n\n	if (!UnregisterClass(&quot;OpenGL&quot;,hInstance))			// Are We Able To Unregister Class\n	{\n		MessageBox(NULL,&quot;Could Not Unregister Class.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		hInstance=NULL;									// Set hInstance To NULL\n	}\n}\n\n/*	This Code Creates Our OpenGL Window.  Parameters Are:					*\n *	title			- Title To Appear At The Top Of The Window				*\n *	width			- Width Of The GL Window Or Fullscreen Mode				*\n *	height			- Height Of The GL Window Or Fullscreen Mode			*\n *	bits			- Number Of Bits To Use For Color (8/16/24/32)			*\n *	fullscreenflag	- Use Fullscreen Mode (TRUE) Or Windowed Mode (FALSE)	*/\n \nBOOL CreateGLWindow(char* title, int width, int height, int bits, bool fullscreenflag)\n{\n	GLuint		PixelFormat;			// Holds The Results After Searching For A Match\n	WNDCLASS	wc;						// Windows Class Structure\n	DWORD		dwExStyle;				// Window Extended Style\n	DWORD		dwStyle;				// Window Style\n	RECT		WindowRect;				// Grabs Rectangle Upper Left / Lower Right Values\n	WindowRect.left=(long)0;			// Set Left Value To 0\n	WindowRect.right=(long)width;		// Set Right Value To Requested Width\n	WindowRect.top=(long)0;				// Set Top Value To 0\n	WindowRect.bottom=(long)height;		// Set Bottom Value To Requested Height\n\n	fullscreen=fullscreenflag;			// Set The Global Fullscreen Flag\n\n	hInstance			= GetModuleHandle(NULL);				// Grab An Instance For Our Window\n	wc.style			= CS_HREDRAW | CS_VREDRAW | CS_OWNDC;	// Redraw On Size, And Own DC For Window.\n	wc.lpfnWndProc		= (WNDPROC) WndProc;					// WndProc Handles Messages\n	wc.cbClsExtra		= 0;									// No Extra Window Data\n	wc.cbWndExtra		= 0;									// No Extra Window Data\n	wc.hInstance		= hInstance;							// Set The Instance\n	wc.hIcon			= LoadIcon(NULL, IDI_WINLOGO);			// Load The Default Icon\n	wc.hCursor			= LoadCursor(NULL, IDC_ARROW);			// Load The Arrow Pointer\n	wc.hbrBackground	= NULL;									// No Background Required For GL\n	wc.lpszMenuName		= NULL;									// We Don&#39;t Want A Menu\n	wc.lpszClassName	= &quot;OpenGL&quot;;								// Set The Class Name\n\n	if (!RegisterClass(&amp;wc))									// Attempt To Register The Window Class\n	{\n		MessageBox(NULL,&quot;Failed To Register The Window Class.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;											// Return FALSE\n	}\n	\n	if (fullscreen)												// Attempt Fullscreen Mode?\n	{\n		DEVMODE dmScreenSettings;								// Device Mode\n		memset(&amp;dmScreenSettings,0,sizeof(dmScreenSettings));	// Makes Sure Memory&#39;s Cleared\n		dmScreenSettings.dmSize=sizeof(dmScreenSettings);		// Size Of The Devmode Structure\n		dmScreenSettings.dmPelsWidth	= width;				// Selected Screen Width\n		dmScreenSettings.dmPelsHeight	= height;				// Selected Screen Height\n		dmScreenSettings.dmBitsPerPel	= bits;					// Selected Bits Per Pixel\n		dmScreenSettings.dmFields=DM_BITSPERPEL|DM_PELSWIDTH|DM_PELSHEIGHT;\n\n		// Try To Set Selected Mode And Get Results.  NOTE: CDS_FULLSCREEN Gets Rid Of Start Bar.\n		if (ChangeDisplaySettings(&amp;dmScreenSettings,CDS_FULLSCREEN)!=DISP_CHANGE_SUCCESSFUL)\n		{\n			// If The Mode Fails, Offer Two Options.  Quit Or Use Windowed Mode.\n			if (MessageBox(NULL,&quot;The Requested Fullscreen Mode Is Not Supported By\\nYour Video Card. Use Windowed Mode Instead?&quot;,&quot;NeHe GL&quot;,MB_YESNO|MB_ICONEXCLAMATION)==IDYES)\n			{\n				fullscreen=FALSE;		// Windowed Mode Selected.  Fullscreen = FALSE\n			}\n			else\n			{\n				// Pop Up A Message Box Letting User Know The Program Is Closing.\n				MessageBox(NULL,&quot;Program Will Now Close.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONSTOP);\n				return FALSE;									// Return FALSE\n			}\n		}\n	}\n\n	if (fullscreen)												// Are We Still In Fullscreen Mode?\n	{\n		dwExStyle=WS_EX_APPWINDOW;								// Window Extended Style\n		dwStyle=WS_POPUP;										// Windows Style\n		ShowCursor(FALSE);										// Hide Mouse Pointer\n	}\n	else\n	{\n		dwExStyle=WS_EX_APPWINDOW | WS_EX_WINDOWEDGE;			// Window Extended Style\n		dwStyle=WS_OVERLAPPEDWINDOW;							// Windows Style\n	}\n\n	AdjustWindowRectEx(&amp;WindowRect, dwStyle, FALSE, dwExStyle);		// Adjust Window To True Requested Size\n\n	// Create The Window\n	if (!(hWnd=CreateWindowEx(	dwExStyle,							// Extended Style For The Window\n								&quot;OpenGL&quot;,							// Class Name\n								title,								// Window Title\n								dwStyle |							// Defined Window Style\n								WS_CLIPSIBLINGS |					// Required Window Style\n								WS_CLIPCHILDREN,					// Required Window Style\n								0, 0,								// Window Position\n								WindowRect.right-WindowRect.left,	// Calculate Window Width\n								WindowRect.bottom-WindowRect.top,	// Calculate Window Height\n								NULL,								// No Parent Window\n								NULL,								// No Menu\n								hInstance,							// Instance\n								NULL)))								// Dont Pass Anything To WM_CREATE\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Window Creation Error.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	static	PIXELFORMATDESCRIPTOR pfd=				// pfd Tells Windows How We Want Things To Be\n	{\n		sizeof(PIXELFORMATDESCRIPTOR),				// Size Of This Pixel Format Descriptor\n		1,											// Version Number\n		PFD_DRAW_TO_WINDOW |						// Format Must Support Window\n		PFD_SUPPORT_OPENGL |						// Format Must Support OpenGL\n		PFD_DOUBLEBUFFER,							// Must Support Double Buffering\n		PFD_TYPE_RGBA,								// Request An RGBA Format\n		bits,										// Select Our Color Depth\n		0, 0, 0, 0, 0, 0,							// Color Bits Ignored\n		0,											// No Alpha Buffer\n		0,											// Shift Bit Ignored\n		0,											// No Accumulation Buffer\n		0, 0, 0, 0,									// Accumulation Bits Ignored\n		16,											// 16Bit Z-Buffer (Depth Buffer)  \n		0,											// No Stencil Buffer\n		0,											// No Auxiliary Buffer\n		PFD_MAIN_PLANE,								// Main Drawing Layer\n		0,											// Reserved\n		0, 0, 0										// Layer Masks Ignored\n	};\n	\n	if (!(hDC=GetDC(hWnd)))							// Did We Get A Device Context?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Create A GL Device Context.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if (!(PixelFormat=ChoosePixelFormat(hDC,&amp;pfd)))	// Did Windows Find A Matching Pixel Format?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Find A Suitable PixelFormat.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if(!SetPixelFormat(hDC,PixelFormat,&amp;pfd))		// Are We Able To Set The Pixel Format?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Set The PixelFormat.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if (!(hRC=wglCreateContext(hDC)))				// Are We Able To Get A Rendering Context?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Create A GL Rendering Context.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if(!wglMakeCurrent(hDC,hRC))					// Try To Activate The Rendering Context\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Activate The GL Rendering Context.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	ShowWindow(hWnd,SW_SHOW);						// Show The Window\n	SetForegroundWindow(hWnd);						// Slightly Higher Priority\n	SetFocus(hWnd);									// Sets Keyboard Focus To The Window\n	ReSizeGLScene(width, height);					// Set Up Our Perspective GL Screen\n\n	if (!InitGL())									// Initialize Our Newly Created GL Window\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Initialization Failed.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	return TRUE;									// Success\n}\n\nLRESULT CALLBACK WndProc(	HWND	hWnd,			// Handle For This Window\n							UINT	uMsg,			// Message For This Window\n							WPARAM	wParam,			// Additional Message Information\n							LPARAM	lParam)			// Additional Message Information\n{\n	switch (uMsg)									// Check For Windows Messages\n	{\n		case WM_ACTIVATE:							// Watch For Window Activate Message\n		{\n			if (!HIWORD(wParam))					// Check Minimization State\n			{\n				active=TRUE;						// Program Is Active\n			}\n			else\n			{\n				active=FALSE;						// Program Is No Longer Active\n			}\n\n			return 0;								// Return To The Message Loop\n		}\n\n		case WM_SYSCOMMAND:							// Intercept System Commands\n		{\n			switch (wParam)							// Check System Calls\n			{\n				case SC_SCREENSAVE:					// Screensaver Trying To Start?\n				case SC_MONITORPOWER:				// Monitor Trying To Enter Powersave?\n				return 0;							// Prevent From Happening\n			}\n			break;									// Exit\n		}\n\n		case WM_CLOSE:								// Did We Receive A Close Message?\n		{\n			PostQuitMessage(0);						// Send A Quit Message\n			return 0;								// Jump Back\n		}\n\n		case WM_KEYDOWN:							// Is A Key Being Held Down?\n		{\n			keys[wParam] = TRUE;					// If So, Mark It As TRUE\n			return 0;								// Jump Back\n		}\n\n		case WM_KEYUP:								// Has A Key Been Released?\n		{\n			keys[wParam] = FALSE;					// If So, Mark It As FALSE\n			return 0;								// Jump Back\n		}\n\n		case WM_SIZE:								// Resize The OpenGL Window\n		{\n			ReSizeGLScene(LOWORD(lParam),HIWORD(lParam));  // LoWord=Width, HiWord=Height\n			return 0;								// Jump Back\n		}\n	}\n\n	// Pass All Unhandled Messages To DefWindowProc\n	return DefWindowProc(hWnd,uMsg,wParam,lParam);\n}\n\nint WINAPI WinMain(	HINSTANCE	hInstance,			// Instance\n					HINSTANCE	hPrevInstance,		// Previous Instance\n					LPSTR		lpCmdLine,			// Command Line Parameters\n					int			nCmdShow)			// Window Show State\n{\n	MSG		msg;									// Windows Message Structure\n	BOOL	done=FALSE;								// Bool Variable To Exit Loop\n\n	// Ask The User Which Screen Mode They Prefer\n	if (MessageBox(NULL,&quot;Would You Like To Run In Fullscreen Mode?&quot;, &quot;Start FullScreen?&quot;,MB_YESNO|MB_ICONQUESTION)==IDNO)\n	{\n		fullscreen=FALSE;							// Windowed Mode\n	}\n\n	// Create Our OpenGL Window\n	if (!CreateGLWindow(&quot;NeHe&#39;s Texture Mapping Tutorial&quot;,640,480,16,fullscreen))\n	{\n		return 0;									// Quit If Window Was Not Created\n	}\n\n	while(!done)									// Loop That Runs While done=FALSE\n	{\n		if (PeekMessage(&amp;msg,NULL,0,0,PM_REMOVE))	// Is There A Message Waiting?\n		{\n			if (msg.message==WM_QUIT)				// Have We Received A Quit Message?\n			{\n				done=TRUE;							// If So done=TRUE\n			}\n			else									// If Not, Deal With Window Messages\n			{\n				TranslateMessage(&amp;msg);				// Translate The Message\n				DispatchMessage(&amp;msg);				// Dispatch The Message\n			}\n		}\n		else										// If There Are No Messages\n		{\n			// Draw The Scene.  Watch For ESC Key And Quit Messages From DrawGLScene()\n			if ((active &amp;&amp; !DrawGLScene()) || keys[VK_ESCAPE])	// Active?  Was There A Quit Received?\n			{\n				done=TRUE;							// ESC or DrawGLScene Signalled A Quit\n			}\n			else									// Not Time To Quit, Update Screen\n			{\n				SwapBuffers(hDC);					// Swap Buffers (Double Buffering)\n			}\n\n			if (keys[VK_F1])						// Is F1 Being Pressed?\n			{\n				keys[VK_F1]=FALSE;					// If So Make Key FALSE\n				KillGLWindow();						// Kill Our Current Window\n				fullscreen=!fullscreen;				// Toggle Fullscreen / Windowed Mode\n				// Recreate Our OpenGL Window\n				if (!CreateGLWindow(&quot;NeHe&#39;s Texture Mapping Tutorial&quot;,640,480,16,fullscreen))\n				{\n					return 0;						// Quit If Window Was Not Created\n				}\n			}\n		}\n	}\n\n	// Shutdown\n	KillGLWindow();									// Kill The Window\n	return (msg.wParam);							// Exit The Program\n}\n</pre><br>\r\n上图就是主要的逻辑代码，我已经改成了显示3ds模型的代码了。 &nbsp;下面我指出改的地方都有哪\r\n<p></p>\r\n<p>首先是文件目录。&nbsp;</p>\r\n<p>3D模型一定要放在Data/3ds文件夹里面</p>\r\n<p>3D模型贴图一定要放在Data/pic文件夹里面 如下图：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141211221421235?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141211221449562?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>这是VC工程，VS是一样的，直接用nehe那个工程导入CLoad3DS 并且建立那3ds和pic两个文件夹即可， 最后讲给出全部源代码和一些网上的模型</p>\r\n<p>下面是主要对nehe添加3D模型支持的代码</p>\r\n<p>首先加上头文件</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_2_4625294\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_2_4625294\" name=\"code\" class=\"html\">#include &quot;CLoad3DS.h&quot;</pre><br>\r\n然后在定义全局变量的地方，也就是 定义完头文件紧接着就写如下 3D模型的定义\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_3_47134\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_3_47134\" name=\"code\" class=\"html\">CLoad3DS *gothicLoader=new(CLoad3DS);\nt3DModel gothicModel;\n\nfloat gothicTrans[10] = { \n	0, 0 , -30 ,     //表示在世界矩阵的位置\n		0.2 , 0.2 , 0.2 ,      //表示xyz放大倍数\n		0 , 0 , 0 , 0  //表示旋转\n};</pre><br>\r\n上面代码很简单，就是加载了CLoad3DS类， &nbsp;t3DModel类，然后定义了一个参数数组，中文说明。\r\n<p></p>\r\n<p>定义好了后就要初始化了。&nbsp;</p>\r\n<p>在InitGL 也就是opengl初始化那个函数里面 初始化，就一句话。</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_4_5161137\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_4_5161137\" name=\"code\" class=\"html\">//导入模型 模型的文件夹尽量这样设置 \n	//然后模型贴图 装在Data/pic里面  一定要跟前面截图的文件夹名字一样，想改得去CLoad3DS文件里面改\n	gothicLoader-&gt;Import3DS(&amp;gothicModel, &quot;Data/3ds/GUTEMB_L.3DS&quot;); </pre><br>\r\n初始化直接就填你想要那个模型的XXX.3DS即可，纹理不用管，放在pic文件夹里面，他自动从模型信息里面找出纹理的对应文件名\r\n<p></p>\r\n<p>最后就是运行了，在绘制函数里面用changeObject 导入之前设置好的参数，再用drawModel函数(在CLoad3DS定义好了的全局函数) 绘制。即可</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_5_766291\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_5_766291\" name=\"code\" class=\"html\">int DrawGLScene(GLvoid)									// Here&#39;s Where We Do All The Drawing\n{\n	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	// Clear The Screen And The Depth Buffer\n	glLoadIdentity();									// Reset The View\n	glPushMatrix();\n	changeObject( gothicTrans );\n	drawModel(gothicModel,true,false);\n	glPopMatrix();\n	glFlush ();	\n	return TRUE;										// Keep Going\n}</pre><br>\r\n完成，很简单吧， 就是添加2个文件，然后三两行代码即可实现模型导入。\r\n<p></p>\r\n<p>下面是整个工程文件。</p>\r\n<p><br>\r\n</p>\r\n<p><a target=\"_blank\" target=\"_blank\" href=\"http://download.csdn.net/detail/cq361106306/8250029\">点我下载</a></p>\r\n','\r\n\r\n<p>由于opengl并没有原始支持这种模型，所以导入是件麻烦事，但是又有很多的模型是这个&#26684;式的，这次在做图形学大作业的时候，特别想用到。</p>\r\n<p>开始以为很简单，就几十行代码就能解决，但是翻了好多列子，都从解析文件&#26684;式，到分离顶点，纹理&#26684;式等等，非常复杂的工作，最后才能显示模型。</p>\r\n<p>因此我把网上的列子总结成了2个文件，一个头文件和一个CPP文件，文件在最后面贴出来</p>\r\n<p>叫做CLoad3DS.cpp &nbsp;&nbsp;CLoad3DS.h</p>\r\n<p>下面用nehe最简单的一个列子来展现如何导入，非常的简单 不需要管这个两个文件里面具体复杂的操作是啥，直接当成库吧。</p>\r\n<p>这个模型导入进去 我把模型的包围盒的代码踢出掉了，只能显示出来看，不能某个部分运动等更具体的操作。</p>\r\n<p>先看效果吧</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141211221129343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>1. 首先建一个win32程序</p>\r\n<p>这里直接拿nehe的第6课 &nbsp;就是那个立方体贴图的列子</p>\r\n<p>lesson6.cpp</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_1_4767781\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_1_4767781\" name=\"code\" class=\"cpp\">/*\n *		This Code Was Created By Jeff Molofee 2000\n *		A HUGE Thanks To Fredric Echols For Cleaning Up\n *		And Optimizing The Base Code, Making It More Flexible!\n *		If You&#39;ve Found This Code Useful, Please Let Me Know.\n *		Visit My Site At nehe.gamedev.net\n */\n\n#include &lt;windows.h&gt;		// Header File For Windows\n#include &lt;stdio.h&gt;			// Header File For Standard Input/Output\n#include &lt;gl\\gl.h&gt;			// Header File For The OpenGL32 Library\n#include &lt;gl\\glu.h&gt;			// Header File For The GLu32 Library\n#include &lt;gl\\glaux.h&gt;		// Header File For The Glaux Library\n#include &quot;CLoad3DS.h&quot;\nHDC			hDC=NULL;		// Private GDI Device Context\nHGLRC		hRC=NULL;		// Permanent Rendering Context\nHWND		hWnd=NULL;		// Holds Our Window Handle\nHINSTANCE	hInstance;		// Holds The Instance Of The Application\n\nbool	keys[256];			// Array Used For The Keyboard Routine\nbool	active=TRUE;		// Window Active Flag Set To TRUE By Default\nbool	fullscreen=TRUE;	// Fullscreen Flag Set To Fullscreen Mode By Default\n\nGLfloat	xrot;				// X Rotation ( NEW )\nGLfloat	yrot;				// Y Rotation ( NEW )\nGLfloat	zrot;				// Z Rotation ( NEW )\n\nGLuint	texture[1];			// Storage For One Texture ( NEW )\n\nCLoad3DS *gothicLoader=new(CLoad3DS);\nt3DModel gothicModel;\n//BoundingBox gothicBoundingBox;\nfloat gothicTrans[10] = { \n	0, 0 , -30 ,     //表示在世界矩阵的位置\n		0.2 , 0.2 , 0.2 ,      //表示xyz放大倍数\n		0 , 0 , 0 , 0  //表示旋转\n};\n\nLRESULT	CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);	// Declaration For WndProc\n\nAUX_RGBImageRec *LoadBMP(char *Filename)				// Loads A Bitmap Image\n{\n	FILE *File=NULL;									// File Handle\n\n	if (!Filename)										// Make Sure A Filename Was Given\n	{\n		return NULL;									// If Not Return NULL\n	}\n\n	File=fopen(Filename,&quot;r&quot;);							// Check To See If The File Exists\n\n	if (File)											// Does The File Exist?\n	{\n		fclose(File);									// Close The Handle\n		return auxDIBImageLoad(Filename);				// Load The Bitmap And Return A Pointer\n	}\n\n	return NULL;										// If Load Failed Return NULL\n}\n\nint LoadGLTextures()									// Load Bitmaps And Convert To Textures\n{\n	int Status=FALSE;									// Status Indicator\n\n	AUX_RGBImageRec *TextureImage[1];					// Create Storage Space For The Texture\n\n	memset(TextureImage,0,sizeof(void *)*1);           	// Set The Pointer To NULL\n\n	// Load The Bitmap, Check For Errors, If Bitmap&#39;s Not Found Quit\n	if (TextureImage[0]=LoadBMP(&quot;Data/NeHe.bmp&quot;))\n	{\n		Status=TRUE;									// Set The Status To TRUE\n\n		glGenTextures(1, &amp;texture[0]);					// Create The Texture\n\n		// Typical Texture Generation Using Data From The Bitmap\n		glBindTexture(GL_TEXTURE_2D, texture[0]);\n		glTexImage2D(GL_TEXTURE_2D, 0, 3, TextureImage[0]-&gt;sizeX, TextureImage[0]-&gt;sizeY, 0, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[0]-&gt;data);\n		glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR);\n		glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);\n	}\n\n	if (TextureImage[0])									// If Texture Exists\n	{\n		if (TextureImage[0]-&gt;data)							// If Texture Image Exists\n		{\n			free(TextureImage[0]-&gt;data);					// Free The Texture Image Memory\n		}\n\n		free(TextureImage[0]);								// Free The Image Structure\n	}\n\n	return Status;										// Return The Status\n}\n\nGLvoid ReSizeGLScene(GLsizei width, GLsizei height)		// Resize And Initialize The GL Window\n{\n	if (height==0)										// Prevent A Divide By Zero By\n	{\n		height=1;										// Making Height Equal One\n	}\n\n	glViewport(0,0,width,height);						// Reset The Current Viewport\n\n	glMatrixMode(GL_PROJECTION);						// Select The Projection Matrix\n	glLoadIdentity();									// Reset The Projection Matrix\n\n	// Calculate The Aspect Ratio Of The Window\n	gluPerspective(45.0f,(GLfloat)width/(GLfloat)height,0.1f,100.0f);\n\n	glMatrixMode(GL_MODELVIEW);							// Select The Modelview Matrix\n	glLoadIdentity();									// Reset The Modelview Matrix\n}\n\nint InitGL(GLvoid)										// All Setup For OpenGL Goes Here\n{\n	if (!LoadGLTextures())								// Jump To Texture Loading Routine ( NEW )\n	{\n		return FALSE;									// If Texture Didn&#39;t Load Return FALSE\n	}\n\n	glEnable(GL_TEXTURE_2D);							// Enable Texture Mapping ( NEW )\n	glShadeModel(GL_SMOOTH);							// Enable Smooth Shading\n	glClearColor(0.0f, 0.0f, 0.0f, 0.5f);				// Black Background\n	glClearDepth(1.0f);									// Depth Buffer Setup\n	glEnable(GL_DEPTH_TEST);							// Enables Depth Testing\n	glDepthFunc(GL_LEQUAL);								// The Type Of Depth Testing To Do\n	glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);	// Really Nice Perspective Calculations\n	\n	//导入模型 模型的文件夹尽量这样设置 \n	//然后模型贴图 装在Data/pic里面  一定要跟前面截图的文件夹名字一样，想改得去CLoad3DS文件里面改\n	gothicLoader-&gt;Import3DS(&amp;gothicModel, &quot;Data/3ds/GUTEMB_L.3DS&quot;); \n	\n	return TRUE;										// Initialization Went OK\n}\n\nint DrawGLScene(GLvoid)									// Here&#39;s Where We Do All The Drawing\n{\n	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	// Clear The Screen And The Depth Buffer\n	glLoadIdentity();									// Reset The View\n	changeObject( gothicTrans );\n	drawModel(gothicModel,true,false);\n	glFlush ();	\n	return TRUE;										// Keep Going\n}\n\nGLvoid KillGLWindow(GLvoid)								// Properly Kill The Window\n{\n	if (fullscreen)										// Are We In Fullscreen Mode?\n	{\n		ChangeDisplaySettings(NULL,0);					// If So Switch Back To The Desktop\n		ShowCursor(TRUE);								// Show Mouse Pointer\n	}\n\n	if (hRC)											// Do We Have A Rendering Context?\n	{\n		if (!wglMakeCurrent(NULL,NULL))					// Are We Able To Release The DC And RC Contexts?\n		{\n			MessageBox(NULL,&quot;Release Of DC And RC Failed.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		}\n\n		if (!wglDeleteContext(hRC))						// Are We Able To Delete The RC?\n		{\n			MessageBox(NULL,&quot;Release Rendering Context Failed.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		}\n		hRC=NULL;										// Set RC To NULL\n	}\n\n	if (hDC &amp;&amp; !ReleaseDC(hWnd,hDC))					// Are We Able To Release The DC\n	{\n		MessageBox(NULL,&quot;Release Device Context Failed.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		hDC=NULL;										// Set DC To NULL\n	}\n\n	if (hWnd &amp;&amp; !DestroyWindow(hWnd))					// Are We Able To Destroy The Window?\n	{\n		MessageBox(NULL,&quot;Could Not Release hWnd.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		hWnd=NULL;										// Set hWnd To NULL\n	}\n\n	if (!UnregisterClass(&quot;OpenGL&quot;,hInstance))			// Are We Able To Unregister Class\n	{\n		MessageBox(NULL,&quot;Could Not Unregister Class.&quot;,&quot;SHUTDOWN ERROR&quot;,MB_OK | MB_ICONINFORMATION);\n		hInstance=NULL;									// Set hInstance To NULL\n	}\n}\n\n/*	This Code Creates Our OpenGL Window.  Parameters Are:					*\n *	title			- Title To Appear At The Top Of The Window				*\n *	width			- Width Of The GL Window Or Fullscreen Mode				*\n *	height			- Height Of The GL Window Or Fullscreen Mode			*\n *	bits			- Number Of Bits To Use For Color (8/16/24/32)			*\n *	fullscreenflag	- Use Fullscreen Mode (TRUE) Or Windowed Mode (FALSE)	*/\n \nBOOL CreateGLWindow(char* title, int width, int height, int bits, bool fullscreenflag)\n{\n	GLuint		PixelFormat;			// Holds The Results After Searching For A Match\n	WNDCLASS	wc;						// Windows Class Structure\n	DWORD		dwExStyle;				// Window Extended Style\n	DWORD		dwStyle;				// Window Style\n	RECT		WindowRect;				// Grabs Rectangle Upper Left / Lower Right Values\n	WindowRect.left=(long)0;			// Set Left Value To 0\n	WindowRect.right=(long)width;		// Set Right Value To Requested Width\n	WindowRect.top=(long)0;				// Set Top Value To 0\n	WindowRect.bottom=(long)height;		// Set Bottom Value To Requested Height\n\n	fullscreen=fullscreenflag;			// Set The Global Fullscreen Flag\n\n	hInstance			= GetModuleHandle(NULL);				// Grab An Instance For Our Window\n	wc.style			= CS_HREDRAW | CS_VREDRAW | CS_OWNDC;	// Redraw On Size, And Own DC For Window.\n	wc.lpfnWndProc		= (WNDPROC) WndProc;					// WndProc Handles Messages\n	wc.cbClsExtra		= 0;									// No Extra Window Data\n	wc.cbWndExtra		= 0;									// No Extra Window Data\n	wc.hInstance		= hInstance;							// Set The Instance\n	wc.hIcon			= LoadIcon(NULL, IDI_WINLOGO);			// Load The Default Icon\n	wc.hCursor			= LoadCursor(NULL, IDC_ARROW);			// Load The Arrow Pointer\n	wc.hbrBackground	= NULL;									// No Background Required For GL\n	wc.lpszMenuName		= NULL;									// We Don&#39;t Want A Menu\n	wc.lpszClassName	= &quot;OpenGL&quot;;								// Set The Class Name\n\n	if (!RegisterClass(&amp;wc))									// Attempt To Register The Window Class\n	{\n		MessageBox(NULL,&quot;Failed To Register The Window Class.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;											// Return FALSE\n	}\n	\n	if (fullscreen)												// Attempt Fullscreen Mode?\n	{\n		DEVMODE dmScreenSettings;								// Device Mode\n		memset(&amp;dmScreenSettings,0,sizeof(dmScreenSettings));	// Makes Sure Memory&#39;s Cleared\n		dmScreenSettings.dmSize=sizeof(dmScreenSettings);		// Size Of The Devmode Structure\n		dmScreenSettings.dmPelsWidth	= width;				// Selected Screen Width\n		dmScreenSettings.dmPelsHeight	= height;				// Selected Screen Height\n		dmScreenSettings.dmBitsPerPel	= bits;					// Selected Bits Per Pixel\n		dmScreenSettings.dmFields=DM_BITSPERPEL|DM_PELSWIDTH|DM_PELSHEIGHT;\n\n		// Try To Set Selected Mode And Get Results.  NOTE: CDS_FULLSCREEN Gets Rid Of Start Bar.\n		if (ChangeDisplaySettings(&amp;dmScreenSettings,CDS_FULLSCREEN)!=DISP_CHANGE_SUCCESSFUL)\n		{\n			// If The Mode Fails, Offer Two Options.  Quit Or Use Windowed Mode.\n			if (MessageBox(NULL,&quot;The Requested Fullscreen Mode Is Not Supported By\\nYour Video Card. Use Windowed Mode Instead?&quot;,&quot;NeHe GL&quot;,MB_YESNO|MB_ICONEXCLAMATION)==IDYES)\n			{\n				fullscreen=FALSE;		// Windowed Mode Selected.  Fullscreen = FALSE\n			}\n			else\n			{\n				// Pop Up A Message Box Letting User Know The Program Is Closing.\n				MessageBox(NULL,&quot;Program Will Now Close.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONSTOP);\n				return FALSE;									// Return FALSE\n			}\n		}\n	}\n\n	if (fullscreen)												// Are We Still In Fullscreen Mode?\n	{\n		dwExStyle=WS_EX_APPWINDOW;								// Window Extended Style\n		dwStyle=WS_POPUP;										// Windows Style\n		ShowCursor(FALSE);										// Hide Mouse Pointer\n	}\n	else\n	{\n		dwExStyle=WS_EX_APPWINDOW | WS_EX_WINDOWEDGE;			// Window Extended Style\n		dwStyle=WS_OVERLAPPEDWINDOW;							// Windows Style\n	}\n\n	AdjustWindowRectEx(&amp;WindowRect, dwStyle, FALSE, dwExStyle);		// Adjust Window To True Requested Size\n\n	// Create The Window\n	if (!(hWnd=CreateWindowEx(	dwExStyle,							// Extended Style For The Window\n								&quot;OpenGL&quot;,							// Class Name\n								title,								// Window Title\n								dwStyle |							// Defined Window Style\n								WS_CLIPSIBLINGS |					// Required Window Style\n								WS_CLIPCHILDREN,					// Required Window Style\n								0, 0,								// Window Position\n								WindowRect.right-WindowRect.left,	// Calculate Window Width\n								WindowRect.bottom-WindowRect.top,	// Calculate Window Height\n								NULL,								// No Parent Window\n								NULL,								// No Menu\n								hInstance,							// Instance\n								NULL)))								// Dont Pass Anything To WM_CREATE\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Window Creation Error.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	static	PIXELFORMATDESCRIPTOR pfd=				// pfd Tells Windows How We Want Things To Be\n	{\n		sizeof(PIXELFORMATDESCRIPTOR),				// Size Of This Pixel Format Descriptor\n		1,											// Version Number\n		PFD_DRAW_TO_WINDOW |						// Format Must Support Window\n		PFD_SUPPORT_OPENGL |						// Format Must Support OpenGL\n		PFD_DOUBLEBUFFER,							// Must Support Double Buffering\n		PFD_TYPE_RGBA,								// Request An RGBA Format\n		bits,										// Select Our Color Depth\n		0, 0, 0, 0, 0, 0,							// Color Bits Ignored\n		0,											// No Alpha Buffer\n		0,											// Shift Bit Ignored\n		0,											// No Accumulation Buffer\n		0, 0, 0, 0,									// Accumulation Bits Ignored\n		16,											// 16Bit Z-Buffer (Depth Buffer)  \n		0,											// No Stencil Buffer\n		0,											// No Auxiliary Buffer\n		PFD_MAIN_PLANE,								// Main Drawing Layer\n		0,											// Reserved\n		0, 0, 0										// Layer Masks Ignored\n	};\n	\n	if (!(hDC=GetDC(hWnd)))							// Did We Get A Device Context?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Create A GL Device Context.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if (!(PixelFormat=ChoosePixelFormat(hDC,&amp;pfd)))	// Did Windows Find A Matching Pixel Format?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Find A Suitable PixelFormat.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if(!SetPixelFormat(hDC,PixelFormat,&amp;pfd))		// Are We Able To Set The Pixel Format?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Set The PixelFormat.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if (!(hRC=wglCreateContext(hDC)))				// Are We Able To Get A Rendering Context?\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Create A GL Rendering Context.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	if(!wglMakeCurrent(hDC,hRC))					// Try To Activate The Rendering Context\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Can&#39;t Activate The GL Rendering Context.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	ShowWindow(hWnd,SW_SHOW);						// Show The Window\n	SetForegroundWindow(hWnd);						// Slightly Higher Priority\n	SetFocus(hWnd);									// Sets Keyboard Focus To The Window\n	ReSizeGLScene(width, height);					// Set Up Our Perspective GL Screen\n\n	if (!InitGL())									// Initialize Our Newly Created GL Window\n	{\n		KillGLWindow();								// Reset The Display\n		MessageBox(NULL,&quot;Initialization Failed.&quot;,&quot;ERROR&quot;,MB_OK|MB_ICONEXCLAMATION);\n		return FALSE;								// Return FALSE\n	}\n\n	return TRUE;									// Success\n}\n\nLRESULT CALLBACK WndProc(	HWND	hWnd,			// Handle For This Window\n							UINT	uMsg,			// Message For This Window\n							WPARAM	wParam,			// Additional Message Information\n							LPARAM	lParam)			// Additional Message Information\n{\n	switch (uMsg)									// Check For Windows Messages\n	{\n		case WM_ACTIVATE:							// Watch For Window Activate Message\n		{\n			if (!HIWORD(wParam))					// Check Minimization State\n			{\n				active=TRUE;						// Program Is Active\n			}\n			else\n			{\n				active=FALSE;						// Program Is No Longer Active\n			}\n\n			return 0;								// Return To The Message Loop\n		}\n\n		case WM_SYSCOMMAND:							// Intercept System Commands\n		{\n			switch (wParam)							// Check System Calls\n			{\n				case SC_SCREENSAVE:					// Screensaver Trying To Start?\n				case SC_MONITORPOWER:				// Monitor Trying To Enter Powersave?\n				return 0;							// Prevent From Happening\n			}\n			break;									// Exit\n		}\n\n		case WM_CLOSE:								// Did We Receive A Close Message?\n		{\n			PostQuitMessage(0);						// Send A Quit Message\n			return 0;								// Jump Back\n		}\n\n		case WM_KEYDOWN:							// Is A Key Being Held Down?\n		{\n			keys[wParam] = TRUE;					// If So, Mark It As TRUE\n			return 0;								// Jump Back\n		}\n\n		case WM_KEYUP:								// Has A Key Been Released?\n		{\n			keys[wParam] = FALSE;					// If So, Mark It As FALSE\n			return 0;								// Jump Back\n		}\n\n		case WM_SIZE:								// Resize The OpenGL Window\n		{\n			ReSizeGLScene(LOWORD(lParam),HIWORD(lParam));  // LoWord=Width, HiWord=Height\n			return 0;								// Jump Back\n		}\n	}\n\n	// Pass All Unhandled Messages To DefWindowProc\n	return DefWindowProc(hWnd,uMsg,wParam,lParam);\n}\n\nint WINAPI WinMain(	HINSTANCE	hInstance,			// Instance\n					HINSTANCE	hPrevInstance,		// Previous Instance\n					LPSTR		lpCmdLine,			// Command Line Parameters\n					int			nCmdShow)			// Window Show State\n{\n	MSG		msg;									// Windows Message Structure\n	BOOL	done=FALSE;								// Bool Variable To Exit Loop\n\n	// Ask The User Which Screen Mode They Prefer\n	if (MessageBox(NULL,&quot;Would You Like To Run In Fullscreen Mode?&quot;, &quot;Start FullScreen?&quot;,MB_YESNO|MB_ICONQUESTION)==IDNO)\n	{\n		fullscreen=FALSE;							// Windowed Mode\n	}\n\n	// Create Our OpenGL Window\n	if (!CreateGLWindow(&quot;NeHe&#39;s Texture Mapping Tutorial&quot;,640,480,16,fullscreen))\n	{\n		return 0;									// Quit If Window Was Not Created\n	}\n\n	while(!done)									// Loop That Runs While done=FALSE\n	{\n		if (PeekMessage(&amp;msg,NULL,0,0,PM_REMOVE))	// Is There A Message Waiting?\n		{\n			if (msg.message==WM_QUIT)				// Have We Received A Quit Message?\n			{\n				done=TRUE;							// If So done=TRUE\n			}\n			else									// If Not, Deal With Window Messages\n			{\n				TranslateMessage(&amp;msg);				// Translate The Message\n				DispatchMessage(&amp;msg);				// Dispatch The Message\n			}\n		}\n		else										// If There Are No Messages\n		{\n			// Draw The Scene.  Watch For ESC Key And Quit Messages From DrawGLScene()\n			if ((active &amp;&amp; !DrawGLScene()) || keys[VK_ESCAPE])	// Active?  Was There A Quit Received?\n			{\n				done=TRUE;							// ESC or DrawGLScene Signalled A Quit\n			}\n			else									// Not Time To Quit, Update Screen\n			{\n				SwapBuffers(hDC);					// Swap Buffers (Double Buffering)\n			}\n\n			if (keys[VK_F1])						// Is F1 Being Pressed?\n			{\n				keys[VK_F1]=FALSE;					// If So Make Key FALSE\n				KillGLWindow();						// Kill Our Current Window\n				fullscreen=!fullscreen;				// Toggle Fullscreen / Windowed Mode\n				// Recreate Our OpenGL Window\n				if (!CreateGLWindow(&quot;NeHe&#39;s Texture Mapping Tutorial&quot;,640,480,16,fullscreen))\n				{\n					return 0;						// Quit If Window Was Not Created\n				}\n			}\n		}\n	}\n\n	// Shutdown\n	KillGLWindow();									// Kill The Window\n	return (msg.wParam);							// Exit The Program\n}\n</pre><br>\r\n上图就是主要的逻辑代码，我已经改成了显示3ds模型的代码了。 &nbsp;下面我指出改的地方都有哪\r\n<p></p>\r\n<p>首先是文件目录。&nbsp;</p>\r\n<p>3D模型一定要放在Data/3ds文件夹里面</p>\r\n<p>3D模型贴图一定要放在Data/pic文件夹里面 如下图：</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141211221421235?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p><img src=\"http://img.blog.csdn.net/20141211221449562?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3EzNjExMDYzMDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br>\r\n</p>\r\n<p>这是VC工程，VS是一样的，直接用nehe那个工程导入CLoad3DS 并且建立那3ds和pic两个文件夹即可， 最后讲给出全部源代码和一些网上的模型</p>\r\n<p>下面是主要对nehe添加3D模型支持的代码</p>\r\n<p>首先加上头文件</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_2_4625294\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_2_4625294\" name=\"code\" class=\"html\">#include &quot;CLoad3DS.h&quot;</pre><br>\r\n然后在定义全局变量的地方，也就是 定义完头文件紧接着就写如下 3D模型的定义\r\n<p></p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_3_47134\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_3_47134\" name=\"code\" class=\"html\">CLoad3DS *gothicLoader=new(CLoad3DS);\nt3DModel gothicModel;\n\nfloat gothicTrans[10] = { \n	0, 0 , -30 ,     //表示在世界矩阵的位置\n		0.2 , 0.2 , 0.2 ,      //表示xyz放大倍数\n		0 , 0 , 0 , 0  //表示旋转\n};</pre><br>\r\n上面代码很简单，就是加载了CLoad3DS类， &nbsp;t3DModel类，然后定义了一个参数数组，中文说明。\r\n<p></p>\r\n<p>定义好了后就要初始化了。&nbsp;</p>\r\n<p>在InitGL 也就是opengl初始化那个函数里面 初始化，就一句话。</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_4_5161137\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_4_5161137\" name=\"code\" class=\"html\">//导入模型 模型的文件夹尽量这样设置 \n	//然后模型贴图 装在Data/pic里面  一定要跟前面截图的文件夹名字一样，想改得去CLoad3DS文件里面改\n	gothicLoader-&gt;Import3DS(&amp;gothicModel, &quot;Data/3ds/GUTEMB_L.3DS&quot;); </pre><br>\r\n初始化直接就填你想要那个模型的XXX.3DS即可，纹理不用管，放在pic文件夹里面，他自动从模型信息里面找出纹理的对应文件名\r\n<p></p>\r\n<p>最后就是运行了，在绘制函数里面用changeObject 导入之前设置好的参数，再用drawModel函数(在CLoad3DS定义好了的全局函数) 绘制。即可</p>\r\n<p></p>\r\n<pre code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_5_766291\"  code_snippet_id=\"549678\" snippet_file_name=\"blog_20141211_5_766291\" name=\"code\" class=\"html\">int DrawGLScene(GLvoid)									// Here&#39;s Where We Do All The Drawing\n{\n	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	// Clear The Screen And The Depth Buffer\n	glLoadIdentity();									// Reset The View\n	glPushMatrix();\n	changeObject( gothicTrans );\n	drawModel(gothicModel,true,false);\n	glPopMatrix();\n	glFlush ();	\n	return TRUE;										// Keep Going\n}</pre><br>\r\n完成，很简单吧， 就是添加2个文件，然后三两行代码即可实现模型导入。\r\n<p></p>\r\n<p>下面是整个工程文件。</p>\r\n<p><br>\r\n</p>\r\n<p><a target=\"_blank\" target=\"_blank\" href=\"http://download.csdn.net/detail/cq361106306/8250029\">点我下载</a></p>\r\n',1,'图形,c++,opengl',0,0,'2015-02-02 00:49:14','2015-02-02 00:49:14','2015-02-02 00:49:14'),(54,1,9,'wchar_t 理解','4e4d814cda9b710d8fdcab5a430e980f',0,'\r\n\r\n<p><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">wchar_t是C/C&#43;&#43;的</span><a target=\"_blank\" target=\"_blank\" hr','\r\n\r\n<p><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">wchar_t是C/C&#43;&#43;的</span><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">字符</a><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/738155.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">类型</a><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">，是一种扩展的存储方式，wchar_t类型主要用在国际化程序的实现中，但它不等同于uni编码。uni编码的</span><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">字符</a><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">一般以</span><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/2063825.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">wchar_t</a><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">类型存储。</span></p>\r\n<p><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\"></span></p>\r\n<div class=\"para\" style=\"color:rgb(51,51,51); margin:15px 0px 5px; text-indent:2em; line-height:24px; font-family:arial,宋体,sans-serif; font-size:14px\">\r\nchar是8位<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">字符</a>类型，最多只能包含256种字符，许多外文<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/51987.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">字符集</a>所含的字符数目超过256个，char型无法表示。</div>\r\n<div class=\"para\" style=\"color:rgb(51,51,51); margin:15px 0px 5px; text-indent:2em; line-height:24px; font-family:arial,宋体,sans-serif; font-size:14px\">\r\nwchar_t<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/675645.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">数据类型</a>一般为16位或32位，但不同的C或C&#43;&#43;库有不同的规定，如GNU Libc规定wchar_t为32位<span style=\"white-space:nowrap; margin-left:2px; color:rgb(51,102,204); padding:0px 2px; position:relative; vertical-align:baseline; top:-0.5em\">[1]</span><a target=\"_blank\" class=\"anchor-inline \" name=\"ref_[1]_2063825\" style=\"color:rgb(19,110,194); position:relative; display:inline; top:-50px; font-size:0px; line-height:0\">&nbsp;</a>，总之，wchar_t所能表示的<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">字符</a>数远超char型。</div>\r\n<div class=\"para\" style=\"color:rgb(51,51,51); margin:15px 0px 5px; text-indent:2em; line-height:24px; font-family:arial,宋体,sans-serif; font-size:14px\">\r\n标准C&#43;&#43;中的wprintf()函数以及iostream类库中的<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/4287409.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">类和对象</a>能提供wchar_t<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/1776168.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">宽字符</a>类型的相关操作。</div>\r\n<pre code_snippet_id=\"489439\" snippet_file_name=\"blog_20141020_1_1122080\"  name=\"code\" class=\"cpp\">#include&lt;iostream&gt;\n#include&lt;locale&gt;\n#include&lt;cstdlib&gt;\n \nusing namespace std;\n \nlocaleloc(&quot;chs&quot;);//windows下ok\n \n//这段貌似在ubuntu下ok\n//localeloc(&quot;zh_CN.UTF-8&quot;);\n//而且还需要在ubuntu的终端中执行：\n//sudolocale-gen\n \nint main(){\nwchar_twStr[]=L&quot;这是一段中文&quot;;\nwcout.imbue(loc);\nwcout&lt;&lt;wStr&lt;&lt;endl;\ngetchar();getchar();\nreturn0;\n}</pre><pre code_snippet_id=\"489439\" snippet_file_name=\"blog_20141020_2_8504358\"  name=\"code\" class=\"cpp\">可以用TEXT()方法将char转换成wchar_t\n例如： wchar_t appName[5]=TEXT(&quot;test&quot;);\n方法2：\nwchar_t* c2w(const char *str)\n{\nint length = strlen(str)+1;\nwchar_t *t = (wchar_t*)malloc(sizeof(wchar_t)*length);\nmemset(t,0,length*sizeof(wchar_t));\nMultiByteToWideChar(CP_ACP,0,str,strlen(str),t,length);\nreturn t;\n}</pre><br>\r\n<br>\r\n<br>\r\n<p></p>\r\n','\r\n\r\n<p><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">wchar_t是C/C&#43;&#43;的</span><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">字符</a><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/738155.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">类型</a><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">，是一种扩展的存储方式，wchar_t类型主要用在国际化程序的实现中，但它不等同于uni编码。uni编码的</span><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">字符</a><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">一般以</span><a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/2063825.htm\" style=\"text-decoration:none; color:rgb(19,110,194); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">wchar_t</a><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\">类型存储。</span></p>\r\n<p><span style=\"color:rgb(51,51,51); font-family:arial,宋体,sans-serif; font-size:14px; line-height:24px; text-indent:28px\"></span></p>\r\n<div class=\"para\" style=\"color:rgb(51,51,51); margin:15px 0px 5px; text-indent:2em; line-height:24px; font-family:arial,宋体,sans-serif; font-size:14px\">\r\nchar是8位<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">字符</a>类型，最多只能包含256种字符，许多外文<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/51987.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">字符集</a>所含的字符数目超过256个，char型无法表示。</div>\r\n<div class=\"para\" style=\"color:rgb(51,51,51); margin:15px 0px 5px; text-indent:2em; line-height:24px; font-family:arial,宋体,sans-serif; font-size:14px\">\r\nwchar_t<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/675645.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">数据类型</a>一般为16位或32位，但不同的C或C&#43;&#43;库有不同的规定，如GNU Libc规定wchar_t为32位<span style=\"white-space:nowrap; margin-left:2px; color:rgb(51,102,204); padding:0px 2px; position:relative; vertical-align:baseline; top:-0.5em\">[1]</span><a target=\"_blank\" class=\"anchor-inline \" name=\"ref_[1]_2063825\" style=\"color:rgb(19,110,194); position:relative; display:inline; top:-50px; font-size:0px; line-height:0\">&nbsp;</a>，总之，wchar_t所能表示的<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/263416.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">字符</a>数远超char型。</div>\r\n<div class=\"para\" style=\"color:rgb(51,51,51); margin:15px 0px 5px; text-indent:2em; line-height:24px; font-family:arial,宋体,sans-serif; font-size:14px\">\r\n标准C&#43;&#43;中的wprintf()函数以及iostream类库中的<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/4287409.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">类和对象</a>能提供wchar_t<a target=\"_blank\" target=\"_blank\" href=\"http://baike.baidu.com/view/1776168.htm\" style=\"text-decoration:none; color:rgb(19,110,194)\">宽字符</a>类型的相关操作。</div>\r\n<pre code_snippet_id=\"489439\" snippet_file_name=\"blog_20141020_1_1122080\"  name=\"code\" class=\"cpp\">#include&lt;iostream&gt;\n#include&lt;locale&gt;\n#include&lt;cstdlib&gt;\n \nusing namespace std;\n \nlocaleloc(&quot;chs&quot;);//windows下ok\n \n//这段貌似在ubuntu下ok\n//localeloc(&quot;zh_CN.UTF-8&quot;);\n//而且还需要在ubuntu的终端中执行：\n//sudolocale-gen\n \nint main(){\nwchar_twStr[]=L&quot;这是一段中文&quot;;\nwcout.imbue(loc);\nwcout&lt;&lt;wStr&lt;&lt;endl;\ngetchar();getchar();\nreturn0;\n}</pre><pre code_snippet_id=\"489439\" snippet_file_name=\"blog_20141020_2_8504358\"  name=\"code\" class=\"cpp\">可以用TEXT()方法将char转换成wchar_t\n例如： wchar_t appName[5]=TEXT(&quot;test&quot;);\n方法2：\nwchar_t* c2w(const char *str)\n{\nint length = strlen(str)+1;\nwchar_t *t = (wchar_t*)malloc(sizeof(wchar_t)*length);\nmemset(t,0,length*sizeof(wchar_t));\nMultiByteToWideChar(CP_ACP,0,str,strlen(str),t,length);\nreturn t;\n}</pre><br>\r\n<br>\r\n<br>\r\n<p></p>\r\n',1,'c++',0,0,'2015-02-02 00:49:22','2015-02-02 00:49:22','2015-02-02 00:49:22'),(55,1,9,'C++ Primer笔记 容器和算法(2)','76c0c99f77d15d70b9cf61fdc41b4880',0,'\r\n\r\nerase 删除后 &nbsp;返回的是删除元素的后一个迭代器位置<br>\r\n<pre name=\"code\" class=\"cpp\">int main()\n{\n	//如何正确的删除所有元素 循环\n	int a[]={1,2,3,4,5,6,7,8,9};\n	','\r\n\r\nerase 删除后 &nbsp;返回的是删除元素的后一个迭代器位置<br>\r\n<pre name=\"code\" class=\"cpp\">int main()\n{\n	//如何正确的删除所有元素 循环\n	int a[]={1,2,3,4,5,6,7,8,9};\n	vector&lt;int&gt; v(a,a+6);\n	for(vector&lt;int&gt;::iterator it=v.begin();it!=v.end();)\n	{\n		it=v.erase(it);\n	}\n	for(vector&lt;int&gt;::iterator it=v.begin();it!=v.end();it++)\n	{\n		cout&lt;&lt;*it&lt;&lt;endl;\n	}\n	cout&lt;&lt;v.size()&lt;&lt;endl;\n	getchar();\n	return 0;\n}</pre><br>\r\n<br>\r\n<br>\r\n<br>\r\n重置元素和交换元素<br>\r\n<br>\r\n<br>\r\nc.swap(c2)<br>\r\n<br>\r\n<br>\r\nc.assign(b,e)<br>\r\n<br>\r\n<br>\r\nc.assign(n,t) &nbsp;(迭代器不能是指向c的)<br>\r\n<br>\r\n<br>\r\n容器可以自动增长<br>\r\n<br>\r\n<br>\r\n像vector这种增长代价比list要大<br>\r\n<br>\r\n<br>\r\ncapacity()和reserve()<br>\r\n<br>\r\n<br>\r\n一般会预留比size大的空间，当不得不重新分配内存时候，会加倍当前容量的分配策略<br>\r\n也可以手动reserve(size) 分配<br>\r\n<br>\r\n<br>\r\ndeque可以随机访问<br>\r\n<br>\r\n<br>\r\n<p>String s4(s3.begin(),s3.end())</p>\r\n<p>&nbsp;</p>\r\n<p><strong>适配器</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p><strong>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stack&lt;int&gt; stack(deq)‘</strong></p>\r\n<p>Stack,queue都基于deque实现</p>\r\n<p><strong>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Priority_queue 基于vector实现</strong></p>\r\n<p>&nbsp;</p>\r\n<p>栈</p>\r\n<p>s.empty() </p>\r\n<p>s.size()</p>\r\n<p>s.pop()</p>\r\n<p>s.top()</p>\r\n<p>s.push(item)</p>\r\n<p>&nbsp;</p>\r\n<p>队列</p>\r\n<p>q.empty()</p>\r\n<p>q.size()</p>\r\n<p>q.pop()</p>\r\n<p>q.front()</p>\r\n<p>q.back()</p>\r\n<p>q.top()</p>\r\n<p>q.push()</p>\r\n<p>&nbsp;</p>\r\n<p><strong>关联容器</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p><strong>Map与set</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p><strong>Map:key-value</strong></p>\r\n<p><strong>Set:一个key</strong></p>\r\n<p><strong>Multimap:同一个键多次出现的map类型</strong></p>\r\n<p><strong>Multiset:同一个键多次出现的set类型</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p>1.Pair 类型</p>\r\n<p>创建与初始化：　　pair&lt;string,string&gt; p;</p>\r\n<p>p.first 第一个元素&nbsp; p.second 第二个元素</p>\r\n<p>&nbsp;</p>\r\n<p>重新生成:&nbsp; pair&lt;string,string&gt;next;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; Next=make_pair(first,last);</p>\r\n<p>也支持直接赋&#20540;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next.first=xx.&nbsp;&nbsp; Next.second=xx;</p>\r\n<p>&nbsp;</p>\r\n<p>2.关联容器：</p>\r\n<p>2.1 map</p>\r\n<p>Map&lt;ISBN,sales&gt; bookstore;</p>\r\n<p>&nbsp;</p>\r\n<p>Map&lt;k,v&gt;::key_type , mapped_type,value_type(pair类型)</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n','\r\n\r\nerase 删除后 &nbsp;返回的是删除元素的后一个迭代器位置<br>\r\n<pre name=\"code\" class=\"cpp\">int main()\n{\n	//如何正确的删除所有元素 循环\n	int a[]={1,2,3,4,5,6,7,8,9};\n	vector&lt;int&gt; v(a,a+6);\n	for(vector&lt;int&gt;::iterator it=v.begin();it!=v.end();)\n	{\n		it=v.erase(it);\n	}\n	for(vector&lt;int&gt;::iterator it=v.begin();it!=v.end();it++)\n	{\n		cout&lt;&lt;*it&lt;&lt;endl;\n	}\n	cout&lt;&lt;v.size()&lt;&lt;endl;\n	getchar();\n	return 0;\n}</pre><br>\r\n<br>\r\n<br>\r\n<br>\r\n重置元素和交换元素<br>\r\n<br>\r\n<br>\r\nc.swap(c2)<br>\r\n<br>\r\n<br>\r\nc.assign(b,e)<br>\r\n<br>\r\n<br>\r\nc.assign(n,t) &nbsp;(迭代器不能是指向c的)<br>\r\n<br>\r\n<br>\r\n容器可以自动增长<br>\r\n<br>\r\n<br>\r\n像vector这种增长代价比list要大<br>\r\n<br>\r\n<br>\r\ncapacity()和reserve()<br>\r\n<br>\r\n<br>\r\n一般会预留比size大的空间，当不得不重新分配内存时候，会加倍当前容量的分配策略<br>\r\n也可以手动reserve(size) 分配<br>\r\n<br>\r\n<br>\r\ndeque可以随机访问<br>\r\n<br>\r\n<br>\r\n<p>String s4(s3.begin(),s3.end())</p>\r\n<p>&nbsp;</p>\r\n<p><strong>适配器</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p><strong>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stack&lt;int&gt; stack(deq)‘</strong></p>\r\n<p>Stack,queue都基于deque实现</p>\r\n<p><strong>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Priority_queue 基于vector实现</strong></p>\r\n<p>&nbsp;</p>\r\n<p>栈</p>\r\n<p>s.empty() </p>\r\n<p>s.size()</p>\r\n<p>s.pop()</p>\r\n<p>s.top()</p>\r\n<p>s.push(item)</p>\r\n<p>&nbsp;</p>\r\n<p>队列</p>\r\n<p>q.empty()</p>\r\n<p>q.size()</p>\r\n<p>q.pop()</p>\r\n<p>q.front()</p>\r\n<p>q.back()</p>\r\n<p>q.top()</p>\r\n<p>q.push()</p>\r\n<p>&nbsp;</p>\r\n<p><strong>关联容器</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p><strong>Map与set</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p><strong>Map:key-value</strong></p>\r\n<p><strong>Set:一个key</strong></p>\r\n<p><strong>Multimap:同一个键多次出现的map类型</strong></p>\r\n<p><strong>Multiset:同一个键多次出现的set类型</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p>1.Pair 类型</p>\r\n<p>创建与初始化：　　pair&lt;string,string&gt; p;</p>\r\n<p>p.first 第一个元素&nbsp; p.second 第二个元素</p>\r\n<p>&nbsp;</p>\r\n<p>重新生成:&nbsp; pair&lt;string,string&gt;next;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; Next=make_pair(first,last);</p>\r\n<p>也支持直接赋&#20540;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next.first=xx.&nbsp;&nbsp; Next.second=xx;</p>\r\n<p>&nbsp;</p>\r\n<p>2.关联容器：</p>\r\n<p>2.1 map</p>\r\n<p>Map&lt;ISBN,sales&gt; bookstore;</p>\r\n<p>&nbsp;</p>\r\n<p>Map&lt;k,v&gt;::key_type , mapped_type,value_type(pair类型)</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n',1,'读书笔记,c++,迭代器',0,0,'2015-02-02 00:49:26','2015-02-02 00:49:26','2015-02-02 00:49:26'),(56,1,9,'C++ Primer笔记 容器和算法(1)','899f6b187497b0ecdf34234b81f723c0',0,'\r\n\r\n<p>C&#43;&#43; 容器和算法(1)</p>\r\n<p>&nbsp;</p>\r\n<p>“泛型算法”:</p>\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;算法可以作用于不同的容器类型。</p>\r\n<p>2.&nbsp;&nbsp;&nbsp','\r\n\r\n<p>C&#43;&#43; 容器和算法(1)</p>\r\n<p>&nbsp;</p>\r\n<p>“泛型算法”:</p>\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;算法可以作用于不同的容器类型。</p>\r\n<p>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;容器容纳多种不同类型元素</p>\r\n<p>&nbsp;</p>\r\n<p>顺序容器: vector list deque(全称double-ended queue)</p>\r\n<p>适配器: stack queue priority_queue</p>\r\n<p>&nbsp;</p>\r\n<p>定义: vector&lt;string&gt; svere;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;C c(b,e)当[b,e) 左开右闭之间的元素。</p>\r\n<p>&nbsp;C c(n,d)初始化n个d</p>\r\n<p>&nbsp;</p>\r\n<p>复制构造&nbsp; vector&lt;int&gt; ivec;&nbsp;&nbsp;&nbsp; vector&lt;int&gt; ivec2(ivec)</p>\r\n<p>&nbsp;</p>\r\n<p>利用迭代器传递不同的类型容器之间的数据</p>\r\n<p>&nbsp;</p>\r\n<p>Vector&lt;string&gt;::iteratormid=svec.begin()&#43;svec.size()/2;</p>\r\n<p>Deque&lt;string&gt; front(svec.begin(),mid);</p>\r\n<p>&nbsp;</p>\r\n<p>什么类型可以做容器的元素类型( 可复制，可赋&#20540;) //引用不行&nbsp; IO也不行</p>\r\n<p>&nbsp;</p>\r\n<p>测试列子:</p>\r\n<p>Vector&lt;Foo&gt; empty;</p>\r\n<p>Vector&lt;Foo&gt; bad(10);</p>\r\n<p>Vector&lt;Foo&gt; ok(10,1);</p>\r\n<p>&nbsp;</p>\r\n<p>其中Foo 无默认构造函数 , 但有int型形参构造函数.</p>\r\n<p>&nbsp;</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">class Foo\n{\npublic:\n     int data;\n     Foo(int a){this-&gt;data=a;}\n};\n \nint main()\n{\n     //vector&lt;Foo&gt; foo1(10,1);//对 创建个值为的foo1顺序表\n     //vector&lt;Foo&gt; foo2(10); //错  没有默认无参构造函数\n     //vector&lt;Foo&gt; foo3; //对 根本没有调用任何构造函数\n     //Foo f();//像是声明了一个函数 这可不是对象实例化哦因为没有f()这个构造函数\n     Foo f;//直接报错因为没有无参构造函数\n     //Foo *f=new Foo();//报错同上\n     //Foo *f=new Foo;//报错同上\n     getchar();\n     return 0;\n}</pre><br>\r\n<br>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p>二维嵌套</p>\r\n<p>Vector&lt; vector&lt;string&gt; &gt;lines; // &gt; &gt;之间一定要加空&#26684;，不然会当成&gt;&gt;位移运算符</p>\r\n<p>&nbsp;</p>\r\n<p>迭代器和迭代器范围</p>\r\n<p>&nbsp;</p>\r\n<p>Vector 和deque 迭代器可以 iter&#43;n iter-n</p>\r\n<p>List不能随机访问，不能作比较 &lt; &gt;之类的</p>\r\n<p>&nbsp;</p>\r\n<p>迭代器范围</p>\r\n<p>End指向最后一个元素的下一个位置</p>\r\n<p>[begin,end)</p>\r\n<p>&nbsp;</p>\r\n<p>Size_type iterator const_iterator</p>\r\n<p>&nbsp;</p>\r\n<p>c.begin()&nbsp; c.end()&nbsp;c.rbegin()翻转&nbsp; c.rend()</p>\r\n<p>&nbsp;</p>\r\n<p>c.push_back(x)&nbsp; c.insert(p,t)&nbsp;c.push_front(x)(只能list和deque) c.insert(p,n,t)</p>\r\n<p>&nbsp;</p>\r\n<p>更新后注意重置迭代器</p>\r\n<p>While(first!=v.end())</p>\r\n<p>{</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; First=v.insert(&#43;&#43;first,42);</p>\r\n<p>&#43;&#43;first;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>c.resize(n,t) 调整为n,用t来补充不够的</p>\r\n<p>&nbsp;</p>\r\n<p>list&lt;int&gt;::referencelast=*list.begin();</p>\r\n<p>last为引用</p>\r\n<p>&nbsp;</p>\r\n<p>c[n]&nbsp;c.at(n) 可以用（vector deque）</p>\r\n<p>&nbsp;</p>\r\n<p>c.pop_back()&nbsp; 删除容器c的最后一个元素</p>\r\n<p>c.pop_front() 只适用于list deque</p>\r\n<p>P286</p>\r\n<p>&nbsp;</p>\r\n','\r\n\r\n<p>C&#43;&#43; 容器和算法(1)</p>\r\n<p>&nbsp;</p>\r\n<p>“泛型算法”:</p>\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;算法可以作用于不同的容器类型。</p>\r\n<p>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;容器容纳多种不同类型元素</p>\r\n<p>&nbsp;</p>\r\n<p>顺序容器: vector list deque(全称double-ended queue)</p>\r\n<p>适配器: stack queue priority_queue</p>\r\n<p>&nbsp;</p>\r\n<p>定义: vector&lt;string&gt; svere;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;C c(b,e)当[b,e) 左开右闭之间的元素。</p>\r\n<p>&nbsp;C c(n,d)初始化n个d</p>\r\n<p>&nbsp;</p>\r\n<p>复制构造&nbsp; vector&lt;int&gt; ivec;&nbsp;&nbsp;&nbsp; vector&lt;int&gt; ivec2(ivec)</p>\r\n<p>&nbsp;</p>\r\n<p>利用迭代器传递不同的类型容器之间的数据</p>\r\n<p>&nbsp;</p>\r\n<p>Vector&lt;string&gt;::iteratormid=svec.begin()&#43;svec.size()/2;</p>\r\n<p>Deque&lt;string&gt; front(svec.begin(),mid);</p>\r\n<p>&nbsp;</p>\r\n<p>什么类型可以做容器的元素类型( 可复制，可赋&#20540;) //引用不行&nbsp; IO也不行</p>\r\n<p>&nbsp;</p>\r\n<p>测试列子:</p>\r\n<p>Vector&lt;Foo&gt; empty;</p>\r\n<p>Vector&lt;Foo&gt; bad(10);</p>\r\n<p>Vector&lt;Foo&gt; ok(10,1);</p>\r\n<p>&nbsp;</p>\r\n<p>其中Foo 无默认构造函数 , 但有int型形参构造函数.</p>\r\n<p>&nbsp;</p>\r\n<p align=\"left\"><pre name=\"code\" class=\"cpp\">class Foo\n{\npublic:\n     int data;\n     Foo(int a){this-&gt;data=a;}\n};\n \nint main()\n{\n     //vector&lt;Foo&gt; foo1(10,1);//对 创建个值为的foo1顺序表\n     //vector&lt;Foo&gt; foo2(10); //错  没有默认无参构造函数\n     //vector&lt;Foo&gt; foo3; //对 根本没有调用任何构造函数\n     //Foo f();//像是声明了一个函数 这可不是对象实例化哦因为没有f()这个构造函数\n     Foo f;//直接报错因为没有无参构造函数\n     //Foo *f=new Foo();//报错同上\n     //Foo *f=new Foo;//报错同上\n     getchar();\n     return 0;\n}</pre><br>\r\n<br>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p>二维嵌套</p>\r\n<p>Vector&lt; vector&lt;string&gt; &gt;lines; // &gt; &gt;之间一定要加空&#26684;，不然会当成&gt;&gt;位移运算符</p>\r\n<p>&nbsp;</p>\r\n<p>迭代器和迭代器范围</p>\r\n<p>&nbsp;</p>\r\n<p>Vector 和deque 迭代器可以 iter&#43;n iter-n</p>\r\n<p>List不能随机访问，不能作比较 &lt; &gt;之类的</p>\r\n<p>&nbsp;</p>\r\n<p>迭代器范围</p>\r\n<p>End指向最后一个元素的下一个位置</p>\r\n<p>[begin,end)</p>\r\n<p>&nbsp;</p>\r\n<p>Size_type iterator const_iterator</p>\r\n<p>&nbsp;</p>\r\n<p>c.begin()&nbsp; c.end()&nbsp;c.rbegin()翻转&nbsp; c.rend()</p>\r\n<p>&nbsp;</p>\r\n<p>c.push_back(x)&nbsp; c.insert(p,t)&nbsp;c.push_front(x)(只能list和deque) c.insert(p,n,t)</p>\r\n<p>&nbsp;</p>\r\n<p>更新后注意重置迭代器</p>\r\n<p>While(first!=v.end())</p>\r\n<p>{</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; First=v.insert(&#43;&#43;first,42);</p>\r\n<p>&#43;&#43;first;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>c.resize(n,t) 调整为n,用t来补充不够的</p>\r\n<p>&nbsp;</p>\r\n<p>list&lt;int&gt;::referencelast=*list.begin();</p>\r\n<p>last为引用</p>\r\n<p>&nbsp;</p>\r\n<p>c[n]&nbsp;c.at(n) 可以用（vector deque）</p>\r\n<p>&nbsp;</p>\r\n<p>c.pop_back()&nbsp; 删除容器c的最后一个元素</p>\r\n<p>c.pop_front() 只适用于list deque</p>\r\n<p>P286</p>\r\n<p>&nbsp;</p>\r\n',2,'c++',0,0,'2015-02-02 00:49:29','2015-02-02 00:49:29','2015-02-02 00:49:29'),(57,1,9,'C++ 模板应用 实现一个Queue 队列','cfe75029482afd841f79f820efbb1a89',0,'\r\n\r\n<pre name=\"code\" class=\"cpp\">#include&lt;iostream&gt;\nusing namespace std;\ntemplate &lt;typename T&gt;\nclass Queue\n{\npublic:\n	Queue()\n	{\n		Node&lt;T&gt; *node=new Node&lt;T&gt;();\n		node-&gt;data=','\r\n\r\n<pre name=\"code\" class=\"cpp\">#include&lt;iostream&gt;\nusing namespace std;\ntemplate &lt;typename T&gt;\nclass Queue\n{\npublic:\n	Queue()\n	{\n		Node&lt;T&gt; *node=new Node&lt;T&gt;();\n		node-&gt;data=NULL;\n		node-&gt;next=NULL;\n		qfront=qrear=node;\n	}\n	template &lt;typename T&gt;\n	struct Node\n	{\n		Node&lt;T&gt; *next;\n		T data;\n	};\n	bool empty() const;\n	void pop();\n	T &amp; front();\n	T &amp; back();\n	void push(const T &amp;);\n	int size() const;\nprivate:\n	Node&lt;T&gt; *qfront,*qrear;\n};\ntemplate &lt;typename T&gt;\nT &amp;Queue&lt;T&gt;::back()\n{\n	if(!empty())\n		return qrear-&gt;data;\n}\ntemplate &lt;typename T&gt;\nT &amp;Queue&lt;T&gt;::front()\n{\n	if(!empty())\n	{\n		Node&lt;T&gt; *p=qfront-&gt;next;\n		return p-&gt;data;\n	}\n}\ntemplate &lt;typename T&gt;\nbool Queue&lt;T&gt;::empty() const\n{\n	if(qfront==qrear)\n		return true;\n	else\n		return false;\n}\ntemplate &lt;typename T&gt;\nvoid Queue&lt;T&gt;::pop()\n{\n	if(!empty())\n	{\n		Node&lt;T&gt; *p=qfront-&gt;next;\n		qfront-&gt;next=p-&gt;next;\n		if(p==qrear)\n			qrear=qfront;\n		delete p;\n		p=NULL;\n\n	}\n}\ntemplate&lt;typename T&gt;\nvoid Queue&lt;T&gt;::push(const T &amp; t)\n{\n	Node&lt;T&gt; *node=new Node&lt;T&gt;;\n	node-&gt;data=t;\n	node-&gt;next=NULL;\n	qrear-&gt;next=node;\n	qrear=node;\n}\ntemplate&lt;typename T&gt;\nint Queue&lt;T&gt;::size() const\n{\n	Node&lt;T&gt; *p=qfront;\n	if(empty())\n		return 0;\n	else\n	{\n		int i=1;\n		while(p-&gt;next!=qrear)\n		{\n			p=p-&gt;next;\n			i++;\n		}\n		return i;\n	}\n}\n\nint main()\n{\n	Queue&lt;int&gt; q;\n	q.push(1);\n	q.push(2);\n	q.pop();\n	q.pop();\n	q.pop();\n	cout&lt;&lt;q.size()&lt;&lt;endl;\n	getchar();\n	return 0;\n}</pre><br>\r\n','\r\n\r\n<pre name=\"code\" class=\"cpp\">#include&lt;iostream&gt;\nusing namespace std;\ntemplate &lt;typename T&gt;\nclass Queue\n{\npublic:\n	Queue()\n	{\n		Node&lt;T&gt; *node=new Node&lt;T&gt;();\n		node-&gt;data=NULL;\n		node-&gt;next=NULL;\n		qfront=qrear=node;\n	}\n	template &lt;typename T&gt;\n	struct Node\n	{\n		Node&lt;T&gt; *next;\n		T data;\n	};\n	bool empty() const;\n	void pop();\n	T &amp; front();\n	T &amp; back();\n	void push(const T &amp;);\n	int size() const;\nprivate:\n	Node&lt;T&gt; *qfront,*qrear;\n};\ntemplate &lt;typename T&gt;\nT &amp;Queue&lt;T&gt;::back()\n{\n	if(!empty())\n		return qrear-&gt;data;\n}\ntemplate &lt;typename T&gt;\nT &amp;Queue&lt;T&gt;::front()\n{\n	if(!empty())\n	{\n		Node&lt;T&gt; *p=qfront-&gt;next;\n		return p-&gt;data;\n	}\n}\ntemplate &lt;typename T&gt;\nbool Queue&lt;T&gt;::empty() const\n{\n	if(qfront==qrear)\n		return true;\n	else\n		return false;\n}\ntemplate &lt;typename T&gt;\nvoid Queue&lt;T&gt;::pop()\n{\n	if(!empty())\n	{\n		Node&lt;T&gt; *p=qfront-&gt;next;\n		qfront-&gt;next=p-&gt;next;\n		if(p==qrear)\n			qrear=qfront;\n		delete p;\n		p=NULL;\n\n	}\n}\ntemplate&lt;typename T&gt;\nvoid Queue&lt;T&gt;::push(const T &amp; t)\n{\n	Node&lt;T&gt; *node=new Node&lt;T&gt;;\n	node-&gt;data=t;\n	node-&gt;next=NULL;\n	qrear-&gt;next=node;\n	qrear=node;\n}\ntemplate&lt;typename T&gt;\nint Queue&lt;T&gt;::size() const\n{\n	Node&lt;T&gt; *p=qfront;\n	if(empty())\n		return 0;\n	else\n	{\n		int i=1;\n		while(p-&gt;next!=qrear)\n		{\n			p=p-&gt;next;\n			i++;\n		}\n		return i;\n	}\n}\n\nint main()\n{\n	Queue&lt;int&gt; q;\n	q.push(1);\n	q.push(2);\n	q.pop();\n	q.pop();\n	q.pop();\n	cout&lt;&lt;q.size()&lt;&lt;endl;\n	getchar();\n	return 0;\n}</pre><br>\r\n',1,'',0,0,'2015-02-02 00:49:30','2015-02-02 00:49:30','2015-02-02 00:49:30'),(58,1,9,'C++ Struct和Class的区别与相同点  (注意不是c)','4a9a585f713a59a8e279eaf813ba2af7',0,'\r\n\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n一、</p>\r\n<p style=\"line-height:19px; margin:10px auto','\r\n\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n一、</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;C&#43;&#43;中的struct对C中的struct进行了扩充，它已经不再只是一个包含不同数据类型的数据结构了，它已经获取了太多的功能。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct能包含成员函数吗？&nbsp;&nbsp;&nbsp;能！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct能继承吗？&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;能！！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct能实现多态吗？&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;能！！！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;原文:http://blog.csdn.net/xdrt81y/article/details/17143801</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最本质的一个区别就是默认的访问控制，体现在两个方面：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;1）默认的继承访问权限。struct是public的，class是private的。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写如下的代码：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct A</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;{</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char a;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;}；</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct B : A</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;{</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char b;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;}；</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个时候B是public继承A的。如果都将上面的struct改成class，那么B是private继承A的。这就是默认的继承访问权限。所以我们在平时写类继承的时候，通常会这样写：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct B : public A</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;就是为了指明是public继承，而不是用默认的private继承。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;当然，到底默认是public继承还是private继承，取决于子类而不是基类。我的意思是，struct可以继承class，同样class也可以继承struct，那么默认的继承访问权限是看子类到底是用的struct还是class。如下：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct A{}；</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;class B : A{};&nbsp;&nbsp;&nbsp;&nbsp;//private继承</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct C : B{}；&nbsp;&nbsp;//public继承</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;3)“class”这个关键字还用于定义模板参数，就像“typename”。但关键字“struct”不用于定义模板参数。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;4) 还是上面所说的，C&#43;&#43;中的struct是对C中的struct的扩充，既然是扩充，那么它就要兼容过去C中struct应有的所有特性。例如你可以这样写：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct A&nbsp;&nbsp;&nbsp;&nbsp;//定义一个struct</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;{</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char c1;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;n2;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double db3;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;};</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;A a={\'p\',7,3.1415926};&nbsp;&nbsp;//定义时直接赋&#20540;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;也就是说struct可以在定义的时候用{}赋初&#20540;。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp; 向上面的struct中加入一个构造函数（或虚函数），struct也不能用{}赋初&#20540;了。的确，以{}的方式来赋初&#20540;，只是用一个初始化列表来对数据进行按顺序的初始化，如上面如果写成A a={\'p\',7};则c1,n2被初始化，而db3没有。这样简单的copy操作，只能发生在简单的数据结构上，而不应该放在对象上。加入一个构造函数或是一个虚函数会使struct更体现出一种对象的特性，而使此{}操作不再有效。事实上，是因为加入这样的函数，使得类的内部结构发生了变化。而加入一个普通的成员函数呢？你会发现{}依旧可用。其实你可以将普通的函数理解成对数据结构的一种算法，这并不打破它数据结构的特性。至于虚函数和普通成员函数有什么区别，我会具体写篇文章讨论。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;那么，看到这里，我们发现即使是struct想用{}来赋初&#20540;，它也必须满足很多的约束条件，这些条件实际上就是让struct更体现出一种数据机构而不是类的特性。那为什么我们在上面仅仅将struct改成class，{}就不能用了呢？其实问题恰巧是我们之前所讲的——访问控制！你看看，我们忘记了什么？对，将struct改成class的时候，访问控制由public变为private了，那当然就不能用{}来赋初&#20540;了。加上一个public，你会发现，class也是能用{}的，和struct毫无区别！！！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;从上面的区别，我们可以看出，struct更适合看成是一个数据结构的实现体，class更适合看成是一个对象的实现体。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n二、</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n<strong>关于使用大括号初始化</strong><br>\r\n　　class和struct如果定义了构造函数的话，都不能用大括号进行初始化<br>\r\n　　如果没有定义构造函数，struct可以用大括号初始化。<br>\r\n　　如果没有定义构造函数，且所有成员变量全是public的话，可以用大括号初始化。<br>\r\n<strong>关于默认访问权限</strong><br>\r\n　　class中默认的成员访问权限是private的，而struct中则是public的。<br>\r\n<strong>关于继承方式</strong><br>\r\n　　class继承默认是private继承，而struct继承默认是public继承。<br>\r\n　　且看如下代码（看看编译器给出的错误信息）：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\nclass T1<br>\r\n{<br>\r\n　public:<br>\r\n　　void f()<br>\r\n　　{<br>\r\n　　　cout&lt;&lt;&quot;T1::f()&quot;&lt;&lt;endl;<br>\r\n　　}<br>\r\n　int x,y;<br>\r\n};<br>\r\nstruct T2<br>\r\n{<br>\r\n　int x;<br>\r\n　void f(){cout&lt;&lt;&quot;T2::f()&quot;&lt;&lt;endl;}<br>\r\n};<br>\r\nstruct TT1 : T1<br>\r\n{<br>\r\n};<br>\r\nclass TT2 : T2<br>\r\n{<br>\r\n};<br>\r\nint main()<br>\r\n{<br>\r\n　TT1 t1;<br>\r\n　TT2 t2;<br>\r\n　t1.f();<br>\r\n　t2.f();<br>\r\n}</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n<strong>关于模版</strong><br>\r\n　　在模版中，类型参数前面可以使用class或typename，如果使用struct，则含义不同，struct后面跟的是“non-type template parameter”，而class或typename后面跟的是类型参数。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\ntemplate &lt;struct X&gt;<br>\r\nvoid f(X x)<br>\r\n{<br>\r\n}<br>\r\n//出错信息：d:codecpptestcpptestcpptest.cpp(33) : error C2065: \'X\' : undeclared identifier</p>\r\n','\r\n\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n一、</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;C&#43;&#43;中的struct对C中的struct进行了扩充，它已经不再只是一个包含不同数据类型的数据结构了，它已经获取了太多的功能。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct能包含成员函数吗？&nbsp;&nbsp;&nbsp;能！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct能继承吗？&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;能！！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct能实现多态吗？&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;能！！！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;原文:http://blog.csdn.net/xdrt81y/article/details/17143801</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最本质的一个区别就是默认的访问控制，体现在两个方面：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;1）默认的继承访问权限。struct是public的，class是private的。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写如下的代码：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct A</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;{</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char a;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;}；</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct B : A</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;{</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char b;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;}；</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个时候B是public继承A的。如果都将上面的struct改成class，那么B是private继承A的。这就是默认的继承访问权限。所以我们在平时写类继承的时候，通常会这样写：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct B : public A</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;就是为了指明是public继承，而不是用默认的private继承。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;当然，到底默认是public继承还是private继承，取决于子类而不是基类。我的意思是，struct可以继承class，同样class也可以继承struct，那么默认的继承访问权限是看子类到底是用的struct还是class。如下：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct A{}；</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;class B : A{};&nbsp;&nbsp;&nbsp;&nbsp;//private继承</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct C : B{}；&nbsp;&nbsp;//public继承</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;3)“class”这个关键字还用于定义模板参数，就像“typename”。但关键字“struct”不用于定义模板参数。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;4) 还是上面所说的，C&#43;&#43;中的struct是对C中的struct的扩充，既然是扩充，那么它就要兼容过去C中struct应有的所有特性。例如你可以这样写：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;struct A&nbsp;&nbsp;&nbsp;&nbsp;//定义一个struct</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;{</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char c1;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;n2;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double db3;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;};</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;A a={\'p\',7,3.1415926};&nbsp;&nbsp;//定义时直接赋&#20540;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;也就是说struct可以在定义的时候用{}赋初&#20540;。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp; 向上面的struct中加入一个构造函数（或虚函数），struct也不能用{}赋初&#20540;了。的确，以{}的方式来赋初&#20540;，只是用一个初始化列表来对数据进行按顺序的初始化，如上面如果写成A a={\'p\',7};则c1,n2被初始化，而db3没有。这样简单的copy操作，只能发生在简单的数据结构上，而不应该放在对象上。加入一个构造函数或是一个虚函数会使struct更体现出一种对象的特性，而使此{}操作不再有效。事实上，是因为加入这样的函数，使得类的内部结构发生了变化。而加入一个普通的成员函数呢？你会发现{}依旧可用。其实你可以将普通的函数理解成对数据结构的一种算法，这并不打破它数据结构的特性。至于虚函数和普通成员函数有什么区别，我会具体写篇文章讨论。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;那么，看到这里，我们发现即使是struct想用{}来赋初&#20540;，它也必须满足很多的约束条件，这些条件实际上就是让struct更体现出一种数据机构而不是类的特性。那为什么我们在上面仅仅将struct改成class，{}就不能用了呢？其实问题恰巧是我们之前所讲的——访问控制！你看看，我们忘记了什么？对，将struct改成class的时候，访问控制由public变为private了，那当然就不能用{}来赋初&#20540;了。加上一个public，你会发现，class也是能用{}的，和struct毫无区别！！！</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;&nbsp;从上面的区别，我们可以看出，struct更适合看成是一个数据结构的实现体，class更适合看成是一个对象的实现体。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n&nbsp;</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n二、</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n<strong>关于使用大括号初始化</strong><br>\r\n　　class和struct如果定义了构造函数的话，都不能用大括号进行初始化<br>\r\n　　如果没有定义构造函数，struct可以用大括号初始化。<br>\r\n　　如果没有定义构造函数，且所有成员变量全是public的话，可以用大括号初始化。<br>\r\n<strong>关于默认访问权限</strong><br>\r\n　　class中默认的成员访问权限是private的，而struct中则是public的。<br>\r\n<strong>关于继承方式</strong><br>\r\n　　class继承默认是private继承，而struct继承默认是public继承。<br>\r\n　　且看如下代码（看看编译器给出的错误信息）：</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\nclass T1<br>\r\n{<br>\r\n　public:<br>\r\n　　void f()<br>\r\n　　{<br>\r\n　　　cout&lt;&lt;&quot;T1::f()&quot;&lt;&lt;endl;<br>\r\n　　}<br>\r\n　int x,y;<br>\r\n};<br>\r\nstruct T2<br>\r\n{<br>\r\n　int x;<br>\r\n　void f(){cout&lt;&lt;&quot;T2::f()&quot;&lt;&lt;endl;}<br>\r\n};<br>\r\nstruct TT1 : T1<br>\r\n{<br>\r\n};<br>\r\nclass TT2 : T2<br>\r\n{<br>\r\n};<br>\r\nint main()<br>\r\n{<br>\r\n　TT1 t1;<br>\r\n　TT2 t2;<br>\r\n　t1.f();<br>\r\n　t2.f();<br>\r\n}</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\n<strong>关于模版</strong><br>\r\n　　在模版中，类型参数前面可以使用class或typename，如果使用struct，则含义不同，struct后面跟的是“non-type template parameter”，而class或typename后面跟的是类型参数。</p>\r\n<p style=\"line-height:19px; margin:10px auto; color:rgb(75,75,75); font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; font-size:13px\">\r\ntemplate &lt;struct X&gt;<br>\r\nvoid f(X x)<br>\r\n{<br>\r\n}<br>\r\n//出错信息：d:codecpptestcpptestcpptest.cpp(33) : error C2065: \'X\' : undeclared identifier</p>\r\n',1,'c++',0,0,'2015-02-02 00:49:34','2015-02-02 00:49:34','2015-02-02 00:49:34'),(59,1,9,'Linux: makefile常用通用模板','6d25ba103dfc3c0b7badee8d02f149de',0,'\r\n\r\n<p>不带静态库的模板:</p>\r\n<p><pre name=\"code\" class=\"html\">CC   = g++ -g\nCOMPILE.C  = $(CC) -c \nVPATH   = ./\nCXXFLAGS  =  -lgcc_s \nMAKEEXE   = $(CC) $(LDFLAGS)\n\nOBJ   = CLLogger.o CLLogger','\r\n\r\n<p>不带静态库的模板:</p>\r\n<p><pre name=\"code\" class=\"html\">CC   = g++ -g\nCOMPILE.C  = $(CC) -c \nVPATH   = ./\nCXXFLAGS  =  -lgcc_s \nMAKEEXE   = $(CC) $(LDFLAGS)\n\nOBJ   = CLLogger.o CLLoggerTester.o CLStatus.o\nEXE   = winner\n\nall:   $(EXE)\n\n$(EXE):   ${OBJ}\n	$(MAKEEXE) $^ -o $@\n%.o:   %.cpp\n	$(COMPILE.C) $&lt; -o $@\nclean:\n	rm -f *.o $(EXE)</pre><br>\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n1、编译动态库</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas,\'Courier New\',Courier,mono,serif; width:936.53125px; overflow:auto; padding-top:1px; line-height:26px; margin:18px 0px!important; background-color:rgb(231,229,220)\">\r\n<div class=\"bar\" style=\"padding-left:45px\">\r\n<div class=\"tools\" style=\"padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; border-left-width:3px; border-left-style:solid; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248)\">\r\n<strong>[plain]</strong>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"ViewSource\" title=\"view plain\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">view\r\n plain</a><a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">copy</a>\r\n<div style=\"position:absolute; left:412px; top:521px; width:18px; height:18px; z-index:99\">\r\n</div>\r\n</div>\r\n</div>\r\n<ol start=\"1\" style=\"padding:0px; border:none; list-style-position:initial; color:rgb(92,92,92); margin:0px 0px 1px 45px!important; background-color:rgb(255,255,255)\">\r\n<li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\"><span style=\"margin:0px; padding:0px; border:none; background-color:inherit\">#############################################################&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;Makefile&nbsp;for&nbsp;shared&nbsp;library.&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;编译动态链接库&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#############################################################&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;own&nbsp;environment&nbsp;option&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC&nbsp;=&nbsp;g&#43;&#43;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC_FLAG&nbsp;=&nbsp;-D_NOMNG&nbsp;-D_FILELINE&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;inc&nbsp;and&nbsp;lib&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">INC&nbsp;=&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">LIB&nbsp;=&nbsp;-lpthread&nbsp;-L./&nbsp;-lsvrtool&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#make&nbsp;target&nbsp;lib&nbsp;and&nbsp;relevant&nbsp;obj&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">PRG&nbsp;=&nbsp;libsvrtool.so&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">OBJ&nbsp;=&nbsp;Log.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#all&nbsp;target&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">all:$(PRG)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">$(PRG):$(OBJ)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;-shared&nbsp;-o&nbsp;$@&nbsp;$(OBJ)&nbsp;$(LIB)&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.SUFFIXES:&nbsp;.c&nbsp;.o&nbsp;.cpp&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.cpp.o:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(CC_FLAG)&nbsp;$(INC)&nbsp;-c&nbsp;$*.cpp&nbsp;-o&nbsp;$*.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.PRONY:clean&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">clean:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;@echo&nbsp;&quot;Removing&nbsp;linked&nbsp;and&nbsp;compiled&nbsp;files......;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;rm&nbsp;-f&nbsp;$(OBJ)&nbsp;$(PRG)&nbsp;&nbsp;</span></li></ol>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n2、编译静态库</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas,\'Courier New\',Courier,mono,serif; width:936.53125px; overflow:auto; padding-top:1px; line-height:26px; margin:18px 0px!important; background-color:rgb(231,229,220)\">\r\n<div class=\"bar\" style=\"padding-left:45px\">\r\n<div class=\"tools\" style=\"padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; border-left-width:3px; border-left-style:solid; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248)\">\r\n<strong>[plain]</strong>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"ViewSource\" title=\"view plain\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">view\r\n plain</a><a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">copy</a>\r\n<div style=\"position:absolute; left:412px; top:1156px; width:18px; height:18px; z-index:99\">\r\n</div>\r\n</div>\r\n</div>\r\n<ol start=\"1\" style=\"padding:0px; border:none; list-style-position:initial; color:rgb(92,92,92); margin:0px 0px 1px 45px!important; background-color:rgb(255,255,255)\">\r\n<li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\"><span style=\"margin:0px; padding:0px; border:none; background-color:inherit\">#############################################################&nbsp;&nbsp;</span></span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;Makefile&nbsp;for&nbsp;static&nbsp;library.&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;编译静态链接库&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#############################################################&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;own&nbsp;environment&nbsp;option&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC&nbsp;=&nbsp;g&#43;&#43;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC_FLAG&nbsp;=&nbsp;-D_NOMNG&nbsp;-D_FILELINE&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#static&nbsp;library&nbsp;use&nbsp;\'ar\'&nbsp;command&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">AR&nbsp;=&nbsp;ar&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;inc&nbsp;and&nbsp;lib&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">INC&nbsp;=&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">LIB&nbsp;=&nbsp;-lpthread&nbsp;-L./&nbsp;-lsvrtool&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#make&nbsp;target&nbsp;lib&nbsp;and&nbsp;relevant&nbsp;obj&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">PRG&nbsp;=&nbsp;libsvrtool.a&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">OBJ&nbsp;=&nbsp;Log.o&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#all&nbsp;target&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">all:$(PRG)&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">$(PRG):$(OBJ)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;${AR}&nbsp;rv&nbsp;${PRG}&nbsp;$?&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.SUFFIXES:&nbsp;.c&nbsp;.o&nbsp;.cpp&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.cpp.o:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(CC_FLAG)&nbsp;$(INC)&nbsp;-c&nbsp;$*.cpp&nbsp;-o&nbsp;$*.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.PRONY:clean&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">clean:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;@echo&nbsp;&quot;Removing&nbsp;linked&nbsp;and&nbsp;compiled&nbsp;files......&quot;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;rm&nbsp;-f&nbsp;$(OBJ)&nbsp;$(PRG)&nbsp;&nbsp;</span></li></ol>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n3、可执行程序</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas,\'Courier New\',Courier,mono,serif; width:936.53125px; overflow:auto; padding-top:1px; line-height:26px; margin:18px 0px!important; background-color:rgb(231,229,220)\">\r\n<div class=\"bar\" style=\"padding-left:45px\">\r\n<div class=\"tools\" style=\"padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; border-left-width:3px; border-left-style:solid; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248)\">\r\n<strong>[plain]</strong>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"ViewSource\" title=\"view plain\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">view\r\n plain</a><a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">copy</a>\r\n<div style=\"position:absolute; left:412px; top:1827px; width:18px; height:18px; z-index:99\">\r\n</div>\r\n</div>\r\n</div>\r\n<ol start=\"1\" style=\"padding:0px; border:none; list-style-position:initial; color:rgb(92,92,92); margin:0px 0px 1px 45px!important; background-color:rgb(255,255,255)\">\r\n<li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\"><span style=\"margin:0px; padding:0px; border:none; background-color:inherit\">###########################################&nbsp;&nbsp;</span></span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#Makefile&nbsp;for&nbsp;simple&nbsp;programs&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">###########################################&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">INC=&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">LIB=&nbsp;-lpthread&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC=CC&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC_FLAG=-Wall&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">PRG=threadpooltest&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">OBJ=CThreadManage.o&nbsp;CThreadPool.o&nbsp;CThread.o&nbsp;CWorkerThread.o&nbsp;threadpooltest.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">$(PRG):$(OBJ)&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(INC)&nbsp;$(LIB)&nbsp;-o&nbsp;$@&nbsp;$(OBJ)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.SUFFIXES:&nbsp;.c&nbsp;.o&nbsp;.cpp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.cpp.o:&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(CC_FLAG)&nbsp;$(INC)&nbsp;-c&nbsp;$*.cpp&nbsp;-o&nbsp;$*.o&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.PRONY:clean&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">clean:&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;@echo&nbsp;&quot;Removing&nbsp;linked&nbsp;and&nbsp;compiled&nbsp;files......&quot;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;rm&nbsp;-f&nbsp;$(OBJ)&nbsp;$(PRG)&nbsp;&nbsp;</span></li><li></li></ol>\r\n</div>\r\n<br>\r\n','\r\n\r\n<p>不带静态库的模板:</p>\r\n<p><pre name=\"code\" class=\"html\">CC   = g++ -g\nCOMPILE.C  = $(CC) -c \nVPATH   = ./\nCXXFLAGS  =  -lgcc_s \nMAKEEXE   = $(CC) $(LDFLAGS)\n\nOBJ   = CLLogger.o CLLoggerTester.o CLStatus.o\nEXE   = winner\n\nall:   $(EXE)\n\n$(EXE):   ${OBJ}\n	$(MAKEEXE) $^ -o $@\n%.o:   %.cpp\n	$(COMPILE.C) $&lt; -o $@\nclean:\n	rm -f *.o $(EXE)</pre><br>\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n1、编译动态库</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas,\'Courier New\',Courier,mono,serif; width:936.53125px; overflow:auto; padding-top:1px; line-height:26px; margin:18px 0px!important; background-color:rgb(231,229,220)\">\r\n<div class=\"bar\" style=\"padding-left:45px\">\r\n<div class=\"tools\" style=\"padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; border-left-width:3px; border-left-style:solid; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248)\">\r\n<strong>[plain]</strong>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"ViewSource\" title=\"view plain\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">view\r\n plain</a><a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">copy</a>\r\n<div style=\"position:absolute; left:412px; top:521px; width:18px; height:18px; z-index:99\">\r\n</div>\r\n</div>\r\n</div>\r\n<ol start=\"1\" style=\"padding:0px; border:none; list-style-position:initial; color:rgb(92,92,92); margin:0px 0px 1px 45px!important; background-color:rgb(255,255,255)\">\r\n<li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\"><span style=\"margin:0px; padding:0px; border:none; background-color:inherit\">#############################################################&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;Makefile&nbsp;for&nbsp;shared&nbsp;library.&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;编译动态链接库&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#############################################################&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;own&nbsp;environment&nbsp;option&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC&nbsp;=&nbsp;g&#43;&#43;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC_FLAG&nbsp;=&nbsp;-D_NOMNG&nbsp;-D_FILELINE&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;inc&nbsp;and&nbsp;lib&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">INC&nbsp;=&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">LIB&nbsp;=&nbsp;-lpthread&nbsp;-L./&nbsp;-lsvrtool&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#make&nbsp;target&nbsp;lib&nbsp;and&nbsp;relevant&nbsp;obj&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">PRG&nbsp;=&nbsp;libsvrtool.so&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">OBJ&nbsp;=&nbsp;Log.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#all&nbsp;target&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">all:$(PRG)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">$(PRG):$(OBJ)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;-shared&nbsp;-o&nbsp;$@&nbsp;$(OBJ)&nbsp;$(LIB)&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.SUFFIXES:&nbsp;.c&nbsp;.o&nbsp;.cpp&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.cpp.o:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(CC_FLAG)&nbsp;$(INC)&nbsp;-c&nbsp;$*.cpp&nbsp;-o&nbsp;$*.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.PRONY:clean&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">clean:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;@echo&nbsp;&quot;Removing&nbsp;linked&nbsp;and&nbsp;compiled&nbsp;files......;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;rm&nbsp;-f&nbsp;$(OBJ)&nbsp;$(PRG)&nbsp;&nbsp;</span></li></ol>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n2、编译静态库</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas,\'Courier New\',Courier,mono,serif; width:936.53125px; overflow:auto; padding-top:1px; line-height:26px; margin:18px 0px!important; background-color:rgb(231,229,220)\">\r\n<div class=\"bar\" style=\"padding-left:45px\">\r\n<div class=\"tools\" style=\"padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; border-left-width:3px; border-left-style:solid; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248)\">\r\n<strong>[plain]</strong>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"ViewSource\" title=\"view plain\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">view\r\n plain</a><a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">copy</a>\r\n<div style=\"position:absolute; left:412px; top:1156px; width:18px; height:18px; z-index:99\">\r\n</div>\r\n</div>\r\n</div>\r\n<ol start=\"1\" style=\"padding:0px; border:none; list-style-position:initial; color:rgb(92,92,92); margin:0px 0px 1px 45px!important; background-color:rgb(255,255,255)\">\r\n<li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\"><span style=\"margin:0px; padding:0px; border:none; background-color:inherit\">#############################################################&nbsp;&nbsp;</span></span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;Makefile&nbsp;for&nbsp;static&nbsp;library.&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#&nbsp;编译静态链接库&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#############################################################&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;own&nbsp;environment&nbsp;option&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC&nbsp;=&nbsp;g&#43;&#43;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC_FLAG&nbsp;=&nbsp;-D_NOMNG&nbsp;-D_FILELINE&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#static&nbsp;library&nbsp;use&nbsp;\'ar\'&nbsp;command&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">AR&nbsp;=&nbsp;ar&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#set&nbsp;your&nbsp;inc&nbsp;and&nbsp;lib&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">INC&nbsp;=&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">LIB&nbsp;=&nbsp;-lpthread&nbsp;-L./&nbsp;-lsvrtool&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#make&nbsp;target&nbsp;lib&nbsp;and&nbsp;relevant&nbsp;obj&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">PRG&nbsp;=&nbsp;libsvrtool.a&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">OBJ&nbsp;=&nbsp;Log.o&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#all&nbsp;target&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">all:$(PRG)&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">$(PRG):$(OBJ)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;${AR}&nbsp;rv&nbsp;${PRG}&nbsp;$?&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.SUFFIXES:&nbsp;.c&nbsp;.o&nbsp;.cpp&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.cpp.o:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(CC_FLAG)&nbsp;$(INC)&nbsp;-c&nbsp;$*.cpp&nbsp;-o&nbsp;$*.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.PRONY:clean&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">clean:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;@echo&nbsp;&quot;Removing&nbsp;linked&nbsp;and&nbsp;compiled&nbsp;files......&quot;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;rm&nbsp;-f&nbsp;$(OBJ)&nbsp;$(PRG)&nbsp;&nbsp;</span></li></ol>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px\">\r\n3、可执行程序</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas,\'Courier New\',Courier,mono,serif; width:936.53125px; overflow:auto; padding-top:1px; line-height:26px; margin:18px 0px!important; background-color:rgb(231,229,220)\">\r\n<div class=\"bar\" style=\"padding-left:45px\">\r\n<div class=\"tools\" style=\"padding:3px 8px 10px 10px; font-size:9px; line-height:normal; font-family:Verdana,Geneva,Arial,Helvetica,sans-serif; color:silver; border-left-width:3px; border-left-style:solid; border-left-color:rgb(108,226,108); background-color:rgb(248,248,248)\">\r\n<strong>[plain]</strong>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"ViewSource\" title=\"view plain\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">view\r\n plain</a><a target=\"_blank\" href=\"http://blog.csdn.net/lzx_bupt/article/details/7988192#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color:rgb(160,160,160); text-decoration:none; border:none; padding:1px; margin:0px 10px 0px 0px; font-size:9px; display:inline-block; width:16px; height:16px; text-indent:-2000px; background-color:inherit\">copy</a>\r\n<div style=\"position:absolute; left:412px; top:1827px; width:18px; height:18px; z-index:99\">\r\n</div>\r\n</div>\r\n</div>\r\n<ol start=\"1\" style=\"padding:0px; border:none; list-style-position:initial; color:rgb(92,92,92); margin:0px 0px 1px 45px!important; background-color:rgb(255,255,255)\">\r\n<li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\"><span style=\"margin:0px; padding:0px; border:none; background-color:inherit\">###########################################&nbsp;&nbsp;</span></span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">#Makefile&nbsp;for&nbsp;simple&nbsp;programs&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">###########################################&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">INC=&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">LIB=&nbsp;-lpthread&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC=CC&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">CC_FLAG=-Wall&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">PRG=threadpooltest&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">OBJ=CThreadManage.o&nbsp;CThreadPool.o&nbsp;CThread.o&nbsp;CWorkerThread.o&nbsp;threadpooltest.o&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">$(PRG):$(OBJ)&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(INC)&nbsp;$(LIB)&nbsp;-o&nbsp;$@&nbsp;$(OBJ)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.SUFFIXES:&nbsp;.c&nbsp;.o&nbsp;.cpp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.cpp.o:&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;$(CC)&nbsp;$(CC_FLAG)&nbsp;$(INC)&nbsp;-c&nbsp;$*.cpp&nbsp;-o&nbsp;$*.o&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">.PRONY:clean&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">clean:&nbsp;&nbsp;</span></li><li style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important; background-color:rgb(248,248,248)\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;@echo&nbsp;&quot;Removing&nbsp;linked&nbsp;and&nbsp;compiled&nbsp;files......&quot;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style:none none none solid; border-left-width:3px; border-left-color:rgb(108,226,108); list-style:decimal-leading-zero outside; color:inherit; line-height:18px; margin:0px!important; padding:0px 3px 0px 10px!important\">\r\n<span style=\"margin:0px; padding:0px; border:none; color:black; background-color:inherit\">&nbsp;&nbsp;&nbsp;&nbsp;rm&nbsp;-f&nbsp;$(OBJ)&nbsp;$(PRG)&nbsp;&nbsp;</span></li><li></li></ol>\r\n</div>\r\n<br>\r\n',1,'makefile,c++',0,0,'2015-02-02 00:49:42','2015-02-02 00:49:42','2015-02-02 00:49:42'),(60,1,9,'C++ Primer笔记  模板','30577aed9057a40d83a8cdec573b4796',0,'\r\n\r\n<p></p>\r\n1 函数模板&nbsp;<br>\r\ntemplate &lt;typename T&gt;<br>\r\nT compare(const T &amp; v1,const T &amp;v2)<br>\r\n{<br>\r\n<span style=\"white-space:pre\"></span>return ..<br>\r\n}<br>\r\n<br>\r\n<br>\r\n<','\r\n\r\n<p></p>\r\n1 函数模板&nbsp;<br>\r\ntemplate &lt;typename T&gt;<br>\r\nT compare(const T &amp; v1,const T &amp;v2)<br>\r\n{<br>\r\n<span style=\"white-space:pre\"></span>return ..<br>\r\n}<br>\r\n<br>\r\n<br>\r\n<span style=\"color:#ff0000\">编译器承担了为每种类型编写函数的单调工作.</span><br>\r\n<br>\r\n<br>\r\ninline&nbsp;<br>\r\ntemplate&lt;typename T&gt; inline T min(const T&amp;,const T&amp;)<br>\r\n<br>\r\n<br>\r\n2 类模板&nbsp;<br>\r\ntemplate&lt;class T&gt;<br>\r\nclass Q{<br>\r\n&nbsp;T fun();<br>\r\n}<br>\r\n<br>\r\n<br>\r\n3. 形参屏蔽外部变量<br>\r\n&nbsp; &nbsp;模板形参不能在内部重新定义<br>\r\n&nbsp; &nbsp;模板的声明和定义名字可以不相同<br>\r\n<br>\r\n<br>\r\n4<br>\r\n&nbsp;template &lt;clas Parm,class U&gt;<br>\r\n&nbsp; Parm fcn(Parm&amp; array,U value)<br>\r\n&nbsp;{<br>\r\n<span style=\"white-space:pre\"></span>typename Parm::size_type *p;//<span style=\"color:#ff0000\">不知道size_type是否为类型的时候最好加上typename</span><br>\r\n&nbsp; }<br>\r\n<br>\r\n<br>\r\n5 非类型模板形参<br>\r\n&nbsp;template&lt;class T,size_t N&gt;<br>\r\n&nbsp;void array(T (&amp;parm)[N]){}<br>\r\n&nbsp;<br>\r\n&nbsp;调用:<br>\r\n&nbsp;int x[42];<br>\r\narray_init(x);// = array_init(int (&amp;)[42]);<br>\r\n<br>\r\n<br>\r\n<span style=\"color:#ff0000\">6 形参为引用时，数组不能转换为指针</span><br>\r\n<br>\r\n<br>\r\n7 显示指定实参<br>\r\n<br>\r\n<br>\r\n&nbsp;template&lt;class T1,class T2, classs T3&gt;<br>\r\n&nbsp;T3 func(T2,T1)<br>\r\n&nbsp;long func&lt;long ,int ,long &gt;(int,long);<br>\r\n<br>\r\n<br>\r\n8 类外定义模板<br>\r\n<br>\r\n<br>\r\n&nbsp;template &lt;class Type&gt; void Queue&lt;Type&gt;::destroy(){}<br>\r\n<br>\r\n<br>\r\n9 类模板中的友元函数声明<br>\r\n&nbsp;template&lt;class Type&gt; class Bar{<br>\r\n&nbsp; &nbsp;template&lt;class T&gt; friend class FooBar;<br>\r\n&nbsp; &nbsp;template&lt;class T&gt; friend void fun();<br>\r\n}<br>\r\n<br>\r\n<br>\r\n10 模板static 不同类型 不同的copy内存\r\n<p></p>\r\n','\r\n\r\n<p></p>\r\n1 函数模板&nbsp;<br>\r\ntemplate &lt;typename T&gt;<br>\r\nT compare(const T &amp; v1,const T &amp;v2)<br>\r\n{<br>\r\n<span style=\"white-space:pre\"></span>return ..<br>\r\n}<br>\r\n<br>\r\n<br>\r\n<span style=\"color:#ff0000\">编译器承担了为每种类型编写函数的单调工作.</span><br>\r\n<br>\r\n<br>\r\ninline&nbsp;<br>\r\ntemplate&lt;typename T&gt; inline T min(const T&amp;,const T&amp;)<br>\r\n<br>\r\n<br>\r\n2 类模板&nbsp;<br>\r\ntemplate&lt;class T&gt;<br>\r\nclass Q{<br>\r\n&nbsp;T fun();<br>\r\n}<br>\r\n<br>\r\n<br>\r\n3. 形参屏蔽外部变量<br>\r\n&nbsp; &nbsp;模板形参不能在内部重新定义<br>\r\n&nbsp; &nbsp;模板的声明和定义名字可以不相同<br>\r\n<br>\r\n<br>\r\n4<br>\r\n&nbsp;template &lt;clas Parm,class U&gt;<br>\r\n&nbsp; Parm fcn(Parm&amp; array,U value)<br>\r\n&nbsp;{<br>\r\n<span style=\"white-space:pre\"></span>typename Parm::size_type *p;//<span style=\"color:#ff0000\">不知道size_type是否为类型的时候最好加上typename</span><br>\r\n&nbsp; }<br>\r\n<br>\r\n<br>\r\n5 非类型模板形参<br>\r\n&nbsp;template&lt;class T,size_t N&gt;<br>\r\n&nbsp;void array(T (&amp;parm)[N]){}<br>\r\n&nbsp;<br>\r\n&nbsp;调用:<br>\r\n&nbsp;int x[42];<br>\r\narray_init(x);// = array_init(int (&amp;)[42]);<br>\r\n<br>\r\n<br>\r\n<span style=\"color:#ff0000\">6 形参为引用时，数组不能转换为指针</span><br>\r\n<br>\r\n<br>\r\n7 显示指定实参<br>\r\n<br>\r\n<br>\r\n&nbsp;template&lt;class T1,class T2, classs T3&gt;<br>\r\n&nbsp;T3 func(T2,T1)<br>\r\n&nbsp;long func&lt;long ,int ,long &gt;(int,long);<br>\r\n<br>\r\n<br>\r\n8 类外定义模板<br>\r\n<br>\r\n<br>\r\n&nbsp;template &lt;class Type&gt; void Queue&lt;Type&gt;::destroy(){}<br>\r\n<br>\r\n<br>\r\n9 类模板中的友元函数声明<br>\r\n&nbsp;template&lt;class Type&gt; class Bar{<br>\r\n&nbsp; &nbsp;template&lt;class T&gt; friend class FooBar;<br>\r\n&nbsp; &nbsp;template&lt;class T&gt; friend void fun();<br>\r\n}<br>\r\n<br>\r\n<br>\r\n10 模板static 不同类型 不同的copy内存\r\n<p></p>\r\n',1,'c++',0,0,'2015-02-02 00:49:43','2015-02-02 00:49:43','2015-02-02 00:49:43'),(61,1,9,'C++ 中const关键字小记','7c668248367f6537dc2fc6cdad1e5bb0',0,'\r\n\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:12px\">c&#43;&#43;中const用在变量之前，说明该变量为只读，不能赋&#20540;。</span></p>\r','\r\n\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:12px\">c&#43;&#43;中const用在变量之前，说明该变量为只读，不能赋&#20540;。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:12px\">c&#43;&#43;中const用在函数里，分为以下3种情况：</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; strcmp (<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;&nbsp; char&nbsp; *str1,<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;&nbsp;&nbsp; char&nbsp; *str2);</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\"><span style=\"color:rgb(255,0,0)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const</span>&nbsp;&nbsp;&nbsp; int&nbsp; &amp; min (int &nbsp;&amp;, int&nbsp; &amp;);</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void&nbsp; printMessage (char&nbsp; *msg)&nbsp;<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:14px\"><strong>第一种: 出现在参数里面修饰参数</strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px\">出现在函数参数中的const 表示在函数体中不能对这个参数做修改。比如上面的例子中strcmp()&nbsp;函数用来比较两个字符串的大小，在函数体中不应该改变两个参数的&#20540;，所以将它定义为是const 的。const 通常用来限制函数的指针参数，引用和数组参数，而<span style=\"color:rgb(255,0,0)\"><strong>一般形式的参数因为形参和实参本来就不在同一内存空间，所以对形参的修改不会影响实参，因此也没有必要限制函数体不能对参数进行修改。</strong></span></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const 指针可以接受const 和非 const 地址，但是非const 指针只能接受非const 地址。所以const&nbsp; 指针的能力更强一些，所以尽量多用const 指针，这是一种习惯。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:14px\"><strong>第二种:出现在返回&#20540;修饰</strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 函数返回&#20540;为 const&nbsp; 只有用在函数返回为引用的情况。 函数返回&#20540;引用常量表示不能将函数调用表达式作为左&#20540;使用。例如前面讲的返回引用的函数 min( )。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp; int&nbsp; &amp; min ( int&nbsp; &amp;i,&nbsp; int&nbsp; &amp;j);&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">可以对函数调用进行赋&#20540;,因为它返回的是左&#20540;：&nbsp; min ( a ,&nbsp; b&nbsp;)=4;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">但是，如果对函数的返回&#20540;限定为 const&nbsp; 的：const&nbsp; int&nbsp; &amp; min ( int &amp; i, int&nbsp; &amp;j&nbsp;);</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">那么，就不能对 min ( a, b ) 调用进行赋&#20540;了。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:14px\"><strong>第三种:出现在函数()后面</strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在类中，可以为类的成员函数进行如下形式的定义：</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">class&nbsp; classname {</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; member ;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp; public:</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; getMember ( )&nbsp;<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这里,在函数定义头后面加上的 const&nbsp;表示这个函数是一个“只读函数”，函数不能改变类对象的状态，不能改变对象的成员变量的&#20540;。如在函数体中<span style=\"color:rgb(255,0,0)\">不能这么写</span>&nbsp;：</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp; classname :: getmember( )</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp; {&nbsp; member =4 ;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp; member;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp; }</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\"></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px; text-indent:2em\">\r\n<span style=\"font-size:12px\">&nbsp;另外，<strong><span style=\"color:rgb(255,0,0)\">const成员函数也不能在函数中调用其他非const 的函数。</span><span style=\"color:rgb(128,0,128)\">______________________________________________________________________________</span></strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px; text-indent:2em\">\r\n<br>\r\n</p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px; text-indent:2em\">\r\n<span style=\"font-size:12px\">对象.成员函数<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成员函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对/错<br>\r\n1、&nbsp;&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n2、&nbsp;<span style=\"color:rgb(255,0,0)\">&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 错</span>&nbsp;<br>\r\n3、&nbsp;&nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp; const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n4、&nbsp;&nbsp;not-const&nbsp;&nbsp;&nbsp;&nbsp; non-const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n<br>\r\n<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成员函数调用成员函数<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; 成员函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成员函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对/错<br>\r\n5、&nbsp;&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n6、&nbsp;&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; non-const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 错<br>\r\n<span style=\"color:rgb(255,0,0)\">7、&nbsp;&nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp; const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;对<br>\r\n</span>8、&nbsp;&nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp; non-const&nbsp;&nbsp; &nbsp; 对</span></p>\r\n','\r\n\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:12px\">c&#43;&#43;中const用在变量之前，说明该变量为只读，不能赋&#20540;。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:12px\">c&#43;&#43;中const用在函数里，分为以下3种情况：</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; strcmp (<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;&nbsp; char&nbsp; *str1,<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;&nbsp;&nbsp; char&nbsp; *str2);</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\"><span style=\"color:rgb(255,0,0)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const</span>&nbsp;&nbsp;&nbsp; int&nbsp; &amp; min (int &nbsp;&amp;, int&nbsp; &amp;);</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void&nbsp; printMessage (char&nbsp; *msg)&nbsp;<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:14px\"><strong>第一种: 出现在参数里面修饰参数</strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px\">出现在函数参数中的const 表示在函数体中不能对这个参数做修改。比如上面的例子中strcmp()&nbsp;函数用来比较两个字符串的大小，在函数体中不应该改变两个参数的&#20540;，所以将它定义为是const 的。const 通常用来限制函数的指针参数，引用和数组参数，而<span style=\"color:rgb(255,0,0)\"><strong>一般形式的参数因为形参和实参本来就不在同一内存空间，所以对形参的修改不会影响实参，因此也没有必要限制函数体不能对参数进行修改。</strong></span></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const 指针可以接受const 和非 const 地址，但是非const 指针只能接受非const 地址。所以const&nbsp; 指针的能力更强一些，所以尽量多用const 指针，这是一种习惯。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:14px\"><strong>第二种:出现在返回&#20540;修饰</strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 函数返回&#20540;为 const&nbsp; 只有用在函数返回为引用的情况。 函数返回&#20540;引用常量表示不能将函数调用表达式作为左&#20540;使用。例如前面讲的返回引用的函数 min( )。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp; int&nbsp; &amp; min ( int&nbsp; &amp;i,&nbsp; int&nbsp; &amp;j);&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">可以对函数调用进行赋&#20540;,因为它返回的是左&#20540;：&nbsp; min ( a ,&nbsp; b&nbsp;)=4;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">但是，如果对函数的返回&#20540;限定为 const&nbsp; 的：const&nbsp; int&nbsp; &amp; min ( int &amp; i, int&nbsp; &amp;j&nbsp;);</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">那么，就不能对 min ( a, b ) 调用进行赋&#20540;了。</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; line-height:26px\"><span style=\"font-size:14px\"><strong>第三种:出现在函数()后面</strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在类中，可以为类的成员函数进行如下形式的定义：</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">class&nbsp; classname {</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; member ;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp; public:</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; getMember ( )&nbsp;<span style=\"color:rgb(255,0,0)\">const</span>&nbsp;;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">};</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这里,在函数定义头后面加上的 const&nbsp;表示这个函数是一个“只读函数”，函数不能改变类对象的状态，不能改变对象的成员变量的&#20540;。如在函数体中<span style=\"color:rgb(255,0,0)\">不能这么写</span>&nbsp;：</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp; classname :: getmember( )</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp; {&nbsp; member =4 ;&nbsp;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp; member;</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\">&nbsp;&nbsp; }</span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\r\n<span style=\"font-size:12px\"></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px; text-indent:2em\">\r\n<span style=\"font-size:12px\">&nbsp;另外，<strong><span style=\"color:rgb(255,0,0)\">const成员函数也不能在函数中调用其他非const 的函数。</span><span style=\"color:rgb(128,0,128)\">______________________________________________________________________________</span></strong></span></p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px; text-indent:2em\">\r\n<br>\r\n</p>\r\n<p style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px; text-indent:2em\">\r\n<span style=\"font-size:12px\">对象.成员函数<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成员函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对/错<br>\r\n1、&nbsp;&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n2、&nbsp;<span style=\"color:rgb(255,0,0)\">&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 错</span>&nbsp;<br>\r\n3、&nbsp;&nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp; const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n4、&nbsp;&nbsp;not-const&nbsp;&nbsp;&nbsp;&nbsp; non-const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n<br>\r\n<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成员函数调用成员函数<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; 成员函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成员函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对/错<br>\r\n5、&nbsp;&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<br>\r\n6、&nbsp;&nbsp;const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; non-const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 错<br>\r\n<span style=\"color:rgb(255,0,0)\">7、&nbsp;&nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp; const&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;对<br>\r\n</span>8、&nbsp;&nbsp;non-const&nbsp;&nbsp;&nbsp;&nbsp; non-const&nbsp;&nbsp; &nbsp; 对</span></p>\r\n',1,'c++,const',0,0,'2015-02-02 00:49:47','2015-02-02 00:49:47','2015-02-02 00:49:47');
INSERT INTO `blog_post` VALUES (62,1,10,'Vim强大的自动补全YCM','e8df61f1f8e9cca35481533d3e9b259f',0,'\r\n\r\n<div class=\"copyright-area\" style=\"border:0px; margin:0px 0px 10px; padding:10px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif','\r\n\r\n<div class=\"copyright-area\" style=\"border:0px; margin:0px 0px 10px; padding:10px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px; background-color:rgb(240,240,240)\">\r\n</div>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n整合实现了多种插件</h3>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">clang_complete</li><li style=\"border:0px; margin:0px; padding:0px\">AutoComplPop</li><li style=\"border:0px; margin:0px; padding:0px\">Supertab</li><li style=\"border:0px; margin:0px; padding:0px\">neocomplcache</li><li style=\"border:0px; margin:0px; padding:0px\"><a target=\"_blank\" href=\"https://github.com/scrooloose/syntastic\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">Syntastic</a>(类&#20284;功能,仅仅针对c/c&#43;&#43;/obj-c代码)</li></ul>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n支持语言</h3>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">c</li><li style=\"border:0px; margin:0px; padding:0px\">c&#43;&#43;</li><li style=\"border:0px; margin:0px; padding:0px\">obj-c</li><li style=\"border:0px; margin:0px; padding:0px\">c#</li><li style=\"border:0px; margin:0px; padding:0px\">python</li></ul>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n对于其他的语言，会调用vim设置的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">omnifunc</code>来匹配，因此同样支持<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">php</code>,<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">ruby</code>等语言。</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n已知的有 * javascript —-<a target=\"_blank\" href=\"https://github.com/marijnh/tern_for_vim\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">tern_for_vim</a>&nbsp;* ruby/java —-<a target=\"_blank\" href=\"http://eclim.org/\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">eclim</a></p>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n使用效果图</h3>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<a target=\"_blank\" href=\"http://jbcdn2.b0.upaiyun.com/2014/02/1bf91ff084896a667c4931aa516caea4.gif\" rel=\"lightbox[58978]\" title=\"Vim自动补全神器：YouCompleteMe\" class=\"cboxElement\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\"><img class=\"alignnone size-full wp-image-58980\" alt=\"ycmsdfsdgeerg\" src=\"http://jbcdn2.b0.upaiyun.com/2014/02/1bf91ff084896a667c4931aa516caea4.gif\" style=\"border:0px; margin:0px; padding:0px; font-size:0px; color:transparent; vertical-align:middle; max-width:100%; height:auto\"></a></p>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n安装准备</h3>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">最新版的Vim(7.3.584&#43;)，编译时添加&#43;python标志(已经安装的可以通过<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">vim --version</code>查看)</li><li style=\"border:0px; margin:0px; padding:0px\">cmake(mac可以通过<a target=\"_blank\" href=\"http://brew.sh/\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">homebrew</a>安装，<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">brew\r\n install cmake</code>,ubuntu可以通过<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">sudo apt-get install cmake</code>)</li><li style=\"border:0px; margin:0px; padding:0px\">安装<a target=\"_blank\" href=\"https://github.com/gmarik/vundle#about\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">vundle</a>插件，用于安装管理vim的插件</li></ul>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\nmac下快速安装</h3>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n在<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">.vimrc</code>中添加下列代码</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_56331\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">Bundle\r\n</code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'Valloric/YouCompleteMe\'</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n保存退出后打开vim，在正常模式下输入</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_370363\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">:BundleInstall</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n等待<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">vundle</code>将YouCompleteMe安装完成</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n而后进行编译安装：</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_628257\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">cd</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n~/.vim</code><code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">/bundle/YouCompleteMe</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">.</code><code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">/install</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n--clang-completer</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n如果<span style=\"border:0px; margin:0px; padding:0px\">不需要</span>c-family的补全，可以去掉<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">--clang-completer。</code>如果<span style=\"border:0px; margin:0px; padding:0px\">需要</span><code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">c#</code>的补全，请加上<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">--omnisharp-completer。</code></p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n正常来说,YCM会去下载clang的包，如果已经有，也可以用系统<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">--system-libclang。</code></p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n就这样，安装结束。打开vim，如果没有提示YCM未编译，则说明安装已经成功了。</p>\r\n<h2 style=\"border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; font-weight:normal; line-height:36px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n配置</h2>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n不同于很多vim插件，YCM首先需要编译，另外还需要有配置。在vim启动后，YCM会找寻当前路径以及上层路径的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">.ycm_extra_conf.py</code>.在<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">~/.vim/bundle/YouCompleteMe/cpp/ycm/.ycm_extra_conf.py</code>中提供了默认的模板。也可以参考我的(就在模板上改改而已)。不过这个解决了标准库提示找不到的问题。</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n&nbsp;</p>\r\n<h2 style=\"border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; font-weight:normal; line-height:36px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\nYouCompleteMe提供的其他功能</h2>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\nYCM除了提供了基本的补全功能,自动提示错误的功能外,还提供了类&#20284;tags的功能：</p>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">跳转到定义<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">GoToDefinition</code></li><li style=\"border:0px; margin:0px; padding:0px\">跳转到声明<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">GoToDeclaration</code></li><li style=\"border:0px; margin:0px; padding:0px\">以及两者的合体<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">GoToDefinitionElseDeclaration</code></li></ul>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n可以在.vimrc中配置相应的快捷键。</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_73882\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gl :YcmCompleter GoToDeclaration&lt;CR&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gf :YcmCompleter GoToDefinition&lt;CR&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gg :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n另外，YCM也提供了丰富的配置选项，同样在.vimrc中配置。具体请<a target=\"_blank\" href=\"https://github.com/Valloric/YouCompleteMe#options\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">参考</a></p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_977301\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_error_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;&gt;\'</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_warning_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;*\'</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n同时，YCM可以打开location-list来显示警告和错误的信息<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">:YcmDiags。</code>个人关于ycm的配置如下：</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_130700\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n<div class=\"line number6 index5 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n6</div>\r\n<div class=\"line number7 index6 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n7</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">&quot;\r\n</code><code class=\"shell keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important; background:none!important\">for</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\nycm</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_error_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;&gt;\'</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_warning_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;*\'</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gl :YcmCompleter GoToDeclaration&lt;CR&gt;</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gf :YcmCompleter GoToDefinition&lt;CR&gt;</code></div>\r\n<div class=\"line number6 index5 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gg :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</code></div>\r\n<div class=\"line number7 index6 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nmap\r\n &lt;F4&gt; :YcmDiags&lt;CR&gt;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\nYCM提供的跳跃功能采用了vim的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">jumplist，</code>往前跳和往后跳的快捷键为<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">Ctrl&#43;O</code>以及<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">Ctrl&#43;I。</code></p>\r\n<h2 style=\"border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; font-weight:normal; line-height:36px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n总结</h2>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">YouCompleteMe</code>是我用过的最爽的一个自动补全的插件了。之前使用acp时，遇到大文件基本上就卡死了，以至于都不怎么敢使用。由于YCM使用的时C/S结构，部分使用vim脚本编写，部分认为原生代码，使得跑起来速度飞快。</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<span style=\"border:0px; margin:0px; padding:0px\">抛弃</span>Vim自带的坑爹的补全吧，<span style=\"border:0px; margin:0px; padding:0px\">抛弃</span><code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">ctags</code>吧，<span style=\"border:0px; margin:0px; padding:0px\">抛弃</span><code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">cscope</code>吧，YCM才是<span style=\"border:0px; margin:0px; padding:0px\">终极</span>的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">补全神器。</code></p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n在安装过程中,我也遇到了不少的坑。一会会发一篇解决这些坑的文章。</p>\r\n<div class=\"copyright-area\" style=\"border:0px; margin:0px 0px 10px; padding:10px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px; background-color:rgb(240,240,240)\">\r\n<br>\r\n</div>\r\n','\r\n\r\n<div class=\"copyright-area\" style=\"border:0px; margin:0px 0px 10px; padding:10px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px; background-color:rgb(240,240,240)\">\r\n</div>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n整合实现了多种插件</h3>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">clang_complete</li><li style=\"border:0px; margin:0px; padding:0px\">AutoComplPop</li><li style=\"border:0px; margin:0px; padding:0px\">Supertab</li><li style=\"border:0px; margin:0px; padding:0px\">neocomplcache</li><li style=\"border:0px; margin:0px; padding:0px\"><a target=\"_blank\" href=\"https://github.com/scrooloose/syntastic\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">Syntastic</a>(类&#20284;功能,仅仅针对c/c&#43;&#43;/obj-c代码)</li></ul>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n支持语言</h3>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">c</li><li style=\"border:0px; margin:0px; padding:0px\">c&#43;&#43;</li><li style=\"border:0px; margin:0px; padding:0px\">obj-c</li><li style=\"border:0px; margin:0px; padding:0px\">c#</li><li style=\"border:0px; margin:0px; padding:0px\">python</li></ul>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n对于其他的语言，会调用vim设置的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">omnifunc</code>来匹配，因此同样支持<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">php</code>,<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">ruby</code>等语言。</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n已知的有 * javascript —-<a target=\"_blank\" href=\"https://github.com/marijnh/tern_for_vim\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">tern_for_vim</a>&nbsp;* ruby/java —-<a target=\"_blank\" href=\"http://eclim.org/\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">eclim</a></p>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n使用效果图</h3>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<a target=\"_blank\" href=\"http://jbcdn2.b0.upaiyun.com/2014/02/1bf91ff084896a667c4931aa516caea4.gif\" rel=\"lightbox[58978]\" title=\"Vim自动补全神器：YouCompleteMe\" class=\"cboxElement\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\"><img class=\"alignnone size-full wp-image-58980\" alt=\"ycmsdfsdgeerg\" src=\"http://jbcdn2.b0.upaiyun.com/2014/02/1bf91ff084896a667c4931aa516caea4.gif\" style=\"border:0px; margin:0px; padding:0px; font-size:0px; color:transparent; vertical-align:middle; max-width:100%; height:auto\"></a></p>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n安装准备</h3>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">最新版的Vim(7.3.584&#43;)，编译时添加&#43;python标志(已经安装的可以通过<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">vim --version</code>查看)</li><li style=\"border:0px; margin:0px; padding:0px\">cmake(mac可以通过<a target=\"_blank\" href=\"http://brew.sh/\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">homebrew</a>安装，<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">brew\r\n install cmake</code>,ubuntu可以通过<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">sudo apt-get install cmake</code>)</li><li style=\"border:0px; margin:0px; padding:0px\">安装<a target=\"_blank\" href=\"https://github.com/gmarik/vundle#about\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">vundle</a>插件，用于安装管理vim的插件</li></ul>\r\n<h3 style=\"border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; font-weight:normal; line-height:30px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\nmac下快速安装</h3>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n在<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">.vimrc</code>中添加下列代码</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_56331\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">Bundle\r\n</code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'Valloric/YouCompleteMe\'</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n保存退出后打开vim，在正常模式下输入</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_370363\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">:BundleInstall</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n等待<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">vundle</code>将YouCompleteMe安装完成</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n而后进行编译安装：</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_628257\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">cd</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n~/.vim</code><code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">/bundle/YouCompleteMe</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">.</code><code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">/install</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n--clang-completer</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n如果<span style=\"border:0px; margin:0px; padding:0px\">不需要</span>c-family的补全，可以去掉<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">--clang-completer。</code>如果<span style=\"border:0px; margin:0px; padding:0px\">需要</span><code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">c#</code>的补全，请加上<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">--omnisharp-completer。</code></p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n正常来说,YCM会去下载clang的包，如果已经有，也可以用系统<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">--system-libclang。</code></p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n就这样，安装结束。打开vim，如果没有提示YCM未编译，则说明安装已经成功了。</p>\r\n<h2 style=\"border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; font-weight:normal; line-height:36px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n配置</h2>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n不同于很多vim插件，YCM首先需要编译，另外还需要有配置。在vim启动后，YCM会找寻当前路径以及上层路径的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">.ycm_extra_conf.py</code>.在<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">~/.vim/bundle/YouCompleteMe/cpp/ycm/.ycm_extra_conf.py</code>中提供了默认的模板。也可以参考我的(就在模板上改改而已)。不过这个解决了标准库提示找不到的问题。</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n&nbsp;</p>\r\n<h2 style=\"border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; font-weight:normal; line-height:36px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\nYouCompleteMe提供的其他功能</h2>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\nYCM除了提供了基本的补全功能,自动提示错误的功能外,还提供了类&#20284;tags的功能：</p>\r\n<ul style=\"border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<li style=\"border:0px; margin:0px; padding:0px\">跳转到定义<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">GoToDefinition</code></li><li style=\"border:0px; margin:0px; padding:0px\">跳转到声明<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">GoToDeclaration</code></li><li style=\"border:0px; margin:0px; padding:0px\">以及两者的合体<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">GoToDefinitionElseDeclaration</code></li></ul>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n可以在.vimrc中配置相应的快捷键。</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_73882\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gl :YcmCompleter GoToDeclaration&lt;CR&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gf :YcmCompleter GoToDefinition&lt;CR&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gg :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n另外，YCM也提供了丰富的配置选项，同样在.vimrc中配置。具体请<a target=\"_blank\" href=\"https://github.com/Valloric/YouCompleteMe#options\" style=\"border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)\">参考</a></p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_977301\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_error_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;&gt;\'</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_warning_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;*\'</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n同时，YCM可以打开location-list来显示警告和错误的信息<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">:YcmDiags。</code>个人关于ycm的配置如下：</p>\r\n<div style=\"border:0px; margin:0px; padding:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<div id=\"highlighter_130700\" class=\"syntaxhighlighter notranslate shell\" style=\"border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<tbody style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<tr style=\"border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\n<td class=\"gutter\" style=\"border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n1</div>\r\n<div class=\"line number2 index1 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n2</div>\r\n<div class=\"line number3 index2 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n3</div>\r\n<div class=\"line number4 index3 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n4</div>\r\n<div class=\"line number5 index4 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n5</div>\r\n<div class=\"line number6 index5 alt1\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n6</div>\r\n<div class=\"line number7 index6 alt2\" style=\"border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n7</div>\r\n</td>\r\n<td class=\"code\" style=\"width:591px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"container\" style=\"margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important; background:none!important\">\r\n<div class=\"line number1 index0 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">&quot;\r\n</code><code class=\"shell keyword\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important; background:none!important\">for</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\nycm</code></div>\r\n<div class=\"line number2 index1 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_error_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;&gt;\'</code></div>\r\n<div class=\"line number3 index2 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell functions\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(255,20,147)!important; background:none!important\">let</code>\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">\r\ng:ycm_warning_symbol = </code><code class=\"shell string\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important; background:none!important\">\'&gt;*\'</code></div>\r\n<div class=\"line number4 index3 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gl :YcmCompleter GoToDeclaration&lt;CR&gt;</code></div>\r\n<div class=\"line number5 index4 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gf :YcmCompleter GoToDefinition&lt;CR&gt;</code></div>\r\n<div class=\"line number6 index5 alt1\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nnoremap\r\n &lt;leader&gt;gg :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</code></div>\r\n<div class=\"line number7 index6 alt2\" style=\"border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important\">\r\n<code class=\"shell plain\" style=\"border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,\'Bitstream Vera Sans Mono\',\'Courier New\',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; background:none!important\">nmap\r\n &lt;F4&gt; :YcmDiags&lt;CR&gt;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\nYCM提供的跳跃功能采用了vim的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">jumplist，</code>往前跳和往后跳的快捷键为<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">Ctrl&#43;O</code>以及<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">Ctrl&#43;I。</code></p>\r\n<h2 style=\"border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; font-weight:normal; line-height:36px; font-family:\'Microsoft YaHei\',\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif\">\r\n总结</h2>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">YouCompleteMe</code>是我用过的最爽的一个自动补全的插件了。之前使用acp时，遇到大文件基本上就卡死了，以至于都不怎么敢使用。由于YCM使用的时C/S结构，部分使用vim脚本编写，部分认为原生代码，使得跑起来速度飞快。</p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n<span style=\"border:0px; margin:0px; padding:0px\">抛弃</span>Vim自带的坑爹的补全吧，<span style=\"border:0px; margin:0px; padding:0px\">抛弃</span><code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">ctags</code>吧，<span style=\"border:0px; margin:0px; padding:0px\">抛弃</span><code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">cscope</code>吧，YCM才是<span style=\"border:0px; margin:0px; padding:0px\">终极</span>的<code style=\"border:0px; margin:0px; padding:0px; font-family:Monaco,Consolas,\'Andale Mono\',\'DejaVu Sans Mono\',monospace\">补全神器。</code></p>\r\n<p style=\"border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px\">\r\n在安装过程中,我也遇到了不少的坑。一会会发一篇解决这些坑的文章。</p>\r\n<div class=\"copyright-area\" style=\"border:0px; margin:0px 0px 10px; padding:10px; font-size:14px; font-family:\'Microsoft YaHei\',宋体,\'Myriad Pro\',Lato,\'Helvetica Neue\',Helvetica,Arial,sans-serif; line-height:21px; background-color:rgb(240,240,240)\">\r\n<br>\r\n</div>\r\n',1,'vim',0,0,'2015-02-02 00:51:10','2015-02-02 00:51:10','2015-02-02 00:51:10'),(63,1,10,'Ubuntu备份系统','b734c5d0395448829c47a0ae08d3cb9a',0,'\r\n\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在 使用Ubuntu之前，相信很多人都有过使用Windows系统','\r\n\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在 使用Ubuntu之前，相信很多人都有过使用Windows系统的经历。如果你备份过Windows系统，那么你一定记忆犹新：首先需要找到一个备份工 具(通常都是私有软件)，然后重启电脑进入备份工具提供的软件环境，在这里备份或者恢复Windows系统。Norton Ghost是备份Windows系统时经常使用的备份工具。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在备份Windows系统的时候你可能想过，我能不能把整个C盘都放到一个ZIP文件里去呢。这在Windows下是不可能的，因为在Windows中有很多文件在它们运行时是不允许拷贝或覆盖的，因此你需要专门的备份工具对Windows系统进行特殊处理。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n和 备份Windows系统不同，如果你要备份Ubuntu系统(或者其它任何Linux系统)，你不再需要像Ghost这类备份工具。事实上，Ghost 这类备份工具对于Linux文件系统的支持很糟糕，例如一些Ghost版本只能完善地支持Ext2文件系统，如果你用它来备份Ext3文件系统，你可能会 丢失一些宝贵的数据。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n1. 备份系统</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n我该如何备份我的Ubuntu系统呢？很简单，就像你备份或压缩其它东西一样，使用TAR。和Windows不同，Linux不会限制root访问任何东西，你可以把分区上的所有东西都扔到一个TAR文件里去！</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n首先成为root用户：<br>\r\n$ sudo su</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n然后进入文件系统的根目录(当然，如果你不想备份整个文件系统，你也可以进入你想要备份的目录，包括远程目录或者移动硬盘上的目录)：<br>\r\n# cd /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n下面是我用来备份系统的完整命令：<br>\r\n# tar cvpzf backup.tgz –exclude=/proc –exclude=/lost&#43;found –exclude=/backup.tgz –exclude=/mnt –exclude=/sys /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n让我们来简单看一下这个命令：</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“tar”当然就是我们备份系统所使用的程序了。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“cvpfz”是tar的选项，意思是“创建档案文件”、“保持权限”(保留所有东西原来的权限)、“使用gzip来减小文件尺寸”。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“backup.gz”是我们将要得到的档案文件的文件名。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“/”是我们要备份的目录，在这里是整个文件系统。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在 档案文件名“backup.gz”和要备份的目录名“/”之间给出了备份时必须排除在外的目录。有些目录是无用的，例如“/proc”、“/lost&#43; found”、“/sys”。当然，“backup.gz”这个档案文件本身必须排除在外，否则你可能会得到一些超出常理的结果。如果不把“/mnt”排 除在外，那么挂载在“/mnt”上的其它分区也会被备份。另外需要确认一下“/media”上没有挂载任何东西(例如光盘、移动硬盘)，如果有挂载东西， 必须把“/media”也排除在外。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n有人可能会建议你把“/dev”目录排除在外，但是我认为这样做很不妥，具体原因这里就不讨论了。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n执行备份命令之前请再确认一下你所键入的命令是不是你想要的。执行备份命令可能需要一段不短的时间。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n备份完成后，在文件系统的根目录将生成一个名为“backup.tgz”的文件，它的尺寸有可能非常大。现在你可以把它烧录到DVD上或者放到你认为安全的地方去。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在备份命令结束时你可能会看到这样一个提示：’tar: Error exit delayed from previous errors’，多数情况下你可以忽略它。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n你还可以用Bzip2来压缩文件，Bzip2比gzip的压缩率高，但是速度慢一些。如果压缩率对你来说很重要，那么你应该使用Bzip2，用“j”代替命令中的“z”，并且给档案文件一个正确的扩展名“bz2”。完整的命令如下：<br>\r\n# tar cvpjf backup.tar.bz2 –exclude=/proc –exclude=/lost&#43;found –exclude=/backup.tar.bz2 –exclude=/mnt –exclude=/sys /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n2. 恢复系统</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在进行恢复系统的操作时一定要小心！如果你不清楚自己在做什么，那么你有可能把重要的数据弄丢，请务必小心！</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n接着上面的例子。切换到root用户，并把文件“backup.tgz”拷贝到分区的根目录下。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在 Linux中有一件很美妙的事情，就是你可以在一个运行的系统中恢复系统，而不需要用boot-cd来专门引导。当然，如果你的系统已经挂掉不能启动了， 你可以用Live CD来启动，效果是一样的。你还可以用一个命令把Linux系统中的所有文件干掉，当然在这里我不打算给出这个命令！</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n使用下面的命令来恢复系统：<br>\r\n# tar xvpfz backup.tgz -C /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n如果你的档案文件是使用Bzip2压缩的，应该用：<br>\r\n# tar xvpfj backup.tar.bz2 -C /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n注意：上面的命令会用档案文件中的文件覆盖分区上的所有文件。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n执行恢复命令之前请再确认一下你所键入的命令是不是你想要的，执行恢复命令可能需要一段不短的时间。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n恢复命令结束时，你的工作还没完成，别忘了重新创建那些在备份时被排除在外的目录：<br>\r\n# mkdir proc<br>\r\n# mkdir lost&#43;found<br>\r\n# mkdir mnt<br>\r\n# mkdir sys<br>\r\n等等</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n当你重启电脑，你会发现一切东西恢复到你创建备份时的样子了！</p>\r\n','\r\n\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在 使用Ubuntu之前，相信很多人都有过使用Windows系统的经历。如果你备份过Windows系统，那么你一定记忆犹新：首先需要找到一个备份工 具(通常都是私有软件)，然后重启电脑进入备份工具提供的软件环境，在这里备份或者恢复Windows系统。Norton Ghost是备份Windows系统时经常使用的备份工具。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在备份Windows系统的时候你可能想过，我能不能把整个C盘都放到一个ZIP文件里去呢。这在Windows下是不可能的，因为在Windows中有很多文件在它们运行时是不允许拷贝或覆盖的，因此你需要专门的备份工具对Windows系统进行特殊处理。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n和 备份Windows系统不同，如果你要备份Ubuntu系统(或者其它任何Linux系统)，你不再需要像Ghost这类备份工具。事实上，Ghost 这类备份工具对于Linux文件系统的支持很糟糕，例如一些Ghost版本只能完善地支持Ext2文件系统，如果你用它来备份Ext3文件系统，你可能会 丢失一些宝贵的数据。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n1. 备份系统</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n我该如何备份我的Ubuntu系统呢？很简单，就像你备份或压缩其它东西一样，使用TAR。和Windows不同，Linux不会限制root访问任何东西，你可以把分区上的所有东西都扔到一个TAR文件里去！</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n首先成为root用户：<br>\r\n$ sudo su</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n然后进入文件系统的根目录(当然，如果你不想备份整个文件系统，你也可以进入你想要备份的目录，包括远程目录或者移动硬盘上的目录)：<br>\r\n# cd /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n下面是我用来备份系统的完整命令：<br>\r\n# tar cvpzf backup.tgz –exclude=/proc –exclude=/lost&#43;found –exclude=/backup.tgz –exclude=/mnt –exclude=/sys /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n让我们来简单看一下这个命令：</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“tar”当然就是我们备份系统所使用的程序了。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“cvpfz”是tar的选项，意思是“创建档案文件”、“保持权限”(保留所有东西原来的权限)、“使用gzip来减小文件尺寸”。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“backup.gz”是我们将要得到的档案文件的文件名。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n“/”是我们要备份的目录，在这里是整个文件系统。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在 档案文件名“backup.gz”和要备份的目录名“/”之间给出了备份时必须排除在外的目录。有些目录是无用的，例如“/proc”、“/lost&#43; found”、“/sys”。当然，“backup.gz”这个档案文件本身必须排除在外，否则你可能会得到一些超出常理的结果。如果不把“/mnt”排 除在外，那么挂载在“/mnt”上的其它分区也会被备份。另外需要确认一下“/media”上没有挂载任何东西(例如光盘、移动硬盘)，如果有挂载东西， 必须把“/media”也排除在外。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n有人可能会建议你把“/dev”目录排除在外，但是我认为这样做很不妥，具体原因这里就不讨论了。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n执行备份命令之前请再确认一下你所键入的命令是不是你想要的。执行备份命令可能需要一段不短的时间。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n备份完成后，在文件系统的根目录将生成一个名为“backup.tgz”的文件，它的尺寸有可能非常大。现在你可以把它烧录到DVD上或者放到你认为安全的地方去。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在备份命令结束时你可能会看到这样一个提示：’tar: Error exit delayed from previous errors’，多数情况下你可以忽略它。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n你还可以用Bzip2来压缩文件，Bzip2比gzip的压缩率高，但是速度慢一些。如果压缩率对你来说很重要，那么你应该使用Bzip2，用“j”代替命令中的“z”，并且给档案文件一个正确的扩展名“bz2”。完整的命令如下：<br>\r\n# tar cvpjf backup.tar.bz2 –exclude=/proc –exclude=/lost&#43;found –exclude=/backup.tar.bz2 –exclude=/mnt –exclude=/sys /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n2. 恢复系统</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在进行恢复系统的操作时一定要小心！如果你不清楚自己在做什么，那么你有可能把重要的数据弄丢，请务必小心！</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n接着上面的例子。切换到root用户，并把文件“backup.tgz”拷贝到分区的根目录下。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n在 Linux中有一件很美妙的事情，就是你可以在一个运行的系统中恢复系统，而不需要用boot-cd来专门引导。当然，如果你的系统已经挂掉不能启动了， 你可以用Live CD来启动，效果是一样的。你还可以用一个命令把Linux系统中的所有文件干掉，当然在这里我不打算给出这个命令！</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n使用下面的命令来恢复系统：<br>\r\n# tar xvpfz backup.tgz -C /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n如果你的档案文件是使用Bzip2压缩的，应该用：<br>\r\n# tar xvpfj backup.tar.bz2 -C /</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n注意：上面的命令会用档案文件中的文件覆盖分区上的所有文件。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n执行恢复命令之前请再确认一下你所键入的命令是不是你想要的，执行恢复命令可能需要一段不短的时间。</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n恢复命令结束时，你的工作还没完成，别忘了重新创建那些在备份时被排除在外的目录：<br>\r\n# mkdir proc<br>\r\n# mkdir lost&#43;found<br>\r\n# mkdir mnt<br>\r\n# mkdir sys<br>\r\n等等</p>\r\n<p style=\"margin:10px auto; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px; line-height:25.2000007629395px\">\r\n当你重启电脑，你会发现一切东西恢复到你创建备份时的样子了！</p>\r\n',2,'ubuntu,文件系统,硬盘,压缩',0,0,'2015-02-02 00:51:11','2015-02-02 00:51:11','2015-02-02 00:51:11'),(64,1,10,'Python模拟登陆5:实现图书馆预约功能','ad71c9ce9a11bd522e3f95dcc9e04289',0,'\r\n\r\n<p>经过一晚上的分析，终于实现了预约功能，由于疏忽和测试太多了 还提交了些错误的数据，这里纯粹是为了做个笔记，不做任何违反图书馆公共次','\r\n\r\n<p>经过一晚上的分析，终于实现了预约功能，由于疏忽和测试太多了 还提交了些错误的数据，这里纯粹是为了做个笔记，不做任何违反图书馆公共次序的用途 因此部分链接打码。</p>\r\n<p>主要流程： 登陆图书馆-进入预约系统-查询师是否能够预约-查询空余房间-开始预约-失败重新循环。</p>\r\n<p><pre code_snippet_id=\"578009\" snippet_file_name=\"blog_20150112_1_6350506\"  name=\"code\" class=\"html\">#-*- coding: utf-8 -*-\n#!usr/bin/env python\nimport os\nimport urllib2\nimport urllib\nimport cookielib\nimport re\nfrom bs4 import BeautifulSoup\n\nLogin_URL=&#39;http://xxxx&#39;\nMain_URL=&#39;http://xxxx/Florms/FormSYS.aspx&#39;\nusername=&#39;XXXXX&#39;\npassword=&#39;XXX&#39;\nroomNum=&#39;20200xxxx&#39;\nroomId=[&#39;309&#39;,&#39;310&#39;,&#39;311&#39;,&#39;307&#39;,]\nday=&#39;2015-XXXX&#39;\ndef login():\n    Seats_URL=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSubmitWindow.aspx?parameters=&#39;\n    cj = cookielib.CookieJar()\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))\n    urllib2.install_opener(opener)\n    pre_response=opener.open(Login_URL)\n    soup=BeautifulSoup(pre_response.read())\n    div=soup.find(id=&#39;__EVENTVALIDATION&#39;)\n    attr1=dict(div.attrs)[&#39;value&#39;]\n    #print attr1\n    div=soup.find(id=&#39;__VIEWSTATE&#39;)\n    attr2=dict(div.attrs)[&#39;value&#39;]\n    #print attr2\n    #login\n    LoginData = {\n            &#39;txtUserName&#39;:username,\n            &#39;txtPassword&#39;:password,\n            &#39;__EVENTVALIDATION&#39;:attr1,\n            &#39;__VIEWSTATE&#39;:attr2,\n            &#39;cmdOK.x&#39;:&#39;40&#39;,\n            &#39;cmdOK.y&#39;:&#39;14&#39;,\n            }; \n    login_req = urllib2.Request(Login_URL, urllib.urlencode(LoginData));\n    login_req.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n    login_response=opener.open(login_req)\n    print &#39;login success&#39;\n    #get chairinfo\n    while search_seats(day)==False:\n        print &#39;system is not running , waitting &#39;\n    while get_start(Seats_URL,opener)==False:\n        print &#39;try again&#39;\n    print &#39;Success and enjoy&#39;\ndef get_start(Seats_URL,opener):\n    total_chair_args=&#39;&#39;\n    i=0;\n    while total_chair_args==&#39;&#39; and i&lt;len(roomId):\n        total_chair_args=get_chair_info(roomId[i])\n        print &#39;start try roomid of &#39;+roomId[i]\n        if total_chair_args==&#39;&#39;:\n            print roomId[i]+&#39; has been ordered\\n&#39;;\n        i=i+1\n    if total_chair_args==&#39;&#39;:\n        print &#39;All seats has been ordered&#39;\n        return False\n    else:\n        Seats_URL=Seats_URL+total_chair_args\n        print &#39;starting get seats order info&#39;\n        #get order args by header\n        headers={\n                #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n                &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n                &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n                #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n                &#39;Host&#39;: &#39;10.21.16.215&#39;,\n                #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n                &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n                &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeatLayout.aspx?roomId=&#39;+roomNum,\n                &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n        }\n        req = urllib2.Request(Seats_URL,headers=headers);\n        response=urllib2.urlopen(req)\n        result=response.read()\n        #print result\n        #get order info\n        soup=BeautifulSoup(result)\n        div=soup.find(id=&#39;__EVENTVALIDATION&#39;)\n        attr1=dict(div.attrs)[&#39;value&#39;]\n        #print attr1\n        div=soup.find(id=&#39;__VIEWSTATE&#39;)\n        attr2=dict(div.attrs)[&#39;value&#39;]\n        #print attr2\n        #get Seats\n        SeatData = {\n                &#39;__EVENTTARGET&#39;:&#39;ContentPanel1$btnBespeak&#39;,\n                &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n                &#39;__VIEWSTATE&#39;:attr2,\n                &#39;__EVENTVALIDATION&#39;:attr1,\n                &#39;roomOpenTime&#39;:&#39;8:30&#39;,\n                &#39;X_CHANGED&#39;:&#39;false&#39;,\n                &#39;X_TARGET&#39;:&#39;ContentPanel1_btnBespeak&#39;,\n                &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n                &#39;ContentPanel1_Collapsed&#39;:&#39;false&#39;,\n                &#39;X_AJAX&#39;:&#39;true&#39;,\n                #&#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9sYmxSb29tTmFtZSI6eyJUZXh0Ijoi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIn0sIkZvcm0yX2N0bDAxX2xibFNlYXRObyI6eyJUZXh0IjoiMzEzIn0sIkZvcm0yX2N0bDAyX2xibGJlZ2luRGF0ZSI6eyJUZXh0IjoiMjAxNS0xLTEyIn0sIkZvcm0yX2N0bDAzX2xibEVuZERhdGUiOnsiVGV4dCI6Ijc6MDDoh7MxMDowMCJ9fQ==&#39;, \n                }; \n        headers = {\n                &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n                &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n                &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n                &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; chartset=UTF-8&#39;,\n                &#39;Host&#39;: &#39;10.21.16.215&#39;,\n                &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n                &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n                &#39;Referer&#39; :Seats_URL ,\n                &#39;Connection&#39; : &#39;Keep-Alive&#39;\n        }\n        result=get_chair_order(SeatData,headers,opener,Seats_URL)\n        if result.find(&#39;失败&#39;)&gt;=0 or get_log()==False:\n            return False\n        else:\n            return True\n#search seats\ndef search_seats(datetime):\n    postdata={\n        &#39;__EVENTTARGET&#39;:&#39;Form2$ctl00$btnnewdate&#39;,\n        &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n        &#39;__VIEWSTATE&#39;:&#39;/wEPDwUKLTM3MzI4Mzg0MmQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgYFBUZvcm0yBRZGb3JtMiRjdGwwMCRkZGxMaWJyYXJ5BRdGb3JtMiRjdGwwMCRkcFN0YXJ0RGF0ZQUWRm9ybTIkY3RsMDAkYnRubmV3ZGF0ZQUMZ3JpZFJvb21MaXN0BQpXaW5kb3dFZGl05pJoDo97fsj4YPsAfwutGBWhcfnVi5TdDL2VUl7PIH8=&#39;,\n        &#39;Form2$ctl00$ddlLibrary&#39;:&#39;02&#39;,\n        &#39;Form2$ctl00$dpStartDate&#39;:datetime,\n        &#39;X_CHANGED&#39;:&#39;true&#39;,\n        &#39;WindowEdit_Hidden&#39;:&#39;true&#39;,\n        &#39;X_TARGET&#39;:&#39;Form2_ctl00_btnnewdate&#39;,\n        &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_SelectedRowIndexArray&#39;:&#39; &#39;,\n        &#39;WindowEdit_Collapsed&#39;:&#39;false&#39;,\n        &#39;X_AJAX&#39;:&#39;true&#39;,\n        &#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9kZGxMaWJyYXJ5Ijp7IkRhdGFUZXh0RmllbGQiOiJOYW1lIiwiRGF0YVZhbHVlRmllbGQiOiJObyIsIlhfSXRlbXMiOltbIjAxIiwi5rKZ5rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAyIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAzIiwi5Zu+5Lmm6aaG5Yib5paw5a6e6aqM5a6kIiwxXV0sIlNlbGVjdGVkVmFsdWUiOiIwMiJ9LCJGb3JtMl9jdGwwMF9kcFN0YXJ0RGF0ZSI6eyJNaW5EYXRlIjoiMjAxNS0wMS0xM1QwMTowNDo1Ni40OTY1KzA4OjAwIiwiVGV4dCI6IjIwMTUtMDEtMTMifSwiZ3JpZFJvb21MaXN0Ijp7IlJlY29yZENvdW50IjozLCJYX1Jvd3MiOnsiVmFsdWVzIjpbWyIyMDIwMDUiLCLkuozmpbzljZXkurrnoJTkv67lrqQiLCLmuIXmsLTmsrPmoKHljLrlm77kuabppoYiLCIyMiIsIjIyIiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdLFsiMjAyMDA2Iiwi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwiMjQiLCIyNCIsIjxhIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICBjbGFzcz1cIngtaXRlbS1kaXNhYmxlZFwiIGRpc2FibGVkPVwiZGlzYWJsZWRcIj48aW1nIHNyYz1cIi9JbWFnZXMvaWNvbi9idWxsZXRfY3Jvc3MucG5nXCIgIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICAvPjwvYT4iXSxbIjIwMjAwNyIsIuWbm+alvOWNleS6uueglOS/ruWupCIsIua4heawtOays+agoeWMuuWbvuS5pummhiIsIjQiLCI0IiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdXSwiRGF0YUtleXMiOltbbnVsbF0sW251bGxdLFtudWxsXV0sIlN0YXRlcyI6W1tdLFtdLFtdXX19fQ==&#39;,\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;, urllib.urlencode(postdata),headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    if result.find(&#39;zoom.png&#39;)&gt;=0:\n        return True\n    else:\n        return False\n    #out=open(&#39;tt.html&#39;,&#39;w&#39;)\n    #out.write(result)\n#get chair location args\ndef get_chair_info(roomId_):\n    print &#39;start get seats info&#39;\n    room_url=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/SeatLayoutHandle.ashx&#39;\n    #datetime=raw_input(&#39;input your date of tomorrw(2015-01-13):  &#39;)\n    datetime=day\n    datetime=datetime+&#39; 0:00:00&#39;\n    print datetime\n    postdata={\n        &#39;roomNum&#39;:roomNum,\n        &#39;date&#39;:datetime,\n        &#39;divTransparentTop&#39;:&#39;0&#39;,\n        &#39;divTransparentLeft&#39;:&#39;0&#39;\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded;&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeatLayout.aspx?roomId=&#39;+roomNum,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(room_url, urllib.urlencode(postdata),headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    out=open(&#39;info.html&#39;,&#39;w&#39;)\n    out.write(result)\n    soup=BeautifulSoup(result)\n    #roomId\n    div=soup.find(id=roomNum+roomId_)\n    chair_info=dict(div.attrs)[&#39;onclick&#39;]\n    #print chair_info\n    matchObj=re.search(  r&#39;BespeakSeatClick\\((.*?)\\)&#39;, chair_info, re.M|re.I)\n    chair_args=matchObj.group(1)[1:-1]\n    #print chair_args\n    return chair_args\n    #print result\n#get order\ndef get_chair_order(SeatData,headers,opener,Seats_URL):\n    seat_req = urllib2.Request(Seats_URL, urllib.urlencode(SeatData),headers);\n    seat_response=opener.open(seat_req)\n    result=seat_response.read()\n    return result\n#get chair log\ndef get_log():\n    url=&#39;http://10.21.16.215/FunctionPages/ReaderLog/SelectBespeakLog.aspx&#39;;\n    headers={\n            #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(url,headers=headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    #line = &#39;三楼单人研修室&quot;, &quot;304&quot;, &quot;已确认&quot;, &quot;15-01-10 13:00:18&quot;, &quot;15-01-11 08:30:00&quot;, &quot;&quot;, &quot;在&#39;\n    #print result.find(&#39;三楼单人研修室&#39;)\n    #matchObj=re.search(  r&#39;三楼单人研修室(.*?)08:30:00&#39;, result, re.M|re.I)\n    #print matchObj.group(1)\n    p=re.compile(r&#39;&quot;三楼单人研修室&quot;(.*?)08:30:00&#39;)\n    #print p.findall(result)[-1]\n    flag=p.findall(result)[-1].find(&#39;已取消&#39;)\n    if flag&gt;=0:\n        return False\n    else:\n        return True\n\nif __name__==&#39;__main__&#39;:\n    login()\n</pre>PS：仅供学习，如果猜出了地址的 不要作为非法用途。。反正我是黑名单了，。。悲剧<br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>经过一晚上的分析，终于实现了预约功能，由于疏忽和测试太多了 还提交了些错误的数据，这里纯粹是为了做个笔记，不做任何违反图书馆公共次序的用途 因此部分链接打码。</p>\r\n<p>主要流程： 登陆图书馆-进入预约系统-查询师是否能够预约-查询空余房间-开始预约-失败重新循环。</p>\r\n<p><pre code_snippet_id=\"578009\" snippet_file_name=\"blog_20150112_1_6350506\"  name=\"code\" class=\"html\">#-*- coding: utf-8 -*-\n#!usr/bin/env python\nimport os\nimport urllib2\nimport urllib\nimport cookielib\nimport re\nfrom bs4 import BeautifulSoup\n\nLogin_URL=&#39;http://xxxx&#39;\nMain_URL=&#39;http://xxxx/Florms/FormSYS.aspx&#39;\nusername=&#39;XXXXX&#39;\npassword=&#39;XXX&#39;\nroomNum=&#39;20200xxxx&#39;\nroomId=[&#39;309&#39;,&#39;310&#39;,&#39;311&#39;,&#39;307&#39;,]\nday=&#39;2015-XXXX&#39;\ndef login():\n    Seats_URL=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSubmitWindow.aspx?parameters=&#39;\n    cj = cookielib.CookieJar()\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))\n    urllib2.install_opener(opener)\n    pre_response=opener.open(Login_URL)\n    soup=BeautifulSoup(pre_response.read())\n    div=soup.find(id=&#39;__EVENTVALIDATION&#39;)\n    attr1=dict(div.attrs)[&#39;value&#39;]\n    #print attr1\n    div=soup.find(id=&#39;__VIEWSTATE&#39;)\n    attr2=dict(div.attrs)[&#39;value&#39;]\n    #print attr2\n    #login\n    LoginData = {\n            &#39;txtUserName&#39;:username,\n            &#39;txtPassword&#39;:password,\n            &#39;__EVENTVALIDATION&#39;:attr1,\n            &#39;__VIEWSTATE&#39;:attr2,\n            &#39;cmdOK.x&#39;:&#39;40&#39;,\n            &#39;cmdOK.y&#39;:&#39;14&#39;,\n            }; \n    login_req = urllib2.Request(Login_URL, urllib.urlencode(LoginData));\n    login_req.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n    login_response=opener.open(login_req)\n    print &#39;login success&#39;\n    #get chairinfo\n    while search_seats(day)==False:\n        print &#39;system is not running , waitting &#39;\n    while get_start(Seats_URL,opener)==False:\n        print &#39;try again&#39;\n    print &#39;Success and enjoy&#39;\ndef get_start(Seats_URL,opener):\n    total_chair_args=&#39;&#39;\n    i=0;\n    while total_chair_args==&#39;&#39; and i&lt;len(roomId):\n        total_chair_args=get_chair_info(roomId[i])\n        print &#39;start try roomid of &#39;+roomId[i]\n        if total_chair_args==&#39;&#39;:\n            print roomId[i]+&#39; has been ordered\\n&#39;;\n        i=i+1\n    if total_chair_args==&#39;&#39;:\n        print &#39;All seats has been ordered&#39;\n        return False\n    else:\n        Seats_URL=Seats_URL+total_chair_args\n        print &#39;starting get seats order info&#39;\n        #get order args by header\n        headers={\n                #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n                &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n                &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n                #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n                &#39;Host&#39;: &#39;10.21.16.215&#39;,\n                #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n                &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n                &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeatLayout.aspx?roomId=&#39;+roomNum,\n                &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n        }\n        req = urllib2.Request(Seats_URL,headers=headers);\n        response=urllib2.urlopen(req)\n        result=response.read()\n        #print result\n        #get order info\n        soup=BeautifulSoup(result)\n        div=soup.find(id=&#39;__EVENTVALIDATION&#39;)\n        attr1=dict(div.attrs)[&#39;value&#39;]\n        #print attr1\n        div=soup.find(id=&#39;__VIEWSTATE&#39;)\n        attr2=dict(div.attrs)[&#39;value&#39;]\n        #print attr2\n        #get Seats\n        SeatData = {\n                &#39;__EVENTTARGET&#39;:&#39;ContentPanel1$btnBespeak&#39;,\n                &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n                &#39;__VIEWSTATE&#39;:attr2,\n                &#39;__EVENTVALIDATION&#39;:attr1,\n                &#39;roomOpenTime&#39;:&#39;8:30&#39;,\n                &#39;X_CHANGED&#39;:&#39;false&#39;,\n                &#39;X_TARGET&#39;:&#39;ContentPanel1_btnBespeak&#39;,\n                &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n                &#39;ContentPanel1_Collapsed&#39;:&#39;false&#39;,\n                &#39;X_AJAX&#39;:&#39;true&#39;,\n                #&#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9sYmxSb29tTmFtZSI6eyJUZXh0Ijoi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIn0sIkZvcm0yX2N0bDAxX2xibFNlYXRObyI6eyJUZXh0IjoiMzEzIn0sIkZvcm0yX2N0bDAyX2xibGJlZ2luRGF0ZSI6eyJUZXh0IjoiMjAxNS0xLTEyIn0sIkZvcm0yX2N0bDAzX2xibEVuZERhdGUiOnsiVGV4dCI6Ijc6MDDoh7MxMDowMCJ9fQ==&#39;, \n                }; \n        headers = {\n                &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n                &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n                &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n                &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; chartset=UTF-8&#39;,\n                &#39;Host&#39;: &#39;10.21.16.215&#39;,\n                &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n                &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n                &#39;Referer&#39; :Seats_URL ,\n                &#39;Connection&#39; : &#39;Keep-Alive&#39;\n        }\n        result=get_chair_order(SeatData,headers,opener,Seats_URL)\n        if result.find(&#39;失败&#39;)&gt;=0 or get_log()==False:\n            return False\n        else:\n            return True\n#search seats\ndef search_seats(datetime):\n    postdata={\n        &#39;__EVENTTARGET&#39;:&#39;Form2$ctl00$btnnewdate&#39;,\n        &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n        &#39;__VIEWSTATE&#39;:&#39;/wEPDwUKLTM3MzI4Mzg0MmQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgYFBUZvcm0yBRZGb3JtMiRjdGwwMCRkZGxMaWJyYXJ5BRdGb3JtMiRjdGwwMCRkcFN0YXJ0RGF0ZQUWRm9ybTIkY3RsMDAkYnRubmV3ZGF0ZQUMZ3JpZFJvb21MaXN0BQpXaW5kb3dFZGl05pJoDo97fsj4YPsAfwutGBWhcfnVi5TdDL2VUl7PIH8=&#39;,\n        &#39;Form2$ctl00$ddlLibrary&#39;:&#39;02&#39;,\n        &#39;Form2$ctl00$dpStartDate&#39;:datetime,\n        &#39;X_CHANGED&#39;:&#39;true&#39;,\n        &#39;WindowEdit_Hidden&#39;:&#39;true&#39;,\n        &#39;X_TARGET&#39;:&#39;Form2_ctl00_btnnewdate&#39;,\n        &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_SelectedRowIndexArray&#39;:&#39; &#39;,\n        &#39;WindowEdit_Collapsed&#39;:&#39;false&#39;,\n        &#39;X_AJAX&#39;:&#39;true&#39;,\n        &#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9kZGxMaWJyYXJ5Ijp7IkRhdGFUZXh0RmllbGQiOiJOYW1lIiwiRGF0YVZhbHVlRmllbGQiOiJObyIsIlhfSXRlbXMiOltbIjAxIiwi5rKZ5rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAyIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAzIiwi5Zu+5Lmm6aaG5Yib5paw5a6e6aqM5a6kIiwxXV0sIlNlbGVjdGVkVmFsdWUiOiIwMiJ9LCJGb3JtMl9jdGwwMF9kcFN0YXJ0RGF0ZSI6eyJNaW5EYXRlIjoiMjAxNS0wMS0xM1QwMTowNDo1Ni40OTY1KzA4OjAwIiwiVGV4dCI6IjIwMTUtMDEtMTMifSwiZ3JpZFJvb21MaXN0Ijp7IlJlY29yZENvdW50IjozLCJYX1Jvd3MiOnsiVmFsdWVzIjpbWyIyMDIwMDUiLCLkuozmpbzljZXkurrnoJTkv67lrqQiLCLmuIXmsLTmsrPmoKHljLrlm77kuabppoYiLCIyMiIsIjIyIiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdLFsiMjAyMDA2Iiwi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwiMjQiLCIyNCIsIjxhIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICBjbGFzcz1cIngtaXRlbS1kaXNhYmxlZFwiIGRpc2FibGVkPVwiZGlzYWJsZWRcIj48aW1nIHNyYz1cIi9JbWFnZXMvaWNvbi9idWxsZXRfY3Jvc3MucG5nXCIgIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICAvPjwvYT4iXSxbIjIwMjAwNyIsIuWbm+alvOWNleS6uueglOS/ruWupCIsIua4heawtOays+agoeWMuuWbvuS5pummhiIsIjQiLCI0IiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdXSwiRGF0YUtleXMiOltbbnVsbF0sW251bGxdLFtudWxsXV0sIlN0YXRlcyI6W1tdLFtdLFtdXX19fQ==&#39;,\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;, urllib.urlencode(postdata),headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    if result.find(&#39;zoom.png&#39;)&gt;=0:\n        return True\n    else:\n        return False\n    #out=open(&#39;tt.html&#39;,&#39;w&#39;)\n    #out.write(result)\n#get chair location args\ndef get_chair_info(roomId_):\n    print &#39;start get seats info&#39;\n    room_url=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/SeatLayoutHandle.ashx&#39;\n    #datetime=raw_input(&#39;input your date of tomorrw(2015-01-13):  &#39;)\n    datetime=day\n    datetime=datetime+&#39; 0:00:00&#39;\n    print datetime\n    postdata={\n        &#39;roomNum&#39;:roomNum,\n        &#39;date&#39;:datetime,\n        &#39;divTransparentTop&#39;:&#39;0&#39;,\n        &#39;divTransparentLeft&#39;:&#39;0&#39;\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded;&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeatLayout.aspx?roomId=&#39;+roomNum,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(room_url, urllib.urlencode(postdata),headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    out=open(&#39;info.html&#39;,&#39;w&#39;)\n    out.write(result)\n    soup=BeautifulSoup(result)\n    #roomId\n    div=soup.find(id=roomNum+roomId_)\n    chair_info=dict(div.attrs)[&#39;onclick&#39;]\n    #print chair_info\n    matchObj=re.search(  r&#39;BespeakSeatClick\\((.*?)\\)&#39;, chair_info, re.M|re.I)\n    chair_args=matchObj.group(1)[1:-1]\n    #print chair_args\n    return chair_args\n    #print result\n#get order\ndef get_chair_order(SeatData,headers,opener,Seats_URL):\n    seat_req = urllib2.Request(Seats_URL, urllib.urlencode(SeatData),headers);\n    seat_response=opener.open(seat_req)\n    result=seat_response.read()\n    return result\n#get chair log\ndef get_log():\n    url=&#39;http://10.21.16.215/FunctionPages/ReaderLog/SelectBespeakLog.aspx&#39;;\n    headers={\n            #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(url,headers=headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    #line = &#39;三楼单人研修室&quot;, &quot;304&quot;, &quot;已确认&quot;, &quot;15-01-10 13:00:18&quot;, &quot;15-01-11 08:30:00&quot;, &quot;&quot;, &quot;在&#39;\n    #print result.find(&#39;三楼单人研修室&#39;)\n    #matchObj=re.search(  r&#39;三楼单人研修室(.*?)08:30:00&#39;, result, re.M|re.I)\n    #print matchObj.group(1)\n    p=re.compile(r&#39;&quot;三楼单人研修室&quot;(.*?)08:30:00&#39;)\n    #print p.findall(result)[-1]\n    flag=p.findall(result)[-1].find(&#39;已取消&#39;)\n    if flag&gt;=0:\n        return False\n    else:\n        return True\n\nif __name__==&#39;__main__&#39;:\n    login()\n</pre>PS：仅供学习，如果猜出了地址的 不要作为非法用途。。反正我是黑名单了，。。悲剧<br>\r\n<br>\r\n</p>\r\n',1,'python,模拟登陆,python爬虫',0,0,'2015-02-02 00:51:14','2015-02-02 00:51:14','2015-02-02 00:51:14'),(65,1,10,'Python模拟登陆４:进入图书馆预约系统查看是否预约成功','74efdb23b00a8d2526d848fde818662c',0,'\r\n\r\n<p>代码仅供测试方便所用。</p>\r\n<p>这个图书管理系统是asp.net EXTJS写的　在分析页面的时候非常复杂，一度差点放弃。不过还是慢慢的进步。还顺便学','\r\n\r\n<p>代码仅供测试方便所用。</p>\r\n<p>这个图书管理系统是asp.net EXTJS写的　在分析页面的时候非常复杂，一度差点放弃。不过还是慢慢的进步。还顺便学了一下正则表达式。这个代码的作用就是登陆进系统，然后获取预约信息。代码有点乱，以后在整理，这里先存档</p>\r\n<p>这个网址校外ip不能访问，所以代码仅供参考，部分逻辑还是能够套用的</p>\r\n<p><pre code_snippet_id=\"577729\" snippet_file_name=\"blog_20150112_1_7766287\"  name=\"code\" class=\"html\">#-*- coding: utf-8 -*-\n#!usr/bin/env python\nimport os\nimport urllib2\nimport urllib\nimport cookielib\nimport re\nfrom bs4 import BeautifulSoup\n\nLogin_URL=&#39;http://10.21.16.215&#39;\nMain_URL=&#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;\nSeats_URL=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSubmitWindow.aspx?parameters=89B0F70D378F61A7BA0411B5439DBC76521E906832306CE419BCCD5F85380BE374557D246EE19799E9A8992E242BEC3261F078093CE5602B53E9BE3DD0AD5696E85B6BEECD6835BA&#39;\nusername=&#39;ＸＸＸＸ&#39;\npassword=&#39;ＸＸＸＸ&#39;\nroomNum=&#39;202006&#39;\ndef login():\n    cj = cookielib.CookieJar()\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))\n    urllib2.install_opener(opener)\n    pre_response=opener.open(Login_URL)\n    soup=BeautifulSoup(pre_response.read())\n    div=soup.find(id=&#39;__EVENTVALIDATION&#39;)\n    attr1=dict(div.attrs)[&#39;value&#39;]\n    #print attr1\n    div=soup.find(id=&#39;__VIEWSTATE&#39;)\n    attr2=dict(div.attrs)[&#39;value&#39;]\n    #print attr2\n    #login\n    LoginData = {\n            &#39;txtUserName&#39;:username,\n            &#39;txtPassword&#39;:password,\n            &#39;__EVENTVALIDATION&#39;:attr1,\n            &#39;__VIEWSTATE&#39;:attr2,\n            &#39;cmdOK.x&#39;:&#39;40&#39;,\n            &#39;cmdOK.y&#39;:&#39;14&#39;,\n            }; \n    login_req = urllib2.Request(Login_URL, urllib.urlencode(LoginData));\n    login_req.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n    login_response=opener.open(login_req)\n    print &#39;login success&#39;\n    soup=BeautifulSoup(opener.open(Main_URL).read())\n    div=soup.find(id=&#39;__VIEWSTATE&#39;)\n    viewstate=dict(div.attrs)[&#39;value&#39;]\n    print &#39;start get seats info&#39;\n    room_url=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/SeatLayoutHandle.ashx&#39;\n    #datetime=raw_input(&#39;input your date of tomorrw(2015-01-13):  &#39;)\n    datetime=&#39;2015-01-13&#39;\n    datetime=datetime+&#39; 0:00:00&#39;\n    print datetime\n    postdata={\n        &#39;roomNum&#39;:&#39;202006&#39;,\n        &#39;date&#39;:datetime,\n        &#39;divTransparentTop&#39;:&#39;0&#39;,\n        &#39;divTransparentLeft&#39;:&#39;0&#39;\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded;&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeatLayout.aspx?roomId=202006&amp;date=635566176000000000&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    #req = urllib2.Request(room_url, urllib.urlencode(postdata),headers);\n    #response=opener.open(req)\n    #result=response.read()\n    #print result\n    #get Seats\n    SeatData = {\n            &#39;__EVENTTARGET&#39;:&#39;ContentPanel1$btnBespeak&#39;,\n            &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n            &#39;__VIEWSTATE&#39;:&#39;/wEPDwULLTEzMzAxMjU4NDFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYEBQVGb3JtMgUNQ29udGVudFBhbmVsMQUYQ29udGVudFBhbmVsMSRidG5CZXNwZWFrBRZDb250ZW50UGFuZWwxJGJ0bkNsb3NlFnml1ZniYWarY7w+39y6XMauzvQuUhZHmd7FIJHtCzY=&#39;,\n            &#39;__EVENTVALIDATION&#39;:&#39;/wEWAgKz1fTFAgL+mI+WBmMYZmWmY/5C6T+zShCagVwIeSBhVaQY5pYrGTq0aLBk&#39;,\n            &#39;roomOpenTime&#39;:&#39;8:30&#39;,\n            &#39;X_CHANGED&#39;:&#39;false&#39;,\n            &#39;X_TARGET&#39;:&#39;ContentPanel1_btnBespeak&#39;,\n            &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n            &#39;ContentPanel1_Collapsed&#39;:&#39;false&#39;,\n            &#39;X_AJAX&#39;:&#39;true&#39;,\n            #&#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9sYmxSb29tTmFtZSI6eyJUZXh0Ijoi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIn0sIkZvcm0yX2N0bDAxX2xibFNlYXRObyI6eyJUZXh0IjoiMzEzIn0sIkZvcm0yX2N0bDAyX2xibGJlZ2luRGF0ZSI6eyJUZXh0IjoiMjAxNS0xLTEyIn0sIkZvcm0yX2N0bDAzX2xibEVuZERhdGUiOnsiVGV4dCI6Ijc6MDDoh7MxMDowMCJ9fQ==&#39;, \n            }; \n    headers = {\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; chartset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSubmitWindow.aspx?parameters=89B0F70D378F61A7BA0411B5439DBC76521E906832306CE419BCCD5F85380BE374557D246EE19799E9A8992E242BEC3261F078093CE5602B53E9BE3DD0AD5696E85B6BEECD6835BA&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;\n    }\n    &#39;&#39;&#39;\n    loc=1\n    while loc&gt;=0:\n        result=get_chair(SeatData,headers,opener)\n        loc=result.find(&#39;失败&#39;)\n        print &#39;failed and try&#39;\n    &#39;&#39;&#39;\n    print &#39;Get your chair ,Success!!!&#39;\n\n    #send qing shui he\n    &#39;&#39;&#39;\n    postdata={\n        &#39;__EVENTTARGET&#39;:&#39;Form2$ctl00$btnnewdate&#39;,\n        &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n        &#39;__VIEWSTATE&#39;:&#39;/wEPDwUKLTM3MzI4Mzg0MmQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgYFBUZvcm0yBRZGb3JtMiRjdGwwMCRkZGxMaWJyYXJ5BRdGb3JtMiRjdGwwMCRkcFN0YXJ0RGF0ZQUWRm9ybTIkY3RsMDAkYnRubmV3ZGF0ZQUMZ3JpZFJvb21MaXN0BQpXaW5kb3dFZGl05pJoDo97fsj4YPsAfwutGBWhcfnVi5TdDL2VUl7PIH8=&#39;,\n        &#39;Form2$ctl00$ddlLibrary&#39;:&#39;02&#39;,\n        &#39;Form2$ctl00$dpStartDate&#39;:&#39;2015-01-12&#39;,\n        &#39;X_CHANGED&#39;:&#39;true&#39;,\n        &#39;WindowEdit_Hidden&#39;:&#39;true&#39;,\n        &#39;X_TARGET&#39;:&#39;Form2_ctl00_btnnewdate&#39;,\n        &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_SelectedRowIndexArray&#39;:&#39; &#39;,\n        &#39;WindowEdit_Collapsed&#39;:&#39;false&#39;,\n        &#39;X_AJAX&#39;:&#39;true&#39;,\n        &#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9kZGxMaWJyYXJ5Ijp7IkRhdGFUZXh0RmllbGQiOiJOYW1lIiwiRGF0YVZhbHVlRmllbGQiOiJObyIsIlhfSXRlbXMiOltbIjAxIiwi5rKZ5rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAyIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAzIiwi5Zu+5Lmm6aaG5Yib5paw5a6e6aqM5a6kIiwxXV0sIlNlbGVjdGVkVmFsdWUiOiIwMiJ9LCJGb3JtMl9jdGwwMF9kcFN0YXJ0RGF0ZSI6eyJNaW5EYXRlIjoiMjAxNS0wMS0xM1QwMTowNDo1Ni40OTY1KzA4OjAwIiwiVGV4dCI6IjIwMTUtMDEtMTMifSwiZ3JpZFJvb21MaXN0Ijp7IlJlY29yZENvdW50IjozLCJYX1Jvd3MiOnsiVmFsdWVzIjpbWyIyMDIwMDUiLCLkuozmpbzljZXkurrnoJTkv67lrqQiLCLmuIXmsLTmsrPmoKHljLrlm77kuabppoYiLCIyMiIsIjIyIiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdLFsiMjAyMDA2Iiwi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwiMjQiLCIyNCIsIjxhIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICBjbGFzcz1cIngtaXRlbS1kaXNhYmxlZFwiIGRpc2FibGVkPVwiZGlzYWJsZWRcIj48aW1nIHNyYz1cIi9JbWFnZXMvaWNvbi9idWxsZXRfY3Jvc3MucG5nXCIgIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICAvPjwvYT4iXSxbIjIwMjAwNyIsIuWbm+alvOWNleS6uueglOS/ruWupCIsIua4heawtOays+agoeWMuuWbvuS5pummhiIsIjQiLCI0IiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdXSwiRGF0YUtleXMiOltbbnVsbF0sW251bGxdLFtudWxsXV0sIlN0YXRlcyI6W1tdLFtdLFtdXX19fQ==&#39;,\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;, urllib.urlencode(postdata),headers);\n    response=opener.open(req)\n    result=response.read()\n    print result\n    # first page\n    headers={\n            #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;,headers=headers);\n    response=opener.open(req)\n    result=response.read()\n    #print result\n    #print result\n    &#39;&#39;&#39;\n    print get_log()\ndef get_chair(SeatData,headers,opener):\n    seat_req = urllib2.Request(Seats_URL, urllib.urlencode(SeatData),headers);\n    seat_response=opener.open(seat_req)\n    result=seat_response.read()\n    return result\n#get chair log\ndef get_log():\n    url=&#39;http://10.21.16.215/FunctionPages/ReaderLog/SelectBespeakLog.aspx&#39;;\n    headers={\n            #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(url,headers=headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    #line = &#39;三楼单人研修室&quot;, &quot;304&quot;, &quot;已确认&quot;, &quot;15-01-10 13:00:18&quot;, &quot;15-01-11 08:30:00&quot;, &quot;&quot;, &quot;在&#39;\n    #print result.find(&#39;三楼单人研修室&#39;)\n    #matchObj=re.search(  r&#39;三楼单人研修室(.*?)08:30:00&#39;, result, re.M|re.I)\n    #print matchObj.group(1)\n    p=re.compile(r&#39;&quot;三楼单人研修室&quot;(.*?)08:30:00&#39;)\n    #print p.findall(result)[-1]\n    flag=p.findall(result)[-1].find(&#39;已取消&#39;)\n    if flag&gt;=0:\n        return True\n    else:\n        return False\n\nif __name__==&#39;__main__&#39;:\n    login()\n</pre><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>代码仅供测试方便所用。</p>\r\n<p>这个图书管理系统是asp.net EXTJS写的　在分析页面的时候非常复杂，一度差点放弃。不过还是慢慢的进步。还顺便学了一下正则表达式。这个代码的作用就是登陆进系统，然后获取预约信息。代码有点乱，以后在整理，这里先存档</p>\r\n<p>这个网址校外ip不能访问，所以代码仅供参考，部分逻辑还是能够套用的</p>\r\n<p><pre code_snippet_id=\"577729\" snippet_file_name=\"blog_20150112_1_7766287\"  name=\"code\" class=\"html\">#-*- coding: utf-8 -*-\n#!usr/bin/env python\nimport os\nimport urllib2\nimport urllib\nimport cookielib\nimport re\nfrom bs4 import BeautifulSoup\n\nLogin_URL=&#39;http://10.21.16.215&#39;\nMain_URL=&#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;\nSeats_URL=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSubmitWindow.aspx?parameters=89B0F70D378F61A7BA0411B5439DBC76521E906832306CE419BCCD5F85380BE374557D246EE19799E9A8992E242BEC3261F078093CE5602B53E9BE3DD0AD5696E85B6BEECD6835BA&#39;\nusername=&#39;ＸＸＸＸ&#39;\npassword=&#39;ＸＸＸＸ&#39;\nroomNum=&#39;202006&#39;\ndef login():\n    cj = cookielib.CookieJar()\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))\n    urllib2.install_opener(opener)\n    pre_response=opener.open(Login_URL)\n    soup=BeautifulSoup(pre_response.read())\n    div=soup.find(id=&#39;__EVENTVALIDATION&#39;)\n    attr1=dict(div.attrs)[&#39;value&#39;]\n    #print attr1\n    div=soup.find(id=&#39;__VIEWSTATE&#39;)\n    attr2=dict(div.attrs)[&#39;value&#39;]\n    #print attr2\n    #login\n    LoginData = {\n            &#39;txtUserName&#39;:username,\n            &#39;txtPassword&#39;:password,\n            &#39;__EVENTVALIDATION&#39;:attr1,\n            &#39;__VIEWSTATE&#39;:attr2,\n            &#39;cmdOK.x&#39;:&#39;40&#39;,\n            &#39;cmdOK.y&#39;:&#39;14&#39;,\n            }; \n    login_req = urllib2.Request(Login_URL, urllib.urlencode(LoginData));\n    login_req.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n    login_response=opener.open(login_req)\n    print &#39;login success&#39;\n    soup=BeautifulSoup(opener.open(Main_URL).read())\n    div=soup.find(id=&#39;__VIEWSTATE&#39;)\n    viewstate=dict(div.attrs)[&#39;value&#39;]\n    print &#39;start get seats info&#39;\n    room_url=&#39;http://10.21.16.215/FunctionPages/SeatBespeak/SeatLayoutHandle.ashx&#39;\n    #datetime=raw_input(&#39;input your date of tomorrw(2015-01-13):  &#39;)\n    datetime=&#39;2015-01-13&#39;\n    datetime=datetime+&#39; 0:00:00&#39;\n    print datetime\n    postdata={\n        &#39;roomNum&#39;:&#39;202006&#39;,\n        &#39;date&#39;:datetime,\n        &#39;divTransparentTop&#39;:&#39;0&#39;,\n        &#39;divTransparentLeft&#39;:&#39;0&#39;\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded;&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeatLayout.aspx?roomId=202006&amp;date=635566176000000000&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    #req = urllib2.Request(room_url, urllib.urlencode(postdata),headers);\n    #response=opener.open(req)\n    #result=response.read()\n    #print result\n    #get Seats\n    SeatData = {\n            &#39;__EVENTTARGET&#39;:&#39;ContentPanel1$btnBespeak&#39;,\n            &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n            &#39;__VIEWSTATE&#39;:&#39;/wEPDwULLTEzMzAxMjU4NDFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYEBQVGb3JtMgUNQ29udGVudFBhbmVsMQUYQ29udGVudFBhbmVsMSRidG5CZXNwZWFrBRZDb250ZW50UGFuZWwxJGJ0bkNsb3NlFnml1ZniYWarY7w+39y6XMauzvQuUhZHmd7FIJHtCzY=&#39;,\n            &#39;__EVENTVALIDATION&#39;:&#39;/wEWAgKz1fTFAgL+mI+WBmMYZmWmY/5C6T+zShCagVwIeSBhVaQY5pYrGTq0aLBk&#39;,\n            &#39;roomOpenTime&#39;:&#39;8:30&#39;,\n            &#39;X_CHANGED&#39;:&#39;false&#39;,\n            &#39;X_TARGET&#39;:&#39;ContentPanel1_btnBespeak&#39;,\n            &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n            &#39;ContentPanel1_Collapsed&#39;:&#39;false&#39;,\n            &#39;X_AJAX&#39;:&#39;true&#39;,\n            #&#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9sYmxSb29tTmFtZSI6eyJUZXh0Ijoi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIn0sIkZvcm0yX2N0bDAxX2xibFNlYXRObyI6eyJUZXh0IjoiMzEzIn0sIkZvcm0yX2N0bDAyX2xibGJlZ2luRGF0ZSI6eyJUZXh0IjoiMjAxNS0xLTEyIn0sIkZvcm0yX2N0bDAzX2xibEVuZERhdGUiOnsiVGV4dCI6Ijc6MDDoh7MxMDowMCJ9fQ==&#39;, \n            }; \n    headers = {\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; chartset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSubmitWindow.aspx?parameters=89B0F70D378F61A7BA0411B5439DBC76521E906832306CE419BCCD5F85380BE374557D246EE19799E9A8992E242BEC3261F078093CE5602B53E9BE3DD0AD5696E85B6BEECD6835BA&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;\n    }\n    &#39;&#39;&#39;\n    loc=1\n    while loc&gt;=0:\n        result=get_chair(SeatData,headers,opener)\n        loc=result.find(&#39;失败&#39;)\n        print &#39;failed and try&#39;\n    &#39;&#39;&#39;\n    print &#39;Get your chair ,Success!!!&#39;\n\n    #send qing shui he\n    &#39;&#39;&#39;\n    postdata={\n        &#39;__EVENTTARGET&#39;:&#39;Form2$ctl00$btnnewdate&#39;,\n        &#39;__EVENTARGUMENT&#39;:&#39; &#39;,\n        &#39;__VIEWSTATE&#39;:&#39;/wEPDwUKLTM3MzI4Mzg0MmQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgYFBUZvcm0yBRZGb3JtMiRjdGwwMCRkZGxMaWJyYXJ5BRdGb3JtMiRjdGwwMCRkcFN0YXJ0RGF0ZQUWRm9ybTIkY3RsMDAkYnRubmV3ZGF0ZQUMZ3JpZFJvb21MaXN0BQpXaW5kb3dFZGl05pJoDo97fsj4YPsAfwutGBWhcfnVi5TdDL2VUl7PIH8=&#39;,\n        &#39;Form2$ctl00$ddlLibrary&#39;:&#39;02&#39;,\n        &#39;Form2$ctl00$dpStartDate&#39;:&#39;2015-01-12&#39;,\n        &#39;X_CHANGED&#39;:&#39;true&#39;,\n        &#39;WindowEdit_Hidden&#39;:&#39;true&#39;,\n        &#39;X_TARGET&#39;:&#39;Form2_ctl00_btnnewdate&#39;,\n        &#39;Form2_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_Collapsed&#39;:&#39;false&#39;,\n        &#39;gridRoomList_SelectedRowIndexArray&#39;:&#39; &#39;,\n        &#39;WindowEdit_Collapsed&#39;:&#39;false&#39;,\n        &#39;X_AJAX&#39;:&#39;true&#39;,\n        &#39;X_STATE&#39;:&#39;eyJGb3JtMl9jdGwwMF9kZGxMaWJyYXJ5Ijp7IkRhdGFUZXh0RmllbGQiOiJOYW1lIiwiRGF0YVZhbHVlRmllbGQiOiJObyIsIlhfSXRlbXMiOltbIjAxIiwi5rKZ5rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAyIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwxXSxbIjAzIiwi5Zu+5Lmm6aaG5Yib5paw5a6e6aqM5a6kIiwxXV0sIlNlbGVjdGVkVmFsdWUiOiIwMiJ9LCJGb3JtMl9jdGwwMF9kcFN0YXJ0RGF0ZSI6eyJNaW5EYXRlIjoiMjAxNS0wMS0xM1QwMTowNDo1Ni40OTY1KzA4OjAwIiwiVGV4dCI6IjIwMTUtMDEtMTMifSwiZ3JpZFJvb21MaXN0Ijp7IlJlY29yZENvdW50IjozLCJYX1Jvd3MiOnsiVmFsdWVzIjpbWyIyMDIwMDUiLCLkuozmpbzljZXkurrnoJTkv67lrqQiLCLmuIXmsLTmsrPmoKHljLrlm77kuabppoYiLCIyMiIsIjIyIiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdLFsiMjAyMDA2Iiwi5LiJ5qW85Y2V5Lq656CU5L+u5a6kIiwi5riF5rC05rKz5qCh5Yy65Zu+5Lmm6aaGIiwiMjQiLCIyNCIsIjxhIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICBjbGFzcz1cIngtaXRlbS1kaXNhYmxlZFwiIGRpc2FibGVkPVwiZGlzYWJsZWRcIj48aW1nIHNyYz1cIi9JbWFnZXMvaWNvbi9idWxsZXRfY3Jvc3MucG5nXCIgIGV4dDpxdGlwPVwi6aKE57qm5pe26Ze05Li677yaMTM6MDDliLAyMzo1OVwiICAvPjwvYT4iXSxbIjIwMjAwNyIsIuWbm+alvOWNleS6uueglOS/ruWupCIsIua4heawtOays+agoeWMuuWbvuS5pummhiIsIjQiLCI0IiwiPGEgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIGNsYXNzPVwieC1pdGVtLWRpc2FibGVkXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjxpbWcgc3JjPVwiL0ltYWdlcy9pY29uL2J1bGxldF9jcm9zcy5wbmdcIiAgZXh0OnF0aXA9XCLpooTnuqbml7bpl7TkuLrvvJoxMzowMOWIsDIzOjU5XCIgIC8+PC9hPiJdXSwiRGF0YUtleXMiOltbbnVsbF0sW251bGxdLFtudWxsXV0sIlN0YXRlcyI6W1tdLFtdLFtdXX19fQ==&#39;,\n    }\n    headers={\n            &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            &#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            &#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;, urllib.urlencode(postdata),headers);\n    response=opener.open(req)\n    result=response.read()\n    print result\n    # first page\n    headers={\n            #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(&#39;http://10.21.16.215/FunctionPages/SeatBespeak/BespeakSeat.aspx&#39;,headers=headers);\n    response=opener.open(req)\n    result=response.read()\n    #print result\n    #print result\n    &#39;&#39;&#39;\n    print get_log()\ndef get_chair(SeatData,headers,opener):\n    seat_req = urllib2.Request(Seats_URL, urllib.urlencode(SeatData),headers);\n    seat_response=opener.open(seat_req)\n    result=seat_response.read()\n    return result\n#get chair log\ndef get_log():\n    url=&#39;http://10.21.16.215/FunctionPages/ReaderLog/SelectBespeakLog.aspx&#39;;\n    headers={\n            #&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;,\n            &#39;Accept-Language&#39;: &#39;zh-cn&#39;,\n            &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n            #&#39;ContentType&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;,\n            &#39;Host&#39;: &#39;10.21.16.215&#39;,\n            #&#39;Origin&#39;:&#39;http://10.21.16.215&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;,  \n            &#39;Referer&#39; : &#39;http://10.21.16.215/Florms/FormSYS.aspx&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n    }\n    req = urllib2.Request(url,headers=headers);\n    response=urllib2.urlopen(req)\n    result=response.read()\n    #line = &#39;三楼单人研修室&quot;, &quot;304&quot;, &quot;已确认&quot;, &quot;15-01-10 13:00:18&quot;, &quot;15-01-11 08:30:00&quot;, &quot;&quot;, &quot;在&#39;\n    #print result.find(&#39;三楼单人研修室&#39;)\n    #matchObj=re.search(  r&#39;三楼单人研修室(.*?)08:30:00&#39;, result, re.M|re.I)\n    #print matchObj.group(1)\n    p=re.compile(r&#39;&quot;三楼单人研修室&quot;(.*?)08:30:00&#39;)\n    #print p.findall(result)[-1]\n    flag=p.findall(result)[-1].find(&#39;已取消&#39;)\n    if flag&gt;=0:\n        return True\n    else:\n        return False\n\nif __name__==&#39;__main__&#39;:\n    login()\n</pre><br>\r\n<br>\r\n</p>\r\n',1,'',0,0,'2015-02-02 00:51:17','2015-02-02 00:51:17','2015-02-02 00:51:17'),(66,1,10,'Python模拟登陆3: 进入选课系统(手工输入验证码阶段)','58cf006aafb878e4274b7044032f0e03',0,'\r\n\r\n<p>其实最想做的是选课插件，于是这次试试了下选课系统，但是选课系统　有验证码。　很是蛋疼。　需要识别。　但是现在可以用另一种方法。就','\r\n\r\n<p>其实最想做的是选课插件，于是这次试试了下选课系统，但是选课系统　有验证码。　很是蛋疼。　需要识别。　但是现在可以用另一种方法。就是下载到本地手动输入。也只需要一次就够了。因为登陆成功后就可以随意操作其他东西了。　后面再学习验证码的智能识别。</p>\r\n<p>首先主要是模拟逻辑是。先设置一个cookie存储器，用它去访问验证码链接。然后会得到cookie.还有下载好的验证码图片，就在本地。然后再把验证码，用户名，密码，和那个cookie一起提交到登陆。于是cookie就一致了。　有点不舒服的就是需要在本地看下那个图片长什么样，然后再输入控制台。具体代码是：</p>\r\n<p><pre code_snippet_id=\"577185\" snippet_file_name=\"blog_20150111_1_7323598\"  name=\"code\" class=\"html\">#!usr/bin/env python\n\n#-*- coding: utf-8 -*-\n\nimport os\nimport urllib2\nimport urllib\nimport cookielib\nimport re\n\nImg_URL=&#39;http://gs.uestc.edu.cn/wsxk/VerifyCodeGenServlet.do&#39;\nLogin_URL=&#39;http://gs.uestc.edu.cn/wsxk/login.jsp&#39;\nClass_URL=&#39;http://gs.uestc.edu.cn/wsxk/jsp/T_PYGL_KWGL_WSXK_KXKC.jsp&#39;\nusername=&#39;XXXX&#39;\npassword=&#39;XXXX&#39;\ndef login():\n    cj = cookielib.CookieJar()\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))\n    urllib2.install_opener(opener)\n    #get img\n    img_req=urllib2.Request(Img_URL)\n    img_response=opener.open(img_req)\n    try:\n        out=open(&#39;code&#39;,&#39;wb&#39;)\n        #print img_response.read()\n        out.write(img_response.read())\n        out.flush()\n        out.close()\n        print &#39;get code success&#39;\n    except IOError:\n        print &#39;file wrong&#39;\n    #input code\n    img_code=raw_input(&quot;please input code: &quot;)\n    print &#39;your code is %s&#39;%img_code\n    #login\n    LoginData = {\n            &#39;Login.Token1&#39;:username,\n            &#39;Login.Token2&#39;:password,\n            &#39;verifyCode&#39;:img_code,\n            }; \n    login_req = urllib2.Request(Login_URL, urllib.urlencode(LoginData));\n    login_req.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n    login_response=opener.open(login_req)\n    print &#39;login success&#39;\n    fout=open(&quot;tt.html&quot;,&quot;w&quot;)\n    fout.write(login_response.read())\n    fout.close()\n    #load class info\n    print &#39;load class&#39;\n    fout=open(&#39;t1.html&#39;,&#39;w&#39;)\n    fout.write(opener.open(Class_URL).read())\n    fout.close()\nif __name__==&#39;__main__&#39;:\n    login()</pre><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>其实最想做的是选课插件，于是这次试试了下选课系统，但是选课系统　有验证码。　很是蛋疼。　需要识别。　但是现在可以用另一种方法。就是下载到本地手动输入。也只需要一次就够了。因为登陆成功后就可以随意操作其他东西了。　后面再学习验证码的智能识别。</p>\r\n<p>首先主要是模拟逻辑是。先设置一个cookie存储器，用它去访问验证码链接。然后会得到cookie.还有下载好的验证码图片，就在本地。然后再把验证码，用户名，密码，和那个cookie一起提交到登陆。于是cookie就一致了。　有点不舒服的就是需要在本地看下那个图片长什么样，然后再输入控制台。具体代码是：</p>\r\n<p><pre code_snippet_id=\"577185\" snippet_file_name=\"blog_20150111_1_7323598\"  name=\"code\" class=\"html\">#!usr/bin/env python\n\n#-*- coding: utf-8 -*-\n\nimport os\nimport urllib2\nimport urllib\nimport cookielib\nimport re\n\nImg_URL=&#39;http://gs.uestc.edu.cn/wsxk/VerifyCodeGenServlet.do&#39;\nLogin_URL=&#39;http://gs.uestc.edu.cn/wsxk/login.jsp&#39;\nClass_URL=&#39;http://gs.uestc.edu.cn/wsxk/jsp/T_PYGL_KWGL_WSXK_KXKC.jsp&#39;\nusername=&#39;XXXX&#39;\npassword=&#39;XXXX&#39;\ndef login():\n    cj = cookielib.CookieJar()\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))\n    urllib2.install_opener(opener)\n    #get img\n    img_req=urllib2.Request(Img_URL)\n    img_response=opener.open(img_req)\n    try:\n        out=open(&#39;code&#39;,&#39;wb&#39;)\n        #print img_response.read()\n        out.write(img_response.read())\n        out.flush()\n        out.close()\n        print &#39;get code success&#39;\n    except IOError:\n        print &#39;file wrong&#39;\n    #input code\n    img_code=raw_input(&quot;please input code: &quot;)\n    print &#39;your code is %s&#39;%img_code\n    #login\n    LoginData = {\n            &#39;Login.Token1&#39;:username,\n            &#39;Login.Token2&#39;:password,\n            &#39;verifyCode&#39;:img_code,\n            }; \n    login_req = urllib2.Request(Login_URL, urllib.urlencode(LoginData));\n    login_req.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n    login_response=opener.open(login_req)\n    print &#39;login success&#39;\n    fout=open(&quot;tt.html&quot;,&quot;w&quot;)\n    fout.write(login_response.read())\n    fout.close()\n    #load class info\n    print &#39;load class&#39;\n    fout=open(&#39;t1.html&#39;,&#39;w&#39;)\n    fout.write(opener.open(Class_URL).read())\n    fout.close()\nif __name__==&#39;__main__&#39;:\n    login()</pre><br>\r\n<br>\r\n</p>\r\n',1,'',0,0,'2015-02-02 00:51:18','2015-02-02 00:51:18','2015-02-02 00:51:18'),(67,1,10,'Python模拟登陆２:获取电子科大研究生成绩','b2b96ac9a69961a67d48a9eed8f59271',0,'\r\n\r\n<p>前面小试了一把　能够成功登陆，但是这下要获取成绩可是废了好多功夫。首先他这个登陆只是登陆了一个frame框架页面，里面还有个js的二次跳转','\r\n\r\n<p>前面小试了一把　能够成功登陆，但是这下要获取成绩可是废了好多功夫。首先他这个登陆只是登陆了一个frame框架页面，里面还有个js的二次跳转页面。还会自动登陆一次。只有在ＩＥ或者谷歌等http抓包才看的出来隐藏的地址。　开始以为很简单　直接在第二个登陆页面提交post　谁知道　他会自动跳转到第一个登陆页面　前端白痴的我有点乱入了。　最后试来试去，　偷偷去看了下cookies　，尝试性的直接提交了cookies想不到　成功了。　但是这个cookies是在成绩页面　不知道是request还是response的。　然后看了下　发现在第一个登陆的时候会生成一个cookies　带着这个cookies进入第二个登陆界面的时候　又会生成一个cookies　这个cookies直接就作为header提交进去，居然获得了成绩。　很是惊喜，因为第一次做这种东西　忙疼了一晚上，　第一次用cookies也是醉了。　可能有很简单的方法我没发现，比较太菜了，反正现在方法是实现了。　就主要是把这个cookies获取到就行了。然后脑补了一下python的字符串赋&#20540;　还有if的用法，，，原谅我刚学几天python。按其他语言的思维边猜边百度　还是写出来了。方法比较简单。</p>\r\n<p>python有个cookies存储的方法，然后再登陆完后　获取特定的２个字段　再带入第二次获取成绩。　这两个字段是从一大堆cookie分析出来的，说白了就是一个一个试排除法。最终代码如下　。Ｐ掉了　用户名密码　用username password代替</p>\r\n<p><pre code_snippet_id=\"576952\" snippet_file_name=\"blog_20150110_1_4244509\"  name=\"code\" class=\"html\">#coding:utf-8\nimport re\nimport urllib\nimport urllib2\nimport cookielib\nimport os\nimport json\nimport sys\nimport time\nfrom urllib import quote,unquote\nfrom urllib2 import HTTPError\nfrom urllib2 import URLError\n\nusername=&#39;XXXX&#39;\npassword=&#39;XXXX&#39;\n#登陆模块\ndef Login():\n    \n        cj = cookielib.CookieJar();\n        opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj));\n        urllib2.install_opener(opener); \n        \n        #打开获得 cookie\n        info_URL = &quot;http://portal.uestc.edu.cn/index.portal&quot;\n        info_Login_URL = &quot;https://uis.uestc.edu.cn/amserver/UI/Login&quot;;     \n        info_URL_Grade=&quot;http://gs.uestc.edu.cn/epstar/app/template.jsp?mainobj=YJSXT/PYGL/CJGLST/V_PYGL_CJGL_KSCJHZB&amp;tfile=KSCJHZB_CJCX_CD/KSCJHZB_XSCX_CD_BD&amp;filter=V_PYGL_CJGL_KSCJHZB:WID=&#39;665h4kg-bflb7s-hwsj36d3-1-hx7epplv-5w9&#39;&quot;       \n        info_URL_Grade_Frame=&quot;http://gs.uestc.edu.cn/epstar/app/template.jsp?mainobj=YJSXT/CJGLST/V_PYGL_CJGL_KSCJHZB&amp;tfile=KSCJHZB_CJCX_CD/KSCJHZB_XSCX_CD_KJ&#164;t.model.id=665h4kf-ntmygk-fep2jgjw-1-fepbsyak-5w&quot;\n        infoOPEN = urllib2.urlopen(info_URL)\n        #生成要发送的数据\n        LoginData = {\n            &#39;IDToken0&#39;:&#39;&#39;,\n            &#39;IDToken1&#39;:username,\n            &#39;IDToken2&#39;:password,\n            &#39;IDButton&#39;:&#39;Submit&#39;,\n            &#39;goto&#39;:&#39;aHR0cDovL3BvcnRhbC51ZXN0Yy5lZHUuY24vbG9naW4ucG9ydGFs&#39;,\n            &#39;encoded&#39;:&#39;true&#39;,\n            &#39;gx_charset&#39;:&#39;UTF-8&#39;,\n            }; \n            \n        #把发送数据转换格式\n        LoginData = urllib.urlencode(LoginData);    \n        \n        #生成请求数据\n        info_Login_Request = urllib2.Request(info_Login_URL, LoginData);\n        \n        #添加数据头部\n        info_Login_Request.add_header(&#39;Content-Type&#39;, &quot;application/x-www-form-urlencoded&quot;);\n        info_Login_Request.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n\n        #发送请求，尝试登陆\n        info_Login_Open = urllib2.urlopen(info_Login_Request);\n\n        info_Login_Open2 = urllib2.urlopen(info_URL_Grade_Frame);\n        cookies=&#39;&#39;\n        new=1\n        for cookie in cj:\n            if cookie.name==&#39;iPlanetDirectoryPro&#39;:\n                #print cookie.name,cookie.value\n                cookies+=cookie.name+&#39;=&#39;+cookie.value+&#39;;&#39;\n            if cookie.name==&#39;JSESSIONID&#39; and new ==1:\n                new =0\n                #print cookie.name,cookie.value\n                cookies+=cookie.name+&#39;=&#39;+cookie.value+&#39;;&#39;\n        print cookies\n        #验证登陆是否成功\n        request = urllib2.Request(\n        url     = info_URL_Grade,\n        headers = {&#39;Cookie&#39; :cookies},\n        )\n        tt = urllib2.urlopen(request).read()\n        print tt\n        fout=open(&quot;tt.html&quot;,&quot;w&quot;)\n        fout.write(tt)\n        print &#39;success!&#39;\n   \n\nif __name__ == &quot;__main__&quot; :\n    Login()\n</pre><br>\r\n图就不上了，自己可以试试</p>\r\n','\r\n\r\n<p>前面小试了一把　能够成功登陆，但是这下要获取成绩可是废了好多功夫。首先他这个登陆只是登陆了一个frame框架页面，里面还有个js的二次跳转页面。还会自动登陆一次。只有在ＩＥ或者谷歌等http抓包才看的出来隐藏的地址。　开始以为很简单　直接在第二个登陆页面提交post　谁知道　他会自动跳转到第一个登陆页面　前端白痴的我有点乱入了。　最后试来试去，　偷偷去看了下cookies　，尝试性的直接提交了cookies想不到　成功了。　但是这个cookies是在成绩页面　不知道是request还是response的。　然后看了下　发现在第一个登陆的时候会生成一个cookies　带着这个cookies进入第二个登陆界面的时候　又会生成一个cookies　这个cookies直接就作为header提交进去，居然获得了成绩。　很是惊喜，因为第一次做这种东西　忙疼了一晚上，　第一次用cookies也是醉了。　可能有很简单的方法我没发现，比较太菜了，反正现在方法是实现了。　就主要是把这个cookies获取到就行了。然后脑补了一下python的字符串赋&#20540;　还有if的用法，，，原谅我刚学几天python。按其他语言的思维边猜边百度　还是写出来了。方法比较简单。</p>\r\n<p>python有个cookies存储的方法，然后再登陆完后　获取特定的２个字段　再带入第二次获取成绩。　这两个字段是从一大堆cookie分析出来的，说白了就是一个一个试排除法。最终代码如下　。Ｐ掉了　用户名密码　用username password代替</p>\r\n<p><pre code_snippet_id=\"576952\" snippet_file_name=\"blog_20150110_1_4244509\"  name=\"code\" class=\"html\">#coding:utf-8\nimport re\nimport urllib\nimport urllib2\nimport cookielib\nimport os\nimport json\nimport sys\nimport time\nfrom urllib import quote,unquote\nfrom urllib2 import HTTPError\nfrom urllib2 import URLError\n\nusername=&#39;XXXX&#39;\npassword=&#39;XXXX&#39;\n#登陆模块\ndef Login():\n    \n        cj = cookielib.CookieJar();\n        opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj));\n        urllib2.install_opener(opener); \n        \n        #打开获得 cookie\n        info_URL = &quot;http://portal.uestc.edu.cn/index.portal&quot;\n        info_Login_URL = &quot;https://uis.uestc.edu.cn/amserver/UI/Login&quot;;     \n        info_URL_Grade=&quot;http://gs.uestc.edu.cn/epstar/app/template.jsp?mainobj=YJSXT/PYGL/CJGLST/V_PYGL_CJGL_KSCJHZB&amp;tfile=KSCJHZB_CJCX_CD/KSCJHZB_XSCX_CD_BD&amp;filter=V_PYGL_CJGL_KSCJHZB:WID=&#39;665h4kg-bflb7s-hwsj36d3-1-hx7epplv-5w9&#39;&quot;       \n        info_URL_Grade_Frame=&quot;http://gs.uestc.edu.cn/epstar/app/template.jsp?mainobj=YJSXT/CJGLST/V_PYGL_CJGL_KSCJHZB&amp;tfile=KSCJHZB_CJCX_CD/KSCJHZB_XSCX_CD_KJ&#164;t.model.id=665h4kf-ntmygk-fep2jgjw-1-fepbsyak-5w&quot;\n        infoOPEN = urllib2.urlopen(info_URL)\n        #生成要发送的数据\n        LoginData = {\n            &#39;IDToken0&#39;:&#39;&#39;,\n            &#39;IDToken1&#39;:username,\n            &#39;IDToken2&#39;:password,\n            &#39;IDButton&#39;:&#39;Submit&#39;,\n            &#39;goto&#39;:&#39;aHR0cDovL3BvcnRhbC51ZXN0Yy5lZHUuY24vbG9naW4ucG9ydGFs&#39;,\n            &#39;encoded&#39;:&#39;true&#39;,\n            &#39;gx_charset&#39;:&#39;UTF-8&#39;,\n            }; \n            \n        #把发送数据转换格式\n        LoginData = urllib.urlencode(LoginData);    \n        \n        #生成请求数据\n        info_Login_Request = urllib2.Request(info_Login_URL, LoginData);\n        \n        #添加数据头部\n        info_Login_Request.add_header(&#39;Content-Type&#39;, &quot;application/x-www-form-urlencoded&quot;);\n        info_Login_Request.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n\n        #发送请求，尝试登陆\n        info_Login_Open = urllib2.urlopen(info_Login_Request);\n\n        info_Login_Open2 = urllib2.urlopen(info_URL_Grade_Frame);\n        cookies=&#39;&#39;\n        new=1\n        for cookie in cj:\n            if cookie.name==&#39;iPlanetDirectoryPro&#39;:\n                #print cookie.name,cookie.value\n                cookies+=cookie.name+&#39;=&#39;+cookie.value+&#39;;&#39;\n            if cookie.name==&#39;JSESSIONID&#39; and new ==1:\n                new =0\n                #print cookie.name,cookie.value\n                cookies+=cookie.name+&#39;=&#39;+cookie.value+&#39;;&#39;\n        print cookies\n        #验证登陆是否成功\n        request = urllib2.Request(\n        url     = info_URL_Grade,\n        headers = {&#39;Cookie&#39; :cookies},\n        )\n        tt = urllib2.urlopen(request).read()\n        print tt\n        fout=open(&quot;tt.html&quot;,&quot;w&quot;)\n        fout.write(tt)\n        print &#39;success!&#39;\n   \n\nif __name__ == &quot;__main__&quot; :\n    Login()\n</pre><br>\r\n图就不上了，自己可以试试</p>\r\n',1,'',0,0,'2015-02-02 00:51:19','2015-02-02 00:51:19','2015-02-02 00:51:19'),(68,1,10,'Python模拟登陆：模拟登陆电子科大信息门户测试','3bc93a0b1c586da531f053a59ffae376',0,'\r\n\r\n<p>最近在学习Python的网络操作，网上有很多模拟登陆方法。这里做个笔记。　没有验证码的还是比较容易的。</p>\r\n<p><pre code_snippet_id=\"576689\" snippet_file_','\r\n\r\n<p>最近在学习Python的网络操作，网上有很多模拟登陆方法。这里做个笔记。　没有验证码的还是比较容易的。</p>\r\n<p><pre code_snippet_id=\"576689\" snippet_file_name=\"blog_20150110_1_2287220\"  name=\"code\" class=\"html\">#coding:utf-8\nimport re\nimport urllib\nimport urllib2\nimport cookielib\nimport os\nimport json\nimport sys\nimport time\nfrom urllib import quote,unquote\nfrom urllib2 import HTTPError\nfrom urllib2 import URLError\n\n#登陆模块\ndef Login():\n    try :\n        cj = cookielib.CookieJar();\n        opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj));\n        urllib2.install_opener(opener); \n        \n        #打开获得 cookie\n        info_URL = &quot;http://portal.uestc.edu.cn/index.portal&quot;\n        info_Login_URL = &quot;https://uis.uestc.edu.cn/amserver/UI/Login&quot;;     \n        infoOPEN = urllib2.urlopen(info_URL)\n        print 1\n        #生成要发送的数据\n        LoginData = {\n            &#39;IDToken0&#39;:&#39;&#39;,\n            &#39;IDToken1&#39;:&#39;20142106XXXX&#39;,\n            &#39;IDToken2&#39;:&#39;xxxxxx&#39;,\n            &#39;IDButton&#39;:&#39;Submit&#39;,\n            &#39;goto&#39;:&#39;aHR0cDovL3BvcnRhbC51ZXN0Yy5lZHUuY24vbG9naW4ucG9ydGFs&#39;,\n            &#39;encoded&#39;:&#39;true&#39;,\n            &#39;gx_charset&#39;:&#39;UTF-8&#39;,\n            }; \n        \n        print 2\n            \n        #把发送数据转换格式\n        LoginData = urllib.urlencode(LoginData);    \n        \n        #生成请求数据\n        info_Login_Request = urllib2.Request(info_Login_URL, LoginData);\n        \n        #添加数据头部\n        info_Login_Request.add_header(&#39;Content-Type&#39;, &quot;application/x-www-form-urlencoded&quot;);\n        info_Login_Request.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n        print 3\n        #发送请求，尝试登陆\n        info_Login_Open = urllib2.urlopen(info_Login_Request);\n        print 4\n        #验证登陆是否成功\n        tt = urllib2.urlopen(info_URL).read()\n        fout=open(&quot;tt.html&quot;,&quot;w&quot;)\n        fout.write(tt)\n        print &#39;success!&#39;\n    except :\n        print &quot;登陆出错啦！&quot;\n\nif __name__ == &quot;__main__&quot; :\n    Login()\n</pre><br>\r\n经过测试成功</p>\r\n<p>IDtoken1和IDtoken2填用户名和密码。其他不用变</p>\r\n<p>linux下面　直接python spider.py　即可运行</p>\r\n','\r\n\r\n<p>最近在学习Python的网络操作，网上有很多模拟登陆方法。这里做个笔记。　没有验证码的还是比较容易的。</p>\r\n<p><pre code_snippet_id=\"576689\" snippet_file_name=\"blog_20150110_1_2287220\"  name=\"code\" class=\"html\">#coding:utf-8\nimport re\nimport urllib\nimport urllib2\nimport cookielib\nimport os\nimport json\nimport sys\nimport time\nfrom urllib import quote,unquote\nfrom urllib2 import HTTPError\nfrom urllib2 import URLError\n\n#登陆模块\ndef Login():\n    try :\n        cj = cookielib.CookieJar();\n        opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj));\n        urllib2.install_opener(opener); \n        \n        #打开获得 cookie\n        info_URL = &quot;http://portal.uestc.edu.cn/index.portal&quot;\n        info_Login_URL = &quot;https://uis.uestc.edu.cn/amserver/UI/Login&quot;;     \n        infoOPEN = urllib2.urlopen(info_URL)\n        print 1\n        #生成要发送的数据\n        LoginData = {\n            &#39;IDToken0&#39;:&#39;&#39;,\n            &#39;IDToken1&#39;:&#39;20142106XXXX&#39;,\n            &#39;IDToken2&#39;:&#39;xxxxxx&#39;,\n            &#39;IDButton&#39;:&#39;Submit&#39;,\n            &#39;goto&#39;:&#39;aHR0cDovL3BvcnRhbC51ZXN0Yy5lZHUuY24vbG9naW4ucG9ydGFs&#39;,\n            &#39;encoded&#39;:&#39;true&#39;,\n            &#39;gx_charset&#39;:&#39;UTF-8&#39;,\n            }; \n        \n        print 2\n            \n        #把发送数据转换格式\n        LoginData = urllib.urlencode(LoginData);    \n        \n        #生成请求数据\n        info_Login_Request = urllib2.Request(info_Login_URL, LoginData);\n        \n        #添加数据头部\n        info_Login_Request.add_header(&#39;Content-Type&#39;, &quot;application/x-www-form-urlencoded&quot;);\n        info_Login_Request.add_header(&#39;User-Agent&#39;, &quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&quot;);\n        print 3\n        #发送请求，尝试登陆\n        info_Login_Open = urllib2.urlopen(info_Login_Request);\n        print 4\n        #验证登陆是否成功\n        tt = urllib2.urlopen(info_URL).read()\n        fout=open(&quot;tt.html&quot;,&quot;w&quot;)\n        fout.write(tt)\n        print &#39;success!&#39;\n    except :\n        print &quot;登陆出错啦！&quot;\n\nif __name__ == &quot;__main__&quot; :\n    Login()\n</pre><br>\r\n经过测试成功</p>\r\n<p>IDtoken1和IDtoken2填用户名和密码。其他不用变</p>\r\n<p>linux下面　直接python spider.py　即可运行</p>\r\n',1,'python爬虫,模拟登陆',0,0,'2015-02-02 00:51:23','2015-02-02 00:51:23','2015-02-02 00:51:23'),(69,1,10,'Github在Ubuntu下面配置','904593e33d71616e999f3d163fcd5541',0,'\r\n\r\n<p>因项目需要所以学学这个比较火的开源代码托管</p>\r\n<p></p>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-se','\r\n\r\n<p>因项目需要所以学学这个比较火的开源代码托管</p>\r\n<p></p>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">１．sudo apt-get install git&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">２．<span style=\"line-height:1.571428em\">git config --global user.name &quot;</span><span style=\"line-height:1.571428em\">Your Name Here</span><span style=\"line-height:1.571428em\">&quot;</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">３．</span>git config --global user.email &quot;your_email@example.com&quot;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">４．</span>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">ssh -T git@github.com</span>\n执行之后提示：Permission denied (publickey).\n</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n这说明我们还没在GitHub账户中正确设置公钥认证。下图为GitHub的SSH公钥设置界面:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<img src=\"http://www.linuxidc.com/upload/2012_06/120606100474241.png\" alt=\"\" vspace=\"5\" width=\"581\" style=\"margin:0.857412em 0px 0px; padding:0px; border:0px\"></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\nGitHub的SSH服务支持OpenSSH&#26684;式的公钥认证，可以通过<a target=\"_blank\" title=\"Ubuntu\" href=\"http://www.linuxidc.com/topicnews.aspx?tid=2\" target=\"_blank\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\">Ubuntu</a>下的<tt class=\"docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">ssh-keygen</span></span></tt>命令创建公钥/私钥对。</p>\r\n<div class=\"cnblogs_code\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\">\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">ssh-keygen -C &quot;yourname@yourcompany.com&quot; -f ~/.ssh/github</span></pre>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n也可以用<tt class=\"docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">ssh-keygen</span></span></tt>命令以不同的名称创建多个公钥，当拥有多个GitHub账号时，非常重要。这是因为虽然一个GitHub账号允许使用多个不同的SSH公钥，但反过来，一个SSH公钥只能对应于一个GitHub账号。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n接下来就将<tt class=\"file docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">~/.ssh/github.pub</span></span></tt>文件内容拷贝到剪切板。公钥是一行长长的字符串，若用编辑器打开公钥文件会折行显示，注意在copy时一定不要在其中插入多余的换行符、空&#26684;等，否则在公钥认证过程因为服务器端和客户端公钥不匹配而导致认证失败。然后将公钥文件中的内容粘贴到GitHub的SSH公钥管理的对话框，即上图key对话框中，并为这个SSH\r\n Key起个名字并保存。设置成功后，再用<tt class=\"docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">ssh</span></span></tt>命令访问GitHub，会显示一条认证成功信息并退出。在认证成功的信息中还会显示该公钥对应的用户名。</p>\r\n<div class=\"cnblogs_code\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\">\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em\">ssh</span> -<span style=\"line-height:1.571428em\">T git@github.com\n执行后提示：Hi github</span>! You\'<span style=\"line-height:1.571428em\">ve successfully authenticated, but GitHub does not provide shell access.\n\n常用的git命令：\n\n\n</span></pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\ngit init # 初始化本地Git版本库<br>\r\ngit add&nbsp;# 暂存文件，如果使用<code style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\">.</code>表示当前目录及其子目录<br>\r\ngit commit -m “first commit” # 提交，-m选项后跟内容为提交所用的注释<br>\r\ngit remote -v # 查看当前项目远程连接的是哪个版本库地址<br>\r\ngit push origin master # 将本地项目提交到远程版本库</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\ngit fetch origin # 取得远程更新（到origin/master），但还没有合并<br>\r\ngit merge origin/master # 把更新的内容（origin/master）合并到本地分支（master）<br>\r\ngit pull origin master # 相当于fetch和merge的合并，但分步操作更保险</p>\r\n<div id=\"cnblogs_post_body\" style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">显示信息类命令</span>&nbsp;<br>\r\ngit ls-files -u 显示冲突的文件，-s是显示标记为冲突已解决的文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit diff 对比工作区和stage文件的差异&nbsp;<br>\r\ngit diff --cached 对比stage和branch之间的差异</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit branch 列出当前repository下的所有branch&nbsp;<br>\r\ngit branch --a 列出local 和remote下的所有branch</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit ls-files --stage 检查保存在stage的文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log 显示到HEAD所指向的commit为止的所有commit记录 。使用reset HEAD~n 命令使HEAD指针向前移动，会导致HEAD之后的commit记录不会被显示。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log -g则会查询reflog去查看最近做了哪些动作，这样可以配合git branch 恢复之前因为移动HEAD指针所丢弃的commit对象。如果reflog丢失则可以通过git fsck --full来查看没被引用的commit对象。&nbsp;<br>\r\ngit log -p -2 对比最新两次的commit对象&nbsp;<br>\r\nlog -1 HEAD</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log --pretty=oneline</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log --stat 1a410e 查看sha1为1a410e的commit对象的记录</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit blame -L 12,22 sth.cs&nbsp;<span style=\"line-height:1.571428em\">如果你发现自己代码中 的一个方法存在缺陷,你可以用</span><span style=\"line-height:1.571428em\">git blame</span><span style=\"line-height:1.571428em\">来标注文件,查看那个方法的每一行分别是由谁 在哪一天修改的。下面这个例子使用了</span><span style=\"line-height:1.571428em\">-L</span><span style=\"line-height:1.571428em\">选项来限制输出范围在第12至22行</span></p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">创建类命令</span>&nbsp;<br>\r\ngit brach branchName 创建名为branchName的branch&nbsp;<br>\r\ngit checkout branchName 切换到branchName的branch&nbsp;<br>\r\ngit checkout -b 创建并切换，也就是上面两个命令的合并</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit brach branchName ef71 从commit ef71创建名为branchName的branch</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">撤销类命令&nbsp;<br>\r\n</span>如果是单个文件&nbsp;<br>\r\n1.use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage&nbsp;<br>\r\n如果已经用add 命令把文件加入stage了，就先需要从stage中撤销</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n然后再从工作区撤销&nbsp;<br>\r\n2.use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit checkout a.txt&nbsp; 撤销a.txt的变动（工作区上的文件）&nbsp;<br>\r\n如果是多个文件&nbsp;<br>\r\ngit chenkout .</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n如果已经commit 了，则需要&nbsp;<br>\r\ngit commit --amend 来修改，这个只能修改最近上一次的,也就是用一个新的提交来覆盖上一次的提交。因此如果push以后再做这个动作就会有危险</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n$ git reset --hard HEAD 放弃工作区和index的改动,HEAD指针仍然指向当前的commit.（参照第一幅图）</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n这条命令同时还可以用来撤销还没commit的merge,其实原理就是放弃index和工作区的改动，因为没commit的改动只存在于index和工作区中。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n$ git reset --hard HEAD^ 用来撤销已经commit的内容(等价于 git reset --hard HEAD~1) 。原理就是放弃工作区和index的改动，同时HEAD指针指向前一个commit对象。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit revert 也是撤销命令，区别在于reset是指向原地或者向前移动指针，git revert是创建一个commit来覆盖当前的commit,指针向后移动</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">提交类命令&nbsp;<br>\r\n</span>git add 跟踪新文件或者已有文件的改动，或者用来解决冲突</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit commit 把文件从stage提交到branch</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit commit -a 把修改的文件先提交到stage,然后再从stash提交到branch</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">删除类命令</span>&nbsp;<br>\r\ngit rm --cached readme.txt 只从stage中删除，保留物理文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit rm readme.txt 不但从stage中删除，同时删除物理文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit mv a.txt b.txt 把a.txt改名为b.txt</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">Merge类命令</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n在冲突状态下，需要解决冲突的文件会从index打回到工作区。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n1.用工具或者手工解决冲突&nbsp;<br>\r\n2.git add 命令来表明冲突已经解决。&nbsp;<br>\r\n3.再次commit 已解决冲突的文件。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n$ git reset --hard ORIG_HEAD 用来撤销已经commit 的merge.&nbsp;<br>\r\n$ git reset --hard HEAD 用来撤销还没commit 的merge,其实原理就是放弃index和工作区的改动。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit reset --merge ORIG_HEAD，注意其中的--hard 换成了 --merge，这样就可以避免在回滚时清除working tree。</p>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\"><br>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<br>\r\n<p></p>\r\n','\r\n\r\n<p>因项目需要所以学学这个比较火的开源代码托管</p>\r\n<p></p>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">１．sudo apt-get install git&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">２．<span style=\"line-height:1.571428em\">git config --global user.name &quot;</span><span style=\"line-height:1.571428em\">Your Name Here</span><span style=\"line-height:1.571428em\">&quot;</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">３．</span>git config --global user.email &quot;your_email@example.com&quot;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">４．</span>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">ssh -T git@github.com</span>\n执行之后提示：Permission denied (publickey).\n</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n这说明我们还没在GitHub账户中正确设置公钥认证。下图为GitHub的SSH公钥设置界面:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<img src=\"http://www.linuxidc.com/upload/2012_06/120606100474241.png\" alt=\"\" vspace=\"5\" width=\"581\" style=\"margin:0.857412em 0px 0px; padding:0px; border:0px\"></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\nGitHub的SSH服务支持OpenSSH&#26684;式的公钥认证，可以通过<a target=\"_blank\" title=\"Ubuntu\" href=\"http://www.linuxidc.com/topicnews.aspx?tid=2\" target=\"_blank\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\">Ubuntu</a>下的<tt class=\"docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">ssh-keygen</span></span></tt>命令创建公钥/私钥对。</p>\r\n<div class=\"cnblogs_code\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\">\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">ssh-keygen -C &quot;yourname@yourcompany.com&quot; -f ~/.ssh/github</span></pre>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n也可以用<tt class=\"docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">ssh-keygen</span></span></tt>命令以不同的名称创建多个公钥，当拥有多个GitHub账号时，非常重要。这是因为虽然一个GitHub账号允许使用多个不同的SSH公钥，但反过来，一个SSH公钥只能对应于一个GitHub账号。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n接下来就将<tt class=\"file docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">~/.ssh/github.pub</span></span></tt>文件内容拷贝到剪切板。公钥是一行长长的字符串，若用编辑器打开公钥文件会折行显示，注意在copy时一定不要在其中插入多余的换行符、空&#26684;等，否则在公钥认证过程因为服务器端和客户端公钥不匹配而导致认证失败。然后将公钥文件中的内容粘贴到GitHub的SSH公钥管理的对话框，即上图key对话框中，并为这个SSH\r\n Key起个名字并保存。设置成功后，再用<tt class=\"docutils literal\" style=\"line-height:1.571428em\"><span class=\"pre\" style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-family:\'Courier New\'\">ssh</span></span></tt>命令访问GitHub，会显示一条认证成功信息并退出。在认证成功的信息中还会显示该公钥对应的用户名。</p>\r\n<div class=\"cnblogs_code\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\">\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em\">ssh</span> -<span style=\"line-height:1.571428em\">T git@github.com\n执行后提示：Hi github</span>! You\'<span style=\"line-height:1.571428em\">ve successfully authenticated, but GitHub does not provide shell access.\n\n常用的git命令：\n\n\n</span></pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\ngit init # 初始化本地Git版本库<br>\r\ngit add&nbsp;# 暂存文件，如果使用<code style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\">.</code>表示当前目录及其子目录<br>\r\ngit commit -m “first commit” # 提交，-m选项后跟内容为提交所用的注释<br>\r\ngit remote -v # 查看当前项目远程连接的是哪个版本库地址<br>\r\ngit push origin master # 将本地项目提交到远程版本库</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\ngit fetch origin # 取得远程更新（到origin/master），但还没有合并<br>\r\ngit merge origin/master # 把更新的内容（origin/master）合并到本地分支（master）<br>\r\ngit pull origin master # 相当于fetch和merge的合并，但分步操作更保险</p>\r\n<div id=\"cnblogs_post_body\" style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">显示信息类命令</span>&nbsp;<br>\r\ngit ls-files -u 显示冲突的文件，-s是显示标记为冲突已解决的文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit diff 对比工作区和stage文件的差异&nbsp;<br>\r\ngit diff --cached 对比stage和branch之间的差异</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit branch 列出当前repository下的所有branch&nbsp;<br>\r\ngit branch --a 列出local 和remote下的所有branch</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit ls-files --stage 检查保存在stage的文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log 显示到HEAD所指向的commit为止的所有commit记录 。使用reset HEAD~n 命令使HEAD指针向前移动，会导致HEAD之后的commit记录不会被显示。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log -g则会查询reflog去查看最近做了哪些动作，这样可以配合git branch 恢复之前因为移动HEAD指针所丢弃的commit对象。如果reflog丢失则可以通过git fsck --full来查看没被引用的commit对象。&nbsp;<br>\r\ngit log -p -2 对比最新两次的commit对象&nbsp;<br>\r\nlog -1 HEAD</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log --pretty=oneline</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit log --stat 1a410e 查看sha1为1a410e的commit对象的记录</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit blame -L 12,22 sth.cs&nbsp;<span style=\"line-height:1.571428em\">如果你发现自己代码中 的一个方法存在缺陷,你可以用</span><span style=\"line-height:1.571428em\">git blame</span><span style=\"line-height:1.571428em\">来标注文件,查看那个方法的每一行分别是由谁 在哪一天修改的。下面这个例子使用了</span><span style=\"line-height:1.571428em\">-L</span><span style=\"line-height:1.571428em\">选项来限制输出范围在第12至22行</span></p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">创建类命令</span>&nbsp;<br>\r\ngit brach branchName 创建名为branchName的branch&nbsp;<br>\r\ngit checkout branchName 切换到branchName的branch&nbsp;<br>\r\ngit checkout -b 创建并切换，也就是上面两个命令的合并</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit brach branchName ef71 从commit ef71创建名为branchName的branch</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">撤销类命令&nbsp;<br>\r\n</span>如果是单个文件&nbsp;<br>\r\n1.use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage&nbsp;<br>\r\n如果已经用add 命令把文件加入stage了，就先需要从stage中撤销</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n然后再从工作区撤销&nbsp;<br>\r\n2.use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit checkout a.txt&nbsp; 撤销a.txt的变动（工作区上的文件）&nbsp;<br>\r\n如果是多个文件&nbsp;<br>\r\ngit chenkout .</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n如果已经commit 了，则需要&nbsp;<br>\r\ngit commit --amend 来修改，这个只能修改最近上一次的,也就是用一个新的提交来覆盖上一次的提交。因此如果push以后再做这个动作就会有危险</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n$ git reset --hard HEAD 放弃工作区和index的改动,HEAD指针仍然指向当前的commit.（参照第一幅图）</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n这条命令同时还可以用来撤销还没commit的merge,其实原理就是放弃index和工作区的改动，因为没commit的改动只存在于index和工作区中。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n$ git reset --hard HEAD^ 用来撤销已经commit的内容(等价于 git reset --hard HEAD~1) 。原理就是放弃工作区和index的改动，同时HEAD指针指向前一个commit对象。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit revert 也是撤销命令，区别在于reset是指向原地或者向前移动指针，git revert是创建一个commit来覆盖当前的commit,指针向后移动</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">提交类命令&nbsp;<br>\r\n</span>git add 跟踪新文件或者已有文件的改动，或者用来解决冲突</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit commit 把文件从stage提交到branch</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit commit -a 把修改的文件先提交到stage,然后再从stash提交到branch</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">删除类命令</span>&nbsp;<br>\r\ngit rm --cached readme.txt 只从stage中删除，保留物理文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit rm readme.txt 不但从stage中删除，同时删除物理文件</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit mv a.txt b.txt 把a.txt改名为b.txt</p>\r\n<hr style=\"line-height:1.571428em\">\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n<span style=\"line-height:1.571428em\">Merge类命令</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n在冲突状态下，需要解决冲突的文件会从index打回到工作区。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n1.用工具或者手工解决冲突&nbsp;<br>\r\n2.git add 命令来表明冲突已经解决。&nbsp;<br>\r\n3.再次commit 已解决冲突的文件。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\n$ git reset --hard ORIG_HEAD 用来撤销已经commit 的merge.&nbsp;<br>\r\n$ git reset --hard HEAD 用来撤销还没commit 的merge,其实原理就是放弃index和工作区的改动。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em\">\r\ngit reset --merge ORIG_HEAD，注意其中的--hard 换成了 --merge，这样就可以避免在回滚时清除working tree。</p>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\"><br>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<br>\r\n<p></p>\r\n',1,'',0,0,'2015-02-02 00:51:26','2015-02-02 00:51:26','2015-02-02 00:51:26'),(70,1,10,'Vim快速学习','687c238f8aaa8619652303b64a3c71d7',0,'\r\n\r\n<div style=\"font-family:Arial,Console,Verdana,\'Courier New\'; border:1px solid rgb(204,204,204); float:left; min-width:200px; padding:4px 10px; background:rgb(238,238,238)\">\r\n<p style=\"margin-top:0','\r\n\r\n<div style=\"font-family:Arial,Console,Verdana,\'Courier New\'; border:1px solid rgb(204,204,204); float:left; min-width:200px; padding:4px 10px; background:rgb(238,238,238)\">\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; text-align:right\">\r\n<a target=\"_blank\" href=\"http://blog.csdn.net/niushuai666/article/details/7275406#\" title=\"展开\" style=\"color:rgb(202,0,0); text-decoration:none\">[&#43;]</a></p>\r\n</div>\r\n<div style=\"font-family:Arial,Console,Verdana,\'Courier New\'; clear:both\"></div>\r\n<div id=\"article_content\" class=\"article_content\" style=\"margin:20px 0px 0px; font-size:14px; line-height:26px; font-family:Arial\">\r\n<div style=\"word-break:break-word; word-wrap:break-word; margin:5px; padding:0px; overflow-y:auto\">\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<br>\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\nvim的学习曲线相当的大（参看<a target=\"_blank\" title=\"主流文本编辑器学习曲线\" href=\"http://coolshell.cn/articles/3125.html\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">各种文本编辑器的学习曲线</a>），所以，如果你一开始看到的是一大堆VIM的命令分类，你一定会对这个编辑器失去兴趣的。下面的文章翻译自《<a target=\"_blank\" href=\"http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">Learn\r\n Vim Progressively</a>》，我觉得这是给新手最好的VIM的升级教程了，没有列举所有的命令，只是列举了那些最有用的命令。非常不错。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px; text-align:center\">\r\n——————————正文开始——————————</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你想以最快的速度学习人类史上最好的文本编辑器VIM吗？你先得懂得如何在VIM幸存下来，然后一点一点地学习各种戏法。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<a target=\"_blank\" href=\"http://www.vim.org/\" style=\"color:rgb(41,112,166); text-decoration:none\">Vim</a>&nbsp;the Six Billion Dollar editor</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\nBetter, Stronger, Faster.</p>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n学习&nbsp;<a target=\"_blank\" href=\"http://www.vim.org/\" style=\"color:rgb(41,112,166); text-decoration:none\">vim</a>&nbsp;并且其会成为你最后一个使用的文本编辑器。没有比这个更好的文本编辑器了，非常地难学，但是却不可思议地好用。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n我建议下面这四个步骤：</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">存活</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">感觉良好</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">觉得更好，更强，更快</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">使用VIM的超能力</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n当你走完这篇文章，你会成为一个vim的 superstar。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在开始学习以前，我需要给你一些警告：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">学习vim在开始时是痛苦的。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">需要时间</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">需要不断地练习，就像你学习一个乐器一样。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">不要期望你能在3天内把vim练得比别的编辑器更有效率。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">事实上，你需要2周时间的苦练，而不是3天。</li></ul>\r\n<div style=\"margin:0px; padding:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<span id=\"more-5426\"></span></div>\r\n<h4 style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t0\" style=\"color:rgb(202,0,0)\"></a>第一级 – 存活</h4>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">安装&nbsp;<a target=\"_blank\" href=\"http://www.vim.org/\" style=\"color:rgb(41,112,166); text-decoration:none\">vim</a></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">启动 vim</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>什么也别干！</strong>请先阅读</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n当你安装好一个编辑器后，你一定会想在其中输入点什么东西，然后看看这个编辑器是什么样子。但vim不是这样的，请按照下面的命令操作：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">启 动Vim后，vim在&nbsp;<em>Normal</em>&nbsp;模式下。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">让我们进入&nbsp;<em>Insert</em>&nbsp;模式，请按下键 i 。(陈皓注：你会看到vim左下角有一个–insert–字样，表示，你可以以插入的方式输入了）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">此时，你可以输入文本了，就像你用“记事本”一样。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">如果你想返回&nbsp;<em>Normal</em>&nbsp;模式，请按&nbsp;<code>ESC</code>&nbsp;键。</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n现在，你知道如何在&nbsp;<em>Insert</em>&nbsp;和&nbsp;<em>Normal</em>&nbsp;模式下切换了。下面是一些命令，可以让你在&nbsp;<em>Normal</em>&nbsp;模式下幸存下来：</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>i</code>&nbsp;→&nbsp;<em>Insert</em>&nbsp;模式，按&nbsp;<code>ESC</code>&nbsp;回到&nbsp;<em>Normal</em>&nbsp;模式.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>x</code>&nbsp;→ 删当前光标所在的一个字符。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:wq</code>&nbsp;→ 存盘 &#43; 退出 (<code>:w</code>&nbsp;存盘,&nbsp;<code>:q</code>&nbsp;退出) &nbsp; （陈皓注：:w 后可以跟文件名）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>dd</code>&nbsp;→ 删除当前行，并把删除的行存到剪贴板里</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>p</code>&nbsp;→ 粘贴剪贴板</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n<strong>推荐</strong>:</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>hjkl</code>&nbsp;(强例推荐使用其移动光标，但不必需) →你也可以使用光标键 (←↓↑→). 注:&nbsp;<code>j</code>&nbsp;就像下箭头。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:help &lt;command&gt;</code>&nbsp;→ 显示相关命令的帮助。你也可以就输入&nbsp;<code>:help</code>&nbsp;而不跟命令。（陈皓注：退出帮助需要输入:q）</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你能在vim幸存下来只需要上述的那5个命令，你就可以编辑文本了，你一定要把这些命令练成一种下意识的状态。于是你就可以开始进阶到第二级了。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n当是，在你进入第二级时，需要再说一下&nbsp;<em>Normal&nbsp;</em>模式。在一般的编辑器下，当你需要copy一段文字的时候，你需要使用&nbsp;<code>Ctrl</code>&nbsp;键，比如：<code>Ctrl-C</code>。也就是说，Ctrl键就好像功能键一样，当你按下了功能键Ctrl后，C就不在是C了，而且就是一个命令或是一个快键键了，<strong>在VIM的Normal模式下，所有的键就是功能键了</strong>。这个你需要知道。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n标记:</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">下面的文字中，如果是&nbsp;<code>Ctrl-λ</code>我会写成&nbsp;<code>&lt;C-λ&gt;</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">以&nbsp;<code>:</code>&nbsp;开始的命令你需要输入&nbsp;<code>&lt;enter&gt;</code>回车，例如 — 如果我写成&nbsp;<code>:q</code>&nbsp;也就是说你要输入&nbsp;<code>:q&lt;enter&gt;</code>.</li></ul>\r\n<h4 id=\"nd-level----feel-comfortable\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t1\" style=\"color:rgb(202,0,0)\"></a>第二级 – 感觉良好</h4>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n上面的那些命令只能让你存活下来，现在是时候学习一些更多的命令了，下面是我的建议：（陈皓注：所有的命令都需要在Normal模式下使用，如果你不知道现在在什么样的模式，你就狂按几次ESC键）</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>各种插入模式</strong><br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>a</code>&nbsp;→ 在光标后插入</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>o</code>&nbsp;→ 在当前行后插入一个新行</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>O</code>&nbsp;→ 在当前行前插入一个新行</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>cw</code>&nbsp;→ 替换从光标所在位置后到一个单词结尾的字符</li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>简单的移动光标</strong><br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>0</code>&nbsp;→ 数字零，到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>^</code>&nbsp;→ 到本行第一个不是blank字符的位置（所谓blank字符就是空&#26684;，tab，换行，回车等）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;→ 到本行行尾</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>g_</code>&nbsp;→ 到本行最后一个不是blank字符的位置。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>/pattern</code>&nbsp;→ 搜索&nbsp;<code>pattern</code>&nbsp;的字符串（陈皓注：如果搜索出多个匹配，可按n键到下一个）</li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>拷贝/粘贴</strong>&nbsp;（陈皓注：p/P都可以，p是表示在当前位置之后，P表示在当前位置之前）<br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>P</code>&nbsp;→ 粘贴</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>yy</code>&nbsp;→ 拷贝当前行当行于&nbsp;<code>ddP</code></li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>Undo/Redo</strong><br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>u</code>&nbsp;→ undo</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-r&gt;</code>&nbsp;→ redo</li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>打开/保存/退出/改变文件</strong>(Buffer)<br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:e &lt;path/to/file&gt;</code>&nbsp;→ 打开一个文件</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:w</code>&nbsp;→ 存盘</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:saveas &lt;path/to/file&gt;</code>&nbsp;→ 另存为&nbsp;<code>&lt;path/to/file&gt;</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:x</code>，&nbsp;<code>ZZ</code>&nbsp;或&nbsp;<code>:wq</code>&nbsp;→ 保存并退出 (<code>:x</code>&nbsp;表示仅在需要时保存，ZZ不需要输入冒号并回车)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:q!</code>&nbsp;→ 退出不保存&nbsp;<code>:qa!</code>&nbsp;强行退出所有的正在编辑的文件，就算别的文件有更改。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:bn</code>&nbsp;和&nbsp;<code>:bp</code>&nbsp;→ 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（陈皓注：我喜欢使用:n到下一个文件）</li></ul>\r\n</blockquote>\r\n</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n花点时间熟悉一下上面的命令，一旦你掌握他们了，你就几乎可以干其它编辑器都能干的事了。但是到现在为止，你还是觉得使用vim还是有点笨拙，不过没关系，你可以进阶到第三级了。</p>\r\n<h4 id=\"rd-level----better-stronger-faster\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t2\" style=\"color:rgb(202,0,0)\"></a>第三级&nbsp;– 更好，更强，更快</h4>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n先恭喜你！你干的很不错。我们可以开始一些更为有趣的事了。在第三级，我们只谈那些和vi可以兼容的命令。</p>\r\n<h5 id=\"better\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t3\" style=\"color:rgb(202,0,0)\"></a>更好</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面，让我们看一下vim是怎么重复自己的：</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>.</code>&nbsp;→ (小数点) 可以重复上一次的命令</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">N&lt;command&gt; → 重复某个命令N次</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面是一个示例，找开一个文件你可以试试下面的命令：</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>2dd</code>&nbsp;→ 删除2行</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>3p</code>&nbsp;→ 粘贴文本3次</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>100idesu [ESC]</code>&nbsp;→ 会写下 “desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu\r\n desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu\r\n desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu “</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>.</code>&nbsp;→ 重复上一个命令—— 100 “desu “.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>3.</code>&nbsp;→ 重复 3 次 “desu” (注意：不是 300，你看，VIM多聪明啊).</li></ul>\r\n</blockquote>\r\n<h5 id=\"stronger\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t4\" style=\"color:rgb(202,0,0)\"></a>更强</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你要让你的光标移动更有效率，你一定要了解下面的这些命令，<strong>千万别跳过</strong>。</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">N<code>G</code>&nbsp;→ 到第 N 行 （陈皓注：注意命令中的G是大写的，另我一般使用 : N 到第N行，如 :137 到第137行）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>gg</code>&nbsp;→ 到第一行。（陈皓注：相当于1G，或 :1）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>G</code>&nbsp;→ 到最后一行。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">按单词移动：<br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ol style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>w</code>&nbsp;→ 到下一个单词的开头。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>e</code>&nbsp;→ 到下一个单词的结尾。</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n&gt; 如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成（陈皓注：程序变量）</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n&gt; 如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W。（陈皓注：程序语句）</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n<img src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/word_moves.jpg\" alt=\"Word moves example\" style=\"border:0px; max-width:650px\"></p>\r\n</blockquote>\r\n</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面，让我来说说最强的光标移动：</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>%</code>&nbsp;: 匹配括号移动，包括&nbsp;<code>(</code>,&nbsp;<code>{</code>,&nbsp;<code>[</code>. （陈皓注：你需要把光标先移到括号上）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>*</code>&nbsp;和&nbsp;<code>#</code>: &nbsp;匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n相信我，上面这三个命令对程序员来说是相当强大的。</p>\r\n<h5 id=\"faster\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t5\" style=\"color:rgb(202,0,0)\"></a>更快</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你一定要记住光标的移动，因为很多命令都可以和这些移动光标的命令连动。很多命令都可以如下来干：</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<code>&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</code></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n例如&nbsp;<code>0y$</code>&nbsp;命令意味着：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>0</code>&nbsp;→ 先到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>y</code>&nbsp;→ 从这里开始拷贝</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;→ 拷贝到本行最后一个字符</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你可可以输入&nbsp;<code>ye</code>，从当前位置拷贝到本单词的最后一个字符。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你也可以输入&nbsp;<code>y2/foo</code>&nbsp;来拷贝2个 “foo” 之间的字符串。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n还有很多时间并不一定你就一定要按y才会拷贝，下面的命令也会被拷贝：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>d</code>&nbsp;(删除 )</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>v</code>&nbsp;(可视化的选择)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>gU</code>&nbsp;(变大写)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>gu</code>&nbsp;(变小写)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">等等</li></ul>\r\n<div style=\"margin:0px; padding:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n（陈皓注：可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等）</div>\r\n<h4 id=\"th-level----vim-superpowers\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t6\" style=\"color:rgb(202,0,0)\"></a>第四级 – Vim 超能力</h4>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你只需要掌握前面的命令，你就可以很舒服的使用VIM了。但是，现在，我们向你介绍的是VIM杀手级的功能。下面这些功能是我只用vim的原因。</p>\r\n<h5 id=\"move-on-current-line-0---f-f-t-t--\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t7\" style=\"color:rgb(202,0,0)\"></a>在当前行上移动光标:&nbsp;<code>0</code>&nbsp;<code>^</code>&nbsp;<code>$</code>&nbsp;<code>f</code>&nbsp;<code>F</code>&nbsp;<code>t</code>&nbsp;<code>T</code>&nbsp;<code>,</code>&nbsp;<code>;</code></h5>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>0</code>&nbsp;→ 到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>^</code>&nbsp;→ 到本行的第一个非blank字符</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;→ 到行尾</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>g_</code>&nbsp;→ 到本行最后一个不是blank字符的位置。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>fa</code>&nbsp;→ 到下一个为a的字符处，你也可以fs到下一个为s的字符。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>t,</code>&nbsp;→ 到逗号前的第一个字符。逗号可以变成其它字符。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>3fa</code>&nbsp;→ 在当前行查找第三个出现的a。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>F</code>&nbsp;和&nbsp;<code>T</code>&nbsp;→ 和&nbsp;<code>f</code>&nbsp;和&nbsp;<code>t</code>&nbsp;一样，只不过是相反方向。<br>\r\n<img src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/line_moves.jpg\" alt=\"Line moves\" style=\"border:0px; max-width:650px\"></li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n还有一个很有用的命令是&nbsp;<code>dt&quot;</code>&nbsp;→ 删除所有的内容，直到遇到双引号——&nbsp;<code>&quot;。</code></p>\r\n<h5 id=\"zone-selection-actionaobject-or-actioniobject\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t8\" style=\"color:rgb(202,0,0)\"></a>区域选择&nbsp;<code>&lt;action&gt;a&lt;object&gt;</code>&nbsp;或&nbsp;<code>&lt;action&gt;i&lt;object&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在visual 模式下，这些命令很强大，其命令&#26684;式为</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<code>&lt;action&gt;a&lt;object&gt;</code>&nbsp;和&nbsp;<code>&lt;action&gt;i&lt;object&gt;</code></p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">action可以是任何的命令，如&nbsp;<code>d</code>&nbsp;(删除),&nbsp;<code>y</code>&nbsp;(拷贝),&nbsp;<code>v</code>&nbsp;(可以视模式选择)。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">object 可能是：&nbsp;<code>w</code>&nbsp;一个单词，&nbsp;<code>W</code>&nbsp;一个以空&#26684;为分隔的单词，&nbsp;<code>s</code>&nbsp;一个句字，&nbsp;<code>p</code>&nbsp;一个段落。也可以是一个特别的字符：<code>&quot;、</code>&nbsp;<code>\'、</code>&nbsp;<code>)、</code>&nbsp;<code>}、</code>&nbsp;<code>]。</code></li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n假设你有一个字符串&nbsp;<code>(map (&#43;) (&quot;foo&quot;))</code>.而光标键在第一个&nbsp;<code>o&nbsp;</code>的位置。</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>vi&quot;</code>&nbsp;→ 会选择&nbsp;<code>foo</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>va&quot;</code>&nbsp;→ 会选择&nbsp;<code>&quot;foo&quot;</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>vi)</code>&nbsp;→ 会选择&nbsp;<code>&quot;foo&quot;</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>va)</code>&nbsp;→ 会选择<code>(&quot;foo&quot;)</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>v2i)</code>&nbsp;→ 会选择&nbsp;<code>map (&#43;) (&quot;foo&quot;)</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>v2a)</code>&nbsp;→ 会选择&nbsp;<code>(map (&#43;) (&quot;foo&quot;))</code></li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/textobjects.png\" alt=\"Text objects selection\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"select-rectangular-blocks-c-v\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t9\" style=\"color:rgb(202,0,0)\"></a>块操作:&nbsp;<code>&lt;C-v&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n块操作，典型的操作：&nbsp;<code>0 &lt;C-v&gt; &lt;C-d&gt; I-- [ESC]</code></p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>^</code>&nbsp;→ 到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-v&gt;</code>&nbsp;→ 开始块操作</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-d&gt;</code>&nbsp;→ 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>I-- [ESC]</code>&nbsp;→ I是插入，插入“<code>--</code>”，按ESC键来为每一行生效。</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/rectangular-blocks.gif\" alt=\"Rectangular blocks\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在Windows下的vim，你需要使用&nbsp;<code>&lt;C-q&gt;</code>&nbsp;而不是&nbsp;<code>&lt;C-v&gt;</code>&nbsp;，<code>&lt;C-v&gt;</code>&nbsp;是拷贝剪贴板。</p>\r\n<h5 id=\"completion-c-n-and-c-p\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t10\" style=\"color:rgb(202,0,0)\"></a>自动提示：&nbsp;<code>&lt;C-n&gt;</code>&nbsp;和&nbsp;<code>&lt;C-p&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在 Insert 模式下，你可以输入一个词的开头，然后按&nbsp;<code>&lt;C-p&gt;或是&lt;C-n&gt;，自动补齐功能就出现了……</code></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<code></code><img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/completion.gif\" alt=\"Completion\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"macros--qa-do-something-q-a-\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t11\" style=\"color:rgb(202,0,0)\"></a>宏录制：&nbsp;<code>qa</code>&nbsp;操作序列&nbsp;<code>q</code>,&nbsp;<code>@a</code>,&nbsp;<code>@@</code></h5>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>qa</code>&nbsp;把你的操作记录在寄存器&nbsp;<code>a。</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">于是&nbsp;<code>@a</code>&nbsp;会replay被录制的宏。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>@@</code>&nbsp;是一个快捷键用来replay最新录制的宏。</li></ul>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n<strong><em>示例</em></strong></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n在一个只有一行且这一行只有“1”的文本中，键入如下命令：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>qaYp&lt;C-a&gt;q</code>→\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>qa</code>&nbsp;开始录制</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>Yp</code>&nbsp;复制行.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-a&gt;</code>&nbsp;增加1.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>q</code>&nbsp;停止录制.</li></ul>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>@a</code>&nbsp;→ 在1下面写下 2</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>@@</code>&nbsp;→ 在2 正面写下3</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">现在做&nbsp;<code>100@@</code>&nbsp;会创建新的100行，并把数据增加到 103.</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/macros.gif\" alt=\"Macros\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"visual-selection-vvc-v\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t12\" style=\"color:rgb(202,0,0)\"></a>可视化选择：&nbsp;<code>v</code>,<code>V</code>,<code>&lt;C-v&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n前面，我们看到了&nbsp;<code>&lt;C-v&gt;</code>的示例 （在Windows下应该是&lt;C-q&gt;），我们可以使用&nbsp;<code>v</code>&nbsp;和&nbsp;<code>V</code>。一但被选好了，你可以做下面的事：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>J</code>&nbsp;→ 把所有的行连接起来（变成一行）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;</code>&nbsp;或&nbsp;<code>&gt;</code>&nbsp;→ 左右缩进</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>=</code>&nbsp;→ 自动给缩进 （陈皓注：这个功能相当强大，我太喜欢了）</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/autoindent.gif\" alt=\"Autoindent\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在所有被选择的行后加上点东西：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-v&gt;</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">选中相关的行 (可使用&nbsp;<code>j</code>&nbsp;或&nbsp;<code>&lt;C-d&gt;</code>&nbsp;或是&nbsp;<code>/pattern</code>&nbsp;或是&nbsp;<code>%</code>&nbsp;等……)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;到行最后</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>A</code>, 输入字符串，按&nbsp;<code>ESC。</code></li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/append-to-many-lines.gif\" alt=\"Append to many lines\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"splits-split-and-vsplit\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t13\" style=\"color:rgb(202,0,0)\"></a>分屏:&nbsp;<code>:split</code>&nbsp;和&nbsp;<code>vsplit</code>.</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面是主要的命令，你可以使用VIM的帮助&nbsp;<code>:help split</code>. 你可以参考本站以前的一篇文章<a target=\"_blank\" title=\"Vim的分屏功能\" href=\"http://coolshell.cn/articles/1679.html\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">VIM分屏</a>。</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:split</code>&nbsp;→ 创建分屏 (<code>:vsplit</code>创建垂直分屏)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-w&gt;&lt;dir&gt;</code>&nbsp;: dir就是方向，可以是&nbsp;<code>hjkl</code>&nbsp;或是 ←↓↑→ 中的一个，其用来切换分屏。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-w&gt;_</code>&nbsp;(或&nbsp;<code>&lt;C-w&gt;|</code>)&nbsp;: 最大化尺寸 (&lt;C-w&gt;|&nbsp;垂直分屏)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-w&gt;&#43;</code>&nbsp;(或&nbsp;<code>&lt;C-w&gt;-</code>)&nbsp;: 增加尺寸</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/split.gif\" alt=\"Split\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h4 id=\"conclusion\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t14\" style=\"color:rgb(202,0,0)\"></a>结束语</h4>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">上面是作者最常用的90%的命令。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">我建议你每天都学1到2个新的命令。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">在两到三周后，你会感到vim的强大的。</li></ul>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">有时候，学习VIM就像是在死背一些东西。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">幸运的是，vim有很多很不错的工具和优秀的文档。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">运行vimtutor直到你熟悉了那些基本命令。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">其在线帮助文档中你应该要仔细阅读的是&nbsp;<code>:help usr_02.txt</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">你会学习到诸如&nbsp;&nbsp;<code>!，</code>&nbsp;目录，寄存器，插件等很多其它的功能。</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n学习vim就像学弹钢琴一样，一旦学会，受益无穷。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px; text-align:center\">\r\n——————————正文结束——————————</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n对于vi/vim只是点评一点：这是一个你不需要使用鼠标，不需使用小键盘，只需要使用大键盘就可以完成很多复杂功能文本编辑的编辑器。不然，<a target=\"_blank\" title=\"Visual Studio的Vim插件\" href=\"http://coolshell.cn/articles/1901.html\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">Visual Studio也不就会有vim的插件了</a>。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n(全文完)</p>\r\n</div>\r\n</div>\r\n','\r\n\r\n<div style=\"font-family:Arial,Console,Verdana,\'Courier New\'; border:1px solid rgb(204,204,204); float:left; min-width:200px; padding:4px 10px; background:rgb(238,238,238)\">\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; text-align:right\">\r\n<a target=\"_blank\" href=\"http://blog.csdn.net/niushuai666/article/details/7275406#\" title=\"展开\" style=\"color:rgb(202,0,0); text-decoration:none\">[&#43;]</a></p>\r\n</div>\r\n<div style=\"font-family:Arial,Console,Verdana,\'Courier New\'; clear:both\"></div>\r\n<div id=\"article_content\" class=\"article_content\" style=\"margin:20px 0px 0px; font-size:14px; line-height:26px; font-family:Arial\">\r\n<div style=\"word-break:break-word; word-wrap:break-word; margin:5px; padding:0px; overflow-y:auto\">\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<br>\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\nvim的学习曲线相当的大（参看<a target=\"_blank\" title=\"主流文本编辑器学习曲线\" href=\"http://coolshell.cn/articles/3125.html\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">各种文本编辑器的学习曲线</a>），所以，如果你一开始看到的是一大堆VIM的命令分类，你一定会对这个编辑器失去兴趣的。下面的文章翻译自《<a target=\"_blank\" href=\"http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">Learn\r\n Vim Progressively</a>》，我觉得这是给新手最好的VIM的升级教程了，没有列举所有的命令，只是列举了那些最有用的命令。非常不错。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px; text-align:center\">\r\n——————————正文开始——————————</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你想以最快的速度学习人类史上最好的文本编辑器VIM吗？你先得懂得如何在VIM幸存下来，然后一点一点地学习各种戏法。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<a target=\"_blank\" href=\"http://www.vim.org/\" style=\"color:rgb(41,112,166); text-decoration:none\">Vim</a>&nbsp;the Six Billion Dollar editor</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\nBetter, Stronger, Faster.</p>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n学习&nbsp;<a target=\"_blank\" href=\"http://www.vim.org/\" style=\"color:rgb(41,112,166); text-decoration:none\">vim</a>&nbsp;并且其会成为你最后一个使用的文本编辑器。没有比这个更好的文本编辑器了，非常地难学，但是却不可思议地好用。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n我建议下面这四个步骤：</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">存活</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">感觉良好</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">觉得更好，更强，更快</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">使用VIM的超能力</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n当你走完这篇文章，你会成为一个vim的 superstar。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在开始学习以前，我需要给你一些警告：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">学习vim在开始时是痛苦的。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">需要时间</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">需要不断地练习，就像你学习一个乐器一样。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">不要期望你能在3天内把vim练得比别的编辑器更有效率。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">事实上，你需要2周时间的苦练，而不是3天。</li></ul>\r\n<div style=\"margin:0px; padding:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<span id=\"more-5426\"></span></div>\r\n<h4 style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t0\" style=\"color:rgb(202,0,0)\"></a>第一级 – 存活</h4>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">安装&nbsp;<a target=\"_blank\" href=\"http://www.vim.org/\" style=\"color:rgb(41,112,166); text-decoration:none\">vim</a></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">启动 vim</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>什么也别干！</strong>请先阅读</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n当你安装好一个编辑器后，你一定会想在其中输入点什么东西，然后看看这个编辑器是什么样子。但vim不是这样的，请按照下面的命令操作：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">启 动Vim后，vim在&nbsp;<em>Normal</em>&nbsp;模式下。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">让我们进入&nbsp;<em>Insert</em>&nbsp;模式，请按下键 i 。(陈皓注：你会看到vim左下角有一个–insert–字样，表示，你可以以插入的方式输入了）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">此时，你可以输入文本了，就像你用“记事本”一样。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">如果你想返回&nbsp;<em>Normal</em>&nbsp;模式，请按&nbsp;<code>ESC</code>&nbsp;键。</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n现在，你知道如何在&nbsp;<em>Insert</em>&nbsp;和&nbsp;<em>Normal</em>&nbsp;模式下切换了。下面是一些命令，可以让你在&nbsp;<em>Normal</em>&nbsp;模式下幸存下来：</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>i</code>&nbsp;→&nbsp;<em>Insert</em>&nbsp;模式，按&nbsp;<code>ESC</code>&nbsp;回到&nbsp;<em>Normal</em>&nbsp;模式.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>x</code>&nbsp;→ 删当前光标所在的一个字符。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:wq</code>&nbsp;→ 存盘 &#43; 退出 (<code>:w</code>&nbsp;存盘,&nbsp;<code>:q</code>&nbsp;退出) &nbsp; （陈皓注：:w 后可以跟文件名）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>dd</code>&nbsp;→ 删除当前行，并把删除的行存到剪贴板里</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>p</code>&nbsp;→ 粘贴剪贴板</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n<strong>推荐</strong>:</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>hjkl</code>&nbsp;(强例推荐使用其移动光标，但不必需) →你也可以使用光标键 (←↓↑→). 注:&nbsp;<code>j</code>&nbsp;就像下箭头。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:help &lt;command&gt;</code>&nbsp;→ 显示相关命令的帮助。你也可以就输入&nbsp;<code>:help</code>&nbsp;而不跟命令。（陈皓注：退出帮助需要输入:q）</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你能在vim幸存下来只需要上述的那5个命令，你就可以编辑文本了，你一定要把这些命令练成一种下意识的状态。于是你就可以开始进阶到第二级了。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n当是，在你进入第二级时，需要再说一下&nbsp;<em>Normal&nbsp;</em>模式。在一般的编辑器下，当你需要copy一段文字的时候，你需要使用&nbsp;<code>Ctrl</code>&nbsp;键，比如：<code>Ctrl-C</code>。也就是说，Ctrl键就好像功能键一样，当你按下了功能键Ctrl后，C就不在是C了，而且就是一个命令或是一个快键键了，<strong>在VIM的Normal模式下，所有的键就是功能键了</strong>。这个你需要知道。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n标记:</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">下面的文字中，如果是&nbsp;<code>Ctrl-λ</code>我会写成&nbsp;<code>&lt;C-λ&gt;</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">以&nbsp;<code>:</code>&nbsp;开始的命令你需要输入&nbsp;<code>&lt;enter&gt;</code>回车，例如 — 如果我写成&nbsp;<code>:q</code>&nbsp;也就是说你要输入&nbsp;<code>:q&lt;enter&gt;</code>.</li></ul>\r\n<h4 id=\"nd-level----feel-comfortable\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t1\" style=\"color:rgb(202,0,0)\"></a>第二级 – 感觉良好</h4>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n上面的那些命令只能让你存活下来，现在是时候学习一些更多的命令了，下面是我的建议：（陈皓注：所有的命令都需要在Normal模式下使用，如果你不知道现在在什么样的模式，你就狂按几次ESC键）</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>各种插入模式</strong><br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>a</code>&nbsp;→ 在光标后插入</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>o</code>&nbsp;→ 在当前行后插入一个新行</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>O</code>&nbsp;→ 在当前行前插入一个新行</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>cw</code>&nbsp;→ 替换从光标所在位置后到一个单词结尾的字符</li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>简单的移动光标</strong><br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>0</code>&nbsp;→ 数字零，到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>^</code>&nbsp;→ 到本行第一个不是blank字符的位置（所谓blank字符就是空&#26684;，tab，换行，回车等）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;→ 到本行行尾</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>g_</code>&nbsp;→ 到本行最后一个不是blank字符的位置。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>/pattern</code>&nbsp;→ 搜索&nbsp;<code>pattern</code>&nbsp;的字符串（陈皓注：如果搜索出多个匹配，可按n键到下一个）</li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>拷贝/粘贴</strong>&nbsp;（陈皓注：p/P都可以，p是表示在当前位置之后，P表示在当前位置之前）<br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>P</code>&nbsp;→ 粘贴</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>yy</code>&nbsp;→ 拷贝当前行当行于&nbsp;<code>ddP</code></li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>Undo/Redo</strong><br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>u</code>&nbsp;→ undo</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-r&gt;</code>&nbsp;→ redo</li></ul>\r\n</blockquote>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><strong>打开/保存/退出/改变文件</strong>(Buffer)<br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:e &lt;path/to/file&gt;</code>&nbsp;→ 打开一个文件</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:w</code>&nbsp;→ 存盘</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:saveas &lt;path/to/file&gt;</code>&nbsp;→ 另存为&nbsp;<code>&lt;path/to/file&gt;</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:x</code>，&nbsp;<code>ZZ</code>&nbsp;或&nbsp;<code>:wq</code>&nbsp;→ 保存并退出 (<code>:x</code>&nbsp;表示仅在需要时保存，ZZ不需要输入冒号并回车)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:q!</code>&nbsp;→ 退出不保存&nbsp;<code>:qa!</code>&nbsp;强行退出所有的正在编辑的文件，就算别的文件有更改。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:bn</code>&nbsp;和&nbsp;<code>:bp</code>&nbsp;→ 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（陈皓注：我喜欢使用:n到下一个文件）</li></ul>\r\n</blockquote>\r\n</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n花点时间熟悉一下上面的命令，一旦你掌握他们了，你就几乎可以干其它编辑器都能干的事了。但是到现在为止，你还是觉得使用vim还是有点笨拙，不过没关系，你可以进阶到第三级了。</p>\r\n<h4 id=\"rd-level----better-stronger-faster\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t2\" style=\"color:rgb(202,0,0)\"></a>第三级&nbsp;– 更好，更强，更快</h4>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n先恭喜你！你干的很不错。我们可以开始一些更为有趣的事了。在第三级，我们只谈那些和vi可以兼容的命令。</p>\r\n<h5 id=\"better\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t3\" style=\"color:rgb(202,0,0)\"></a>更好</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面，让我们看一下vim是怎么重复自己的：</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>.</code>&nbsp;→ (小数点) 可以重复上一次的命令</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">N&lt;command&gt; → 重复某个命令N次</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面是一个示例，找开一个文件你可以试试下面的命令：</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>2dd</code>&nbsp;→ 删除2行</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>3p</code>&nbsp;→ 粘贴文本3次</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>100idesu [ESC]</code>&nbsp;→ 会写下 “desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu\r\n desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu\r\n desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu “</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>.</code>&nbsp;→ 重复上一个命令—— 100 “desu “.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>3.</code>&nbsp;→ 重复 3 次 “desu” (注意：不是 300，你看，VIM多聪明啊).</li></ul>\r\n</blockquote>\r\n<h5 id=\"stronger\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t4\" style=\"color:rgb(202,0,0)\"></a>更强</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你要让你的光标移动更有效率，你一定要了解下面的这些命令，<strong>千万别跳过</strong>。</p>\r\n<ol style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">N<code>G</code>&nbsp;→ 到第 N 行 （陈皓注：注意命令中的G是大写的，另我一般使用 : N 到第N行，如 :137 到第137行）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>gg</code>&nbsp;→ 到第一行。（陈皓注：相当于1G，或 :1）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>G</code>&nbsp;→ 到最后一行。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">按单词移动：<br>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); background-color:rgb(244,245,247)\">\r\n<ol style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>w</code>&nbsp;→ 到下一个单词的开头。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>e</code>&nbsp;→ 到下一个单词的结尾。</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n&gt; 如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成（陈皓注：程序变量）</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n&gt; 如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W。（陈皓注：程序语句）</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n<img src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/word_moves.jpg\" alt=\"Word moves example\" style=\"border:0px; max-width:650px\"></p>\r\n</blockquote>\r\n</li></ol>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面，让我来说说最强的光标移动：</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>%</code>&nbsp;: 匹配括号移动，包括&nbsp;<code>(</code>,&nbsp;<code>{</code>,&nbsp;<code>[</code>. （陈皓注：你需要把光标先移到括号上）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>*</code>&nbsp;和&nbsp;<code>#</code>: &nbsp;匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n相信我，上面这三个命令对程序员来说是相当强大的。</p>\r\n<h5 id=\"faster\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t5\" style=\"color:rgb(202,0,0)\"></a>更快</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你一定要记住光标的移动，因为很多命令都可以和这些移动光标的命令连动。很多命令都可以如下来干：</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<code>&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</code></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n例如&nbsp;<code>0y$</code>&nbsp;命令意味着：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>0</code>&nbsp;→ 先到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>y</code>&nbsp;→ 从这里开始拷贝</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;→ 拷贝到本行最后一个字符</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你可可以输入&nbsp;<code>ye</code>，从当前位置拷贝到本单词的最后一个字符。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你也可以输入&nbsp;<code>y2/foo</code>&nbsp;来拷贝2个 “foo” 之间的字符串。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n还有很多时间并不一定你就一定要按y才会拷贝，下面的命令也会被拷贝：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>d</code>&nbsp;(删除 )</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>v</code>&nbsp;(可视化的选择)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>gU</code>&nbsp;(变大写)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>gu</code>&nbsp;(变小写)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">等等</li></ul>\r\n<div style=\"margin:0px; padding:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n（陈皓注：可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等）</div>\r\n<h4 id=\"th-level----vim-superpowers\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t6\" style=\"color:rgb(202,0,0)\"></a>第四级 – Vim 超能力</h4>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n你只需要掌握前面的命令，你就可以很舒服的使用VIM了。但是，现在，我们向你介绍的是VIM杀手级的功能。下面这些功能是我只用vim的原因。</p>\r\n<h5 id=\"move-on-current-line-0---f-f-t-t--\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t7\" style=\"color:rgb(202,0,0)\"></a>在当前行上移动光标:&nbsp;<code>0</code>&nbsp;<code>^</code>&nbsp;<code>$</code>&nbsp;<code>f</code>&nbsp;<code>F</code>&nbsp;<code>t</code>&nbsp;<code>T</code>&nbsp;<code>,</code>&nbsp;<code>;</code></h5>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>0</code>&nbsp;→ 到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>^</code>&nbsp;→ 到本行的第一个非blank字符</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;→ 到行尾</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>g_</code>&nbsp;→ 到本行最后一个不是blank字符的位置。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>fa</code>&nbsp;→ 到下一个为a的字符处，你也可以fs到下一个为s的字符。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>t,</code>&nbsp;→ 到逗号前的第一个字符。逗号可以变成其它字符。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>3fa</code>&nbsp;→ 在当前行查找第三个出现的a。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>F</code>&nbsp;和&nbsp;<code>T</code>&nbsp;→ 和&nbsp;<code>f</code>&nbsp;和&nbsp;<code>t</code>&nbsp;一样，只不过是相反方向。<br>\r\n<img src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/line_moves.jpg\" alt=\"Line moves\" style=\"border:0px; max-width:650px\"></li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n还有一个很有用的命令是&nbsp;<code>dt&quot;</code>&nbsp;→ 删除所有的内容，直到遇到双引号——&nbsp;<code>&quot;。</code></p>\r\n<h5 id=\"zone-selection-actionaobject-or-actioniobject\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t8\" style=\"color:rgb(202,0,0)\"></a>区域选择&nbsp;<code>&lt;action&gt;a&lt;object&gt;</code>&nbsp;或&nbsp;<code>&lt;action&gt;i&lt;object&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在visual 模式下，这些命令很强大，其命令&#26684;式为</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<code>&lt;action&gt;a&lt;object&gt;</code>&nbsp;和&nbsp;<code>&lt;action&gt;i&lt;object&gt;</code></p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">action可以是任何的命令，如&nbsp;<code>d</code>&nbsp;(删除),&nbsp;<code>y</code>&nbsp;(拷贝),&nbsp;<code>v</code>&nbsp;(可以视模式选择)。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">object 可能是：&nbsp;<code>w</code>&nbsp;一个单词，&nbsp;<code>W</code>&nbsp;一个以空&#26684;为分隔的单词，&nbsp;<code>s</code>&nbsp;一个句字，&nbsp;<code>p</code>&nbsp;一个段落。也可以是一个特别的字符：<code>&quot;、</code>&nbsp;<code>\'、</code>&nbsp;<code>)、</code>&nbsp;<code>}、</code>&nbsp;<code>]。</code></li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n假设你有一个字符串&nbsp;<code>(map (&#43;) (&quot;foo&quot;))</code>.而光标键在第一个&nbsp;<code>o&nbsp;</code>的位置。</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>vi&quot;</code>&nbsp;→ 会选择&nbsp;<code>foo</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>va&quot;</code>&nbsp;→ 会选择&nbsp;<code>&quot;foo&quot;</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>vi)</code>&nbsp;→ 会选择&nbsp;<code>&quot;foo&quot;</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>va)</code>&nbsp;→ 会选择<code>(&quot;foo&quot;)</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>v2i)</code>&nbsp;→ 会选择&nbsp;<code>map (&#43;) (&quot;foo&quot;)</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>v2a)</code>&nbsp;→ 会选择&nbsp;<code>(map (&#43;) (&quot;foo&quot;))</code></li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/textobjects.png\" alt=\"Text objects selection\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"select-rectangular-blocks-c-v\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t9\" style=\"color:rgb(202,0,0)\"></a>块操作:&nbsp;<code>&lt;C-v&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n块操作，典型的操作：&nbsp;<code>0 &lt;C-v&gt; &lt;C-d&gt; I-- [ESC]</code></p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>^</code>&nbsp;→ 到行头</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-v&gt;</code>&nbsp;→ 开始块操作</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-d&gt;</code>&nbsp;→ 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>I-- [ESC]</code>&nbsp;→ I是插入，插入“<code>--</code>”，按ESC键来为每一行生效。</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/rectangular-blocks.gif\" alt=\"Rectangular blocks\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在Windows下的vim，你需要使用&nbsp;<code>&lt;C-q&gt;</code>&nbsp;而不是&nbsp;<code>&lt;C-v&gt;</code>&nbsp;，<code>&lt;C-v&gt;</code>&nbsp;是拷贝剪贴板。</p>\r\n<h5 id=\"completion-c-n-and-c-p\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t10\" style=\"color:rgb(202,0,0)\"></a>自动提示：&nbsp;<code>&lt;C-n&gt;</code>&nbsp;和&nbsp;<code>&lt;C-p&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在 Insert 模式下，你可以输入一个词的开头，然后按&nbsp;<code>&lt;C-p&gt;或是&lt;C-n&gt;，自动补齐功能就出现了……</code></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<code></code><img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/completion.gif\" alt=\"Completion\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"macros--qa-do-something-q-a-\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t11\" style=\"color:rgb(202,0,0)\"></a>宏录制：&nbsp;<code>qa</code>&nbsp;操作序列&nbsp;<code>q</code>,&nbsp;<code>@a</code>,&nbsp;<code>@@</code></h5>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>qa</code>&nbsp;把你的操作记录在寄存器&nbsp;<code>a。</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">于是&nbsp;<code>@a</code>&nbsp;会replay被录制的宏。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>@@</code>&nbsp;是一个快捷键用来replay最新录制的宏。</li></ul>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n<strong><em>示例</em></strong></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px\">\r\n在一个只有一行且这一行只有“1”的文本中，键入如下命令：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>qaYp&lt;C-a&gt;q</code>→\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>qa</code>&nbsp;开始录制</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>Yp</code>&nbsp;复制行.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-a&gt;</code>&nbsp;增加1.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>q</code>&nbsp;停止录制.</li></ul>\r\n</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>@a</code>&nbsp;→ 在1下面写下 2</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>@@</code>&nbsp;→ 在2 正面写下3</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">现在做&nbsp;<code>100@@</code>&nbsp;会创建新的100行，并把数据增加到 103.</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/macros.gif\" alt=\"Macros\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"visual-selection-vvc-v\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t12\" style=\"color:rgb(202,0,0)\"></a>可视化选择：&nbsp;<code>v</code>,<code>V</code>,<code>&lt;C-v&gt;</code></h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n前面，我们看到了&nbsp;<code>&lt;C-v&gt;</code>的示例 （在Windows下应该是&lt;C-q&gt;），我们可以使用&nbsp;<code>v</code>&nbsp;和&nbsp;<code>V</code>。一但被选好了，你可以做下面的事：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>J</code>&nbsp;→ 把所有的行连接起来（变成一行）</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;</code>&nbsp;或&nbsp;<code>&gt;</code>&nbsp;→ 左右缩进</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>=</code>&nbsp;→ 自动给缩进 （陈皓注：这个功能相当强大，我太喜欢了）</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/autoindent.gif\" alt=\"Autoindent\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n在所有被选择的行后加上点东西：</p>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-v&gt;</code></li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">选中相关的行 (可使用&nbsp;<code>j</code>&nbsp;或&nbsp;<code>&lt;C-d&gt;</code>&nbsp;或是&nbsp;<code>/pattern</code>&nbsp;或是&nbsp;<code>%</code>&nbsp;等……)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>$</code>&nbsp;到行最后</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>A</code>, 输入字符串，按&nbsp;<code>ESC。</code></li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/append-to-many-lines.gif\" alt=\"Append to many lines\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h5 id=\"splits-split-and-vsplit\" style=\"margin:0px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:15px; color:rgb(85,85,85); line-height:22px\">\r\n<a target=\"_blank\" name=\"t13\" style=\"color:rgb(202,0,0)\"></a>分屏:&nbsp;<code>:split</code>&nbsp;和&nbsp;<code>vsplit</code>.</h5>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n下面是主要的命令，你可以使用VIM的帮助&nbsp;<code>:help split</code>. 你可以参考本站以前的一篇文章<a target=\"_blank\" title=\"Vim的分屏功能\" href=\"http://coolshell.cn/articles/1679.html\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">VIM分屏</a>。</p>\r\n<blockquote style=\"margin:5px 0px; padding:8px 12px 8px 36px; border:1px dashed rgb(204,204,204); color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<ul style=\"margin:0px; padding:0px 0px 10px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>:split</code>&nbsp;→ 创建分屏 (<code>:vsplit</code>创建垂直分屏)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-w&gt;&lt;dir&gt;</code>&nbsp;: dir就是方向，可以是&nbsp;<code>hjkl</code>&nbsp;或是 ←↓↑→ 中的一个，其用来切换分屏。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-w&gt;_</code>&nbsp;(或&nbsp;<code>&lt;C-w&gt;|</code>)&nbsp;: 最大化尺寸 (&lt;C-w&gt;|&nbsp;垂直分屏)</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\"><code>&lt;C-w&gt;&#43;</code>&nbsp;(或&nbsp;<code>&lt;C-w&gt;-</code>)&nbsp;: 增加尺寸</li></ul>\r\n</blockquote>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<img class=\"aligncenter\" src=\"http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/split.gif\" alt=\"Split\" style=\"border:0px; max-width:650px; display:block; margin-left:auto; margin-right:auto\"></p>\r\n<h4 id=\"conclusion\" style=\"margin:0px 0px 10px; padding:0px; font-family:\'Microsoft YaHei\',Arial; font-size:17px; color:rgb(0,136,0); line-height:22px\">\r\n<a target=\"_blank\" name=\"t14\" style=\"color:rgb(202,0,0)\"></a>结束语</h4>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">上面是作者最常用的90%的命令。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">我建议你每天都学1到2个新的命令。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">在两到三周后，你会感到vim的强大的。</li></ul>\r\n<ul style=\"margin:0px; padding:0px 0px 10px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n<li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">有时候，学习VIM就像是在死背一些东西。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">幸运的是，vim有很多很不错的工具和优秀的文档。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">运行vimtutor直到你熟悉了那些基本命令。</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">其在线帮助文档中你应该要仔细阅读的是&nbsp;<code>:help usr_02.txt</code>.</li><li style=\"margin:0px; padding:0px 0px 0px 20px; list-style-position:inside\">你会学习到诸如&nbsp;&nbsp;<code>!，</code>&nbsp;目录，寄存器，插件等很多其它的功能。</li></ul>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n学习vim就像学弹钢琴一样，一旦学会，受益无穷。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px; text-align:center\">\r\n——————————正文结束——————————</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n对于vi/vim只是点评一点：这是一个你不需要使用鼠标，不需使用小键盘，只需要使用大键盘就可以完成很多复杂功能文本编辑的编辑器。不然，<a target=\"_blank\" title=\"Visual Studio的Vim插件\" href=\"http://coolshell.cn/articles/1901.html\" target=\"_blank\" style=\"color:rgb(41,112,166); text-decoration:none\">Visual Studio也不就会有vim的插件了</a>。</p>\r\n<p style=\"margin-top:0px; margin-bottom:10px; padding-top:0px; padding-bottom:0px; color:rgb(85,85,85); font-family:Arial,Verdana,\'BitStream vera Sans\',Tahoma,Helvetica,sans-serif; line-height:22px\">\r\n(全文完)</p>\r\n</div>\r\n</div>\r\n',1,'vim',0,0,'2015-02-02 00:51:27','2015-02-02 00:51:27','2015-02-02 00:51:27'),(71,1,10,'Linux常用ＭySQL操作命令','7bc07ba4f11e7a1f016968db2c4fe376',0,'\r\n\r\n<pre name=\"code\" class=\"html\">一、mysql服务操作 \n0、查看数据库版本 sql-&gt; status; \n1、net start mysql //启动mysql服务 \n2、net stop mysql //停止mysql服务　 \n3、mysql -h','\r\n\r\n<pre name=\"code\" class=\"html\">一、mysql服务操作 \n0、查看数据库版本 sql-&gt; status; \n1、net start mysql //启动mysql服务 \n2、net stop mysql //停止mysql服务　 \n3、mysql -h主机地址 -u用户名 －p用户密码 //进入mysql数据库 \n4、quit //退出mysql操作 \n5、mysqladmin -u用户名 -p旧密码 password 新密码 //更改密码 \n6、grant select on 数据库.* to 用户名@登录主机 identified by &quot;密码&quot; //增加新用户 \nexemple: \n例2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作 （localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使用知道test2的密码，他也无法从internet上直接访问数据 库，只能通过MYSQL主机上的web页来访问了。 \ngrant select,insert,update,delete on mydb.* to test2@localhost identified by &quot;abc&quot;; \n如果你不想test2有密码，可以再打一个命令将密码消掉。 \ngrant select,insert,update,delete on mydb.* to test2@localhost identified by &quot;&quot;; \n\n二、数据库操作 \n1、show databases; //列出数据库 \n2、use database_name //使用database_name数据库 \n3、create database data_name //创建名为data_name的数据库 \n4、drop database data_name //删除一个名为data_name的数据库 \n\n三、表操作 \n1、show databases;//列出所有数据库 \n\nuse 数据库名; //到达某一数据库 \n\nshow tables //列出所有表 \ncreate table tab_name( \nid int(10) not null auto_increment primary key, \nname varchar(40), \npwd varchar(40) \n) charset=gb2312; 创建一个名为tab_name的新表 \n2、drop table tab_name 删除名为tab_name的数据表 \n3、describe tab_name //显示名为tab_name的表的数据结构 \n4、show columns from tab_name //同上 \n5、delete from tab_name //将表tab_name中的记录清空 \n6、select * from tab_name //显示表tab_name中的记录 \n7、mysqldump -uUSER -pPASSWORD --no-data DATABASE TABLE &gt; table.sql //复制表结构 \n\n四、修改表结构 \n1、 ALTER TABLE tab_name ADD PRIMARY KEY (col_name) \n说明：更改表得的定义把某个栏位设为主键。 \n2、ALTER TABLE tab_name DROP PRIMARY KEY (col_name) \n说明：把主键的定义删除 \n3、 alter table tab_name add col_name varchar(20); //在tab_name表中增加一个名为col_name的字段且类型为varchar(20) \n4、alter table tab_name drop col_name //在tab_name中将col_name字段删除 \n5、alter table tab_name modify col_name varchar(40) not null //修改字段属性，注若加上not null则要求原字段下没有数据 \nSQL Server200下的写法是：Alter Table table_name Alter Column col_name varchar(30) not null; \n6、如何修改表名：alter table tab_name rename to new_tab_name \n7、如何修改字段名：alter table tab_name change old_col new_col varchar(40); //必须为当前字段指定数据类型等属性，否则不能修改 \n8、create table new_tab_name like old_tab_name //用一个已存在的表来建新表，但不包含旧表的数据 \n\n五、数据的备份与恢复 \n导入外部数据文本: \n1.执行外部的sql脚本 \n当前数据库上执行:mysql &lt; input.sql \n指定数据库上执行:mysql [表名] &lt; input.sql \n2.数据传入命令 load data local infile &quot;[文件名]&quot; into table [表名]; \n备份数据库：(dos下) \nmysqldump --opt school&gt;school.bbb \nmysqldump -u [user] -p [password] databasename &gt; filename (备份) \nmysql -u [user] -p [password] databasename &lt; filename (恢复) \n\n六、卸载 \n卸载mysql:sudo apt-get remove mysql-server mysql-client \nsudo apt-get autoremove</pre><br>\r\n','\r\n\r\n<pre name=\"code\" class=\"html\">一、mysql服务操作 \n0、查看数据库版本 sql-&gt; status; \n1、net start mysql //启动mysql服务 \n2、net stop mysql //停止mysql服务　 \n3、mysql -h主机地址 -u用户名 －p用户密码 //进入mysql数据库 \n4、quit //退出mysql操作 \n5、mysqladmin -u用户名 -p旧密码 password 新密码 //更改密码 \n6、grant select on 数据库.* to 用户名@登录主机 identified by &quot;密码&quot; //增加新用户 \nexemple: \n例2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作 （localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使用知道test2的密码，他也无法从internet上直接访问数据 库，只能通过MYSQL主机上的web页来访问了。 \ngrant select,insert,update,delete on mydb.* to test2@localhost identified by &quot;abc&quot;; \n如果你不想test2有密码，可以再打一个命令将密码消掉。 \ngrant select,insert,update,delete on mydb.* to test2@localhost identified by &quot;&quot;; \n\n二、数据库操作 \n1、show databases; //列出数据库 \n2、use database_name //使用database_name数据库 \n3、create database data_name //创建名为data_name的数据库 \n4、drop database data_name //删除一个名为data_name的数据库 \n\n三、表操作 \n1、show databases;//列出所有数据库 \n\nuse 数据库名; //到达某一数据库 \n\nshow tables //列出所有表 \ncreate table tab_name( \nid int(10) not null auto_increment primary key, \nname varchar(40), \npwd varchar(40) \n) charset=gb2312; 创建一个名为tab_name的新表 \n2、drop table tab_name 删除名为tab_name的数据表 \n3、describe tab_name //显示名为tab_name的表的数据结构 \n4、show columns from tab_name //同上 \n5、delete from tab_name //将表tab_name中的记录清空 \n6、select * from tab_name //显示表tab_name中的记录 \n7、mysqldump -uUSER -pPASSWORD --no-data DATABASE TABLE &gt; table.sql //复制表结构 \n\n四、修改表结构 \n1、 ALTER TABLE tab_name ADD PRIMARY KEY (col_name) \n说明：更改表得的定义把某个栏位设为主键。 \n2、ALTER TABLE tab_name DROP PRIMARY KEY (col_name) \n说明：把主键的定义删除 \n3、 alter table tab_name add col_name varchar(20); //在tab_name表中增加一个名为col_name的字段且类型为varchar(20) \n4、alter table tab_name drop col_name //在tab_name中将col_name字段删除 \n5、alter table tab_name modify col_name varchar(40) not null //修改字段属性，注若加上not null则要求原字段下没有数据 \nSQL Server200下的写法是：Alter Table table_name Alter Column col_name varchar(30) not null; \n6、如何修改表名：alter table tab_name rename to new_tab_name \n7、如何修改字段名：alter table tab_name change old_col new_col varchar(40); //必须为当前字段指定数据类型等属性，否则不能修改 \n8、create table new_tab_name like old_tab_name //用一个已存在的表来建新表，但不包含旧表的数据 \n\n五、数据的备份与恢复 \n导入外部数据文本: \n1.执行外部的sql脚本 \n当前数据库上执行:mysql &lt; input.sql \n指定数据库上执行:mysql [表名] &lt; input.sql \n2.数据传入命令 load data local infile &quot;[文件名]&quot; into table [表名]; \n备份数据库：(dos下) \nmysqldump --opt school&gt;school.bbb \nmysqldump -u [user] -p [password] databasename &gt; filename (备份) \nmysql -u [user] -p [password] databasename &lt; filename (恢复) \n\n六、卸载 \n卸载mysql:sudo apt-get remove mysql-server mysql-client \nsudo apt-get autoremove</pre><br>\r\n',1,'',0,0,'2015-02-02 00:51:30','2015-02-02 00:51:30','2015-02-02 00:51:30'),(72,1,10,'Ubuntu下面如何安装python+eclipse环境','f6fb2508cf453413b77c76bea4ae7f12',0,'\r\n\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n在Windows下成功地搭好了','\r\n\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n在Windows下成功地搭好了一个Python开发环境，这次转战<a target=\"_blank\" target=\"_blank\" href=\"http://www.linuxidc.com/topicnews.aspx?tid=2\" title=\"Ubuntu\" style=\"color:rgb(179,43,213)\">Ubuntu</a>有了前面的经验，相对轻松多了</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n还发现Ubuntu下的操作反而比Windows方便些。</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n安装环境</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\nIntel Core 7250(双核)，操作系统Ubuntu 10.04.1</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n1.安装OpenJDK6&nbsp;&nbsp;</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n&nbsp;sudo apt-get install openjdk-6-jdk</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n选用OpenJDK的原因是他已经通过测试，完美兼容JDK，并在Linux更新源中已经取代了sun-java6-jdk了。（注1）</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n2.安装Eclipse</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n&nbsp;sudo apt-get install eclipse</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\nUbuntu 10.04已经自带Python 2.6了。</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n4.给Eclipse安装PyDev插件</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n启用Eclipse，第一次启动会让你选择一个工作空间，按缺省设置，勾选一下不再提醒，就可以了。</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n在Help菜单中，选择Install New Software···，</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n或者直接下载http://sourceforge.net/projects/pydev/files/pydev/</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n并且解压到 usr/lib/eclipse/dropin<br>\r\n</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n选择Add按钮，Name：PyDev（这个随便起），Location：<a target=\"_blank\" target=\"_blank\" href=\"http://pydev.org/updates\" style=\"color:rgb(179,43,213)\">http://pydev.org/updates</a>（PyDev的更新地址），OK</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979973.bmp\" border=\"0\" style=\"border:0px\"></p>\r\n<p align=\"left\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n&nbsp;选择PyDev下的PyDev for Eclipse，别的都不要选，否则依赖检查那关过不去。 （注2）</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979974.bmp\" vspace=\"5\" width=\"581\" style=\"border:0px; display:block\"></p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n点下一步，下一步安装</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n中间会问你是否信任Aptana、Pydev什么的，信任就可以了</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n最后重启Eclipse</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n5.配置PyDev插件</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n在Window菜单中选Preference，</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n1、PyDev-&gt;Interpreter - Python，New一个Python解释器，填上解释器名字和路径，路径选相应的python.exe。</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979972.bmp\" vspace=\"5\" width=\"581\" style=\"border:0px; display:block\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979971.bmp\" vspace=\"5\" width=\"581\" style=\"border:0px; display:block\"></p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\nEclipse会取得操作系统的当前编码作为他的缺省编码，而Ubuntu10.04的系统缺省编码是UTF8，所以不再需要更改。</p>\r\n','\r\n\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n在Windows下成功地搭好了一个Python开发环境，这次转战<a target=\"_blank\" target=\"_blank\" href=\"http://www.linuxidc.com/topicnews.aspx?tid=2\" title=\"Ubuntu\" style=\"color:rgb(179,43,213)\">Ubuntu</a>有了前面的经验，相对轻松多了</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n还发现Ubuntu下的操作反而比Windows方便些。</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n安装环境</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\nIntel Core 7250(双核)，操作系统Ubuntu 10.04.1</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n1.安装OpenJDK6&nbsp;&nbsp;</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n&nbsp;sudo apt-get install openjdk-6-jdk</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n选用OpenJDK的原因是他已经通过测试，完美兼容JDK，并在Linux更新源中已经取代了sun-java6-jdk了。（注1）</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n2.安装Eclipse</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n&nbsp;sudo apt-get install eclipse</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\nUbuntu 10.04已经自带Python 2.6了。</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n4.给Eclipse安装PyDev插件</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n启用Eclipse，第一次启动会让你选择一个工作空间，按缺省设置，勾选一下不再提醒，就可以了。</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n在Help菜单中，选择Install New Software···，</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n或者直接下载http://sourceforge.net/projects/pydev/files/pydev/</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n并且解压到 usr/lib/eclipse/dropin<br>\r\n</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n选择Add按钮，Name：PyDev（这个随便起），Location：<a target=\"_blank\" target=\"_blank\" href=\"http://pydev.org/updates\" style=\"color:rgb(179,43,213)\">http://pydev.org/updates</a>（PyDev的更新地址），OK</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979973.bmp\" border=\"0\" style=\"border:0px\"></p>\r\n<p align=\"left\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n&nbsp;选择PyDev下的PyDev for Eclipse，别的都不要选，否则依赖检查那关过不去。 （注2）</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979974.bmp\" vspace=\"5\" width=\"581\" style=\"border:0px; display:block\"></p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n点下一步，下一步安装</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n中间会问你是否信任Aptana、Pydev什么的，信任就可以了</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n最后重启Eclipse</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n5.配置PyDev插件</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n在Window菜单中选Preference，</p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\n1、PyDev-&gt;Interpreter - Python，New一个Python解释器，填上解释器名字和路径，路径选相应的python.exe。</p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979972.bmp\" vspace=\"5\" width=\"581\" style=\"border:0px; display:block\"></p>\r\n<p align=\"center\" style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; background-color:rgb(250,250,252)\">\r\n<img alt=\"Ubuntu下使用Eclipse和PyDev搭建完美Python开发环境\" src=\"http://www.linuxidc.com/upload/2011_08/110816074979971.bmp\" vspace=\"5\" width=\"581\" style=\"border:0px; display:block\"></p>\r\n<p style=\"color:rgb(51,51,51); font-family:tahoma,宋体; font-size:14px; line-height:22.399999618530273px; text-align:justify; background-color:rgb(250,250,252)\">\r\nEclipse会取得操作系统的当前编码作为他的缺省编码，而Ubuntu10.04的系统缺省编码是UTF8，所以不再需要更改。</p>\r\n',1,'',0,0,'2015-02-02 00:51:32','2015-02-02 00:51:32','2015-02-02 00:51:32'),(75,1,11,'为Sublime text3配置python开发环境','8c78b0427451d097747ca8154289b207',0,'\r\n\r\n<p>首先必装package control</p>\r\n<p>ctrl&#43;~快捷键调出命令面板，复制以下代码并回车；</p>\r\n<p></p>\r\n<pre code_snippet_id=\"592576\" snippet_file_name=\"blog_20150129_1_9274362','\r\n\r\n<p>首先必装package control</p>\r\n<p>ctrl&#43;~快捷键调出命令面板，复制以下代码并回车；</p>\r\n<p></p>\r\n<pre code_snippet_id=\"592576\" snippet_file_name=\"blog_20150129_1_9274362\"  name=\"code\" class=\"html\">import urllib.request,os; pf = &#39;Package Control.sublime-package&#39;; ipp = \nsublime.installed_packages_path(); urllib.request.install_opener( \nurllib.request.build_opener( urllib.request.ProxyHandler()) ); \nopen(os.path.join(ipp, pf), &#39;wb&#39;).write(urllib.request.urlopen( \n&#39;http://sublime.wbond.net/&#39; + pf.replace(&#39; &#39;,&#39;%20&#39;)).read())</pre>进入: Preferences-User Setting:<br>\r\n粘贴<pre code_snippet_id=\"592576\" snippet_file_name=\"blog_20150129_2_2291452\"  name=\"code\" class=\"html\">&quot;tab_size&quot;: 4,\n&quot;translate_tabs_to_spaces&quot;: true</pre>设置为４个空&#26684;一个tab快捷键<br>\r\n<br>\r\n安装完后重新打开sublime text3. ctrl&#43;shif&#43;p　　再输入pci　按回车\r\n<p></p>\r\n<p>将会出现一个packageinstall安装命令框。然后输入下面的插件名字，就可安装</p>\r\n<p><br>\r\n</p>\r\n<p>1.&nbsp;SideBarEnhancements&nbsp;</p>\r\n<p>侧边栏增强插件，使用后可以方便的复制粘贴文件</p>\r\n<p>2.Anaconda</p>\r\n<p>python强大的　语法定义跳转，语法补全，语法pep8自动检查和改正。　用法：　鼠标右键选择菜单</p>\r\n<p>以上２个插件完全够用了</p>\r\n','\r\n\r\n<p>首先必装package control</p>\r\n<p>ctrl&#43;~快捷键调出命令面板，复制以下代码并回车；</p>\r\n<p></p>\r\n<pre code_snippet_id=\"592576\" snippet_file_name=\"blog_20150129_1_9274362\"  name=\"code\" class=\"html\">import urllib.request,os; pf = &#39;Package Control.sublime-package&#39;; ipp = \nsublime.installed_packages_path(); urllib.request.install_opener( \nurllib.request.build_opener( urllib.request.ProxyHandler()) ); \nopen(os.path.join(ipp, pf), &#39;wb&#39;).write(urllib.request.urlopen( \n&#39;http://sublime.wbond.net/&#39; + pf.replace(&#39; &#39;,&#39;%20&#39;)).read())</pre>进入: Preferences-User Setting:<br>\r\n粘贴<pre code_snippet_id=\"592576\" snippet_file_name=\"blog_20150129_2_2291452\"  name=\"code\" class=\"html\">&quot;tab_size&quot;: 4,\n&quot;translate_tabs_to_spaces&quot;: true</pre>设置为４个空&#26684;一个tab快捷键<br>\r\n<br>\r\n安装完后重新打开sublime text3. ctrl&#43;shif&#43;p　　再输入pci　按回车\r\n<p></p>\r\n<p>将会出现一个packageinstall安装命令框。然后输入下面的插件名字，就可安装</p>\r\n<p><br>\r\n</p>\r\n<p>1.&nbsp;SideBarEnhancements&nbsp;</p>\r\n<p>侧边栏增强插件，使用后可以方便的复制粘贴文件</p>\r\n<p>2.Anaconda</p>\r\n<p>python强大的　语法定义跳转，语法补全，语法pep8自动检查和改正。　用法：　鼠标右键选择菜单</p>\r\n<p>以上２个插件完全够用了</p>\r\n',1,'python',0,0,'2015-02-02 00:52:08','2015-02-02 00:52:08','2015-02-02 00:52:08'),(76,1,11,'Python学习笔记(5)-多重继承的坑','0f79dd7de5e748dfdef7b214bbf8c27b',0,'\r\n\r\n<p>之前学习了下多重继承，以为领悟到了，没想到实际在项目中傻&#30524;了。</p>\r\n<p>忘了一个关键的地方：</p>\r\n<p></p>\r\n<p style=\"margin-top:0px; margin-bottom:0','\r\n\r\n<p>之前学习了下多重继承，以为领悟到了，没想到实际在项目中傻&#30524;了。</p>\r\n<p>忘了一个关键的地方：</p>\r\n<p></p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n正文</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n首先得说明的是,Python的类分为经典类 和 新式类<br>\r\n经典类是python2.2之前的东西,但是在2.7还在兼容,但是在3之后的版本就只承认新式类了<br>\r\n新式类在python2.2之后的版本中都可以使用</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n经典类和新式类的区别在于:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n经典类是默认没有派生自某个基类的,而新式类是默认派生自object这个基类的:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut22816\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code22816\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\n# old style<br>\r\nclass A():pass\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n# new style<br>\r\nclass A(obejct):pass<br>\r\n</p>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n2.经典类在类多重继承的时候是采用从左到右深度优先原则匹配方法的..而新式类是采用C3算法(不同于广度优先)进行匹配的</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n3.经典类是没有__MRO__和instance.mro()调用的,而新式类是有的.</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n为什么不用经典类，要更换到新式类</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n因为在经典类中的多重继承会有些问题...可能导致在继承树中的方法查询绕过后面的父类:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut14530\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code14530\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A():<br>\r\n&nbsp;&nbsp;&nbsp; def foo1(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;A&quot;<br>\r\nclass B(A):<br>\r\n&nbsp;&nbsp;&nbsp; def foo2(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pass<br>\r\nclass C(A):<br>\r\n&nbsp;&nbsp;&nbsp; def foo1(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;C&quot;<br>\r\nclass D(B, C):<br>\r\n&nbsp;&nbsp;&nbsp; pass\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\nd = D()<br>\r\nd.foo1()<br>\r\n</p>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n按照经典类的查找顺序从左到右深度优先的规则，在访问d.foo1()的时候,D这个类是没有的..那么往上查找,先找到B,里面没有,深度优先,访问A,找到了foo1(),所以这时候调用的是A的foo1()，从而导致C重写的foo1()被绕过.</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n所以python引入了新式类的概念,每个基类都继承自object并且,他的匹配规则也从深度优先换到了C3</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3算法</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3算法是怎么做匹配的呢..在问答版块上面讨论之后,归结如下:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3算法的一个核心是merge.</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n在merge列表中，如果第一个序列mro的第一个类是出现在其它序列，并且也是第一个，或者不出现其它序列，那么这个类就会从这些序列中删除，并合到访问顺序列表中<br>\r\n比如:(引用问题中zhuangzebo的回答@zhuangzebo)</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut92503\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code92503\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A(O):pass<br>\r\nclass B(O):pass<br>\r\nclass C(O):pass<br>\r\nclass D(A,B):pass<br>\r\nclass E(C,D):pass<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n首先需要知道 O(object)的mro(method resolution order)列表是[O,]<br>\r\n那么接下来是:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut32024\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code32024\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nmro(A) = [A, O]<br>\r\nmro(B) = [B, O]<br>\r\nmro(C) = [C, O]<br>\r\nmro(D) = [D] &#43; merge(mro(A), mro(B), [A, B])<br>\r\n= [D] &#43; merge([A, O], [B, O], [A, B])<br>\r\n= [D, A] &#43; merge([O], [B, O], [B])<br>\r\n= [D, A, B] &#43; merge([O], [O])<br>\r\n= [D, A, B, O]<br>\r\nmro(E) = [E] &#43; merge(mro(C), mro(D), [C, D])<br>\r\n= [E] &#43; merge([C, O], [D, A, B, O], [C, D])<br>\r\n= [E, C] &#43; merge([O], [D, A, B, O], [D])<br>\r\n= [E, C, D] &#43; merge([O], [A, B, O])<br>\r\n= [E, C, D, A, B] &#43; merge([O], [O])<br>\r\n= [E, C, D, A, B, O]<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n然后还有一种特殊情况:<br>\r\n比如：<br>\r\nmerge(DO,CO,C) 先merge的是D<br>\r\nmerge(DO,CO,C) 先merge的是C<br>\r\n意思就是.当出现有 一个类出现在两个序列的头(比如C) 这种情况和 这个类只有在一个序列的头(比如D) 这种情况同时出现的时候,按照顺序方式匹配。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n新式类生成的访问序列被存储在一个叫MRO的只读列表中..<br>\r\n你可以使用instance.__MRO__或者instance.mro()来访问</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n最后匹配的时候就按照MRO序列的顺序去匹配了</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3和广度优先的区别:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n举个例子就完全明白了:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut13462\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code13462\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A(object):pass<br>\r\nclass B(A):pass<br>\r\nclass C(B):pass<br>\r\nclass D(A):pass<br>\r\nclass E(D):pass<br>\r\nclass F(C, E):pass<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n按照广度优先遍历,F的MRO序列应该是[F,C,E,B,D,A]<br>\r\n但是C3是[F,E,D,C,B,A]<br>\r\n意思是你可以当做C3是在一条链路上深度遍历到和另外一条链路的交叉点,然后去深度遍历另外一条链路,最后遍历交叉点</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n新式类和经典类的super和按类名访问问题</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n在经典类中,你如果要访问父类的话,是用类名来访问的..</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut95708\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code95708\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A():<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;A&quot;<br>\r\nclass B(A):<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;B&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A.__init__(self)&nbsp; #python不会默认调用父类的初始化函数的<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n这样子看起来没三问题,但是如果类的继承结构比较复杂，会导致代码的可维护性很差..<br>\r\n所以新式类推出了super这个东西...</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut22411\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code22411\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A():<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;A&quot;<br>\r\nclass B(A):<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;B&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super(B,self).__init__()<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n这时候，又有一个问题:当类是多重继承的时候,super访问的是哪一个类呢?<br>\r\nsuper实际上是通过__MRO__序列来确定访问哪一个类的...实际上就是调用__MRO__中此类后面的一个类的方法.<br>\r\n比如序列为[F,E,D,C,B,A]那么F中的super就是E,E的就是D</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nsuper和按照类名访问 混合使用带来的坑</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut42301\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code42301\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A(object):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter A&quot;<br>\r\n&nbsp;&nbsp; print &quot;leave A&quot;\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class B(object):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter B&quot;<br>\r\n&nbsp;&nbsp; print &quot;leave B&quot;</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class C(A):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter C&quot;<br>\r\n&nbsp;&nbsp; super(C, self).__init__()<br>\r\n&nbsp;&nbsp; print &quot;leave C&quot;</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class D(A):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter D&quot;<br>\r\n&nbsp;&nbsp; super(D, self).__init__()<br>\r\n&nbsp;&nbsp; print &quot;leave D&quot;<br>\r\n&nbsp;class E(B, C):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter E&quot;<br>\r\n&nbsp;&nbsp; B.__init__(self)<br>\r\n&nbsp;&nbsp; C.__init__(self)<br>\r\n&nbsp;&nbsp; print &quot;leave E&quot;</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class F(E, D):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter F&quot;<br>\r\n&nbsp;&nbsp; E.__init__(self)<br>\r\n&nbsp;&nbsp; D.__init__(self)<br>\r\n&nbsp;&nbsp; print &quot;leave F&quot;<br>\r\n</p>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n这时候打印出来是：</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut9189\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code9189\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\n&nbsp;enter F<br>\r\n&nbsp;enter E<br>\r\n&nbsp;enter B<br>\r\n&nbsp;leave B<br>\r\n&nbsp;enter C<br>\r\n&nbsp;enter D<br>\r\n&nbsp;enter A<br>\r\n&nbsp;leave A<br>\r\n&nbsp;leave D<br>\r\n&nbsp;leave C<br>\r\n&nbsp;leave E<br>\r\n&nbsp;enter D<br>\r\n&nbsp;enter A<br>\r\n&nbsp;leave A<br>\r\n&nbsp;leave D<br>\r\n&nbsp;leave F<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n可以看出来D和A的初始化函数被乱入了两次！<br>\r\n按类名访问就相当于C语言之前的GOTO语句...乱跳,然后再用super按顺序访问..就有问题了</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n所以建议就是要么一直用super,要么一直用按照类名访问</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n最佳实现:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n避免多重继承<br>\r\nsuper使用一致<br>\r\n不要混用经典类和新式类<br>\r\n调用父类的时候注意检查类层次</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n以上便是本人对于python类的继承的认识了，希望对大家能有所帮助</p>\r\n<br>\r\n','\r\n\r\n<p>之前学习了下多重继承，以为领悟到了，没想到实际在项目中傻&#30524;了。</p>\r\n<p>忘了一个关键的地方：</p>\r\n<p></p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n正文</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n首先得说明的是,Python的类分为经典类 和 新式类<br>\r\n经典类是python2.2之前的东西,但是在2.7还在兼容,但是在3之后的版本就只承认新式类了<br>\r\n新式类在python2.2之后的版本中都可以使用</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n经典类和新式类的区别在于:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n经典类是默认没有派生自某个基类的,而新式类是默认派生自object这个基类的:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut22816\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code22816\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\n# old style<br>\r\nclass A():pass\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n# new style<br>\r\nclass A(obejct):pass<br>\r\n</p>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n2.经典类在类多重继承的时候是采用从左到右深度优先原则匹配方法的..而新式类是采用C3算法(不同于广度优先)进行匹配的</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n3.经典类是没有__MRO__和instance.mro()调用的,而新式类是有的.</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n为什么不用经典类，要更换到新式类</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n因为在经典类中的多重继承会有些问题...可能导致在继承树中的方法查询绕过后面的父类:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut14530\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code14530\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A():<br>\r\n&nbsp;&nbsp;&nbsp; def foo1(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;A&quot;<br>\r\nclass B(A):<br>\r\n&nbsp;&nbsp;&nbsp; def foo2(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pass<br>\r\nclass C(A):<br>\r\n&nbsp;&nbsp;&nbsp; def foo1(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;C&quot;<br>\r\nclass D(B, C):<br>\r\n&nbsp;&nbsp;&nbsp; pass\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\nd = D()<br>\r\nd.foo1()<br>\r\n</p>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n按照经典类的查找顺序从左到右深度优先的规则，在访问d.foo1()的时候,D这个类是没有的..那么往上查找,先找到B,里面没有,深度优先,访问A,找到了foo1(),所以这时候调用的是A的foo1()，从而导致C重写的foo1()被绕过.</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n所以python引入了新式类的概念,每个基类都继承自object并且,他的匹配规则也从深度优先换到了C3</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3算法</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3算法是怎么做匹配的呢..在问答版块上面讨论之后,归结如下:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3算法的一个核心是merge.</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n在merge列表中，如果第一个序列mro的第一个类是出现在其它序列，并且也是第一个，或者不出现其它序列，那么这个类就会从这些序列中删除，并合到访问顺序列表中<br>\r\n比如:(引用问题中zhuangzebo的回答@zhuangzebo)</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut92503\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code92503\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A(O):pass<br>\r\nclass B(O):pass<br>\r\nclass C(O):pass<br>\r\nclass D(A,B):pass<br>\r\nclass E(C,D):pass<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n首先需要知道 O(object)的mro(method resolution order)列表是[O,]<br>\r\n那么接下来是:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut32024\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code32024\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nmro(A) = [A, O]<br>\r\nmro(B) = [B, O]<br>\r\nmro(C) = [C, O]<br>\r\nmro(D) = [D] &#43; merge(mro(A), mro(B), [A, B])<br>\r\n= [D] &#43; merge([A, O], [B, O], [A, B])<br>\r\n= [D, A] &#43; merge([O], [B, O], [B])<br>\r\n= [D, A, B] &#43; merge([O], [O])<br>\r\n= [D, A, B, O]<br>\r\nmro(E) = [E] &#43; merge(mro(C), mro(D), [C, D])<br>\r\n= [E] &#43; merge([C, O], [D, A, B, O], [C, D])<br>\r\n= [E, C] &#43; merge([O], [D, A, B, O], [D])<br>\r\n= [E, C, D] &#43; merge([O], [A, B, O])<br>\r\n= [E, C, D, A, B] &#43; merge([O], [O])<br>\r\n= [E, C, D, A, B, O]<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n然后还有一种特殊情况:<br>\r\n比如：<br>\r\nmerge(DO,CO,C) 先merge的是D<br>\r\nmerge(DO,CO,C) 先merge的是C<br>\r\n意思就是.当出现有 一个类出现在两个序列的头(比如C) 这种情况和 这个类只有在一个序列的头(比如D) 这种情况同时出现的时候,按照顺序方式匹配。</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n新式类生成的访问序列被存储在一个叫MRO的只读列表中..<br>\r\n你可以使用instance.__MRO__或者instance.mro()来访问</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n最后匹配的时候就按照MRO序列的顺序去匹配了</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nC3和广度优先的区别:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n举个例子就完全明白了:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut13462\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code13462\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A(object):pass<br>\r\nclass B(A):pass<br>\r\nclass C(B):pass<br>\r\nclass D(A):pass<br>\r\nclass E(D):pass<br>\r\nclass F(C, E):pass<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n按照广度优先遍历,F的MRO序列应该是[F,C,E,B,D,A]<br>\r\n但是C3是[F,E,D,C,B,A]<br>\r\n意思是你可以当做C3是在一条链路上深度遍历到和另外一条链路的交叉点,然后去深度遍历另外一条链路,最后遍历交叉点</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n新式类和经典类的super和按类名访问问题</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n在经典类中,你如果要访问父类的话,是用类名来访问的..</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut95708\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code95708\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A():<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;A&quot;<br>\r\nclass B(A):<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;B&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A.__init__(self)&nbsp; #python不会默认调用父类的初始化函数的<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n这样子看起来没三问题,但是如果类的继承结构比较复杂，会导致代码的可维护性很差..<br>\r\n所以新式类推出了super这个东西...</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut22411\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code22411\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A():<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;A&quot;<br>\r\nclass B(A):<br>\r\n&nbsp;&nbsp;&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;B&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super(B,self).__init__()<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n这时候，又有一个问题:当类是多重继承的时候,super访问的是哪一个类呢?<br>\r\nsuper实际上是通过__MRO__序列来确定访问哪一个类的...实际上就是调用__MRO__中此类后面的一个类的方法.<br>\r\n比如序列为[F,E,D,C,B,A]那么F中的super就是E,E的就是D</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\nsuper和按照类名访问 混合使用带来的坑</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut42301\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code42301\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\nclass A(object):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter A&quot;<br>\r\n&nbsp;&nbsp; print &quot;leave A&quot;\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class B(object):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter B&quot;<br>\r\n&nbsp;&nbsp; print &quot;leave B&quot;</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class C(A):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter C&quot;<br>\r\n&nbsp;&nbsp; super(C, self).__init__()<br>\r\n&nbsp;&nbsp; print &quot;leave C&quot;</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class D(A):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter D&quot;<br>\r\n&nbsp;&nbsp; super(D, self).__init__()<br>\r\n&nbsp;&nbsp; print &quot;leave D&quot;<br>\r\n&nbsp;class E(B, C):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter E&quot;<br>\r\n&nbsp;&nbsp; B.__init__(self)<br>\r\n&nbsp;&nbsp; C.__init__(self)<br>\r\n&nbsp;&nbsp; print &quot;leave E&quot;</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px\">\r\n&nbsp;class F(E, D):<br>\r\n&nbsp; def __init__(self):<br>\r\n&nbsp;&nbsp; print &quot;enter F&quot;<br>\r\n&nbsp;&nbsp; E.__init__(self)<br>\r\n&nbsp;&nbsp; D.__init__(self)<br>\r\n&nbsp;&nbsp; print &quot;leave F&quot;<br>\r\n</p>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n这时候打印出来是：</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<div class=\"codetitle\" style=\"border-left-color:rgb(0,153,204); border-left-width:1px; border-left-style:solid; padding:0px 3px; margin:3px auto 0px; width:640px; clear:both; font-size:14px; border-top-color:rgb(0,153,204); border-top-width:1px; border-top-style:solid; border-right-color:rgb(0,153,204); border-right-width:1px; border-right-style:solid; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(242,246,251)\">\r\n<span style=\"float:right; line-height:25.2000007629395px\"><a target=\"_blank\" class=\"copybut\" id=\"copybut9189\" style=\"color:rgb(51,51,51)\"><u>复制代码</u></a></span>代码如下:</div>\r\n<div class=\"codebody\" id=\"code9189\" style=\"border:1px solid rgb(0,153,204); padding:0px 3px 0px 5px; margin:0px auto 3px; width:638px; clear:both; font-size:14px; line-height:25.2000007629395px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; background:rgb(221,237,251)\">\r\n<br>\r\n&nbsp;enter F<br>\r\n&nbsp;enter E<br>\r\n&nbsp;enter B<br>\r\n&nbsp;leave B<br>\r\n&nbsp;enter C<br>\r\n&nbsp;enter D<br>\r\n&nbsp;enter A<br>\r\n&nbsp;leave A<br>\r\n&nbsp;leave D<br>\r\n&nbsp;leave C<br>\r\n&nbsp;leave E<br>\r\n&nbsp;enter D<br>\r\n&nbsp;enter A<br>\r\n&nbsp;leave A<br>\r\n&nbsp;leave D<br>\r\n&nbsp;leave F<br>\r\n</div>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n可以看出来D和A的初始化函数被乱入了两次！<br>\r\n按类名访问就相当于C语言之前的GOTO语句...乱跳,然后再用super按顺序访问..就有问题了</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n所以建议就是要么一直用super,要么一直用按照类名访问</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n最佳实现:</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n避免多重继承<br>\r\nsuper使用一致<br>\r\n不要混用经典类和新式类<br>\r\n调用父类的时候注意检查类层次</p>\r\n<p style=\"margin-top:0px; margin-bottom:0px; padding-top:5px; padding-bottom:5px; font-size:14px; font-family:Tahoma,Helvetica,Arial,宋体,sans-serif; line-height:25.2000007629395px; background-color:rgb(247,252,255)\">\r\n以上便是本人对于python类的继承的认识了，希望对大家能有所帮助</p>\r\n<br>\r\n',1,'python,多重继承',0,0,'2015-02-02 00:52:09','2015-02-02 00:52:09','2015-02-02 00:52:09'),(77,1,11,'Python读书笔记-第六章','179d033395c5f38aca99486273b153a3',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-size:24px\">第六章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">函数:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef square(x):</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; \'this is a function\'</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; return x*x</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;square.__doc__</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">关键字参数和默认&#20540;:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n比如:</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(arg1=\'abc\',arg2=\'cde\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(arg1,arg2=\'fgs\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">收集参数:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(*params):</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; print params</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n这里*的作用是使params能够把一串参数接收为元组打印出来</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(\'a\',\'b\',\'c\',\'d\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(**params):</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; print params</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n这里**的作用是收集关键字参数,打印字典出来</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(a=1,b=2,c=3)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n而且他们可以混用</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n逆过程就是在函数调用的时候分别用*和** 这样</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;param=(1,2)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(*param)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(a,b)&nbsp;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp;return a&#43;b</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n千万别和c语言里面的指针搞混了</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">全局变量访问</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n全局变量被局部变量屏蔽的时候: globals()[\'变量名\']访问</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">函数式编程</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">map &nbsp;filter &nbsp;了解即可</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-size:24px\">第六章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">函数:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef square(x):</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; \'this is a function\'</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; return x*x</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;square.__doc__</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">关键字参数和默认&#20540;:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n比如:</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(arg1=\'abc\',arg2=\'cde\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(arg1,arg2=\'fgs\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">收集参数:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(*params):</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; print params</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n这里*的作用是使params能够把一串参数接收为元组打印出来</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(\'a\',\'b\',\'c\',\'d\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(**params):</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; print params</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n这里**的作用是收集关键字参数,打印字典出来</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(a=1,b=2,c=3)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n而且他们可以混用</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n逆过程就是在函数调用的时候分别用*和** 这样</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;param=(1,2)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;hello(*param)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndef hello(a,b)&nbsp;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp;return a&#43;b</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n千万别和c语言里面的指针搞混了</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">全局变量访问</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n全局变量被局部变量屏蔽的时候: globals()[\'变量名\']访问</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">函数式编程</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">map &nbsp;filter &nbsp;了解即可</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n',15,'python',0,0,'2015-02-02 00:52:12','2015-02-02 00:52:12','2015-02-02 00:52:12'),(78,1,11,'Python读书笔记-第五章','a4dcff8dcaaf275ca35dc8e090c6a764',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; ','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; font-size:24px\"><span style=\"line-height:1.571428em\">第五章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:24px\"><span style=\"line-height:1.571428em\">import</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">别名 &nbsp;from somemodule import some as abc</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">赋&#20540;: x,y,z=1,2,3</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">交换:x,y=y,x</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">字典:key,value={\'name\':\'hello\'}.popitem()</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">空无都是假False</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">比较表达式</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x==y&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x&lt;y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x!=y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x is y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x is not y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x in y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x not in y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">断言</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">&gt;&gt;&gt;age=-1</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">&gt;&gt;&gt;assert 0&lt;age&lt;100 , \'some thing wrong\'</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><span style=\"line-height:1.571428em\">循环</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><span style=\"line-height:1.571428em\"></span>for x in y: something &nbsp;, &nbsp;while x比较y :something &nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">特殊: for x in range(0,10) : somtthing</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">for key,value in d.items(): ...</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">其他:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">zip压缩</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">sorted</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">reversed</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">跳出循环: break continue</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">for ...:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">else : #仅在没有调用break的时候用</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">列表推倒</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">[(x,y) for x in range(3) for y in range(3)]</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">动态执行语句</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">exec &quot;可以是赋&#20540;语句&quot;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">eval &quot;求&#20540;&quot;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; font-size:24px\"><span style=\"line-height:1.571428em\">第五章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:24px\"><span style=\"line-height:1.571428em\">import</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">别名 &nbsp;from somemodule import some as abc</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">赋&#20540;: x,y,z=1,2,3</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">交换:x,y=y,x</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">字典:key,value={\'name\':\'hello\'}.popitem()</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">空无都是假False</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">比较表达式</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x==y&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x&lt;y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x!=y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x is y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x is not y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x in y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">x not in y</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">断言</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">&gt;&gt;&gt;age=-1</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">&gt;&gt;&gt;assert 0&lt;age&lt;100 , \'some thing wrong\'</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><span style=\"line-height:1.571428em\">循环</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><span style=\"line-height:1.571428em\"></span>for x in y: something &nbsp;, &nbsp;while x比较y :something &nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">特殊: for x in range(0,10) : somtthing</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">for key,value in d.items(): ...</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">其他:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">zip压缩</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">sorted</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">reversed</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">跳出循环: break continue</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">for ...:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">else : #仅在没有调用break的时候用</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">列表推倒</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\">[(x,y) for x in range(3) for y in range(3)]</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">动态执行语句</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">exec &quot;可以是赋&#20540;语句&quot;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">eval &quot;求&#20540;&quot;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></span></div>\r\n',1,'python',0,0,'2015-02-02 00:52:15','2015-02-02 00:52:15','2015-02-02 00:52:15'),(79,1,11,'Python读书笔记-第三章,四章','041fd4d35ce0e381119be31c54dc2b44',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; ','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; font-size:18px\"><span style=\"line-height:1.571428em\">第三章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n1. 字符串&#26684;式化</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;format=&quot;hello %s &nbsp;%s world&quot;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;values=(\'world\',\'hot\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;print format % values &nbsp;#也可以接收单个字符串也</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n也可以用%f %d这类的类&#20284;与c的printf</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n匹配多个参数的时候应该用圆括号</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;\'%s plus %s equals %s\' &nbsp;%(1,1,2)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;\'%010.2f\' % pi&nbsp;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n\'0000000003.14\' 表示一共10个位子 0,整数,小数点,小数部分</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n2.字符串的操作</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nfind 或者find(\'xx\',start,end)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nstr.find(\'xxx\') #返回字符串的位置</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\njoin, split的逆方法.</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n比如s=[1,2,3,4] &nbsp;flag=\', \' &nbsp;flag.join(s) &nbsp;-&gt; &nbsp; 1,2,3,4</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nreplace(source,xxxx)替换</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n3. 转换表</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ntable=maketrans(\'ca\',\'bd\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nword=\'helloworld\'.translate(table)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; font-size:24px\"><span style=\"line-height:1.571428em\">第四章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">这部分内容少 写成一个日志</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">1.字典的创建</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">&gt;&gt;&gt;items={\'alice\':\'1234\',\'bob\':\'4567\'}</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">{}为空字典</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">2.dict函数</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">d=dict( 二元键&#20540;队 &nbsp;) &nbsp;比如[(\'a\',1),(\'b\',2)]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">3.基本操作</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">len(d)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">d[k]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">del d[k]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">k in d</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">4.&#26684;式化字符串</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">template=\'&lt;html&gt;%(title)&lt;/html&gt;\'</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">print template % {\'title\':\'hello\'}</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">5.字典的方法</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">clear清空</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">remove</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">copy # y=x.copy()</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">深度复制:deepcopy # dc=deepcopy(d)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nget访问字典不会报错,且设置不存在的时候的&#20540; get(key,\'error infor\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nfromkeys创建空字典,只有键的比如 {}.fromkeys([\'name\',\'age\'])</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nhas_key</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nitems 无次序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\niteritems返回迭代器</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\npop(key)删除</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\npopitem删除最后一个</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nupdate</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">函数大多不用死记硬背,用到的时候翻翻笔记,单独查用法,用的时候熟悉.!!</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; font-size:18px\"><span style=\"line-height:1.571428em\">第三章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n1. 字符串&#26684;式化</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;format=&quot;hello %s &nbsp;%s world&quot;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;values=(\'world\',\'hot\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;print format % values &nbsp;#也可以接收单个字符串也</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n也可以用%f %d这类的类&#20284;与c的printf</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n匹配多个参数的时候应该用圆括号</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;\'%s plus %s equals %s\' &nbsp;%(1,1,2)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;\'%010.2f\' % pi&nbsp;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n\'0000000003.14\' 表示一共10个位子 0,整数,小数点,小数部分</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n2.字符串的操作</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nfind 或者find(\'xx\',start,end)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nstr.find(\'xxx\') #返回字符串的位置</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\njoin, split的逆方法.</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n比如s=[1,2,3,4] &nbsp;flag=\', \' &nbsp;flag.join(s) &nbsp;-&gt; &nbsp; 1,2,3,4</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nreplace(source,xxxx)替换</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n3. 转换表</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ntable=maketrans(\'ca\',\'bd\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nword=\'helloworld\'.translate(table)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; font-size:24px\"><span style=\"line-height:1.571428em\">第四章</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">这部分内容少 写成一个日志</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">1.字典的创建</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">&gt;&gt;&gt;items={\'alice\':\'1234\',\'bob\':\'4567\'}</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">{}为空字典</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">2.dict函数</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">d=dict( 二元键&#20540;队 &nbsp;) &nbsp;比如[(\'a\',1),(\'b\',2)]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">3.基本操作</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">len(d)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">d[k]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">del d[k]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">k in d</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">4.&#26684;式化字符串</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">template=\'&lt;html&gt;%(title)&lt;/html&gt;\'</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">print template % {\'title\':\'hello\'}</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">5.字典的方法</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">clear清空</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">remove</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">copy # y=x.copy()</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">深度复制:deepcopy # dc=deepcopy(d)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nget访问字典不会报错,且设置不存在的时候的&#20540; get(key,\'error infor\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nfromkeys创建空字典,只有键的比如 {}.fromkeys([\'name\',\'age\'])</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nhas_key</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nitems 无次序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\niteritems返回迭代器</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\npop(key)删除</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\npopitem删除最后一个</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nupdate</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\">函数大多不用死记硬背,用到的时候翻翻笔记,单独查用法,用的时候熟悉.!!</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:37.7142715454102px; font-size:18px\"><br>\r\n</span></div>\r\n',1,'python',0,0,'2015-02-02 00:52:16','2015-02-02 00:52:16','2015-02-02 00:52:16'),(80,1,11,'Python学习笔记(4):正则表达式','0b23238c3141de837289c90a09695cdb',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n正则表达式<br clear=\"none\">\r\n</d','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n正则表达式<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">用法:</span></span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;import re</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;s=r\'abc\'</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;re.findall(s,\'abcabc\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">正则语法:</span></span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">元字符: . ^ $ * &#43; ? {} [] \\ | ()</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">[] 用于选择匹配 [abc] 匹配 a或者b或者c</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">[^]用于反选,比如[^abc]不含有abc的</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">^用于匹配行首 r\'^abc\' 匹配\'abcd\'而不是\'dabc\'</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">$用于匹配行尾 类&#20284;^</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">\\ : 用于转义.<br clear=\"none\">\r\n\\d 表示数字 [0-9]<br clear=\"none\">\r\n\\D 表示d的反 [^0-9]<br clear=\"none\">\r\n\\s 表示空白字符[\\t\\n\\r\\f\\v]<br clear=\"none\">\r\n\\S 表示反s<br clear=\"none\">\r\n\\w 表示字符数字[a-zA-Z0-9_]<br clear=\"none\">\r\n\\W 反之<br clear=\"none\">\r\n{N}重复n次 比如\\d{8} 匹配8个数字<br clear=\"none\">\r\n* 重复0到n次 比如ab* 匹配abbbbbbb<br clear=\"none\">\r\n&#43;重复1到n次<br clear=\"none\">\r\n?重复0次或者1次<br clear=\"none\">\r\n重复后面加? 是最小匹配<br clear=\"none\">\r\nr\'ab&#43;?\' 最小匹配<br clear=\"none\">\r\n{m.n}重复m到n次<br clear=\"none\">\r\n{0,}等于*<br clear=\"none\">\r\n{1,}等于&#43;<br clear=\"none\">\r\n{0,1}等于?</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">re模块使用</span></span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">1.编译</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">import re</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">p=re.compile(r\'xxx\') 经常使用的话这样更快</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">p.findall(\'abcabc\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">就不需要</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">re.findall(r\'a\',\'xxxx\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">不区分大小写re.compile(r\'xxx\',re.I)</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">2.常用函数</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">match() 开头匹配返回位置</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">search() 整个字符串扫描返回位置</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">findall()返回list</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">finditer()返回迭代器</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">Match:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">m.group() 返回匹配的&#20540;</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">Search:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">同上</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">字符串替换:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">rs=r\'c..t\'</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">re.compile(rs)</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">rs.sub(\'python\',\'csvt caat cvvt cccc\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">切割:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">split</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">s=&quot;123&#43;234-344&quot;</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">re.split(r\'[\\&#43;\\-]\',s)</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">group</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><span style=\"color:#ff0000; line-height:1.571428em\"><span style=\"line-height:1.571428em\">group(0)和group()一样</span></span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><span style=\"color:#ff0000; line-height:1.571428em\"><span style=\"line-height:1.571428em\">group(n)是返回第n个匹配的括号内容</span></span></span></div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n正则表达式<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">用法:</span></span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;import re</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;s=r\'abc\'</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;re.findall(s,\'abcabc\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">正则语法:</span></span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">元字符: . ^ $ * &#43; ? {} [] \\ | ()</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">[] 用于选择匹配 [abc] 匹配 a或者b或者c</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">[^]用于反选,比如[^abc]不含有abc的</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">^用于匹配行首 r\'^abc\' 匹配\'abcd\'而不是\'dabc\'</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">$用于匹配行尾 类&#20284;^</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">\\ : 用于转义.<br clear=\"none\">\r\n\\d 表示数字 [0-9]<br clear=\"none\">\r\n\\D 表示d的反 [^0-9]<br clear=\"none\">\r\n\\s 表示空白字符[\\t\\n\\r\\f\\v]<br clear=\"none\">\r\n\\S 表示反s<br clear=\"none\">\r\n\\w 表示字符数字[a-zA-Z0-9_]<br clear=\"none\">\r\n\\W 反之<br clear=\"none\">\r\n{N}重复n次 比如\\d{8} 匹配8个数字<br clear=\"none\">\r\n* 重复0到n次 比如ab* 匹配abbbbbbb<br clear=\"none\">\r\n&#43;重复1到n次<br clear=\"none\">\r\n?重复0次或者1次<br clear=\"none\">\r\n重复后面加? 是最小匹配<br clear=\"none\">\r\nr\'ab&#43;?\' 最小匹配<br clear=\"none\">\r\n{m.n}重复m到n次<br clear=\"none\">\r\n{0,}等于*<br clear=\"none\">\r\n{1,}等于&#43;<br clear=\"none\">\r\n{0,1}等于?</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">re模块使用</span></span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">1.编译</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">import re</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">p=re.compile(r\'xxx\') 经常使用的话这样更快</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">p.findall(\'abcabc\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">就不需要</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">re.findall(r\'a\',\'xxxx\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">不区分大小写re.compile(r\'xxx\',re.I)</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">2.常用函数</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">match() 开头匹配返回位置</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">search() 整个字符串扫描返回位置</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">findall()返回list</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">finditer()返回迭代器</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">Match:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">m.group() 返回匹配的&#20540;</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">Search:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">同上</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">字符串替换:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">rs=r\'c..t\'</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">re.compile(rs)</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">rs.sub(\'python\',\'csvt caat cvvt cccc\')</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">切割:</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">split</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">s=&quot;123&#43;234-344&quot;</span><br clear=\"none\">\r\n<span style=\"line-height:1.571428em\">re.split(r\'[\\&#43;\\-]\',s)</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">group</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><span style=\"color:#ff0000; line-height:1.571428em\"><span style=\"line-height:1.571428em\">group(0)和group()一样</span></span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><span style=\"color:#ff0000; line-height:1.571428em\"><span style=\"line-height:1.571428em\">group(n)是返回第n个匹配的括号内容</span></span></span></div>\r\n',1,'python,正则表达式,re',0,0,'2015-02-02 00:52:19','2015-02-02 00:52:19','2015-02-02 00:52:19'),(81,1,11,'Python读书笔记-第二章','f50ebc7e945fb3fab938853021b4f878',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-size:24px\">第二章 &nbsp; 列表和元组</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-size:24px\"><br clear=\"none\">\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">1. 列表可以修改 , &nbsp;元组不可以修改</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;list[-1] &nbsp; #表示最后一个元素,非常方便</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n列表可以加减</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;endings=[\'st\',\'nd\']&#43;17*[\'th\']</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">2. 列表可以分片</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[9:30] &nbsp;左闭合右开的区间</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[-3:] 取得最后三个元素</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[-3:0:1] &nbsp;最后一位表示步长</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n步长为负数 &nbsp;就可以倒序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[0:5:-1]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nNone是内建&#20540; &nbsp;表示空 &nbsp;和c&#43;&#43;的NULL差不多</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">3.成员包含</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;permissons=\'rw\'</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;\'w\' in permissons</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nTrue</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n二维匹配:</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndata=[</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;[\'a\',1],</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\'b\',2],</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [\'c\',3]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nif [\'a\',1] in data :</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nprint True</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">4. 长度 len() 最大最小&#20540;min() max()</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">5.动态创建列表</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nlist(\'Hello\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">6.列表操作</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n删除 &nbsp;del name[1]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n赋&#20540; &nbsp;name=list(\'Perl\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp; &nbsp; name[2:]=list(\'ar\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n分片可以插入也可以删除</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;numbers[1:1]=[2,3,4] 插入2,3,4</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;numbers[1:4]=[] &nbsp;删除3个元素</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nappend 添加</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nlst.append(1)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ncount计数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nlst.count(\'a\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nextend 追加序列</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;a=[1,2,3]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;b=[4,5,5]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;a.extend(b)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nindex(\'who\') 搜索</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ninsert(loc,value)插入</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\npop(loc) 默认是最后一个移除</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nremove(value)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nreverse(x)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort()</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n注意 x.sort()返回的只是迭代器 并不是列表</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; sorted(x)才是返回的一个列表</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort(cmp) 比较函数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort(reverse=True) 反向排序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort(key=len) 按长度排序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">元组 () 没什么好说的 记住加逗号</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n(1,2,3,)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ntuple([1,2,3])</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n可以当key使用</div>\r\n<div><br>\r\n</div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-size:24px\">第二章 &nbsp; 列表和元组</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; font-size:24px\"><br clear=\"none\">\r\n</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">1. 列表可以修改 , &nbsp;元组不可以修改</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">&gt;&gt;&gt;list[-1] &nbsp; #表示最后一个元素,非常方便</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n列表可以加减</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;endings=[\'st\',\'nd\']&#43;17*[\'th\']</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">2. 列表可以分片</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[9:30] &nbsp;左闭合右开的区间</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[-3:] 取得最后三个元素</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[-3:0:1] &nbsp;最后一位表示步长</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n步长为负数 &nbsp;就可以倒序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;tag[0:5:-1]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nNone是内建&#20540; &nbsp;表示空 &nbsp;和c&#43;&#43;的NULL差不多</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">3.成员包含</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;permissons=\'rw\'</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;\'w\' in permissons</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nTrue</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n二维匹配:</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ndata=[</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;[\'a\',1],</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\'b\',2],</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [\'c\',3]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nif [\'a\',1] in data :</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nprint True</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">4. 长度 len() 最大最小&#20540;min() max()</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">5.动态创建列表</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nlist(\'Hello\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">6.列表操作</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n删除 &nbsp;del name[1]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n赋&#20540; &nbsp;name=list(\'Perl\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp; &nbsp; name[2:]=list(\'ar\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n分片可以插入也可以删除</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;numbers[1:1]=[2,3,4] 插入2,3,4</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;numbers[1:4]=[] &nbsp;删除3个元素</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nappend 添加</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nlst.append(1)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ncount计数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nlst.count(\'a\')</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nextend 追加序列</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;a=[1,2,3]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;b=[4,5,5]</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;a.extend(b)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nindex(\'who\') 搜索</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ninsert(loc,value)插入</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\npop(loc) 默认是最后一个移除</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nremove(value)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nreverse(x)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort()</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n注意 x.sort()返回的只是迭代器 并不是列表</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; sorted(x)才是返回的一个列表</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort(cmp) 比较函数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort(reverse=True) 反向排序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nsort(key=len) 按长度排序</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">元组 () 没什么好说的 记住加逗号</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n(1,2,3,)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\ntuple([1,2,3])</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n可以当key使用</div>\r\n<div><br>\r\n</div>\r\n',1,'python',0,0,'2015-02-02 00:52:20','2015-02-02 00:52:20','2015-02-02 00:52:20'),(82,1,11,'python关于netcdf文件的读写','b9227700012a98f7637a7425b8e7e168',0,'\r\n\r\n<p>由于项目是关于气象的。所以需要做这个关于气象的东西。</p>\r\n<p>得知netcdf是网络通用&#26684;式文件，于是老板叫找个python下面的有关这个的读取</','\r\n\r\n<p>由于项目是关于气象的。所以需要做这个关于气象的东西。</p>\r\n<p>得知netcdf是网络通用&#26684;式文件，于是老板叫找个python下面的有关这个的读取</p>\r\n<p>无奈是netcdf支持c, fortan ,c&#43;&#43;就是没有python的包</p>\r\n<p>于是在github里面去找，找到一个关于python的工具于是就成功了。这里记录下安装的坑吧。总共花了2天时间，不断龟速下载和安装尝试现在总结下方法。</p>\r\n<p>1. 首先是去网站里面</p>\r\n<p>http://www.unidata.ucar.edu/downloads/netcdf/index.jsp &nbsp; 这个网址里面下载netcdf for c 稳定版<br>\r\n</p>\r\n<p>安装方法：</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_1_1517066\"  name=\"code\" class=\"html\">tar -zxvf netcdf***.tar.gz\n    cd netcdf*\n    mkdir /usr/local/netcdf\n    ./configure --prefix=/usr/local/netcdf --libdir=/usr/lib/ --includedir=/usr/lib/ --sharedstatedir=/usr/share --bindir=/usr/bin/\n如果装了intel编译器，会提示math.h的错误，加上CC=icc\n   make &amp; make check\n   make install</pre><br>\r\n2. 如果第一步提示不成功，可能是缺少zlib hdf5</p>\r\n<p>去百度hdf5下载一个18.0&#43;版本的按下面方法安装，这个最难装经常报错，实在不行直接先不管，这里教程有很多步骤可能是重复的，因为我安装的方法很多种已经记不清楚了，。反正按这个步骤来一遍 基本上能成功</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_2_418804\"  name=\"code\" class=\"html\">tar -zxvf hdf5***.tar.gz\n    cd hdf5*\n    mkdir /usr/local/hdf5\n    ./configure --prefix=/usr/local/hdf5 --libdir=/usr/lib/ --includedir=/usr/lib/ --sharedstatedir=/usr/share --bindir=/usr/bin/\n   make &amp; make check\n   make install</pre>再安装zlib</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_3_5143063\"  name=\"code\" class=\"html\">  tar -zxvf zlib***.tar.gz\n    cd zlib*\n    mkdir /usr/local/zlib\n    ./configure --prefix=/usr/local/zlib --libdir=/usr/lib/ --includedir=/usr/lib/ --sharedlibdir=/usr/share\n其中 --libdir=/usr/lib/ --includedir=/usr/lib/一定写上，把库文件与头文件装在系统默认搜寻的地方，免得后面设置LD_LIBRARY_PATH ，如果不懂可用./configure --help 查看\n   make &amp; make check\n   make install</pre><br>\r\n这些都是很容易百度到下载的，所以请不要直接问在哪里下载了</p>\r\n<p>3. 第2步是第一步的基础，前两部成功后再开始安装关于python的。</p>\r\n<p>https://github.com/gersolar/netcdf</p>\r\n<p>这个git上面的工具是我试过能够成功的，根据里面的readme.md 方法</p>\r\n<p>先<pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_4_5897589\"  name=\"code\" class=\"html\">$ pip install netcdf</pre>这里如果报denied permisson之类的可能是因为没用管理员权限</p>\r\n<p>ubuntu下面用sudo pip install netcdf</p>\r\n<p>这一步速度可鞥会很慢，就等等。也可以加提速镜像</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_5_32423\"  name=\"code\" class=\"html\">sudo pip install netcdf -i http://e.pypi.python.org/simple</pre><br>\r\n当提示缺少Dataset或者hydf等等。 &nbsp;就先sudo pip install Dataset之类的 &nbsp;再重新安装netcdf。&nbsp;</p>\r\n<p>这里反正要等很久。也是最关键的一部 。 可能1,2两步的东西这里也会自动安装，我想前面安装了，他会自动跳过吧</p>\r\n<p>4. 前面都好了。就把<span style=\"font-family:Arial; font-size:14px; line-height:26px\"><span style=\"color:rgb(255,0,0)\"></span></span>https://github.com/gersolar/netcdf 这个clone下来 不会的请先学git使用。<span style=\"font-size:14px; font-family:\'Microsoft Yahei\',Tahoma,Arial,Helvetica,STHeiti; line-height:20px\"><strong><span style=\"color:rgb(255,0,0)\"></span></strong></span></p>\r\n<p>然后</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_6_8835100\"  name=\"code\" class=\"html\">$ make deploy</pre>或者</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_7_2969934\"  name=\"code\" class=\"html\">$ make ubuntu deploy</pre><br>\r\n5. 就是测试了。这里给个教程</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_8_3201072\"  name=\"code\" class=\"html\">CDL全称为network Common data form Description Language，它是用来描述netcdf文件\n的结构的一种语法格式。它包括前面所说的三种netcdf对象(变量、维、属性)的具体定义。\n看一个具体例子（这个例子cdl文件是从netcdf教程中的2.1 节The simple xy Example摘出来的） \nnetcdf simple_xy {\ndimensions:\nx = 6 ;\ny = 12 ;\nvariables:\nint data(x, y) ;\ndata:\ndata =\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 ;\n}\n上面的代码定义了一个符合netcdf格式的结构simple_xy,  \n这个结构包括三个部分\n1、维的定义，以dimensions:关键字开头\n   dimensions:\n x = 6 ;\n y = 12 ;\n 定义了两个轴（或者说两维），名字分别为x和y,x轴的长度（准确的说是坐标点的个数）为6，\n y轴的长度为12。\n2、变量的定义:以variables:开头\n variables:\n  int data(x, y);\n  定义了一个以x轴和y轴为自变量的函数data，数学公式就是f(x,y)=data;\n  注意维出现的顺序是有序的，它决定data段中的具体赋值结果.\n3、数据的定义，以data:开头\n data:\ndata =\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 ;\n这个段数据用数学的函数公式f(x,y)=data来看，\n就是  x=0,y=0时，data = 0;\n     x=0,y=1时，data = 1;\n     \n     \n     x=5,y=11是，data=71;\n要注意的是，\n1、赋值顺序：\n我们给出的是c格式的cdl文件，因此这里的赋值顺序和c语言中的一致，也就是通常所说的“行式赋值”，\n而fortran语言中则是“列式赋值”，因此在fortran格式的cdl文件中，data段的数值顺序和这里正好\n行列互换。     \n2、自变量的默认取值和坐标变量\n   如果只给出维的长度，那么维的值默认从0开始，然后自动加1，到(长度-1)停止，\n   很多情况下我们要自己给出每个点的坐标值，这时就需要用到netcdf里的坐标变量\n   &quot;coordinate varibles&quot;：增加一个和只和维相关的一元函数（自变量）并给出它的取值范围。\n   比如下面的cdl文件（摘自netcdf教程中的2.2 The sfc pres temp Example）\n   netcdf sfc_pres_temp {\n dimensions:\n latitude = 6 ;        //纬度轴\n longitude = 12 ;      //经度轴\n variables:\n float latitude(latitude) ;    //坐标变量，存储具体纬度\n latitude:units = &quot;degrees_north&quot; ;\n float longitude(longitude) ;  //坐标变量，存储具体纬度\n longitude:units = &quot;degrees_east&quot; ;\n float pressure(latitude, longitude) ;   //某个点（经度和纬度的交点）的大气压值\n pressure:units = &quot;hPa&quot; ;           //大气压的单位为\n float temperature(latitude, longitude) ; //某个点（经度和纬度的交点）的温度值\n temperature:units = &quot;celsius&quot; ;    //温度的单位为\n data:\n latitude = 25, 30, 35, 40, 45, 50 ;\n longitude = -125, -120, -115, -110, -105, -100, -95, -90, -85, -80, -75, -70 ;\n pressure =\n 900, 906, 912, 918, 924, 930, 936, 942, 948, 954, 960, 966,\n 901, 907, 913, 919, 925, 931, 937, 943, 949, 955, 961, 967,\n 902, 908, 914, 920, 926, 932, 938, 944, 950, 956, 962, 968,\n 903, 909, 915, 921, 927, 933, 939, 945, 951, 957, 963, 969,\n 904, 910, 916, 922, 928, 934, 940, 946, 952, 958, 964, 970,\n 905, 911, 917, 923, 929, 935, 941, 947, 953, 959, 965, 971 ;\n temperature =\n 9, 10.5, 12, 13.5, 15, 16.5, 18, 19.5, 21, 22.5, 24, 25.5,\n 9.25, 10.75, 12.25, 13.75, 15.25, 16.75, 18.25, 19.75, 21.25, 22.75, 24.25,\n 25.75,\n 9.5, 11, 12.5, 14, 15.5, 17, 18.5, 20, 21.5, 23, 24.5, 26,\n 9.75, 11.25, 12.75, 14.25, 15.75, 17.25, 18.75, 20.25, 21.75, 23.25, 24.75,\n 26.25,\n 10, 11.5, 13, 14.5, 16, 17.5, 19, 20.5, 22, 23.5, 25, 26.5,\n 10.25, 11.75, 13.25, 14.75, 16.25, 17.75, 19.25, 20.75, 22.25, 23.75,\n 25.25\n 对于上面的数据，就是\n latitude = 25，longitude = -125时，pressure = 900，temperature =  9;\n latitude = 25，longitude = -120时，pressure = 906，temperature =  10.5;\n 以此类推。\n </pre><br>\r\n<br>\r\n</p>\r\n<p>把上面的第一个列子保存为 *.cdl文件&nbsp;</p>\r\n<p>然后在命令行里面</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_9_5940465\"  name=\"code\" class=\"html\">ncgen -o simple_xy.nc simple_xy.cdl生成netcdf格式文件simple_xy.nc</pre><br>\r\n然后先</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_10_7251398\"  name=\"code\" class=\"html\">在命令行下执行ncdump simple_xy.nc，这时屏幕的输出和simple_xy.cdl内容完全一样。说明\n     我们的文件读写操作都是正确的。</pre><br>\r\n最后进入python命令行</p>\r\n<p>$python</p>\r\n<p>然后</p>\r\n<p>&gt;&gt;&gt;<pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_11_8910995\"  name=\"code\" class=\"html\">from netCDF4 import Dataset\nf = Dataset(&#39;**刚才保存的名字.nc&#39;)\nv = f.variables[&#39;data&#39;]\n</pre><br>\r\nprint v[0]</p>\r\n<p>如果有数据，就说明成功了。enjoy it !</p>\r\n<p><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>由于项目是关于气象的。所以需要做这个关于气象的东西。</p>\r\n<p>得知netcdf是网络通用&#26684;式文件，于是老板叫找个python下面的有关这个的读取</p>\r\n<p>无奈是netcdf支持c, fortan ,c&#43;&#43;就是没有python的包</p>\r\n<p>于是在github里面去找，找到一个关于python的工具于是就成功了。这里记录下安装的坑吧。总共花了2天时间，不断龟速下载和安装尝试现在总结下方法。</p>\r\n<p>1. 首先是去网站里面</p>\r\n<p>http://www.unidata.ucar.edu/downloads/netcdf/index.jsp &nbsp; 这个网址里面下载netcdf for c 稳定版<br>\r\n</p>\r\n<p>安装方法：</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_1_1517066\"  name=\"code\" class=\"html\">tar -zxvf netcdf***.tar.gz\n    cd netcdf*\n    mkdir /usr/local/netcdf\n    ./configure --prefix=/usr/local/netcdf --libdir=/usr/lib/ --includedir=/usr/lib/ --sharedstatedir=/usr/share --bindir=/usr/bin/\n如果装了intel编译器，会提示math.h的错误，加上CC=icc\n   make &amp; make check\n   make install</pre><br>\r\n2. 如果第一步提示不成功，可能是缺少zlib hdf5</p>\r\n<p>去百度hdf5下载一个18.0&#43;版本的按下面方法安装，这个最难装经常报错，实在不行直接先不管，这里教程有很多步骤可能是重复的，因为我安装的方法很多种已经记不清楚了，。反正按这个步骤来一遍 基本上能成功</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_2_418804\"  name=\"code\" class=\"html\">tar -zxvf hdf5***.tar.gz\n    cd hdf5*\n    mkdir /usr/local/hdf5\n    ./configure --prefix=/usr/local/hdf5 --libdir=/usr/lib/ --includedir=/usr/lib/ --sharedstatedir=/usr/share --bindir=/usr/bin/\n   make &amp; make check\n   make install</pre>再安装zlib</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_3_5143063\"  name=\"code\" class=\"html\">  tar -zxvf zlib***.tar.gz\n    cd zlib*\n    mkdir /usr/local/zlib\n    ./configure --prefix=/usr/local/zlib --libdir=/usr/lib/ --includedir=/usr/lib/ --sharedlibdir=/usr/share\n其中 --libdir=/usr/lib/ --includedir=/usr/lib/一定写上，把库文件与头文件装在系统默认搜寻的地方，免得后面设置LD_LIBRARY_PATH ，如果不懂可用./configure --help 查看\n   make &amp; make check\n   make install</pre><br>\r\n这些都是很容易百度到下载的，所以请不要直接问在哪里下载了</p>\r\n<p>3. 第2步是第一步的基础，前两部成功后再开始安装关于python的。</p>\r\n<p>https://github.com/gersolar/netcdf</p>\r\n<p>这个git上面的工具是我试过能够成功的，根据里面的readme.md 方法</p>\r\n<p>先<pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_4_5897589\"  name=\"code\" class=\"html\">$ pip install netcdf</pre>这里如果报denied permisson之类的可能是因为没用管理员权限</p>\r\n<p>ubuntu下面用sudo pip install netcdf</p>\r\n<p>这一步速度可鞥会很慢，就等等。也可以加提速镜像</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_5_32423\"  name=\"code\" class=\"html\">sudo pip install netcdf -i http://e.pypi.python.org/simple</pre><br>\r\n当提示缺少Dataset或者hydf等等。 &nbsp;就先sudo pip install Dataset之类的 &nbsp;再重新安装netcdf。&nbsp;</p>\r\n<p>这里反正要等很久。也是最关键的一部 。 可能1,2两步的东西这里也会自动安装，我想前面安装了，他会自动跳过吧</p>\r\n<p>4. 前面都好了。就把<span style=\"font-family:Arial; font-size:14px; line-height:26px\"><span style=\"color:rgb(255,0,0)\"></span></span>https://github.com/gersolar/netcdf 这个clone下来 不会的请先学git使用。<span style=\"font-size:14px; font-family:\'Microsoft Yahei\',Tahoma,Arial,Helvetica,STHeiti; line-height:20px\"><strong><span style=\"color:rgb(255,0,0)\"></span></strong></span></p>\r\n<p>然后</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_6_8835100\"  name=\"code\" class=\"html\">$ make deploy</pre>或者</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_7_2969934\"  name=\"code\" class=\"html\">$ make ubuntu deploy</pre><br>\r\n5. 就是测试了。这里给个教程</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_8_3201072\"  name=\"code\" class=\"html\">CDL全称为network Common data form Description Language，它是用来描述netcdf文件\n的结构的一种语法格式。它包括前面所说的三种netcdf对象(变量、维、属性)的具体定义。\n看一个具体例子（这个例子cdl文件是从netcdf教程中的2.1 节The simple xy Example摘出来的） \nnetcdf simple_xy {\ndimensions:\nx = 6 ;\ny = 12 ;\nvariables:\nint data(x, y) ;\ndata:\ndata =\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 ;\n}\n上面的代码定义了一个符合netcdf格式的结构simple_xy,  \n这个结构包括三个部分\n1、维的定义，以dimensions:关键字开头\n   dimensions:\n x = 6 ;\n y = 12 ;\n 定义了两个轴（或者说两维），名字分别为x和y,x轴的长度（准确的说是坐标点的个数）为6，\n y轴的长度为12。\n2、变量的定义:以variables:开头\n variables:\n  int data(x, y);\n  定义了一个以x轴和y轴为自变量的函数data，数学公式就是f(x,y)=data;\n  注意维出现的顺序是有序的，它决定data段中的具体赋值结果.\n3、数据的定义，以data:开头\n data:\ndata =\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 ;\n这个段数据用数学的函数公式f(x,y)=data来看，\n就是  x=0,y=0时，data = 0;\n     x=0,y=1时，data = 1;\n     \n     \n     x=5,y=11是，data=71;\n要注意的是，\n1、赋值顺序：\n我们给出的是c格式的cdl文件，因此这里的赋值顺序和c语言中的一致，也就是通常所说的“行式赋值”，\n而fortran语言中则是“列式赋值”，因此在fortran格式的cdl文件中，data段的数值顺序和这里正好\n行列互换。     \n2、自变量的默认取值和坐标变量\n   如果只给出维的长度，那么维的值默认从0开始，然后自动加1，到(长度-1)停止，\n   很多情况下我们要自己给出每个点的坐标值，这时就需要用到netcdf里的坐标变量\n   &quot;coordinate varibles&quot;：增加一个和只和维相关的一元函数（自变量）并给出它的取值范围。\n   比如下面的cdl文件（摘自netcdf教程中的2.2 The sfc pres temp Example）\n   netcdf sfc_pres_temp {\n dimensions:\n latitude = 6 ;        //纬度轴\n longitude = 12 ;      //经度轴\n variables:\n float latitude(latitude) ;    //坐标变量，存储具体纬度\n latitude:units = &quot;degrees_north&quot; ;\n float longitude(longitude) ;  //坐标变量，存储具体纬度\n longitude:units = &quot;degrees_east&quot; ;\n float pressure(latitude, longitude) ;   //某个点（经度和纬度的交点）的大气压值\n pressure:units = &quot;hPa&quot; ;           //大气压的单位为\n float temperature(latitude, longitude) ; //某个点（经度和纬度的交点）的温度值\n temperature:units = &quot;celsius&quot; ;    //温度的单位为\n data:\n latitude = 25, 30, 35, 40, 45, 50 ;\n longitude = -125, -120, -115, -110, -105, -100, -95, -90, -85, -80, -75, -70 ;\n pressure =\n 900, 906, 912, 918, 924, 930, 936, 942, 948, 954, 960, 966,\n 901, 907, 913, 919, 925, 931, 937, 943, 949, 955, 961, 967,\n 902, 908, 914, 920, 926, 932, 938, 944, 950, 956, 962, 968,\n 903, 909, 915, 921, 927, 933, 939, 945, 951, 957, 963, 969,\n 904, 910, 916, 922, 928, 934, 940, 946, 952, 958, 964, 970,\n 905, 911, 917, 923, 929, 935, 941, 947, 953, 959, 965, 971 ;\n temperature =\n 9, 10.5, 12, 13.5, 15, 16.5, 18, 19.5, 21, 22.5, 24, 25.5,\n 9.25, 10.75, 12.25, 13.75, 15.25, 16.75, 18.25, 19.75, 21.25, 22.75, 24.25,\n 25.75,\n 9.5, 11, 12.5, 14, 15.5, 17, 18.5, 20, 21.5, 23, 24.5, 26,\n 9.75, 11.25, 12.75, 14.25, 15.75, 17.25, 18.75, 20.25, 21.75, 23.25, 24.75,\n 26.25,\n 10, 11.5, 13, 14.5, 16, 17.5, 19, 20.5, 22, 23.5, 25, 26.5,\n 10.25, 11.75, 13.25, 14.75, 16.25, 17.75, 19.25, 20.75, 22.25, 23.75,\n 25.25\n 对于上面的数据，就是\n latitude = 25，longitude = -125时，pressure = 900，temperature =  9;\n latitude = 25，longitude = -120时，pressure = 906，temperature =  10.5;\n 以此类推。\n </pre><br>\r\n<br>\r\n</p>\r\n<p>把上面的第一个列子保存为 *.cdl文件&nbsp;</p>\r\n<p>然后在命令行里面</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_9_5940465\"  name=\"code\" class=\"html\">ncgen -o simple_xy.nc simple_xy.cdl生成netcdf格式文件simple_xy.nc</pre><br>\r\n然后先</p>\r\n<p><pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_10_7251398\"  name=\"code\" class=\"html\">在命令行下执行ncdump simple_xy.nc，这时屏幕的输出和simple_xy.cdl内容完全一样。说明\n     我们的文件读写操作都是正确的。</pre><br>\r\n最后进入python命令行</p>\r\n<p>$python</p>\r\n<p>然后</p>\r\n<p>&gt;&gt;&gt;<pre code_snippet_id=\"585231\" snippet_file_name=\"blog_20150121_11_8910995\"  name=\"code\" class=\"html\">from netCDF4 import Dataset\nf = Dataset(&#39;**刚才保存的名字.nc&#39;)\nv = f.variables[&#39;data&#39;]\n</pre><br>\r\nprint v[0]</p>\r\n<p>如果有数据，就说明成功了。enjoy it !</p>\r\n<p><br>\r\n<br>\r\n</p>\r\n',1,'python,netcdf',0,0,'2015-02-02 00:52:28','2015-02-02 00:52:28','2015-02-02 00:52:28'),(83,1,11,'Python读书笔记-第一章','572f97503bb400a218e9abfb78f921d0',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n1. python 2.2 版本之后直接处','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n1. python 2.2 版本之后直接处理长整数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n比如&gt;&gt;&gt;100000000000000</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp; 1000000000000L</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n2. 0xABCD 表示十六进制 &nbsp; &nbsp; 010表示八进制</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n3. input(\'..\') &nbsp;raw_input(\'..\') 分别是输入</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n4. 内建函数， round(1.1)=1 &nbsp;四舍五入 &nbsp;pow(2,3)=2*2*2=8 &nbsp;不需要import</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n5.</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;import math &nbsp;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;math.floor(32.9)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;32.0 &nbsp;#向下取整</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;math.floor(-1.9)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;-2.0</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;math.ceil(-1.9)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;-1.0 #向上取整</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n6.更高级的数学计算： 复数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;import cmath</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;cmath.sqrt(-1)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;1j</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n7.如何运行</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n$python hello.py</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n8. 单引号和双引号几乎没有区别</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n9. &#43; 号用于拼接字符串</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp;str , repr , 反引号 &nbsp;可以讲字符转换为字符串 ``</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n10. raw_input 能够输入hello &nbsp;input必须输入\'hello\'才行(合法的表达式，或者变量)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n11. 跨行字符串用\'\'\' &nbsp;\'\'\' 或者&quot;&quot;&quot; &nbsp;&quot;&quot;&quot;括起来</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n12.r(\'/////a\') &nbsp;r用于显示原始字符串 \\直接输出，不转义 但是最后不能有奇数个反斜杠</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n1. python 2.2 版本之后直接处理长整数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n比如&gt;&gt;&gt;100000000000000</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; &nbsp; 1000000000000L</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n2. 0xABCD 表示十六进制 &nbsp; &nbsp; 010表示八进制</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n3. input(\'..\') &nbsp;raw_input(\'..\') 分别是输入</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n4. 内建函数， round(1.1)=1 &nbsp;四舍五入 &nbsp;pow(2,3)=2*2*2=8 &nbsp;不需要import</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n5.</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;import math &nbsp;</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;math.floor(32.9)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;32.0 &nbsp;#向下取整</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;math.floor(-1.9)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;-2.0</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;math.ceil(-1.9)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;-1.0 #向上取整</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n6.更高级的数学计算： 复数</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;import cmath</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;cmath.sqrt(-1)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&gt;&gt;&gt;1j</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n7.如何运行</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n$python hello.py</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n8. 单引号和双引号几乎没有区别</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n9. &#43; 号用于拼接字符串</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp;str , repr , 反引号 &nbsp;可以讲字符转换为字符串 ``</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n10. raw_input 能够输入hello &nbsp;input必须输入\'hello\'才行(合法的表达式，或者变量)</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n11. 跨行字符串用\'\'\' &nbsp;\'\'\' 或者&quot;&quot;&quot; &nbsp;&quot;&quot;&quot;括起来</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n12.r(\'/////a\') &nbsp;r用于显示原始字符串 \\直接输出，不转义 但是最后不能有奇数个反斜杠</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n',1,'',0,0,'2015-02-02 00:52:29','2015-02-02 00:52:29','2015-02-02 00:52:29'),(89,1,11,'Django POST常见的错误:CSRF verification failed. Request aborted.','d7cfa5c967eb23bb2ec05db22a22d1ee',0,'\r\n\r\n<p>直接用代码说明吧。</p>\r\n<p>在Post模板页面加入｛％csrf_token%｝</p>\r\n<p><pre name=\"code\" class=\"html\">&lt;html&gt;\n&lt;body&gt;\n{{result}}\n	&lt;form  action=&quot;{%url &#39;l','\r\n\r\n<p>直接用代码说明吧。</p>\r\n<p>在Post模板页面加入｛％csrf_token%｝</p>\r\n<p><pre name=\"code\" class=\"html\">&lt;html&gt;\n&lt;body&gt;\n{{result}}\n	&lt;form  action=&quot;{%url &#39;login&#39;%}&quot; method=&quot;post&quot;&gt;			  	          	\n 	 {% csrf_token %}  \n 	name:&lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; value=&quot;super&quot;/&gt;			            	   	            	\n   	password:&lt;input type=&quot;password&quot;  id=&quot;password&quot; name=&quot;password&quot;/&gt;\n	\n	 &lt;input type=&quot;submit&quot; value=&quot;login&quot; /&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><br>\r\n把和POST页面相关的所有view的context强制换成ＲequestContext</p>\r\n<p><pre code_snippet_id=\"574206\" snippet_file_name=\"blog_20150107_2_9031621\"  name=\"code\" class=\"html\"> return render_to_response(&#39;wind/index.html&#39;,context,context_instance=RequestContext(request) )</pre>记得加入&nbsp;</p>\r\n<p><pre code_snippet_id=\"574206\" snippet_file_name=\"blog_20150107_3_2002152\"  name=\"code\" class=\"html\">from django.template import RequestContext   </pre>完整例子:</p>\r\n<p><pre code_snippet_id=\"574206\" snippet_file_name=\"blog_20150107_4_3869493\"  name=\"code\" class=\"html\">from django.shortcuts import render\nfrom django.shortcuts import render,render_to_response\nfrom django.template import RequestContext   \nfrom django.contrib.auth.models import User\nfrom django.contrib import auth\nfrom wind.models import UserProfile\nfrom django.core.context_processors import csrf  \n# Create your views here.\n&#39;&#39;&#39;\nindex\n&#39;&#39;&#39;\ndef  index(request):\n    context={&quot;js&quot;:&quot;hello baby&quot;}\n    return render_to_response(&#39;wind/index.html&#39;,context,context_instance=RequestContext(request) )\n&#39;&#39;&#39;\nlogin \n&#39;&#39;&#39;\ndef  login(request):\n    username = request.POST[&#39;username&#39;]\n    password = request.POST[&#39;password&#39;]\n    user=auth.authenticate(username=username,password=password)\n    if user is not None:\n        if user.is_active:\n        	auth.login(request,user)\n        	context={&#39;result&#39;:&#39;login success!&#39;}\n    else:\n        context={&#39;result&#39;:&#39;login failed!&#39;}\n    return render_to_response(&#39;wind/index.html&#39;,context,context_instance=RequestContext(request) )</pre><br>\r\n<br>\r\n</p>\r\n','\r\n\r\n<p>直接用代码说明吧。</p>\r\n<p>在Post模板页面加入｛％csrf_token%｝</p>\r\n<p><pre name=\"code\" class=\"html\">&lt;html&gt;\n&lt;body&gt;\n{{result}}\n	&lt;form  action=&quot;{%url &#39;login&#39;%}&quot; method=&quot;post&quot;&gt;			  	          	\n 	 {% csrf_token %}  \n 	name:&lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; value=&quot;super&quot;/&gt;			            	   	            	\n   	password:&lt;input type=&quot;password&quot;  id=&quot;password&quot; name=&quot;password&quot;/&gt;\n	\n	 &lt;input type=&quot;submit&quot; value=&quot;login&quot; /&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><br>\r\n把和POST页面相关的所有view的context强制换成ＲequestContext</p>\r\n<p><pre code_snippet_id=\"574206\" snippet_file_name=\"blog_20150107_2_9031621\"  name=\"code\" class=\"html\"> return render_to_response(&#39;wind/index.html&#39;,context,context_instance=RequestContext(request) )</pre>记得加入&nbsp;</p>\r\n<p><pre code_snippet_id=\"574206\" snippet_file_name=\"blog_20150107_3_2002152\"  name=\"code\" class=\"html\">from django.template import RequestContext   </pre>完整例子:</p>\r\n<p><pre code_snippet_id=\"574206\" snippet_file_name=\"blog_20150107_4_3869493\"  name=\"code\" class=\"html\">from django.shortcuts import render\nfrom django.shortcuts import render,render_to_response\nfrom django.template import RequestContext   \nfrom django.contrib.auth.models import User\nfrom django.contrib import auth\nfrom wind.models import UserProfile\nfrom django.core.context_processors import csrf  \n# Create your views here.\n&#39;&#39;&#39;\nindex\n&#39;&#39;&#39;\ndef  index(request):\n    context={&quot;js&quot;:&quot;hello baby&quot;}\n    return render_to_response(&#39;wind/index.html&#39;,context,context_instance=RequestContext(request) )\n&#39;&#39;&#39;\nlogin \n&#39;&#39;&#39;\ndef  login(request):\n    username = request.POST[&#39;username&#39;]\n    password = request.POST[&#39;password&#39;]\n    user=auth.authenticate(username=username,password=password)\n    if user is not None:\n        if user.is_active:\n        	auth.login(request,user)\n        	context={&#39;result&#39;:&#39;login success!&#39;}\n    else:\n        context={&#39;result&#39;:&#39;login failed!&#39;}\n    return render_to_response(&#39;wind/index.html&#39;,context,context_instance=RequestContext(request) )</pre><br>\r\n<br>\r\n</p>\r\n',1,'',0,0,'2015-02-02 00:52:40','2015-02-02 00:52:40','2015-02-02 00:52:40'),(90,1,11,'Pyhton学习笔记(2)','378dee5a8d0f4cebc279fd6ba2fa2734',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; ','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">１．条件分支</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n与Ｃ的区别是不用写大括号</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nif a&gt;b :</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; c=1</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nelif a&lt;b</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; c=2</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nelse</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; c=3</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">靠缩进来区分层级关系</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">２．循环</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">for a in [1,2,3,4]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">&nbsp;&nbsp; &nbsp; &nbsp;print a</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">while i&lt;3<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">&nbsp;:</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">&nbsp; &nbsp; &nbsp;print i</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">&nbsp; &nbsp; &nbsp;i--</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">continue break用法和c一样的</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">３．函数</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><br clear=\"none\">\r\ndef square_sum(a,b)<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">:</span><br clear=\"none\">\r\n&nbsp;&nbsp;&nbsp; c=a&#43;b<br clear=\"none\">\r\n&nbsp;&nbsp;&nbsp; return c<br clear=\"none\">\r\nprint square_sum(2,3)<br clear=\"none\">\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><br clear=\"none\">\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">其中list是引用传递，例子如下:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><span style=\"line-height:1.571428em\"></span></span>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\"><span style=\"line-height:1.571428em\">b = [1,2,3]\n\ndef change_list(b):\n    b[0] = b[0] &#43; 1\n    return b\n\nprint change_list(b)\nprint b<br clear=\"none\"></span>ｂ会出现变化，如果是传入基本类型的变量则不会，有点类&#20284;于java<br clear=\"none\"></pre>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><br clear=\"none\">\r\n</span></div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">１．条件分支</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n与Ｃ的区别是不用写大括号</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nif a&gt;b :</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; c=1</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nelif a&lt;b</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; c=2</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\nelse</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp; c=3</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">靠缩进来区分层级关系</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">２．循环</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">for a in [1,2,3,4]</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">&nbsp;&nbsp; &nbsp; &nbsp;print a</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">while i&lt;3<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">&nbsp;:</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">&nbsp; &nbsp; &nbsp;print i</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">&nbsp; &nbsp; &nbsp;i--</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">continue break用法和c一样的</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">３．函数</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><br clear=\"none\">\r\ndef square_sum(a,b)<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">:</span><br clear=\"none\">\r\n&nbsp;&nbsp;&nbsp; c=a&#43;b<br clear=\"none\">\r\n&nbsp;&nbsp;&nbsp; return c<br clear=\"none\">\r\nprint square_sum(2,3)<br clear=\"none\">\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><br clear=\"none\">\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">其中list是引用传递，例子如下:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><span style=\"line-height:1.571428em\"></span></span>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace\"><span style=\"line-height:1.571428em\">b = [1,2,3]\n\ndef change_list(b):\n    b[0] = b[0] &#43; 1\n    return b\n\nprint change_list(b)\nprint b<br clear=\"none\"></span>ｂ会出现变化，如果是传入基本类型的变量则不会，有点类&#20284;于java<br clear=\"none\"></pre>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\"><br clear=\"none\">\r\n</span></div>\r\n',1,'python',0,0,'2015-02-02 00:52:42','2015-02-02 00:52:42','2015-02-02 00:52:42'),(91,1,11,'Python学习笔记(1)','d4b47ee08627891e4200a0faeaba0cda',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; ','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">1．如何编译运行</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n有三种方法：</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n　第一，直接python进入命令行．然后输入python语句.</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp;第二，是编写XX.py文件然后在命令行通过python XX.py执行．</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp;第三，是chmod 755 XX.py　改为可执行程序．注意该程序需要在最前面加入一句</div>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\"><span style=\"line-height:1.571428em\">&nbsp;&nbsp;&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">&nbsp; #</span></span><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">!/usr/bin/env python<br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,128,0)\">２．基本数据类型</span><br clear=\"none\">　python不用显示声明数据类型．　例如：<br clear=\"none\"></span></pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">　a=123 &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # int 整数</span></p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">　a=0.3</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # float 浮点数</span></p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">　a=True</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 真&#20540; (True/False)</span></p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">　a=\'Hello World\'</span>&nbsp;&nbsp; # 字符串</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n　tuple和list :　都是一个序列结构．</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n　　区别：　tuple是小括号(1,2,3)　list是中括号［１，２，３］　<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">而且tuple不支持修改</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n　而且字符串是tuple , s=\'I love you\'</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp; &nbsp;范围引用：&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">基本样式[下限:上限:步长]</span></span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[:5]</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 从开始到下标4 （下标5的元素 不包括在内）</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[2:]&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 从下标2到最后</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[0:5:2]&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 从下标0到下标4 (下标5不包括在内)，每隔2取一个元素 （下标为 &nbsp; &nbsp;&nbsp;&nbsp; 0，2，4的元素）</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[2:0:-1]&nbsp;&nbsp;</span>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; # 从下标2到下标1</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp;&nbsp;&nbsp;&nbsp; 从上面可以看到，在范围引用的时候，<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">如果写明上限，那么这个上限本身不包括在内</span>。</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">&nbsp;3. 四则运算</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">和c差不多，有区别的是乘方和求余数：　</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><span color=\"#008000\" style=\"line-height:1.571428em; color:rgb(0,128,0)\">&gt;&gt;print 3**2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # 9</span></span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span color=\"#008000\" style=\"line-height:1.571428em; color:rgb(0,128,0)\">&gt;&gt;print 10%4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # 2</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span color=\"#008000\" style=\"line-height:1.571428em; color:rgb(0,128,0)\">&gt;&gt;print 3 in [1,2,3] &nbsp; # True</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">数学</span>&nbsp;&#43;, -, *, /, **, %</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">判断</span>&nbsp;==, !=, &gt;, &gt;=, &lt;, &lt;=, in</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">逻辑</span>&nbsp;and, or, not</span></p>\r\n<div><span style=\"line-height:1.571428em\"><br>\r\n</span></div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">1．如何编译运行</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n有三种方法：</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n　第一，直接python进入命令行．然后输入python语句.</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp;第二，是编写XX.py文件然后在命令行通过python XX.py执行．</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px; color:rgb(56,56,56)\">\r\n&nbsp; &nbsp;第三，是chmod 755 XX.py　改为可执行程序．注意该程序需要在最前面加入一句</div>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\"><span style=\"line-height:1.571428em\">&nbsp;&nbsp;&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">&nbsp; #</span></span><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">!/usr/bin/env python<br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,128,0)\">２．基本数据类型</span><br clear=\"none\">　python不用显示声明数据类型．　例如：<br clear=\"none\"></span></pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">　a=123 &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # int 整数</span></p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">　a=0.3</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # float 浮点数</span></p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">　a=True</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 真&#20540; (True/False)</span></p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:1.571428em; font-family:Monaco,Courier,monospace; color:rgb(56,56,56); font-size:14px\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">　a=\'Hello World\'</span>&nbsp;&nbsp; # 字符串</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n　tuple和list :　都是一个序列结构．</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n　　区别：　tuple是小括号(1,2,3)　list是中括号［１，２，３］　<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">而且tuple不支持修改</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n　而且字符串是tuple , s=\'I love you\'</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp; &nbsp;范围引用：&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">基本样式[下限:上限:步长]</span></span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[:5]</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 从开始到下标4 （下标5的元素 不包括在内）</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[2:]&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 从下标2到最后</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[0:5:2]&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 从下标0到下标4 (下标5不包括在内)，每隔2取一个元素 （下标为 &nbsp; &nbsp;&nbsp;&nbsp; 0，2，4的元素）</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">&nbsp; &nbsp;&gt;&gt;&gt;print s1[2:0:-1]&nbsp;&nbsp;</span>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; # 从下标2到下标1</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp;&nbsp;&nbsp;&nbsp; 从上面可以看到，在范围引用的时候，<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">如果写明上限，那么这个上限本身不包括在内</span>。</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,128,0)\">&nbsp;3. 四则运算</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,0)\">和c差不多，有区别的是乘方和求余数：　</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><span color=\"#008000\" style=\"line-height:1.571428em; color:rgb(0,128,0)\">&gt;&gt;print 3**2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # 9</span></span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span color=\"#008000\" style=\"line-height:1.571428em; color:rgb(0,128,0)\">&gt;&gt;print 10%4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # 2</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span color=\"#008000\" style=\"line-height:1.571428em; color:rgb(0,128,0)\">&gt;&gt;print 3 in [1,2,3] &nbsp; # True</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">数学</span>&nbsp;&#43;, -, *, /, **, %</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">判断</span>&nbsp;==, !=, &gt;, &gt;=, &lt;, &lt;=, in</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:1.571428em; color:rgb(56,56,56); font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em\">逻辑</span>&nbsp;and, or, not</span></p>\r\n<div><span style=\"line-height:1.571428em\"><br>\r\n</span></div>\r\n',4,'python',0,0,'2015-02-02 00:52:44','2015-02-02 00:52:44','2015-02-02 00:52:44'),(93,1,11,'用Python+Django在Eclipse环境下开发web网站','ddfc967bd9347a43f5f55222f85a1597',0,'\r\n\r\n<p><strong>一、创建一个项目</strong><br>\r\n如果这是你第一次使用Django，那么你必须进行一些初始设置。也就是通过自动生成代码来建立一个Django项目--一','\r\n\r\n<p><strong>一、创建一个项目</strong><br>\r\n如果这是你第一次使用Django，那么你必须进行一些初始设置。也就是通过自动生成代码来建立一个Django项目--一个Django项目的设置集，包含了数据库配置、Django详细选项设置和应用特性配置，具体操作步骤如下所示。</p>\r\n<p><span style=\"color:#ff0000\">1.新建Django项目</span><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121120541447084.png\" alt=\"\"><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121034611208.png\" alt=\"\"><br>\r\n选择sqlite数据库<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121142051857.png\" alt=\"\"></p>\r\n<p><span style=\"color:#ff0000\">2.创建网站模块app</span><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121216122593.png\" alt=\"\"><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121310418444.png\" alt=\"\"></p>\r\n<p><span style=\"color:#ff0000\">3.测试新建的模块是否正常</span><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121397332223.png\" alt=\"\"></p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#000000\">Validating models...\n\n</span>0<span style=\"color:#000000\"> errors found\nMarch </span>12, 2014 - 10:26:53<span style=\"color:#000000\">\nDjango version </span>1.6.2, using settings \'mysite.settings\'<span style=\"color:#000000\">\nStarting development server at http:</span><span style=\"color:#008000\">//</span><span style=\"color:#008000\">127.0.0.1:8000/</span>\nQuit the server with CTRL-BREAK.</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>服务器启动起来后，去浏览器输入网址：http://127.0.0.1:8000，你会看到一个令人愉悦的，柔和的淡蓝色 “Welcome to Django” 页面。表示它已正常工作！<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121461944118.png\" alt=\"\" style=\"width:966px\"><br>\r\n让我们来看看mysite都创建了些什么:<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121533359869.png\" alt=\"\"><br>\r\n这些文件分别是：<br>\r\n<span style=\"color:#0000ff\">a、外层mysite目录只是你项目的一个容器。对于Django来说该目录名并不重要;你可以重命名为你喜欢的。</span><br>\r\n<span style=\"color:#0000ff\">b、manage.py: 一个实用的命令行工具，可让你以各种方式与该Django项目进行交互。 </span>\r\n<br>\r\n<span style=\"color:#0000ff\">c、内层mysite目录是你项目中的实际Python包。该目录名就是Python包名，通过它你可以导入它里面的任何东西。(e.g.import mysite.settings).</span><br>\r\n<span style=\"color:#0000ff\">d、mysite/__init__.py:一个空文件，告诉Python该目录是一个Python包。 </span>\r\n<br>\r\n<span style=\"color:#0000ff\">e、mysite/settings.py:该Django项目的设置/配置。 </span><br>\r\n<span style=\"color:#0000ff\">f、mysite/urls.py:该Django项目的URL声明;一份由Django驱动的网站“目录”。 </span>\r\n<br>\r\n<span style=\"color:#0000ff\">g、mysite/wsgi.py:一个WSGI兼容的Web服务器的入口，以便运行你的项目。 </span>\r\n</p>\r\n<p><strong><span style=\"color:#ff0000\">更改端口号</span></strong><br>\r\n默认情况下，:djadmin:runserver 命令启动的开发服务器只监听本地IP的8000端口。</p>\r\n<p>如果你想改变服务器的端口，把它作为一个命令行参数传递即可。例如以下命令启动的服务器将监听8080端口：</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre>C:\\Users\\D-117&gt;<span style=\"color:#000000\">cd F:\\workspace\\mysite\\src\\mysite\\ #manage.py文件所在目录,即mysite项目下\nC:\\Users\\D</span>-117&gt;<span style=\"color:#000000\">f:\nF:\\workspace\\mysite\\src\\mysite</span>&gt;python manage.py runserver 8080<span style=\"color:#000000\">\nValidating models...\n\n</span>0<span style=\"color:#000000\"> errors found\nMarch </span>12, 2014 - 10:31:27<span style=\"color:#000000\">\nDjango version </span>1.6.2, using settings \'mysite.settings\'<span style=\"color:#000000\">\nStarting development server at http:</span><span style=\"color:#008000\">//</span><span style=\"color:#008000\">127.0.0.1:8080/</span>\nQuit the server with CTRL-BREAK.</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>如果你想改变服务器IP，把它和端口号一起传递即可。因此，要监听所有公共IP地址（如果你想在其他电脑上炫耀你的工作），请使用：<br>\r\npython manage.py runserver 0.0.0.0:8000</p>\r\n<p><strong><span style=\"color:#ff0000\">数据库设置</span></strong><br>\r\n现在，编辑 mysite/settings.py 。 这是一个普通的Python模块，包含了代表Django设置的模块级变量。 更改DATABASES中\'default\'下的以下键的&#20540;，以匹配您的数据库连接设置。<br>\r\na、<span style=\"color:#ff0000\">ENGINE</span> – 从 \'django.db.backends.postgresql_psycopg2\', \'django.db.backends.mysql\', \'django.db.backends.sqlite3\', \'django.db.backends.oracle\' 中选一个<br>\r\nb、<span style=\"color:#ff0000\">NAME</span> – 你的数据库名。如果你使用 SQLite，该数据库将是你计算机上的一个文件；在这种情况下，:setting:NAME 将是一个完整的绝对路径，而且还包含该文件的名称。如果该文件不<br>\r\n存在，它会在第一次同步数据库时自动创建（见下文）。当指定路径时，总是使用正斜杠，即使是在Windows下(例如：`C:/homes/user/mysite/sqlite3.db`) 。<br>\r\nc、<span style=\"color:#ff0000\">USER</span> – 你的数据库用户名 ( SQLite 下不需要) 。<br>\r\nd、<span style=\"color:#ff0000\">PASSWORD</span> – 你的数据库密码 ( SQLite 下不需要) 。<br>\r\ne、<span style=\"color:#ff0000\">HOST</span> – 你的数据库主机地址。如果和你的数据库服务器是同一台物理机器，请将此处保留为空 (或者设置为 127.0.0.1) ( SQLite 下不需要) 。\r\n<br>\r\n如果你是新建数据库，我们建议只使用 SQLite ，将 ENGINE 改为 \'django.db.backends.sqlite3\' 并且将 NAME 设置为你想存放数据库的地方。 SQLite 是内置在 Python 中的，因此你不需要安装任何东西来支持你的数据库。</p>\r\n<p><span style=\"color:#ff0000\"><strong>注意：</strong></span><br>\r\n如果你使用PostgreSQL或者MySQL，确保你已经创建了一个数据库。还是通过你的数据库交互接口中的“CREATE DATABASE database_name;”命令做到这一点的。<br>\r\n如果你使用SQLite，你不需要事先创建任何东西 - 在需要的时候，将会自动创建数据库文件。</p>\r\n<p>当你编辑 settings.py 时，将 TIME_ZONE 修改为你所在的时区。默认&#20540;是美国中央时区（芝加哥）。同时，注意文件底部的 INSTALLED_APPS 设置。它保存了当前 Django 实例已激活的所<br>\r\n有 Django 应用。每个应用可以被多个项目使用，而且你可以打包和分发给其他人在他们的项目中使用。</p>\r\n<p>默认情况下，:setting:INSTALLED_APPS 包含以下应用，这些都是由 Django 提供的：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color:#000000\">django.contrib.auth – 身份验证系统。\ndjango.contrib.contenttypes – 内容类型框架。\ndjango.contrib.sessions – session 框架。\ndjango.contrib.sites – 网站管理框架。\ndjango.contrib.messages – 消息框架。\ndjango.contrib.staticfiles – 静态文件管理框架。</span></pre>\r\n</div>\r\n<p>这些应用在一般情况下是默认包含的。</p>\r\n<p>所有这些应用中每个应用至少使用一个数据库表，所以在使用它们之前我们需要创建数据库中的表。要做到这一点，请运行以下命令：python manage.py syncdb，具体操作下面会阐述。</p>\r\n<p>至此，项目开发环境建立好了，我们可以开工了。</p>\r\n<p><strong>二、创建模型</strong></p>\r\n<p>4.编辑代码<br>\r\n4.1修改blog.models.py</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#0000ff\">from</span> django.db <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> models\n</span><span style=\"color:#0000ff\">from</span> django.contrib <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> admin\n\n</span><span style=\"color:#008000\">#</span><span style=\"color:#008000\"> Create your models here.</span>\n<span style=\"color:#0000ff\">class</span><span style=\"color:#000000\"> BlogPost(models.Model):\n    title </span>= models.CharField(max_length = 150<span style=\"color:#000000\">)\n    content </span>=<span style=\"color:#000000\"> models.TextField()\n    timestamp </span>=<span style=\"color:#000000\"> models.DateTimeField()\n    \n</span><span style=\"color:#0000ff\">class</span><span style=\"color:#000000\"> BlogPostAdmin(admin.ModelAdmin):\n    list_display </span>= (<span style=\"color:#800000\">\'</span><span style=\"color:#800000\">title</span><span style=\"color:#800000\">\'</span>, <span style=\"color:#800000\">\'</span><span style=\"color:#800000\">content</span><span style=\"color:#800000\">\'</span>, <span style=\"color:#800000\">\'</span><span style=\"color:#800000\">timestamp</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">)\n\nadmin.site.register(BlogPost, BlogPostAdmin)</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>我们将创建一个BlogPost模型，包含title、content、timestamp三个字段。每个模型都继承自django.db.models.Model子类的类来描述。 每个模型\r\n<br>\r\n都有一些类变量，每一个类变量都代表了一个数据库字段。<br>\r\n<br>\r\n每个字段由一个 Field 的实例来表现 – 比如 CharField 表示字符类型的字段和 DateTimeField 表示日期时间型的字段。这会告诉 Django 每个<br>\r\n字段都保存了什么类型的数据。<br>\r\n<br>\r\n每一个 Field 实例的名字就是字段的名字（如： title、content、timestamp），其&#26684;式属于亲和机器式的。在你的 Python 的代码中会使用这个<br>\r\n&#20540;，而你的数据库会将这个&#20540;作为表的列名。</p>\r\n<p>4.2修改blog.views.py</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#008000\">#</span><span style=\"color:#008000\"> Create your views here.</span>\n<span style=\"color:#0000ff\">from</span> django.template <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> loader,Context\n</span><span style=\"color:#0000ff\">from</span> django.http <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> HttpResponse\n</span><span style=\"color:#0000ff\">from</span> blog.models <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> BlogPost\n\n</span><span style=\"color:#0000ff\">def</span><span style=\"color:#000000\"> archive(request):\n    posts </span>=<span style=\"color:#000000\"> BlogPost.objects.all()\n    t </span>= loader.get_template(<span style=\"color:#800000\">\'</span><span style=\"color:#800000\">archive.html</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">)\n    c </span>= Context({<span style=\"color:#800000\">\'</span><span style=\"color:#800000\">posts</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">: posts})\n    </span><span style=\"color:#0000ff\">return</span> HttpResponse(t.render(c))</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>4.3修改mysite.setting.py，找到下面部分进行修改</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre>INSTALLED_APPS =<span style=\"color:#000000\"> (\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.admin</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.auth</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.contenttypes</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.sessions</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.messages</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.staticfiles</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">blog</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n)</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>4.4修改mysite.urls.py</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#0000ff\">from</span> django.conf.urls <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> patterns, include, url\n\n</span><span style=\"color:#0000ff\">from</span> django.contrib <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> admin\nadmin.autodiscover()\n\n</span><span style=\"color:#0000ff\">from</span> blog.views <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> archive\n\nurlpatterns </span>= patterns(<span style=\"color:#800000\">\'\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#008000\">#</span><span style=\"color:#008000\"> Examples:</span>\n    <span style=\"color:#008000\">#</span><span style=\"color:#008000\"> url(r\'^$\', \'mysite.views.home\', name=\'home\'),</span>\n    <span style=\"color:#008000\">#</span><span style=\"color:#008000\"> url(r\'^blog/\', include(\'blog.urls\')),</span>\n<span style=\"color:#000000\">\n    url(r</span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">^admin/</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">, include(admin.site.urls)),\n    url(r</span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">^blog/</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">, archive),\n)</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>5.建立样式网页模板<br>\r\n请在包blog下添加templates文件夹，并在templates下建立两个网页文件：archive.html和base.html</p>\r\n<p>5.1编辑archive.html</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#000000\">{% extends &quot;base.html&quot; %}  \n{% block content %}  \n{% for post in posts %}  \n</span><span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;</span>{{ post.title}}<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;</span>  \n<span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span>{{ post.content }}<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span>\n<span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span>{{ post.timestamp|date:&quot;1, F jS&quot;}}<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span><span style=\"color:#000000\">\n{% endfor %}  \n{% endblock %}</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>5.2编辑base.html</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">html</span><span style=\"color:#0000ff\">&gt;</span>  \n  <span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">style </span><span style=\"color:#ff0000\">type</span><span style=\"color:#0000ff\">=&quot;text/css&quot;</span><span style=\"color:#0000ff\">&gt;</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    body </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> color</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> #edf</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> background</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> #453</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> padding</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 0 5em</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> margin</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\">0 </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    h1 </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> padding</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 2em lem</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> background</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\">#675 </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    h2 </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> color</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> #bf8</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> border-top</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 1px dotted #fff</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> margin-top</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 2em </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    p </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> margin</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> lem 0 </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span>  \n  <span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">style</span><span style=\"color:#0000ff\">&gt;</span>  \n  <span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">body</span><span style=\"color:#0000ff\">&gt;</span>  \n    <span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;&lt;</span><span style=\"color:#800000\">center</span><span style=\"color:#0000ff\">&gt;</span>Alexia\'s Blog<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">center</span><span style=\"color:#0000ff\">&gt;&lt;/</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;</span><span style=\"color:#000000\">  \n    {% block content %}  \n    {% endblock %}  \n  </span><span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">body</span><span style=\"color:#0000ff\">&gt;</span>  \n<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">html</span><span style=\"color:#0000ff\">&gt;</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p><strong>三、同步数据库</strong><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744076927226.png\" alt=\"\"><br>\r\n设置你的账号和密码，为登陆blog的管理后台作准备。</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#000000\">Creating tables ...\nCreating table django_admin_log\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_groups\nCreating table auth_user_user_permissions\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\n\nYou just installed Django\'s auth system, which means you don\'t have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use \'d-117\'): root\nEmail address: root@qq.com\nPassword: root\nPassword (again): root\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\nFinished &quot;F:\\workspace\\mysite\\src\\mysite\\manage.py syncdb&quot; execution.</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p><strong>四.运行测试</strong><br>\r\n登陆界面，登陆账号和密码是初始化数据库的时候设定的。<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744310248466.png\" alt=\"\" style=\"width:966px\"><br>\r\n登录成功后跳转到下面页面：<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744381159232.png\" alt=\"\"><br>\r\n在该页面可以添加blog文章：<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744471845426.png\" alt=\"\"><br>\r\n发布成功后，输入网址：http://127.0.0.1:8000/blog/进行查看，测试成功！<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121745420254471.png\" alt=\"\"></p>\r\n<p>http://www.cnblogs.com/linjiqin/p/3595891.html<br>\r\n</p>\r\n','\r\n\r\n<p><strong>一、创建一个项目</strong><br>\r\n如果这是你第一次使用Django，那么你必须进行一些初始设置。也就是通过自动生成代码来建立一个Django项目--一个Django项目的设置集，包含了数据库配置、Django详细选项设置和应用特性配置，具体操作步骤如下所示。</p>\r\n<p><span style=\"color:#ff0000\">1.新建Django项目</span><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121120541447084.png\" alt=\"\"><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121034611208.png\" alt=\"\"><br>\r\n选择sqlite数据库<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121142051857.png\" alt=\"\"></p>\r\n<p><span style=\"color:#ff0000\">2.创建网站模块app</span><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121216122593.png\" alt=\"\"><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121310418444.png\" alt=\"\"></p>\r\n<p><span style=\"color:#ff0000\">3.测试新建的模块是否正常</span><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121397332223.png\" alt=\"\"></p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#000000\">Validating models...\n\n</span>0<span style=\"color:#000000\"> errors found\nMarch </span>12, 2014 - 10:26:53<span style=\"color:#000000\">\nDjango version </span>1.6.2, using settings \'mysite.settings\'<span style=\"color:#000000\">\nStarting development server at http:</span><span style=\"color:#008000\">//</span><span style=\"color:#008000\">127.0.0.1:8000/</span>\nQuit the server with CTRL-BREAK.</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>服务器启动起来后，去浏览器输入网址：http://127.0.0.1:8000，你会看到一个令人愉悦的，柔和的淡蓝色 “Welcome to Django” 页面。表示它已正常工作！<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121461944118.png\" alt=\"\" style=\"width:966px\"><br>\r\n让我们来看看mysite都创建了些什么:<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121121533359869.png\" alt=\"\"><br>\r\n这些文件分别是：<br>\r\n<span style=\"color:#0000ff\">a、外层mysite目录只是你项目的一个容器。对于Django来说该目录名并不重要;你可以重命名为你喜欢的。</span><br>\r\n<span style=\"color:#0000ff\">b、manage.py: 一个实用的命令行工具，可让你以各种方式与该Django项目进行交互。 </span>\r\n<br>\r\n<span style=\"color:#0000ff\">c、内层mysite目录是你项目中的实际Python包。该目录名就是Python包名，通过它你可以导入它里面的任何东西。(e.g.import mysite.settings).</span><br>\r\n<span style=\"color:#0000ff\">d、mysite/__init__.py:一个空文件，告诉Python该目录是一个Python包。 </span>\r\n<br>\r\n<span style=\"color:#0000ff\">e、mysite/settings.py:该Django项目的设置/配置。 </span><br>\r\n<span style=\"color:#0000ff\">f、mysite/urls.py:该Django项目的URL声明;一份由Django驱动的网站“目录”。 </span>\r\n<br>\r\n<span style=\"color:#0000ff\">g、mysite/wsgi.py:一个WSGI兼容的Web服务器的入口，以便运行你的项目。 </span>\r\n</p>\r\n<p><strong><span style=\"color:#ff0000\">更改端口号</span></strong><br>\r\n默认情况下，:djadmin:runserver 命令启动的开发服务器只监听本地IP的8000端口。</p>\r\n<p>如果你想改变服务器的端口，把它作为一个命令行参数传递即可。例如以下命令启动的服务器将监听8080端口：</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre>C:\\Users\\D-117&gt;<span style=\"color:#000000\">cd F:\\workspace\\mysite\\src\\mysite\\ #manage.py文件所在目录,即mysite项目下\nC:\\Users\\D</span>-117&gt;<span style=\"color:#000000\">f:\nF:\\workspace\\mysite\\src\\mysite</span>&gt;python manage.py runserver 8080<span style=\"color:#000000\">\nValidating models...\n\n</span>0<span style=\"color:#000000\"> errors found\nMarch </span>12, 2014 - 10:31:27<span style=\"color:#000000\">\nDjango version </span>1.6.2, using settings \'mysite.settings\'<span style=\"color:#000000\">\nStarting development server at http:</span><span style=\"color:#008000\">//</span><span style=\"color:#008000\">127.0.0.1:8080/</span>\nQuit the server with CTRL-BREAK.</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>如果你想改变服务器IP，把它和端口号一起传递即可。因此，要监听所有公共IP地址（如果你想在其他电脑上炫耀你的工作），请使用：<br>\r\npython manage.py runserver 0.0.0.0:8000</p>\r\n<p><strong><span style=\"color:#ff0000\">数据库设置</span></strong><br>\r\n现在，编辑 mysite/settings.py 。 这是一个普通的Python模块，包含了代表Django设置的模块级变量。 更改DATABASES中\'default\'下的以下键的&#20540;，以匹配您的数据库连接设置。<br>\r\na、<span style=\"color:#ff0000\">ENGINE</span> – 从 \'django.db.backends.postgresql_psycopg2\', \'django.db.backends.mysql\', \'django.db.backends.sqlite3\', \'django.db.backends.oracle\' 中选一个<br>\r\nb、<span style=\"color:#ff0000\">NAME</span> – 你的数据库名。如果你使用 SQLite，该数据库将是你计算机上的一个文件；在这种情况下，:setting:NAME 将是一个完整的绝对路径，而且还包含该文件的名称。如果该文件不<br>\r\n存在，它会在第一次同步数据库时自动创建（见下文）。当指定路径时，总是使用正斜杠，即使是在Windows下(例如：`C:/homes/user/mysite/sqlite3.db`) 。<br>\r\nc、<span style=\"color:#ff0000\">USER</span> – 你的数据库用户名 ( SQLite 下不需要) 。<br>\r\nd、<span style=\"color:#ff0000\">PASSWORD</span> – 你的数据库密码 ( SQLite 下不需要) 。<br>\r\ne、<span style=\"color:#ff0000\">HOST</span> – 你的数据库主机地址。如果和你的数据库服务器是同一台物理机器，请将此处保留为空 (或者设置为 127.0.0.1) ( SQLite 下不需要) 。\r\n<br>\r\n如果你是新建数据库，我们建议只使用 SQLite ，将 ENGINE 改为 \'django.db.backends.sqlite3\' 并且将 NAME 设置为你想存放数据库的地方。 SQLite 是内置在 Python 中的，因此你不需要安装任何东西来支持你的数据库。</p>\r\n<p><span style=\"color:#ff0000\"><strong>注意：</strong></span><br>\r\n如果你使用PostgreSQL或者MySQL，确保你已经创建了一个数据库。还是通过你的数据库交互接口中的“CREATE DATABASE database_name;”命令做到这一点的。<br>\r\n如果你使用SQLite，你不需要事先创建任何东西 - 在需要的时候，将会自动创建数据库文件。</p>\r\n<p>当你编辑 settings.py 时，将 TIME_ZONE 修改为你所在的时区。默认&#20540;是美国中央时区（芝加哥）。同时，注意文件底部的 INSTALLED_APPS 设置。它保存了当前 Django 实例已激活的所<br>\r\n有 Django 应用。每个应用可以被多个项目使用，而且你可以打包和分发给其他人在他们的项目中使用。</p>\r\n<p>默认情况下，:setting:INSTALLED_APPS 包含以下应用，这些都是由 Django 提供的：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color:#000000\">django.contrib.auth – 身份验证系统。\ndjango.contrib.contenttypes – 内容类型框架。\ndjango.contrib.sessions – session 框架。\ndjango.contrib.sites – 网站管理框架。\ndjango.contrib.messages – 消息框架。\ndjango.contrib.staticfiles – 静态文件管理框架。</span></pre>\r\n</div>\r\n<p>这些应用在一般情况下是默认包含的。</p>\r\n<p>所有这些应用中每个应用至少使用一个数据库表，所以在使用它们之前我们需要创建数据库中的表。要做到这一点，请运行以下命令：python manage.py syncdb，具体操作下面会阐述。</p>\r\n<p>至此，项目开发环境建立好了，我们可以开工了。</p>\r\n<p><strong>二、创建模型</strong></p>\r\n<p>4.编辑代码<br>\r\n4.1修改blog.models.py</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#0000ff\">from</span> django.db <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> models\n</span><span style=\"color:#0000ff\">from</span> django.contrib <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> admin\n\n</span><span style=\"color:#008000\">#</span><span style=\"color:#008000\"> Create your models here.</span>\n<span style=\"color:#0000ff\">class</span><span style=\"color:#000000\"> BlogPost(models.Model):\n    title </span>= models.CharField(max_length = 150<span style=\"color:#000000\">)\n    content </span>=<span style=\"color:#000000\"> models.TextField()\n    timestamp </span>=<span style=\"color:#000000\"> models.DateTimeField()\n    \n</span><span style=\"color:#0000ff\">class</span><span style=\"color:#000000\"> BlogPostAdmin(admin.ModelAdmin):\n    list_display </span>= (<span style=\"color:#800000\">\'</span><span style=\"color:#800000\">title</span><span style=\"color:#800000\">\'</span>, <span style=\"color:#800000\">\'</span><span style=\"color:#800000\">content</span><span style=\"color:#800000\">\'</span>, <span style=\"color:#800000\">\'</span><span style=\"color:#800000\">timestamp</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">)\n\nadmin.site.register(BlogPost, BlogPostAdmin)</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>我们将创建一个BlogPost模型，包含title、content、timestamp三个字段。每个模型都继承自django.db.models.Model子类的类来描述。 每个模型\r\n<br>\r\n都有一些类变量，每一个类变量都代表了一个数据库字段。<br>\r\n<br>\r\n每个字段由一个 Field 的实例来表现 – 比如 CharField 表示字符类型的字段和 DateTimeField 表示日期时间型的字段。这会告诉 Django 每个<br>\r\n字段都保存了什么类型的数据。<br>\r\n<br>\r\n每一个 Field 实例的名字就是字段的名字（如： title、content、timestamp），其&#26684;式属于亲和机器式的。在你的 Python 的代码中会使用这个<br>\r\n&#20540;，而你的数据库会将这个&#20540;作为表的列名。</p>\r\n<p>4.2修改blog.views.py</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#008000\">#</span><span style=\"color:#008000\"> Create your views here.</span>\n<span style=\"color:#0000ff\">from</span> django.template <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> loader,Context\n</span><span style=\"color:#0000ff\">from</span> django.http <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> HttpResponse\n</span><span style=\"color:#0000ff\">from</span> blog.models <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> BlogPost\n\n</span><span style=\"color:#0000ff\">def</span><span style=\"color:#000000\"> archive(request):\n    posts </span>=<span style=\"color:#000000\"> BlogPost.objects.all()\n    t </span>= loader.get_template(<span style=\"color:#800000\">\'</span><span style=\"color:#800000\">archive.html</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">)\n    c </span>= Context({<span style=\"color:#800000\">\'</span><span style=\"color:#800000\">posts</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">: posts})\n    </span><span style=\"color:#0000ff\">return</span> HttpResponse(t.render(c))</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>4.3修改mysite.setting.py，找到下面部分进行修改</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre>INSTALLED_APPS =<span style=\"color:#000000\"> (\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.admin</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.auth</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.contenttypes</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.sessions</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.messages</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">django.contrib.staticfiles</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">blog</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">,\n)</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>4.4修改mysite.urls.py</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#0000ff\">from</span> django.conf.urls <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> patterns, include, url\n\n</span><span style=\"color:#0000ff\">from</span> django.contrib <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> admin\nadmin.autodiscover()\n\n</span><span style=\"color:#0000ff\">from</span> blog.views <span style=\"color:#0000ff\">import</span><span style=\"color:#000000\"> archive\n\nurlpatterns </span>= patterns(<span style=\"color:#800000\">\'\'</span><span style=\"color:#000000\">,\n    </span><span style=\"color:#008000\">#</span><span style=\"color:#008000\"> Examples:</span>\n    <span style=\"color:#008000\">#</span><span style=\"color:#008000\"> url(r\'^$\', \'mysite.views.home\', name=\'home\'),</span>\n    <span style=\"color:#008000\">#</span><span style=\"color:#008000\"> url(r\'^blog/\', include(\'blog.urls\')),</span>\n<span style=\"color:#000000\">\n    url(r</span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">^admin/</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">, include(admin.site.urls)),\n    url(r</span><span style=\"color:#800000\">\'</span><span style=\"color:#800000\">^blog/</span><span style=\"color:#800000\">\'</span><span style=\"color:#000000\">, archive),\n)</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>5.建立样式网页模板<br>\r\n请在包blog下添加templates文件夹，并在templates下建立两个网页文件：archive.html和base.html</p>\r\n<p>5.1编辑archive.html</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#000000\">{% extends &quot;base.html&quot; %}  \n{% block content %}  \n{% for post in posts %}  \n</span><span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;</span>{{ post.title}}<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;</span>  \n<span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span>{{ post.content }}<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span>\n<span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span>{{ post.timestamp|date:&quot;1, F jS&quot;}}<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">p</span><span style=\"color:#0000ff\">&gt;</span><span style=\"color:#000000\">\n{% endfor %}  \n{% endblock %}</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p>5.2编辑base.html</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">html</span><span style=\"color:#0000ff\">&gt;</span>  \n  <span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">style </span><span style=\"color:#ff0000\">type</span><span style=\"color:#0000ff\">=&quot;text/css&quot;</span><span style=\"color:#0000ff\">&gt;</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    body </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> color</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> #edf</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> background</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> #453</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> padding</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 0 5em</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> margin</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\">0 </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    h1 </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> padding</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 2em lem</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> background</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\">#675 </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    h2 </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> color</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> #bf8</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> border-top</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 1px dotted #fff</span><span style=\"color:#000000; background-color:#f5f5f5\">;</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> margin-top</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> 2em </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span><span style=\"color:#800000; background-color:#f5f5f5\">  \n    p </span><span style=\"color:#000000; background-color:#f5f5f5\">{</span><span style=\"color:#ff0000; background-color:#f5f5f5\"> margin</span><span style=\"color:#000000; background-color:#f5f5f5\">:</span><span style=\"color:#0000ff; background-color:#f5f5f5\"> lem 0 </span><span style=\"color:#000000; background-color:#f5f5f5\">}</span>  \n  <span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">style</span><span style=\"color:#0000ff\">&gt;</span>  \n  <span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">body</span><span style=\"color:#0000ff\">&gt;</span>  \n    <span style=\"color:#0000ff\">&lt;</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;&lt;</span><span style=\"color:#800000\">center</span><span style=\"color:#0000ff\">&gt;</span>Alexia\'s Blog<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">center</span><span style=\"color:#0000ff\">&gt;&lt;/</span><span style=\"color:#800000\">h1</span><span style=\"color:#0000ff\">&gt;</span><span style=\"color:#000000\">  \n    {% block content %}  \n    {% endblock %}  \n  </span><span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">body</span><span style=\"color:#0000ff\">&gt;</span>  \n<span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#800000\">html</span><span style=\"color:#0000ff\">&gt;</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p><strong>三、同步数据库</strong><br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744076927226.png\" alt=\"\"><br>\r\n设置你的账号和密码，为登陆blog的管理后台作准备。</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color:#000000\">Creating tables ...\nCreating table django_admin_log\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_groups\nCreating table auth_user_user_permissions\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\n\nYou just installed Django\'s auth system, which means you don\'t have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use \'d-117\'): root\nEmail address: root@qq.com\nPassword: root\nPassword (again): root\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\nFinished &quot;F:\\workspace\\mysite\\src\\mysite\\manage.py syncdb&quot; execution.</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a target=\"_blank\" title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n</div>\r\n<p><strong>四.运行测试</strong><br>\r\n登陆界面，登陆账号和密码是初始化数据库的时候设定的。<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744310248466.png\" alt=\"\" style=\"width:966px\"><br>\r\n登录成功后跳转到下面页面：<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744381159232.png\" alt=\"\"><br>\r\n在该页面可以添加blog文章：<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121744471845426.png\" alt=\"\"><br>\r\n发布成功后，输入网址：http://127.0.0.1:8000/blog/进行查看，测试成功！<br>\r\n<img src=\"http://images.cnitblog.com/i/270324/201403/121745420254471.png\" alt=\"\"></p>\r\n<p>http://www.cnblogs.com/linjiqin/p/3595891.html<br>\r\n</p>\r\n',1,'',0,0,'2015-02-02 00:52:47','2015-02-02 00:52:47','2015-02-02 00:52:47'),(97,1,13,'Django urlpatterns配置(1)','c89c0633821c091bb800eddb42044d51',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">１．不带参数的列子</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">urlpatterns = patterns(\'\', &nbsp; &nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp;&nbsp; &nbsp;<span style=\"line-height:1.571428em\">url</span>(r\'^article$\',\'news_index\' ，<span style=\"line-height:1.571428em\">name=&quot;myarticle&quot;</span>),</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp;)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">其中name=&quot;<span style=\"line-height:1.571428em\">myarticle</span>&quot;　相当于一个别名．</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">Templates里的html为</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">&lt;a href=&quot;{%<span style=\"line-height:1.571428em\">url&nbsp;myarticle</span>%}&quot;&gt;文章&lt;/a&gt;&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\">View里面写成</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\"><span style=\"line-height:1.571428em\">HttpResponseRedirect（reverse（&quot;<span style=\"line-height:1.571428em\">myarticle</span>&quot;））</span></div>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\"><br clear=\"none\">\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">２．带参数的列子</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">urlpatterns = patterns(\'\', &nbsp;&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">(r\'^(?P&lt;year&gt;/d{4})/(?P&lt;month&gt;/d{1,2})/$\',\'<span style=\"line-height:1.571428em\">myarticle</span>\' ),</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">）</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">Template相应的改成:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">&lt;a href=&quot;{%url news_archive&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">2010 ,02</span>%}&quot;&gt;2010年02月&lt;/a&gt;&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">多了2010和02这两个参数</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">Ｖiew里面写成</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">reverse（&quot;news_archive&quot;，kwargs={&quot;year&quot;:2010,&quot;month&quot;:02}）</span></div>\r\n<div><span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><br>\r\n</span></div>\r\n</div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">１．不带参数的列子</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">urlpatterns = patterns(\'\', &nbsp; &nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp;&nbsp; &nbsp;<span style=\"line-height:1.571428em\">url</span>(r\'^article$\',\'news_index\' ，<span style=\"line-height:1.571428em\">name=&quot;myarticle&quot;</span>),</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">&nbsp;)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\">其中name=&quot;<span style=\"line-height:1.571428em\">myarticle</span>&quot;　相当于一个别名．</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">Templates里的html为</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em\">&lt;a href=&quot;{%<span style=\"line-height:1.571428em\">url&nbsp;myarticle</span>%}&quot;&gt;文章&lt;/a&gt;&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\">View里面写成</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em\"><span style=\"line-height:1.571428em\">HttpResponseRedirect（reverse（&quot;<span style=\"line-height:1.571428em\">myarticle</span>&quot;））</span></div>\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\"><br clear=\"none\">\r\n</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">２．带参数的列子</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">urlpatterns = patterns(\'\', &nbsp;&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">(r\'^(?P&lt;year&gt;/d{4})/(?P&lt;month&gt;/d{1,2})/$\',\'<span style=\"line-height:1.571428em\">myarticle</span>\' ),</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<br clear=\"none\">\r\n</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">）</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">Template相应的改成:</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">&lt;a href=&quot;{%url news_archive&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">2010 ,02</span>%}&quot;&gt;2010年02月&lt;/a&gt;&nbsp;</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">多了2010和02这两个参数</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">Ｖiew里面写成</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">reverse（&quot;news_archive&quot;，kwargs={&quot;year&quot;:2010,&quot;month&quot;:02}）</span></div>\r\n<div><span style=\"line-height:1.571428em; color:rgb(51,51,51)\"><br>\r\n</span></div>\r\n</div>\r\n',4,'python,读书笔记',0,0,'2015-02-02 00:53:22','2015-02-02 00:53:22','2015-02-02 00:53:22'),(98,1,13,'Django静态文件','72b950f8dfbe002faf9591350af64298',0,'\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-hei','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">Static</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\nstatic 是指一些静态的css js文件等．</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n方法：</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n1.在settings中设置INSTALLED_APPS添加&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">\'django.contrib.staticfiles\',</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">2.继续添加</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">STATIC_URL = \'/static/\'<br clear=\"none\">\r\nSTATICFILES_DIRS = (<br clear=\"none\">\r\nos.path.join(BASE_DIR, \'static\'),<br clear=\"none\">\r\n)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:21.9999923706055px; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\"></span></span>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">将某个app要用的静态<span style=\"line-height:1.571428em\"><a target=\"_blank\" title=\"文件\" href=\"http://www.shellsec.com/\" target=\"_blank\" shape=\"rect\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">文件</span></a></span>放置到my_app/static/my_app中，例如my_app/static/my_ap.my_image.jpg.\r\n &nbsp;当然也可以直接放在my_app/static中，但这样的话，如果在不同的app中有相同名字的静态文件，就会产生冲突</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<br>\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n模板中使用</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<br>\r\n</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">{% <span style=\"line-height:1.571428em\">load</span> staticfiles %}  &lt;img src=&quot;{% static &quot;my_app/myexample.jpg&quot; %}&quot; alt=&quot;My image&quot;/&gt;<br clear=\"none\"><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">Media<br clear=\"none\">media一般是文件上传的地方,Model里面的FileFIed,ImageField上传的文件</span></span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n假如有个Model</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">from django.<span style=\"line-height:1.571428em\"><a target=\"_blank\" title=\"db\" href=\"http://www.shellsec.com/\" target=\"_blank\" shape=\"rect\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">db</span></a></span> import models    </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">class Car(models.Model):      </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&nbsp;&nbsp;&nbsp;&nbsp; name = models.CharField(max_length=255)     </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&nbsp;&nbsp;&nbsp;&nbsp; price = models.DecimalField(max_digits=5, decimal_places=2)      </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&nbsp;&nbsp;&nbsp;&nbsp; photo = models.ImageField(up<span style=\"line-height:1.571428em\"><a target=\"_blank\" title=\"load\" href=\"http://www.shellsec.com/\" target=\"_blank\" shape=\"rect\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">load</span></a></span>_to=\'cars\')</span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n设置MEDIA_ROOT=os.path.join(BASE_DIR , ‘media’),用来存储用户<span style=\"line-height:1.571428em\">上传</span>的文件</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\nMEDIA_URL=/media/,为MEDIA_ROOT中的文件建立url地址。</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n当建立一个Car实例时，Car的ImageField字<span style=\"line-height:1.571428em\">段</span>图片就存到media/cars文件夹里面</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car = Car.objects.<span style=\"line-height:1.571428em\">get</span>(name=&quot;57 Chevy&quot;)  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo  &lt;ImageFieldFile: chevy.jpg&gt;  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo.name  u\'cars/chevy.jpg\'  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo.path  u\'/media/cars/chevy.jpg\'  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo.url  u\'/media/cars/chevy.jpg\'</span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n在模板中使用图片</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">&lt;img src=&quot;{{ <span style=\"line-height:1.571428em; color:rgb(0,0,255)\">car.photo</span>.url }}&quot; alt=&quot;My image&quot;/&gt;</span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n在urls.py中使用&nbsp;&nbsp;<tt style=\"line-height:1.571428em\">django.contrib.staticfiles.views.serve()</tt>&nbsp;&nbsp;&nbsp;view</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">from django.conf import settings <br clear=\"none\">from myapp import settings  <br clear=\"none\">from django.conf.urls.static import static    <br clear=\"none\">urlpatterns = patterns(\'\',      <br clear=\"none\"># ... the rest of your URLconf goes here ...  <br clear=\"none\">) &#43; static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n这样就可以使用media文件了。</p>\r\n<div><br>\r\n</div>\r\n</div>\r\n','\r\n\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">Static</span></span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\nstatic 是指一些静态的css js文件等．</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n方法：</div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n1.在settings中设置INSTALLED_APPS添加&nbsp;<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">\'django.contrib.staticfiles\',</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(51,51,51)\">2.继续添加</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:1.571428em; color:rgb(255,0,0)\">STATIC_URL = \'/static/\'<br clear=\"none\">\r\nSTATICFILES_DIRS = (<br clear=\"none\">\r\nos.path.join(BASE_DIR, \'static\'),<br clear=\"none\">\r\n)</span></div>\r\n<div style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; font-family:gotham,helvetica,arial,sans-serif; font-size:14px\">\r\n<span style=\"line-height:21.9999923706055px; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\"></span></span>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<span style=\"line-height:1.571428em; color:rgb(0,0,255)\">将某个app要用的静态<span style=\"line-height:1.571428em\"><a target=\"_blank\" title=\"文件\" href=\"http://www.shellsec.com/\" target=\"_blank\" shape=\"rect\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">文件</span></a></span>放置到my_app/static/my_app中，例如my_app/static/my_ap.my_image.jpg.\r\n &nbsp;当然也可以直接放在my_app/static中，但这样的话，如果在不同的app中有相同名字的静态文件，就会产生冲突</span></p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<br>\r\n</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n模板中使用</p>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n<br>\r\n</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">{% <span style=\"line-height:1.571428em\">load</span> staticfiles %}  &lt;img src=&quot;{% static &quot;my_app/myexample.jpg&quot; %}&quot; alt=&quot;My image&quot;/&gt;<br clear=\"none\"><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\"><span style=\"line-height:1.571428em\">Media<br clear=\"none\">media一般是文件上传的地方,Model里面的FileFIed,ImageField上传的文件</span></span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n假如有个Model</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">from django.<span style=\"line-height:1.571428em\"><a target=\"_blank\" title=\"db\" href=\"http://www.shellsec.com/\" target=\"_blank\" shape=\"rect\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">db</span></a></span> import models    </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">class Car(models.Model):      </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&nbsp;&nbsp;&nbsp;&nbsp; name = models.CharField(max_length=255)     </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&nbsp;&nbsp;&nbsp;&nbsp; price = models.DecimalField(max_digits=5, decimal_places=2)      </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&nbsp;&nbsp;&nbsp;&nbsp; photo = models.ImageField(up<span style=\"line-height:1.571428em\"><a target=\"_blank\" title=\"load\" href=\"http://www.shellsec.com/\" target=\"_blank\" shape=\"rect\" style=\"margin:0px; padding:0px; border:0px; line-height:1.571428em; color:rgb(4,122,198)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">load</span></a></span>_to=\'cars\')</span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n设置MEDIA_ROOT=os.path.join(BASE_DIR , ‘media’),用来存储用户<span style=\"line-height:1.571428em\">上传</span>的文件</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\nMEDIA_URL=/media/,为MEDIA_ROOT中的文件建立url地址。</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n当建立一个Car实例时，Car的ImageField字<span style=\"line-height:1.571428em\">段</span>图片就存到media/cars文件夹里面</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car = Car.objects.<span style=\"line-height:1.571428em\">get</span>(name=&quot;57 Chevy&quot;)  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo  &lt;ImageFieldFile: chevy.jpg&gt;  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo.name  u\'cars/chevy.jpg\'  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo.path  u\'/media/cars/chevy.jpg\'  </span><br clear=\"none\"><span style=\"line-height:1.571428em; color:rgb(0,0,255)\">&gt;&gt;&gt; car.photo.url  u\'/media/cars/chevy.jpg\'</span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n在模板中使用图片</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\"><span style=\"line-height:1.571428em; color:rgb(255,0,0)\">&lt;img src=&quot;{{ <span style=\"line-height:1.571428em; color:rgb(0,0,255)\">car.photo</span>.url }}&quot; alt=&quot;My image&quot;/&gt;</span></pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n在urls.py中使用&nbsp;&nbsp;<tt style=\"line-height:1.571428em\">django.contrib.staticfiles.views.serve()</tt>&nbsp;&nbsp;&nbsp;view</p>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">from django.conf import settings <br clear=\"none\">from myapp import settings  <br clear=\"none\">from django.conf.urls.static import static    <br clear=\"none\">urlpatterns = patterns(\'\',      <br clear=\"none\"># ... the rest of your URLconf goes here ...  <br clear=\"none\">) &#43; static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</pre>\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; border:0px; line-height:21.9999923706055px; font-family:Monaco,Courier,monospace; color:rgb(56,56,56)\">&nbsp;</pre>\r\n<p style=\"margin-top:0px; margin-bottom:0.714285em; padding-top:0px; padding-bottom:0px; border:0px; line-height:21.9999923706055px; color:rgb(56,56,56)\">\r\n这样就可以使用media文件了。</p>\r\n<div><br>\r\n</div>\r\n</div>\r\n',15,'python',0,0,'2015-02-02 00:53:25','2015-02-02 00:53:25','2015-02-02 00:53:25'),(103,1,3,'丰富','ffffff',0,'<p class=\"codeStyle\">int main()\r\n\r\n\r\n\r\n<p class=\"codeStyle\">{\r\n\r\n\r\n\r\n<p class=\"codeStyle\">return 0;\r\n\r\n\r\n\r\n<p class=\"codeStyle\">}','<p class=\"codeStyle\">int main()\r\n\r\n\r\n\r\n<p class=\"codeStyle\">{\r\n\r\n\r\n\r\n<p class=\"codeStyle\">return 0;\r\n\r\n\r\n\r\n<p class=\"codeStyle\">}','<p class=\"codeStyle\">int main()\r\n\r\n\r\n\r\n<p class=\"codeStyle\">{\r\n\r\n\r\n\r\n<p class=\"codeStyle\">return 0;\r\n\r\n\r\n\r\n<p class=\"codeStyle\">}',2,'',0,0,'2015-02-02 13:27:57','2015-02-02 13:28:44','2015-02-02 13:28:44');
/*!40000 ALTER TABLE `blog_post` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_widget`
--

DROP TABLE IF EXISTS `blog_widget`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_widget` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `content` longtext COLLATE utf8_unicode_ci NOT NULL,
  `hide` tinyint(1) NOT NULL,
  `rank` int(11) NOT NULL,
  `create_time` datetime NOT NULL,
  `update_time` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_widget`
--

LOCK TABLES `blog_widget` WRITE;
/*!40000 ALTER TABLE `blog_widget` DISABLE KEYS */;
INSERT INTO `blog_widget` VALUES (1,'最新文章','recently_post',0,0,'2015-02-01 16:33:03','2015-02-01 16:33:03'),(2,'热门文章','hot_post',0,0,'2015-02-01 16:33:14','2015-02-01 16:33:14'),(3,'最新评论','<!-- 多说最新评论 start -->\r\n	<div class=\"ds-recent-comments\" data-num-items=\"5\" data-show-avatars=\"1\" data-show-time=\"1\" data-show-title=\"1\" data-show-admin=\"1\" data-excerpt-length=\"60\"></div>\r\n<!-- 多说最新评论 end -->\r\n',0,2,'2015-02-02 09:07:02','2015-02-02 09:16:57');
/*!40000 ALTER TABLE `blog_widget` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime NOT NULL,
  `object_id` longtext COLLATE utf8_unicode_ci,
  `object_repr` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext COLLATE utf8_unicode_ci NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_417f1b1c` (`content_type_id`),
  KEY `django_admin_log_e8701ad4` (`user_id`),
  CONSTRAINT `django_admin_log_user_id_1c5f563_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `django_admin__content_type_id_5151027a_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2015-02-01 16:33:03','1','最新文章',1,'',10,1),(2,'2015-02-01 16:33:14','2','热门文章',1,'',10,1),(3,'2015-02-01 16:35:45','1','fe',1,'',7,1),(4,'2015-02-01 16:35:49','1','afe ',1,'',8,1),(5,'2015-02-01 16:36:38','1','afe ',3,'',8,1),(6,'2015-02-01 16:36:44','1','fe',3,'',7,1),(7,'2015-02-02 07:07:31','102','feeffe',1,'',8,1),(8,'2015-02-02 07:23:59','11','Python',2,'Changed is_nav.',7,1),(9,'2015-02-02 09:07:02','3','最新评论',1,'',10,1),(10,'2015-02-02 09:09:08','3','最新评论',2,'Changed content.',10,1),(11,'2015-02-02 09:09:42','3','最新评论',2,'No fields changed.',10,1),(12,'2015-02-02 09:14:46','3','最新评论',2,'Changed content.',10,1),(13,'2015-02-02 09:16:57','3','最新评论',2,'Changed content.',10,1),(14,'2015-02-02 12:10:19','99','Linux下面如何安装Django',2,'Changed content.',8,1),(15,'2015-02-02 13:22:37','99','Linux下面如何安装Django',2,'Changed content.',8,1),(16,'2015-02-02 13:26:57','99','Linux下面如何安装Django',2,'Changed content.',8,1),(17,'2015-02-02 13:27:38','99','Linux下面如何安装Django',2,'Changed content.',8,1),(18,'2015-02-02 13:27:55','99','Linux下面如何安装Django',3,'',8,1),(19,'2015-02-02 13:28:44','103','丰富',1,'',8,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `app_label` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `model` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_3ec8c61c_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'log entry','admin','logentry'),(2,'permission','auth','permission'),(3,'group','auth','group'),(4,'user','auth','user'),(5,'content type','contenttypes','contenttype'),(6,'session','sessions','session'),(7,'分类','blog','category'),(8,'文章','blog','post'),(9,'页面','blog','page'),(10,'侧栏','blog','widget');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `applied` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2015-02-01 16:24:39'),(2,'auth','0001_initial','2015-02-01 16:24:42'),(3,'admin','0001_initial','2015-02-01 16:24:43'),(4,'sessions','0001_initial','2015-02-01 16:24:44');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) COLLATE utf8_unicode_ci NOT NULL,
  `session_data` longtext COLLATE utf8_unicode_ci NOT NULL,
  `expire_date` datetime NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_de54fa62` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('ka8rmkzmn8om3kraa6g4rizt5guu9y55','NzQ3MWE3NWY3MWRmYmE5YjlmNzBmNDY5Mzc4MjMwNGVjZjBhMjI4MDqAAn1xAShVEl9hdXRoX3VzZXJfYmFja2VuZHECVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZHEDVQ1fYXV0aF91c2VyX2lkcQSKAQF1Lg==','2015-02-16 07:02:20');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-02-02 21:35:30
